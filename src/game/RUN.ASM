;
; �����������������������������������������������������������������ͻ
; � This file is generated by The Interactive Disassembler (IDA) FW �
; � Copyright (c) 1997 by DataRescue sprl, <ida@datarescue.com>     �
; � Professional version of IDA is at http://www.idapro.com         �
; �����������������������������������������������������������������ͼ
;


; File Name			  C:\JUEGOS\LOV\RUN.EXE
; Format			  EXE File
; Base Address:	1000h Range: 10000h - 38790h Loaded length: 28790h
; Entry	point :	1000:0000

p286n

;����������������������������������������������������������������������������

seg000		segment	byte public 'CODE'
		assume cs:seg000

		assume es:nothing, ss:seg002, ds:nothing

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

START		proc near
		push	ds
		sub	ax, ax
		push	ax
		mov	ax, seg001
		mov	es, ax
		assume es:seg001
		mov	ds, ax
		assume ds:seg001
		mov	di, 0D702h
		mov	si, 114h

START_ALLOC_MEM:			; CODE XREF: START+28j
		mov	bx, [si]
		mov	ah, 48h	; 'H'
		int	21h		; DOS -	2+ - ALLOCATE MEMORY
					; BX = number of 16-byte paragraphs desired
		jb	START_NOMEM
		nop
		nop
		nop
		mov	[di], ax
		add	di, 2
		add	si, 2
		cmp	di, 0D716h
		jnz	START_ALLOC_MEM
		mov	bx, 0F0h ; '�'
		mov	ah, 48h	; 'H'
		int	21h		; DOS -	2+ - ALLOCATE MEMORY
					; BX = number of 16-byte paragraphs desired
		jb	START_NOMEM
		nop
		nop
		nop
		mov	TEXTSEG, ax
		mov	ax, 0C8h ; '�'
		sub	ax, 40h	; '@'
		mov	dx, 14h
		mul	dx
		add	ax, BUFFERSEG
		mov	TILESEG, ax
		call	SETSCRIPT
		jmp	short START_OPENFILE
;����������������������������������������������������������������������������
		nop

START_NOMEM:				; CODE XREF: START+17j	START+31j
		mov	ah, 9
		mov	dx, 2073h
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"
		jmp	START_NOPROT	; �Nos salimos por la protecci�n anticopia?
;����������������������������������������������������������������������������

START_OPENFILE:				; CODE XREF: START+4Ej
		mov	ax, 3D02h
		mov	dx, 208Bh
		int	21h		; DOS -	2+ - OPEN DISK FILE WITH HANDLE
					; DS:DX	-> ASCIZ filename
					; AL = access mode
					; 2 - read & write
		jb	START_INIT_GAME
		nop
		nop
		nop
		mov	word_FFD_2089, 1

START_INIT_GAME:			; CODE XREF: START+63j
		call	GETMODE
		call	SETMODE
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		call	DRAWSCREEN
		call	INIT_SOUND_STUFF
		call	INIT_INTVEC2
		call	INIT_INTVEC
		push	bp
		mov	dx, 143h
		mov	bp, 0F00h
		mov	si, 0
		mov	di, TEXTSEG
		call	LOAD
		call	LOADPALFILE
		pop	ax
		cmp	ax, 0
		jz	loc_0_A2
		jmp	loc_0_284
;����������������������������������������������������������������������������

loc_0_A2:				; CODE XREF: START+9Dj
		mov	si, 0
		mov	di, seg001
		mov	bp, 0D694h
		mov	dx, 916h
		call	SAVE_FILE

loc_0_B1:				; CODE XREF: START+281j
		mov	dx, 32Ch
		call	LOADANDSHOW
		cmp	word_FFD_2089, 0
		jz	loc_0_CD
		nop
		nop
		nop
		mov	dx, 2097h
		mov	di, 9114h
		mov	ax, 0A000h
		call	LOADPAD

loc_0_CD:				; CODE XREF: START+BCj
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_D7:				; CODE XREF: START+E4j	START+ECj
					; ...
		mov	si, 1016h
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_D7
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_D7
		push	ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		pop	ax
		cmp	ax, 1
		jnz	loc_0_FD
		jmp	loc_0_21A
;����������������������������������������������������������������������������

loc_0_FD:				; CODE XREF: START+F8j
		cmp	ax, 2
		jz	loc_0_15B
		nop
		nop
		nop
		cmp	ax, 3
		jz	loc_0_14E
		nop
		nop
		nop
		cmp	ax, 4
		jz	loc_0_135
		nop
		nop
		nop
		cmp	ax, 5
		jz	loc_0_12F
		nop
		nop
		nop
		cmp	word_FFD_2089, 0
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jz	loc_0_D7
		mov	dx, 935h
		jmp	short loc_0_144
;����������������������������������������������������������������������������
		nop

loc_0_12F:				; CODE XREF: START+118j
		mov	dx, 92Dh
		jmp	short loc_0_144
;����������������������������������������������������������������������������
		nop

loc_0_135:				; CODE XREF: START+110j
		mov	ax, 2580h
		mov	dx, 0
		push	ds
		mov	ds, dx
		assume ds:nothing
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:nothing
		mov	dx, 926h

loc_0_144:				; CODE XREF: START+12Cj START+132j
		mov	ah, 3Ch	; '<'
		mov	cx, 0
		int	21h		; DOS -	2+ - CREATE A FILE WITH	HANDLE (CREAT)
					; CX = attributes for file
					; DS:DX	-> ASCIZ filename (may include drive and path)
		jmp	loc_0_284
;����������������������������������������������������������������������������

loc_0_14E:				; CODE XREF: START+108j
		mov	ah, 3Ch	; '<'
		mov	cx, 0
		mov	dx, 920h
		int	21h		; DOS -	2+ - CREATE A FILE WITH	HANDLE (CREAT)
					; CX = attributes for file
					; DS:DX	-> ASCIZ filename (may include drive and path)
		jmp	loc_0_284
;����������������������������������������������������������������������������

loc_0_15B:				; CODE XREF: START+100j
		call	CLS
		mov	dx, 356h
		call	LOADANDSHOW
		mov	dx, 9E2h
		mov	word ptr ds:112h, 0
		call	PDIR
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_175:				; CODE XREF: START+17Dj
		call	GETINP
		cmp	word ptr ds:6BE3h, 0FFFFh
		jz	loc_0_175
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, ds:6BE3h
		push	ax
		mov	dx, 0Bh
		mul	dx
		mov	dx, 9E2h
		add	dx, ax
		mov	bp, 5EA0h
		mov	si, 0
		mov	di, ds:0D70Ah
		call	LOAD
		call	LOADSTARTDAT
		pop	ax
		mov	ds:9E0h, ax
		mov	word ptr ds:0D731h, 0
		call	WRITEAUTOLOAD
		push	ds
		push	es
		mov	cx, 30h	; '0'
		mov	ax, ds:0D70Ah
		mov	ds, ax
		mov	ax, seg001
		mov	es, ax
		assume es:seg001
		mov	si, 2Ch	; ','
		mov	di, 0A9Dh
		rep movsb
		lodsw
		mov	es:CHEAT, ax
		mov	cx, 18h
		mov	si, 0
		mov	di, 3Dh	; '='
		rep movsb
		lodsw
		add	es:PLAYER_DEFVAL, ax
		lodsw
		mov	bp, ax
		lodsw
		inc	ax
		mov	es:DRESS, ax
		lodsw
		mov	es:HEALTH, ax
		mov	bx, ax
		lodsw
		add	ax, bx
		mov	es:ENERGY, ax
		lodsw
		mov	es:CASH, ax
		lodsw
		mov	bx, ax
		lodsw
		add	bx, 0B29h
		mov	es:[bx], ax
		lodsw
		lodsw
		not	ax
		and	ax, 1
		mov	es:PLAYERSEX, ax
		pop	es
		assume es:nothing
		pop	ds
		mov	ds:1054h, bp
		call	CLS
		jmp	short loc_0_228
;����������������������������������������������������������������������������
		nop

loc_0_21A:				; CODE XREF: START+FAj
		call	CLS
		push	word ptr ds:0D731h
		call	LOADSTARTDAT
		pop	word ptr ds:0D731h

loc_0_228:				; CODE XREF: START+217j
		call	DRAWSCREEN
		mov	word ptr ds:0AF0h, 8
		call	LOADPALFILE
		mov	bx, 0
		mov	cx, 100h
		mov	dx, 0
		call	SETPALBIT
		call	LOADTRIG
		call	LOADFSPRITES
		call	DISPLAY_LOAD
		call	GETDATETIME
		call	LOADPLAYSCREEN
		call	DRAWSCREEN
		mov	word ptr ds:0AD1h, 2D0h
		mov	ax, 3851h
		call	RELOCATE
		mov	word ptr ds:0ACDh, 5180h
		mov	word ptr ds:0ACFh, 3880h
		mov	word ptr ds:0ADBh, 3851h
		call	SETTRIG
		call	MAKEHCELLMAP
		call	PROCESS_ILLNESS
		call	CONTROLLER
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		jmp	loc_0_B1
;����������������������������������������������������������������������������

loc_0_284:				; CODE XREF: START+9Fj	START+14Bj
					; ...
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		call	SETTEXTMODE
		mov	si, 0D702h

loc_0_294:				; CODE XREF: START+2A3j
		mov	ax, [si]
		mov	es, ax
		mov	ah, 49h	; 'I'
		int	21h		; DOS -	2+ - FREE MEMORY
					; ES = segment address of area to be freed
		add	si, 2
		cmp	si, 0D716h
		jnz	loc_0_294
		mov	ax, TEXTSEG
		mov	es, ax
		mov	ah, 49h	; 'I'
		int	21h		; DOS -	2+ - FREE MEMORY
					; ES = segment address of area to be freed
		push	es
		mov	ax, 0
		push	ax
		mov	es, SOUNDSEG
		assume es:nothing
		call	SENDSND
		inc	sp
		inc	sp
		pop	es
		assume es:nothing
		mov	cx, 14h
		call	PAUSE
		mov	cx, 0
		in	al, 21h		; Interrupt controller,	8259A.
		or	al, 1
		out	21h, al		; Interrupt controller,	8259A.
		mov	dx, cx
		mov	al, 3Eh	; '>'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, dl
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, dh
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		in	al, 21h		; Interrupt controller,	8259A.
		and	al, 0FEh
		out	21h, al		; Interrupt controller,	8259A.
		mov	ax, 2509h
		mov	bx, INT9SEG
		mov	dx, INT9OFF
		mov	ds, bx
		assume ds:nothing
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	ax, 2508h
		mov	bx, word_FFD_D724
		mov	dx, INT8ADD
		mov	ds, bx
		assume ds:nothing
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt

START_NOPROT:				; CODE XREF: START+58j
		mov	al, 0		; �Nos salimos por la protecci�n anticopia?
		mov	ah, 4Ch	; 'L'
		int	21h		; DOS -	2+ - QUIT WITH EXIT CODE (EXIT)
START		endp			; AL = exit code

;����������������������������������������������������������������������������
		db 0C3h	; �

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

INIT_INTVEC2	proc near		; CODE XREF: START+7Fp
		push	ds
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	ah, 35h	; '5'
		mov	al, 9
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	INT9SEG, es
		mov	INT9OFF, bx
		mov	ah, 25h	; '%'
		mov	al, 9
		mov	dx, cs
		mov	ds, dx
		assume ds:seg000
		mov	dx, 32Eh
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		pop	ds
		assume ds:nothing
		retn
INIT_INTVEC2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

IS_KEY?		proc near
		sti
		push	ax
		push	bx
		push	cx
		push	dx
		push	ds
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	dx, KEYWORD
		cmp	dx, 20h	; ' '   ; Espacio
		jnz	loc_0_346
		nop
		nop
		nop
		nop

loc_0_346:				; CODE XREF: IS_KEY?+12j
		in	al, 60h		; AT Keyboard controller 8042.
		mov	bx, 56h	; 'V'
		mov	cl, al
		and	al, 7Fh
		xlat
		mov	bx, 0D6h ; '�'
		cbw
		shl	ax, 1
		add	bx, ax
		mov	ax, [bx]
		test	cl, 80h
		jnz	loc_0_367
		nop
		nop
		nop
		or	dx, ax
		jmp	short loc_0_36B
;����������������������������������������������������������������������������
		nop

loc_0_367:				; CODE XREF: IS_KEY?+2Fj
		not	ax
		and	dx, ax

loc_0_36B:				; CODE XREF: IS_KEY?+36j
		mov	KEYWORD, dx
		in	al, 61h		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	��� OR	03H=spkr ON
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		or	al, 80h
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	��� OR	03H=spkr ON
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		and	al, 7Fh
		out	61h, al		; PC/XT	PPI port B bits:
					; 0: Tmr 2 gate	��� OR	03H=spkr ON
					; 1: Tmr 2 data	ͼ  AND	0fcH=spkr OFF
					; 3: 1=read high switches
					; 4: 0=enable RAM parity checking
					; 5: 0=enable I/O channel check
					; 6: 0=hold keyboard clock low
					; 7: 0=enable kbrd
		mov	al, 61h	; 'a'
		out	20h, al		; Interrupt controller,	8259A.
		pop	ds
		assume ds:nothing
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		iret
IS_KEY?		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SETTEXTMODE	proc near		; CODE XREF: START+28Ep
		mov	ax, ds:0D71Ch
		mov	ah, 0
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		retn
SETTEXTMODE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GETMODE		proc near		; CODE XREF: START+6Ep
		mov	ah, 0Fh
		int	10h		; - VIDEO - GET	CURRENT	VIDEO MODE
					; Return: AH = number of columns on screen
					; AL = current video mode (see INT 10/AH=00h)
					; BH = current active display page
		mov	ds:0D71Ch, ax
		retn
GETMODE		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e
; Esta funci�n espera el retrazo vertical

WAITFLY		proc near		; CODE XREF: INIT_INTVEC+24p
					; PAUSEKEY+7p ...
		mov	dx, 3DAh

loc_0_396:				; CODE XREF: WAITFLY+6j
		in	al, dx		; Video	status bits:
					; 0: retrace.  1=display is in vert or horiz retrace.
					; 1: 1=light pen is triggered; 0=armed
					; 2: 1=light pen switch	is open; 0=closed
					; 3: 1=vertical	sync pulse is occurring.
		and	al, 8
		jnz	loc_0_396

loc_0_39B:				; CODE XREF: WAITFLY+Bj
		in	al, dx		; Video	status bits:
					; 0: retrace.  1=display is in vert or horiz retrace.
					; 1: 1=light pen is triggered; 0=armed
					; 2: 1=light pen switch	is open; 0=closed
					; 3: 1=vertical	sync pulse is occurring.
		and	al, 8
		jz	loc_0_39B
		retn
WAITFLY		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

INIT_INTVEC	proc near		; CODE XREF: START+82p
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	ah, 35h	; '5'
		mov	al, 8
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word_FFD_D724, es
		mov	INT8ADD, bx
		mov	cx, 5D2Ah
		mov	word_FFD_12E, cx
		mov	word_FFD_130, cx
		in	al, 21h		; Interrupt controller,	8259A.
		or	al, 1
		out	21h, al		; Interrupt controller,	8259A.
		call	WAITFLY
		mov	dx, 5D2Ah
		mov	al, 3Eh	; '>'
		out	43h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, dl
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		mov	al, dh
		out	40h, al		; Timer	8253-5 (AT: 8254.2).
		xor	ax, ax
		push	ds
		mov	ds, ax
		assume ds:nothing
		segds
		mov	word ptr ds:20h, 40Ah
		segds
		mov	ds:22h,	cs
		pop	ds
		assume ds:nothing
		in	al, 21h		; Interrupt controller,	8259A.
		and	al, 0FEh
		out	21h, al		; Interrupt controller,	8259A.
		mov	bp, 0
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	ah, 35h	; '5'
		mov	al, 80h	; '�'
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	bx, es
		cmp	bx, word_FFD_D724
		jz	locret_0_409
		nop
		nop
		nop
		inc	bp

locret_0_409:				; CODE XREF: INIT_INTVEC+62j
		retn
INIT_INTVEC	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

INIT_CLCK_STUFF	proc near
		push	ax
		mov	al, 20h	; ' '
		out	20h, al		; Interrupt controller,	8259A.
		push	ds
		mov	ax, seg001
		mov	ds, ax
		inc	COUNTER50
		cmp	COUNTER50, 32h ; '2'
		jnz	loc_0_44E
		nop
		nop
		nop
		mov	COUNTER50, 0
		inc	word ptr SECCOUNT
		cmp	TIMEON,	1
		jnz	loc_0_44E
		nop
		nop
		nop
		mov	NOOSEC,	1
		inc	SECONDS
		cmp	SECONDS, 40h ; '@'
		jnz	loc_0_44E
		nop
		nop
		nop
		call	CLOCK

loc_0_44E:				; CODE XREF: INIT_CLCK_STUFF+14j
					; INIT_CLCK_STUFF+28j
					; ...
		inc	HERTZFLI
		inc	HERTZCOUNT
		inc	COMBATHERTZ
		mov	ax, CLWCOUNT
		cmp	ax, HERTZCOUNT
		jnz	loc_0_46B
		nop
		nop
		nop
		mov	CLWFLAG, 1

loc_0_46B:				; CODE XREF: INIT_CLCK_STUFF+57j
		inc	SPEEDCOUNTER
		cmp	SPEEDCOUNTER, 32h ; '2'
		jnz	loc_0_485
		nop
		nop
		nop
		mov	SPEEDCOUNTER, 0
		mov	SCFLAG,	1

loc_0_485:				; CODE XREF: INIT_CLCK_STUFF+6Aj
		cmp	SOUNDFLAG, 1
		jz	loc_0_499
		nop
		nop
		nop
		push	es
		mov	es, SOUNDSEG
		assume es:nothing
		call	INTSOUND
		pop	es
		assume es:nothing

loc_0_499:				; CODE XREF: INIT_CLCK_STUFF+80j
		mov	ax, word_FFD_12E
		add	word_FFD_130, ax
		ja	loc_0_4AA
		nop
		nop
		nop
		pushf
		call	dword ptr INT8ADD

loc_0_4AA:				; CODE XREF: INIT_CLCK_STUFF+96j
		pop	ds
		assume ds:nothing
		pop	ax
		iret
INIT_CLCK_STUFF	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CLOCK		proc near		; CODE XREF: INIT_CLCK_STUFF+41p
					; sub_0_550F+169p ...
		or	byte ptr ds:0AEDh, 1
		mov	word ptr ds:0AEEh, 0
		inc	word ptr ds:0AF0h
		cmp	word ptr ds:0AF0h, 10h
		jnz	locret_0_4E9
		nop
		nop
		nop
		or	byte ptr ds:0AEDh, 2
		mov	word ptr ds:0AF0h, 0
		inc	word ptr ds:0AF2h
		cmp	word ptr ds:0AF2h, 100h
		jnz	locret_0_4E9
		nop
		nop
		nop
		or	byte ptr ds:0AEDh, 4
		inc	word ptr ds:0AF4h

locret_0_4E9:				; CODE XREF: CLOCK+14j	CLOCK+2Ej
		retn
CLOCK		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CHECKSUM?	proc near		; CODE XREF: LOAD+77p
		mov	ax, ds:1012h
		mov	cx, ds:1010h
		push	ds
		mov	ds, di

loc_0_4F4:				; CODE XREF: CHECKSUM?+11j
		xor	[si], al
		inc	byte ptr [si]
		xor	[si], ah
		inc	si		; si++
		loop	loc_0_4F4
		pop	ds
		retn
CHECKSUM?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

FILE_EXTENSION	proc near		; CODE XREF: LOAD+Fp
		mov	si, bx
		mov	bp, 0

FILE_EXT_DOT:				; CODE XREF: FILE_EXTENSION+17j
		cmp	byte ptr [bx], 2Eh ; '.'
		jz	FILE_EXT_ISLBM
		nop
		nop
		nop
		inc	bx
		inc	bp
		cmp	bp, 9
		jz	FILE_EXT_UNKNOW
		nop
		nop
		nop
		jmp	short FILE_EXT_DOT
;����������������������������������������������������������������������������

FILE_EXT_ISLBM:				; CODE XREF: FILE_EXTENSION+8j
		inc	bx
		cmp	byte ptr [bx], 6Ch ; 'l'
		jnz	FILE_EXT_ISFAB
		nop
		nop
		nop
		cmp	byte ptr [bx+1], 62h ; 'b'
		jnz	FILE_EXT_ISFAB
		nop
		nop
		nop
		cmp	byte ptr [bx+2], 6Dh ; 'm'
		jnz	FILE_EXT_ISFAB
		nop
		nop
		nop
		jmp	short FILE_EXT_RETURN
;����������������������������������������������������������������������������
		nop

FILE_EXT_ISFAB:				; CODE XREF: FILE_EXTENSION+1Dj
					; FILE_EXTENSION+26j
					; ...
		cmp	byte ptr [bx], 66h ; 'f'
		jnz	FILE_EXT_ISLOV
		nop
		nop
		nop
		cmp	byte ptr [bx+1], 61h ; 'a'
		jnz	FILE_EXT_ISLOV
		nop
		nop
		nop
		cmp	byte ptr [bx+2], 62h ; 'b'
		jnz	FILE_EXT_ISLOV
		nop
		nop
		nop
		jmp	short FILE_EXT_RETURN
;����������������������������������������������������������������������������
		nop

FILE_EXT_ISLOV:				; CODE XREF: FILE_EXTENSION+3Aj
					; FILE_EXTENSION+43j
					; ...
		cmp	byte ptr [bx], 6Ch ; 'l'
		jnz	FILE_EXT_UNKNOW
		nop
		nop
		nop
		cmp	byte ptr [bx+1], 6Fh ; 'o'
		jnz	FILE_EXT_UNKNOW
		nop
		nop
		nop
		cmp	byte ptr [bx+2], 76h ; 'v'
		jnz	FILE_EXT_UNKNOW
		nop
		nop
		nop
		jmp	short FILE_EXT_RETURN
;����������������������������������������������������������������������������
		nop

FILE_EXT_UNKNOW:			; CODE XREF: FILE_EXTENSION+12j
					; FILE_EXTENSION+57j
					; ...
		mov	bx, si
		retn
;����������������������������������������������������������������������������

FILE_EXT_RETURN:			; CODE XREF: FILE_EXTENSION+34j
					; FILE_EXTENSION+51j
					; ...
		retn
FILE_EXTENSION	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

WAITRELEASE	proc near		; CODE XREF: WAITRELEASE+5j
					; PRINTMAP+152p ...
		cmp	word ptr ds:0F8h, 0
		jnz	WAITRELEASE
		retn
WAITRELEASE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

WAITKEY		proc near		; CODE XREF: WAITKEY+19j CONTROLLER+C56p
					; ...
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	locret_0_597
		nop
		nop
		nop
		cmp	word ptr ds:0F8h, 0
		jnz	locret_0_597
		nop
		nop
		nop
		jmp	short WAITKEY
;����������������������������������������������������������������������������

locret_0_597:				; CODE XREF: WAITKEY+Aj WAITKEY+14j
		retn
WAITKEY		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PAUSEKEY	proc near		; CODE XREF: DIALOG+732p
		push	cx
		call	WAITMRELEASE
		pop	cx
		mov	bp, cx

loc_0_59F:				; CODE XREF: PAUSEKEY+24j
		call	WAITFLY
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	locret_0_5BE
		nop
		nop
		nop
		cmp	word ptr ds:0F8h, 0
		jnz	locret_0_5BE
		nop
		nop
		nop
		dec	bp
		jnz	loc_0_59F

locret_0_5BE:				; CODE XREF: PAUSEKEY+14j PAUSEKEY+1Ej
		retn
PAUSEKEY	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PAUSE		proc near		; CODE XREF: START+2C1p PAUSE+3j
					; ...
		call	WAITFLY
		loop	PAUSE
		retn
PAUSE		endp

;����������������������������������������������������������������������������
		mov	ax, ds:0D744h
		shl	ax, 1
		shl	ax, 1
		inc	ax
		add	ax, ds:0D744h
		mov	ds:0D744h, ax
		retn
;����������������������������������������������������������������������������
		mov	al, ds:13Eh
		mov	ah, al
		shl	al, 1
		shl	al, 1
		stc
		adc	al, ah
		mov	ds:13Eh, al
		retn

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

RAND		proc near		; CODE XREF: MAKEVIEW+ADEp
					; CONTROLLER+8Ap ...
		push	dx
		push	bx
		mov	ax, ds:0D744h
		mov	dx, 805h
		mul	dx
		clc
		add	ax, 3619h
		adc	dx, 0
		mov	bx, 0FFFFh
		div	bx
		mov	ax, dx
		mov	ds:0D744h, ax
		pop	bx
		pop	dx
		retn
RAND		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

RAND_RANGE	proc near		; CODE XREF: PRINTOI+5p PRINTOI+1Ap
					; ...
		mov	dl, 0FFh
		mul	ah
		add	ax, 80h	; '�'
		div	dl
		retn
RAND_RANGE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DISPLAY_ISSUE	proc near
		push	ax
		push	ds
		push	es
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	si, 6
		mov	cx, 31h	; '1'

loc_0_61B:				; CODE XREF: DISPLAY_ISSUE+12j
		xor	byte ptr [si], 77h
		inc	si
		loop	loc_0_61B
		mov	di, 0E600h
		push	es
		mov	bx, 0A000h
		mov	es, bx
		assume es:nothing
		mov	si, 6
		mov	cx, seg001
		mov	TEXTSOURCESEG, cx
		mov	cx, 2Fh	; '/'
		call	loc_0_AB0A
		pop	es
		assume es:nothing
		mov	di, 0F000h
		push	es
		mov	bx, 0A000h
		mov	es, bx
		assume es:nothing
		mov	si, 2Eh	; '.'
		mov	cx, seg001
		mov	TEXTSOURCESEG, cx
		mov	cx, 8
		call	loc_0_AB0A
		pop	es
		assume es:nothing
		mov	si, 6
		mov	cx, 31h	; '1'

loc_0_65B:				; CODE XREF: DISPLAY_ISSUE+52j
		xor	byte ptr [si], 77h
		inc	si
		loop	loc_0_65B
		pop	es
		pop	ds
		assume ds:nothing
		pop	ax
		retn
DISPLAY_ISSUE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DISPLAY_LOAD	proc near		; CODE XREF: START+246p
		mov	dx, 20Fh
		mov	bp, 0FA00h	; 527 (64000)
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	EXP_DP
		push	es
		push	ds
		mov	ax, ds:0D712h
		mov	es, ax
		mov	ax, ds:0D704h
		mov	ds, ax
		mov	dx, 0Fh		; 15
		mov	bp, 0FFh	; 255
		mov	si, 62C0h	; 25280
		mov	di, 0		; 0

loc_0_690:				; CODE XREF: DISPLAY_LOAD+33j
		mov	cx, bp
		rep movsb
		add	si, 41h	; 'A'
		dec	dx
		jnz	loc_0_690
		pop	ds
		pop	es
		mov	bp, 10h		; 16
		mov	ax, ds:0D704h
		mov	ds, ax
		mov	es, ax
		mov	si, 0
		mov	di, 5000h	; 20480

loc_0_6AC:				; CODE XREF: DISPLAY_LOAD+7Cj
		push	si
		push	di
		mov	dx, 20h	; ' '   ; 32

loc_0_6B1:				; CODE XREF: DISPLAY_LOAD+60j
		push	si
		push	di
		mov	cx, 20h	; ' '   ; 32

loc_0_6B6:				; CODE XREF: DISPLAY_LOAD+56j
		movsb
		add	di, 13Fh	; 319
		loop	loc_0_6B6
		pop	di
		pop	si
		add	si, 140h	; 320
		inc	di
		dec	dx
		jnz	loc_0_6B1
		pop	di
		pop	si
		add	di, 20h	; ' '   ; 32
		add	si, 20h	; ' '   ; 32
		dec	bp
		cmp	bp, 8		; 8
		jnz	loc_0_6DE
		nop
		nop
		nop
		mov	si, 2800h	; 10240
		mov	di, 7800h	; 30720

loc_0_6DE:				; CODE XREF: DISPLAY_LOAD+6Ej
		cmp	bp, 0
		jnz	loc_0_6AC
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	ax, SIGNSEG
		mov	es, ax
		assume es:nothing
		mov	ax, SCREEN2
		mov	ds, ax
		assume ds:nothing
		mov	bp, 10h		; 16
		mov	di, 0
		mov	si, 5000h	; 20480

loc_0_6FB:				; CODE XREF: DISPLAY_LOAD+C8j
		push	si
		mov	dx, 20h	; ' '   ; 32

loc_0_6FF:				; CODE XREF: DISPLAY_LOAD+B3j
		mov	cx, 10h		; 16

loc_0_702:				; CODE XREF: DISPLAY_LOAD+ACj
		lodsw
		shl	al, 1
		shl	al, 1
		shl	al, 1
		shl	al, 1
		and	ah, 0Fh		; 15
		or	al, ah
		stosb
		loop	loc_0_702
		add	si, 120h	; 288
		dec	dx
		jnz	loc_0_6FF	; 16
		pop	si
		add	si, 20h	; ' '   ; 32
		dec	bp
		cmp	bp, 8		; 8
		jnz	loc_0_72A
		nop
		nop
		nop
		mov	si, 7800h	; 30720

loc_0_72A:				; CODE XREF: DISPLAY_LOAD+BDj
		cmp	bp, 0
		jnz	loc_0_6FB
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		retn
DISPLAY_LOAD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BLITSIGN	proc near		; CODE XREF: DO_SIGN+37p
		cmp	al, SIGNNO
		jz	locret_0_77C
		nop
		nop
		nop
		mov	SIGNNO,	al
		mov	dx, PANELSEG
		push	es
		push	ds
		mov	es, dx
		mov	dx, SIGNSEG
		mov	ds, dx
		assume ds:nothing
		mov	dx, 200h
		mul	dx
		mov	si, ax
		mov	di, 14CBh
		mov	dx, 20h	; ' '

loc_0_75C:				; CODE XREF: BLITSIGN+43j
		mov	cx, 10h

loc_0_75F:				; CODE XREF: BLITSIGN+3Cj
		lodsb
		mov	ah, al
		and	ah, 0Fh
		shr	al, 1
		shr	al, 1
		shr	al, 1
		shr	al, 1
		add	ax, 0C0C0h
		stosw
		loop	loc_0_75F
		add	di, 120h
		dec	dx
		jnz	loc_0_75C
		pop	ds
		assume ds:nothing
		pop	es
		assume es:nothing

locret_0_77C:				; CODE XREF: BLITSIGN+4j
		retn
BLITSIGN	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

WHICHPANELS	proc near		; CODE XREF: LOADSPRITES+6Ep
					; sub_0_6B1E+66p ...
		mov	bx, ds:5E5Ch
		mov	cx, ds:0AF0h
		add	bx, cx
		mov	al, [bx]
		mov	bp, 0
		cmp	al, 0
		jz	locret_0_7BA
		nop
		nop
		nop
		cmp	al, 3
		jz	locret_0_7BA
		nop
		nop
		nop
		mov	bp, 1
		cmp	al, 0FFh
		jz	locret_0_7BA
		nop
		nop
		nop
		cmp	al, 1
		jnz	loc_0_7B4
		nop
		nop
		nop
		cmp	byte ptr [bx-1], 2
		jz	locret_0_7BA
		nop
		nop
		nop

loc_0_7B4:				; CODE XREF: WHICHPANELS+29j
		mov	bp, 2
		jmp	short locret_0_7BA
;����������������������������������������������������������������������������
		nop

locret_0_7BA:				; CODE XREF: WHICHPANELS+11j
					; WHICHPANELS+18j ...
		retn
WHICHPANELS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DO_SIGN		proc near		; CODE XREF: COLLISIONS+13Fp
		cmp	word ptr ds:0ADDh, 0
		jnz	locret_0_7F6
		nop
		nop
		nop
		cmp	byte ptr ds:3784h, 1
		jnz	locret_0_7F6
		nop
		nop
		nop
		push	ax
		mov	ax, [bx+12h]
		mov	bx, 4FDEh
		mov	dx, 0

loc_0_7D9:				; CODE XREF: DO_SIGN+30j
		cmp	word ptr [bx], 0FFFFh
		jz	loc_0_7F0
		nop
		nop
		nop
		cmp	[bx], ax
		jz	loc_0_7ED
		nop
		nop
		nop
		add	bx, 4
		jmp	short loc_0_7D9
;����������������������������������������������������������������������������

loc_0_7ED:				; CODE XREF: DO_SIGN+28j
		mov	dx, [bx+2]

loc_0_7F0:				; CODE XREF: DO_SIGN+21j
		mov	ax, dx
		call	BLITSIGN
		pop	ax

locret_0_7F6:				; CODE XREF: DO_SIGN+5j DO_SIGN+Fj
		retn
DO_SIGN		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GETDATETIME	proc near		; CODE XREF: START+249p
		mov	ah, 2Ah	; '*'
		int	21h		; DOS -	GET CURRENT DATE
					; Return: DL = day, DH = month,	CX = year
					; AL = day of the week (0=Sunday, 1=Monday, etc.)
		mov	ds:0F5Fh, al
		mov	ah, 2Ch	; ','
		int	21h		; DOS -	GET CURRENT TIME
					; Return: CH = hours, CL = minutes, DH = seconds
					; DL = hundredths of seconds
		mov	ds:0D744h, dx
		retn
GETDATETIME	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

HEXTOBCD	proc near		; CODE XREF: seg000:933Ep seg000:93E5p
					; ...
		mov	ah, 0
		mov	dx, 0
		mov	cx, 64h	; 'd'
		div	cx
		mov	bx, ax
		mov	cx, 0Ah
		mov	ax, dx
		mov	dx, 0
		div	cx
		mov	ah, bl
		shl	al, 1
		shl	al, 1
		shl	al, 1
		shl	al, 1
		and	dx, 0Fh
		or	al, dl
		retn
HEXTOBCD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

HEXTOBCD2	proc near		; CODE XREF: CONTROLLER+5A9p
					; sub_0_5D62+33Bp ...
		cmp	ax, 270Fh
		jbe	loc_0_838
		nop
		nop
		nop
		mov	ax, 270Fh

loc_0_838:				; CODE XREF: HEXTOBCD2+3j
		mov	dx, 0
		mov	cx, 3E8h
		div	cx
		mov	bx, ax
		mov	ax, dx
		mov	dx, 0
		mov	cx, 64h	; 'd'
		div	cx
		mov	bp, ax
		mov	cx, 0Ah
		mov	ax, dx
		mov	dx, 0
		div	cx
		shl	al, 1
		shl	al, 1
		shl	al, 1
		shl	al, 1
		and	dx, 0Fh
		or	ax, dx
		mov	bh, bl
		mov	bl, 0
		shl	bh, 1
		shl	bh, 1
		shl	bh, 1
		shl	bh, 1
		or	ax, bx
		mov	bx, bp
		mov	bh, bl
		mov	bl, 0
		or	ax, bx
		retn
HEXTOBCD2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

WAITMRELEASE	proc near		; CODE XREF: PAUSEKEY+1p WAITMRELEASE+Aj
					; ...
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	WAITMRELEASE
		retn
WAITMRELEASE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADEFFFILE	proc near		; CODE XREF: LOADEFFDVR+4p
					; CHANGEEFF+4p
		mov	bp, 2328h	; tama�o
		mov	si, 0
		mov	di, ds:0D714h
		call	LOAD
		push	es
		mov	ax, ds:0D714h
		mov	es, ax
		mov	bx, 0
		mov	cx, 8

loc_0_8A2:				; CODE XREF: LOADEFFFILE+20j
		mov	es:[bx+2], es
		add	bx, 4
		loop	loc_0_8A2
		mov	si, 0
		mov	di, 0D6DCh
		mov	cx, 8
		shl	cx, 1
		push	ds
		mov	ax, ds:0D714h
		mov	ds, ax
		mov	ax, seg001
		mov	es, ax
		assume es:seg001
		rep movsw
		pop	ds
		pop	es
		assume es:nothing
		push	es
		mov	es, ds:0D714h
		call	dword ptr ds:0D6F4h
		pop	es
		retn
LOADEFFFILE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MUS_TO_EFF	proc near		; CODE XREF: JUSTICE+16Bp GUILDBUSINESS+323p
					; ...
		cmp	byte ptr ds:0D728h, 1
		jz	locret_0_90D
		nop
		nop
		nop
		push	es
		mov	ax, 1
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	cx, 96h	; '�'
		call	PAUSE
		push	es
		mov	ax, 0
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	byte ptr ds:0D728h, 1
		call	LOADEFFDVR
		mov	byte ptr ds:0D728h, 0

locret_0_90D:				; CODE XREF: MUS_TO_EFF+5j
		retn
MUS_TO_EFF	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

EFF_TO_MUS	proc near		; CODE XREF: JUSTICEp GUILDBUSINESS+253p
					; ...
		cmp	byte ptr ds:0D728h, 1
		jz	locret_0_935
		nop
		nop
		nop
		push	es
		mov	ax, 0
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	byte ptr ds:0D728h, 1
		call	CHANGEEFF
		mov	byte ptr ds:0D728h, 0

locret_0_935:				; CODE XREF: EFF_TO_MUS+5j
		retn
EFF_TO_MUS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

INIT_SOUND_STUFF proc near		; CODE XREF: START+7Cp
		mov	dx, 0D72Ah
		mov	bp, 2
		mov	si, 0D728h
		mov	di, seg001
		call	LOAD
		cmp	byte ptr ds:0D729h, 2
		jz	loc_0_96B
		nop
		nop
		nop
		cmp	byte ptr ds:0D729h, 1
		jz	loc_0_962
		nop
		nop
		nop
		mov	si, 0D6C4h
		mov	di, 0D6D0h
		jmp	short loc_0_974
;����������������������������������������������������������������������������
		nop

loc_0_962:				; CODE XREF: INIT_SOUND_STUFF+1Ej
		mov	si, 0D69Ah
		mov	di, 0D6A4h
		jmp	short loc_0_974
;����������������������������������������������������������������������������
		nop

loc_0_96B:				; CODE XREF: INIT_SOUND_STUFF+14j
		mov	si, 0D6AEh
		mov	di, 0D6B9h
		jmp	short loc_0_974
;����������������������������������������������������������������������������
		nop

loc_0_974:				; CODE XREF: INIT_SOUND_STUFF+29j
					; INIT_SOUND_STUFF+32j
					; ...
		mov	ds:0D696h, si
		mov	ds:0D698h, di
		call	LOADEFFDVR
		retn
INIT_SOUND_STUFF endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADEFFDVR	proc near		; CODE XREF: MUS_TO_EFF+35p
					; INIT_SOUND_STUFF+46p
		mov	dx, ds:0D696h
		call	LOADEFFFILE
		retn
LOADEFFDVR	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CHANGEEFF	proc near		; CODE XREF: EFF_TO_MUS+1Fp
		mov	dx, ds:0D698h
		call	LOADEFFFILE
		retn
CHANGEEFF	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADPALFILE	proc near		; CODE XREF: START+96p	START+231p
					; ...
		mov	dx, 150h
		mov	bp, 900h
		mov	si, 0
		mov	di, ds:0D70Eh
		call	LOAD
		push	es
		mov	ax, ds:0D70Eh
		mov	es, ax
		mov	si, 0A9Dh
		mov	di, 2D0h
		mov	cx, 30h	; '0'
		rep movsb
		pop	es
		retn
LOADPALFILE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOAD		proc near		; CODE XREF: START+93p	START+19Cp
					; ...
		cmp	byte ptr ds:100Fh, 1
		jnz	loc_0_9E7
		nop
		nop
		nop
		push	bp
		push	si
		push	di
		mov	bx, dx
		call	FILE_EXTENSION
		mov	word ptr ds:1012h, 0
		cmp	bx, dx
		jz	loc_0_9E4
		nop
		nop
		nop
		mov	si, dx
		mov	ax, [si]
		mov	ds:1012h, ax
		mov	byte ptr [bx], 6Ch ; 'l'
		mov	byte ptr [bx+1], 6Fh ; 'o'
		mov	byte ptr [bx+2], 76h ; 'v'

loc_0_9E4:				; CODE XREF: LOAD+1Aj
		pop	di
		pop	si
		pop	bp

loc_0_9E7:				; CODE XREF: LOAD+5j
		push	si
		push	di
		push	si
		push	di
		mov	ah, 3Dh	; '='
		mov	al, 2
		mov	cx, 0
		int	21h		; DOS -	2+ - OPEN DISK FILE WITH HANDLE
					; DS:DX	-> ASCIZ filename
					; AL = access mode
					; 2 - read & write
		mov	ds:0D726h, ax
		pop	di
		pop	si
		mov	ah, 3Fh	; '?'
		mov	bx, ds:0D726h
		mov	cx, bp
		push	ds
		mov	ds, di
		mov	dx, si
		int	21h		; DOS -	2+ - READ FROM FILE WITH HANDLE
					; BX = file handle, CX = number	of bytes to read
					; DS:DX	-> buffer
		pop	ds
		mov	ds:1010h, ax
		mov	ah, 3Eh	; '>'
		mov	bx, ds:0D726h
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		pop	di
		pop	si
		cmp	byte ptr ds:100Fh, 1
		jnz	locret_0_A2D
		nop
		nop
		nop
		cmp	word ptr ds:1012h, 0
		jz	locret_0_A2D
		nop
		nop
		nop
		call	CHECKSUM?

locret_0_A2D:				; CODE XREF: LOAD+68j LOAD+72j
		retn
LOAD		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADMAP		proc near		; CODE XREF: RELOCATE+23p JUSTICE+16Ep
		mov	ax, ds:0AFBh
		cmp	ds:0ADDh, ax
		jz	locret_0_A51
		nop
		nop
		nop
LOADMAP		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LMAP		proc near		; CODE XREF: LOADDATASEG+2Fp
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	LOADUMAP
		nop
		nop
		nop
		cmp	word ptr ds:0ADDh, 0
		jz	LOADGMAP
		nop
		nop
		nop
		jmp	short LOADFMAP
LMAP		endp

;����������������������������������������������������������������������������
		nop

locret_0_A51:				; CODE XREF: LOADMAP+7j
		retn

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADUMAP	proc near		; CODE XREF: LMAP+5j CHANGELEVEL+24p
		mov	word ptr ds:2614h, 80h ; '�'
		call	CALCVIEWPARMS
		mov	word ptr ds:0AFBh, 0FFFFh
		mov	dx, 16Ah
		jmp	short loc_0_A8E
LOADUMAP	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADFMAP	proc near		; CODE XREF: LMAP+14j PRINTMAP+149p
					; ...
		mov	word ptr ds:2614h, 64h ; 'd'
		call	CALCVIEWPARMS
		mov	word ptr ds:0AFBh, 1
		mov	dx, 177h
		jmp	short loc_0_A8E
LOADFMAP	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADGMAP	proc near		; CODE XREF: LMAP+Fj PRINTMAP+Fp
					; ...
		mov	word ptr ds:2614h, 64h ; 'd'
		call	CALCVIEWPARMS
		mov	word ptr ds:0AFBh, 0
		mov	dx, 15Dh

loc_0_A8E:				; CODE XREF: LOADUMAP+12j LOADFMAP+12j
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D70Ch
		call	LOAD
		mov	al, 0Fh
		mov	dx, 3F2h
		out	dx, al		; Floppy: digital output reg bits:
					; 0-1: Drive to	select 0-3 (AT:	bit 1 not used)
					; 2:   0=reset diskette	controller; 1=enable controller
					; 3:   1=enable	diskette DMA and interrupts
					; 4-7: drive motor enable.  Set	bits to	turn drive ON.
					;
		call	RESETTRIGS
		retn
LOADGMAP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADGENIE	proc near		; CODE XREF: sub_0_7053+327p
		mov	dx, 2D0h
		jmp	short LC1
LOADGENIE	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADFLIP	proc near		; CODE XREF: sub_0_7A9A+Ap
		mov	dx, 232h
		jmp	short LC1
LOADFLIP	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADSWITCH	proc near		; CODE XREF: sub_0_6C64+3Ep
					; sub_0_6C64+18Ap ...
		mov	dx, 225h
		jmp	short LC1
LOADSWITCH	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADSPELLBOOK	proc near		; CODE XREF: SPELLBOOK2+9Bp
		mov	dx, 376h
		jmp	short LC1
LOADSPELLBOOK	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADREAPER	proc near		; CODE XREF: CONTROLLER+BAAp
		mov	dx, 36Bh
		jmp	short LC1
LOADREAPER	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADWHARF	proc near		; CODE XREF: sub_0_49FD+1A4p
		mov	dx, 298h
		cmp	word ptr ds:0D489h, 1
		jnz	LC1
		nop
		nop
		nop
		mov	dx, 2A2h
		jmp	short LC1
LOADWHARF	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADSTARS	proc near		; CODE XREF: sub_0_7053+E1p
		mov	dx, 277h
		jmp	short LC1
LOADSTARS	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADLAMIABOOK	proc near		; CODE XREF: sub_0_7053+274p
		mov	dx, 2B9h
		jmp	short LC1
LOADLAMIABOOK	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADLABMAP	proc near		; CODE XREF: CONTROLLER+4C4p
		mov	dx, 281h
		jmp	short LC1
LOADLABMAP	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADARCHPLAN	proc near		; CODE XREF: CONTROLLER+4B9p
		mov	dx, 2ADh
		jmp	short LC1
LOADARCHPLAN	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADCRYPTMAP	proc near		; CODE XREF: CONTROLLER+4AEp
		mov	dx, 2E7h
		jmp	short LC1
LOADCRYPTMAP	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADCOURT	proc near		; CODE XREF: sub_0_C066p
		mov	dx, 361h
LOADCOURT	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LC1		proc near		; CODE XREF: LOADGENIE+3j LOADFLIP+3j
					; ...
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	EXP_DP
		retn
LC1		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADPLAYSCREEN	proc near		; CODE XREF: START+24Cp sub_0_6C64+293p
		mov	dx, 1F5h
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	EXP_DP
		call	BUILDPADS
		mov	si, ds:0D704h
		mov	di, 0A000h
		push	ds
		push	es
		mov	es, di
		assume es:nothing
		mov	ds, si
		mov	si, 0
		mov	di, 0
		mov	cx, 7D00h
		rep movsw
		pop	es
		assume es:nothing
		pop	ds
		call	DISPLAYATTRIBS
		mov	byte ptr ds:13Dh, 1
		call	INVENTORY
		retn
LOADPLAYSCREEN	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BUILDPADS	proc near		; CODE XREF: LOADPLAYSCREEN+13p
					; DIALOG+6E1p ...
		mov	si, 6A92h
		mov	di, 0AA20h
		mov	cx, 4

loc_0_B4D:				; CODE XREF: BUILDPADS+4Ej
		push	si
		push	cx
		push	di
		mov	bl, [si]
		mov	bh, 0
		shl	bx, 1
		add	bx, 6A7Eh
		mov	dx, [bx]
		cmp	dx, 47Bh
		jnz	loc_0_B72
		nop
		nop
		nop
		cmp	word ptr ds:5ACDh, 0
		jz	loc_0_B72
		nop
		nop
		nop
		mov	dx, 4DDh

loc_0_B72:				; CODE XREF: BUILDPADS+1Cj
					; BUILDPADS+26j
		mov	bp, 2EE0h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		pop	di
		push	di
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		call	near ptr EXP_IFF
		pop	es
		pop	di
		pop	cx
		pop	si
		inc	si
		add	di, 40h	; '@'
		loop	loc_0_B4D
		retn
BUILDPADS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADFSPRITES	proc near		; CODE XREF: START+243p
		mov	dx, 1DBh
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	EXP_DP
		push	es
		push	ds
		mov	ax, ds:0D704h
		mov	bx, ds:0D708h
		mov	es, bx
		mov	ds, ax
		mov	di, 0
		mov	si, 0
		mov	cx, 6000h
		rep movsw
		pop	ds
		pop	es
		mov	dx, 1E8h
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	EXP_DP
		push	es
		push	ds
		mov	ax, ds:0D708h
		mov	es, ax
		mov	ax, ds:0D704h
		mov	ds, ax
		mov	si, 0
		mov	di, 0
		mov	cx, 6000h

loc_0_BEA:				; CODE XREF: LOADFSPRITES+70j
		mov	ax, [si]
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		and	ax, 0F0F0h
		and	word ptr es:[di], 0F0Fh
		or	es:[di], ax
		add	si, 2
		add	di, 2
		loop	loc_0_BEA
		pop	ds
		pop	es
		retn
LOADFSPRITES	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADSPRITES	proc near		; CODE XREF: CONTROLLER+12p
					; sub_0_6B1E+ADp ...
		push	ax
		mov	ax, ds:977h
		mov	ds:97Bh, ax
		mov	ax, ds:979h
		mov	ds:97Dh, ax
		cmp	byte ptr ds:977h, 0FFh
		jnz	loc_0_C6E
		nop
		nop
		nop
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	loc_0_C6E
		nop
		nop
		nop
		mov	byte ptr ds:977h, 0
		mov	byte ptr ds:978h, 2
		mov	dx, 508h

loc_0_C38:				; CODE XREF: LOADSPRITES+A9j
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	EXP_DP
		push	es
		push	ds
		mov	ax, ds:0D704h
		mov	bx, ds:0D706h
		mov	es, bx
		mov	ds, ax
		mov	di, 0
		mov	si, 0
		mov	cx, 0FA00h

loc_0_C5E:				; CODE XREF: LOADSPRITES+60j
		lodsb
		and	al, 0Fh
		mov	ah, es:[di]
		and	ah, 0F0h
		or	al, ah
		stosb
		loop	loc_0_C5E
		pop	ds
		pop	es

loc_0_C6E:				; CODE XREF: LOADSPRITES+12j
					; LOADSPRITES+1Cj
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	loc_0_C98
		nop
		nop
		nop
		call	WHICHPANELS
		cmp	bp, 0
		jz	loc_0_CB5
		nop
		nop
		nop
		cmp	byte ptr ds:979h, 1
		jz	loc_0_CCD
		nop
		nop
		nop
		mov	dx, 514h
		mov	byte ptr ds:979h, 1
		jmp	short loc_0_CC7
;����������������������������������������������������������������������������
		nop

loc_0_C98:				; CODE XREF: LOADSPRITES+69j
		cmp	byte ptr ds:979h, 0Ch
		jz	loc_0_CCD
		nop
		nop
		nop
		mov	dx, 57Dh
		mov	byte ptr ds:979h, 0Ch
		mov	word ptr ds:977h, 0FFFFh
		mov	dx, 57Dh
		jmp	short loc_0_C38
;����������������������������������������������������������������������������

loc_0_CB5:				; CODE XREF: LOADSPRITES+74j
		cmp	byte ptr ds:979h, 3
		jz	loc_0_CCD
		nop
		nop
		nop
		mov	dx, 51Fh
		mov	byte ptr ds:979h, 3

loc_0_CC7:				; CODE XREF: LOADSPRITES+8Bj
		mov	di, 0
		call	LOADLBM?

loc_0_CCD:				; CODE XREF: LOADSPRITES+7Ej
					; LOADSPRITES+93j ...
		pop	ax
		cmp	al, 0FFh
		jnz	loc_0_CD5
		jmp	loc_0_D5D
;����������������������������������������������������������������������������

loc_0_CD5:				; CODE XREF: LOADSPRITES+C6j
		cmp	ds:97Ah, al
		jnz	loc_0_CDE
		jmp	loc_0_D5D
;����������������������������������������������������������������������������

loc_0_CDE:				; CODE XREF: LOADSPRITES+CFj
		cmp	al, 8
		jnz	loc_0_D0E
		nop
		nop
		nop
		push	ax
		mov	di, 8277h
		mov	cx, 5

loc_0_CEC:				; CODE XREF: LOADSPRITES+101j
		cmp	byte ptr [di+0Bh], 7
		jnz	loc_0_D08
		nop
		nop
		nop
		mov	byte ptr [di+0Bh], 2
		mov	word ptr [di+19h], 6000h
		mov	word ptr [di+11h], 3200h
		mov	word ptr [di+13h], 1900h

loc_0_D08:				; CODE XREF: LOADSPRITES+E6j
		add	di, 7Bh	; '{'
		loop	loc_0_CEC
		pop	ax

loc_0_D0E:				; CODE XREF: LOADSPRITES+D6j
		mov	ds:97Ah, al
		mov	bx, 93Bh
		mov	ah, 0
		add	bx, ax
		add	bx, ax
		mov	dx, [bx]
		mov	di, 7D00h
		call	LOADLBM?
		cmp	word ptr ds:1014h, 1
		jz	loc_0_D2F
		nop
		nop
		nop
		call	KILLALLMON

loc_0_D2F:				; CODE XREF: LOADSPRITES+11Dj
		cmp	byte ptr ds:97Ah, 7
		jnz	loc_0_D3C
		nop
		nop
		nop
		call	INIT_DWARVES

loc_0_D3C:				; CODE XREF: LOADSPRITES+12Aj
		cmp	byte ptr ds:97Ah, 8
		jnz	loc_0_D49
		nop
		nop
		nop
		call	INIT_VAMPIRES

loc_0_D49:				; CODE XREF: LOADSPRITES+137j
		cmp	byte ptr ds:97Ah, 9
		jnz	loc_0_D56
		nop
		nop
		nop
		call	INIT_WOLFMAN

loc_0_D56:				; CODE XREF: LOADSPRITES+144j
		mov	word ptr ds:1014h, 0
		retn
;����������������������������������������������������������������������������

loc_0_D5D:				; CODE XREF: LOADSPRITES+C8j
					; LOADSPRITES+D1j
		mov	word ptr ds:1014h, 0
		mov	ds:97Ah, al
		retn
LOADSPRITES	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADLBM?	proc near		; CODE XREF: LOADSPRITES+C0p
					; LOADSPRITES+115p
		push	di
		mov	bp, 0FA00h	; tama�o
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	EXP_DP
		pop	di
		mov	cx, 7D00h
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_D8C
		nop
		nop
		nop
		mov	cx, 0FA00h
		mov	di, 0

loc_0_D8C:				; CODE XREF: LOADLBM?+1Aj
		push	es
		push	ds
		mov	ax, ds:0D704h
		mov	bx, ds:0D706h
		mov	es, bx
		mov	ds, ax
		mov	si, 0

loc_0_D9C:				; CODE XREF: LOADLBM?+47j
		lodsb
		shl	al, 1
		shl	al, 1
		shl	al, 1
		shl	al, 1
		mov	ah, es:[di]
		and	ah, 0Fh
		or	al, ah
		stosb
		loop	loc_0_D9C
		pop	ds
		pop	es
		retn
LOADLBM?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SETTRIG		proc near		; CODE XREF: START+270p CONTROLLER+3C1p
					; ...
		mov	ax, ds:0AD1h
		call	SINA
		mov	ds:0AD7h, ax
		mov	ax, ds:0AD1h
		call	COSA
		mov	ds:0AD9h, ax
		mov	ax, ds:0AD1h
		add	ax, 5Ah	; 'Z'
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_DD8
		nop
		nop
		nop
		sub	ax, 5Ah	; 'Z'

loc_0_DD8:				; CODE XREF: SETTRIG+1Dj
		xor	dx, dx
		mov	cx, 0B4h ; '�'
		idiv	cx
		and	ax, 7
		mov	ds:0AD5h, ax
		retn
SETTRIG		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MAKEHCELLMAP	proc near		; CODE XREF: START+273p RELOCATE+26p
					; ...
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	bx, ds:0ADBh
		call	MAKECELLMAP
		pop	es
		retn
MAKEHCELLMAP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADANDSHOW	proc near		; CODE XREF: START+B4p	START+161p
					; ...
		mov	bp, 0FFFFh
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	GET_PAL
		mov	bx, 0
		mov	cx, 100h
		mov	dx, 0
		call	SETPALBIT
		call	EXP_DP
		mov	si, ds:0D704h
		mov	di, 0A000h
		call	COPYSCREEN
		retn
LOADANDSHOW	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CLS		proc near		; CODE XREF: START+15Bp START+214p
					; ...
		push	es
		mov	ax, 0A000h	; VGA address
		mov	es, ax
		assume es:nothing
		mov	cx, 8000h	; 64Kb
		mov	ax, 0
		mov	di, 0
		rep stosw		; Copia	los 64Kb en la direcci�n A0000
		pop	es
		assume es:nothing
		retn
CLS		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADSTARTDAT	proc near		; CODE XREF: START+19Fp START+221p
		mov	dx, 916h	; start.dat
		mov	bp, 0D694h	; Tama�o en bytes
		mov	si, 0		; �?
		mov	di, seg001	; Segmento del que debe	coger el nombre
		call	LOAD
		retn
LOADSTARTDAT	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAWSCREEN	proc near		; CODE XREF: START+79p	START+228p
					; ...
		mov	dx, 3A4h
		mov	di, 5810h
		mov	ax, 0A000h
		call	LOADPAD
		retn
DRAWSCREEN	endp

;����������������������������������������������������������������������������
		db    0	;

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SETSCRIPT	proc near		; CODE XREF: START+4Bp
		mov	ax, 2D83h
		mov	ds:0D716h, ax
		retn
SETSCRIPT	endp

;����������������������������������������������������������������������������
PAGECOLOUR	db 70h			; DATA XREF: sub_0_6C64+23Bw
					; sub_0_6F5B+1Dw ...
PROMPTCOLOUR	db 0Eh

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTCHAR	proc near		; CODE XREF: PRINTSTRING+18p
					; sub_0_AA38+14p
		push	ax
		mov	bx, 20A4h
		sub	al, 20h	; ' '
		mov	ah, al
		xlat
		mov	cl, al
		mov	al, ah

loc_0_E66:
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		mov	si, ax
		pop	ax
		push	ds
		mov	bx, ds:0D71Ah
		mov	ds, bx
		push	di
		mov	bp, 8

loc_0_E80:				; CODE XREF: PRINTCHAR+71j
		push	di
		push	si
		mov	al, [si]
		mov	ch, cl

loc_0_E86:				; CODE XREF: PRINTCHAR+65j
		mov	bh, al
		shr	bh, 1
		shr	bh, 1
		shr	bh, 1
		shr	bh, 1
		cmp	bh, 0
		jz	loc_0_E9B
		nop
		nop
		nop
		mov	es:[di], bh

loc_0_E9B:				; CODE XREF: PRINTCHAR+3Aj
		inc	di
		dec	ch
		jz	loc_0_EC0
		nop
		nop
		nop
		mov	bh, al
		and	bh, 0Fh
		cmp	bh, 0
		jz	loc_0_EB3
		nop
		nop
		nop
		mov	es:[di], bh

loc_0_EB3:				; CODE XREF: PRINTCHAR+52j
		inc	si
		mov	al, [si]
		inc	di
		dec	ch
		jz	loc_0_EC0
		nop
		nop
		nop
		jmp	short loc_0_E86
;����������������������������������������������������������������������������

loc_0_EC0:				; CODE XREF: PRINTCHAR+45j
					; PRINTCHAR+60j
		pop	si
		pop	di
		add	di, 140h
		add	si, 4
		dec	bp
		jnz	loc_0_E80
		pop	di
		mov	ch, 0
		add	cx, 1
		add	di, cx
		pop	ds
		retn
PRINTCHAR	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTSTRING	proc near		; CODE XREF: PRINTHEXWORD+23p
					; seg000:935Bp	...
		xor	ch, ch

loc_0_ED8:				; CODE XREF: PRINTSTRING+1Dj
		push	ds
		push	dx
		mov	dx, ds:217Ah
		mov	ds, dx
		mov	al, [si]
		pop	dx
		pop	ds
		inc	si
		cmp	al, 0FFh
		jz	locret_0_EF5
		nop
		nop
		nop
		push	si
		push	cx
		call	PRINTCHAR
		pop	cx
		pop	si
		loop	loc_0_ED8

locret_0_EF5:				; CODE XREF: PRINTSTRING+11j
		retn
PRINTSTRING	endp

;����������������������������������������������������������������������������
		db 0C7h	; �
		db    6	;
		db  1Eh	;
		db  21h	; !
		db    0	;
		db    0	;
		db 0C7h	; �
		db    6	;
		db  34h	; 4
		db  21h	; !
		db    0	;
		db    0	;
		db  56h	; V
		db 0B4h	; �
		db    0	;
		db 0B9h	; �
		db    0	;
		db    0	;
		db 0BBh	; �
		db 0A4h	; �
		db  20h	;
		db  1Eh	;
		db  52h	; R
		db  8Bh	; �
		db  16h	;
		db  7Ah	; z
		db  21h	; !
		db  8Eh	; �
		db 0DAh	; �
		db  8Ah	; �
		db    4	;
		db  5Ah	; Z
		db  1Fh	;
		db  3Ch	; <
		db  20h	;
		db  75h	; u
		db    7	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  89h	; �
		db  36h	; 6
		db  1Eh	;
		db  21h	; !
		db  3Ch	; <
		db  5Bh	; [
		db  74h	; t
		db  42h	; B
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  3Ch	; <
		db  5Dh	; ]
		db  74h	; t
		db  3Bh	; ;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  3Ch	; <
		db 0FFh	; �
		db  74h	; t
		db  34h	; 4
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  2Ch	; ,
		db  20h	;
		db 0D7h	; �
		db    3	;
		db 0C8h	; �
		db  83h	; �
		db 0C1h	; �
		db    1	;
		db  3Bh	; ;
		db  0Eh	;
		db  26h	; &
		db  21h	; !
		db  7Ch	; |
		db  20h	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  83h	; �
		db  3Eh	; >
		db  1Eh	;
		db  21h	; !
		db    0	;
		db  75h	; u
		db  0Fh	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  2Bh	; +
		db 0C8h	; �
		db  4Eh	; N
		db 0C7h	; �
		db    6	;
		db  34h	; 4
		db  21h	; !
		db    1	;
		db    0	;
		db 0EBh	; �
		db  0Bh	;
		db  90h	; �
		db  8Bh	; �
		db  36h	; 6
		db  1Eh	;
		db  21h	; !
		db 0EBh	; �
		db    4	;
		db  90h	; �
		db  46h	; F
		db 0EBh	; �
		db 0A3h	; �
		db  8Bh	; �
		db 0DEh	; �
		db  5Eh	; ^
		db  2Bh	; +
		db 0DEh	; �
		db 0C3h	; �
		db  8Bh	; �
		db  3Eh	; >
		db  32h	; 2
		db  21h	; !
		db 0E8h	; �
		db  81h	; �
		db 0FFh	; �
		db  83h	; �
		db 0FBh	; �
		db    0	;
		db  74h	; t
		db  19h	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  8Bh	; �
		db 0CBh	; �
		db 0E8h	; �
		db  54h	; T
		db 0FFh	; �
		db  83h	; �
		db  3Eh	; >
		db  34h	; 4
		db  21h	; !
		db    1	;
		db  75h	; u
		db  0Ah	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db 0B0h	; �
		db  2Dh	; -
		db  56h	; V
		db 0E8h	; �
		db 0C7h	; �
		db 0FEh	; �
		db  5Eh	; ^
		db  81h	; �
		db    6	;
		db  32h	; 2
		db  21h	; !
		db    0	;
		db  0Ah	;
		db  81h	; �
		db    6	;
		db  32h	; 2
		db  21h	; !
		db  40h	; @
		db    1	;
		db 0C3h	; �
;����������������������������������������������������������������������������

loc_0_FA0:				; CODE XREF: SSTOVIDTEXT+Cp
		call	TEXT_PREPROCESS
		mov	ax, ds:2124h
		mov	dx, 0
		mov	bx, 8
		add	bx, 1
		div	bx
		dec	ax
		mov	ds:2128h, ax
		mov	ax, ds:2122h
		mov	dx, 140h
		mul	dx
		add	ax, ds:2120h
		mov	ds:212Ah, ax
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
		db 0A0h	; �
		db  57h	; W
		db  0Eh	;
		db 0E8h	; �
		db 0BAh	; �
		db    1	;
		db 0C7h	; �
		db    6	;
		db  2Eh	; .
		db  21h	; !
		db 0FFh	; �
		db 0FFh	; �
		db 0C7h	; �
		db    6	;
		db  36h	; 6
		db  21h	; !
		db 0FFh	; �
		db 0FFh	; �
		db 0C7h	; �
		db    6	;
		db  38h	; 8
		db  21h	; !
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    6	;
		db  2Eh	; .
		db  21h	; !
		db 0A1h	; �
		db  2Eh	; .
		db  21h	; !
		db  3Bh	; ;
		db    6	;
		db  36h	; 6
		db  21h	; !
		db  7Eh	; ~
		db  0Fh	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db 0A3h	; �
		db  36h	; 6
		db  21h	; !
		db 0BBh	; �
		db  3Ah	; :
		db  21h	; !
		db    3	;
		db 0D8h	; �
		db    3	;
		db 0D8h	; �
		db  89h	; �
		db  37h	; 7
		db  8Bh	; �
		db  3Eh	; >
		db  2Ah	; *
		db  21h	; !
		db  89h	; �
		db  3Eh	; >
		db  32h	; 2
		db  21h	; !
		db 0C7h	; �
		db    6	;
		db  30h	; 0
		db  21h	; !
		db    0	;
		db    0	;
		db 0E8h	; �
		db  63h	; c
		db 0FFh	; �
		db  1Eh	;
		db 0A1h	; �
		db  7Ah	; z
		db  21h	; !
		db  8Eh	; �
		db 0D8h	; �
		db  8Ah	; �
		db  14h	;
		db  1Fh	;
		db 0FFh	; �
		db    6	;
		db  30h	; 0
		db  21h	; !
		db 0A1h	; �
		db  30h	; 0
		db  21h	; !
		db  3Bh	; ;
		db    6	;
		db  28h	; (
		db  21h	; !
		db  74h	; t
		db  38h	; 8
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  80h	; �
		db 0FAh	; �
		db  5Dh	; ]
		db  74h	; t
		db  15h	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  80h	; �
		db 0FAh	; �
		db 0FFh	; �
		db  74h	; t
		db  0Dh	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  83h	; �
		db  3Eh	; >
		db  34h	; 4
		db  21h	; !
		db    1	;
		db  74h	; t
		db 0CDh	; �
		db  46h	; F
		db 0EBh	; �
		db 0CAh	; �
		db  80h	; �
		db 0FAh	; �
		db 0FFh	; �
		db  75h	; u
		db    3	;
		db 0E9h	; �
		db 0DAh	; �
		db    0	;
		db  80h	; �
		db 0FAh	; �
		db  5Dh	; ]
		db  74h	; t
		db  0Eh	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  80h	; �
		db 0FAh	; �
		db  5Bh	; [
		db  74h	; t
		db    6	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db 0EBh	; �
		db  11h	;
		db  90h	; �
		db  83h	; �
		db  3Eh	; >
		db  34h	; 4
		db  21h	; !
		db    1	;
		db  74h	; t
		db    9	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  80h	; �
		db 0FAh	; �
		db 0FFh	; �
		db  74h	; t
		db 0D6h	; �
		db  46h	; F
		db  56h	; V
		db  50h	; P
		db  2Eh	; .
		db  2Eh	; .
		db 0A0h	; �
		db  58h	; X
		db  0Eh	;
		db 0A1h	; �
		db  22h	; "
		db  21h	; !
		db    3	;
		db    6	;
		db  24h	; $
		db  21h	; !
		db 0BAh	; �
		db  40h	; @
		db    1	;
		db 0F7h	; �
		db 0E2h	; �
		db    3	;
		db    6	;
		db  20h	;
		db  21h	; !
		db    3	;
		db    6	;
		db  26h	; &
		db  21h	; !
		db  8Bh	; �
		db 0F8h	; �
		db  81h	; �
		db 0EFh	; �
		db    0	;
		db  0Ah	;
		db  83h	; �
		db 0EFh	; �
		db  18h	;
		db  83h	; �
		db  3Eh	; >
		db  2Eh	; .
		db  21h	; !
		db    0	;
		db  74h	; t
		db    8	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db 0B0h	; �
		db  7Bh	; {
		db 0E8h	; �
		db 0BDh	; �
		db 0FDh	; �
		db  8Bh	; �
		db  0Eh	;
		db  38h	; 8
		db  21h	; !
		db  3Bh	; ;
		db  0Eh	;
		db  2Eh	; .
		db  21h	; !
		db  74h	; t
		db    8	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db 0B0h	; �
		db  7Dh	; }
		db 0E8h	; �
		db 0ABh	; �
		db 0FDh	; �
		db  58h	; X
		db  5Eh	; ^
		db  89h	; �
		db  36h	; 6
		db  90h	; �
		db  21h	; !
		db  83h	; �
		db  3Eh	; >
		db  8Dh	; �
		db  21h	; !
		db 0FFh	; �
		db  75h	; u
		db    3	;
		db 0E9h	; �
		db 0BCh	; �
		db    0	;
		db 0B8h	; �
		db    3	;
		db    0	;
		db 0CDh	; �
		db  33h	; 3
		db 0D1h	; �
		db 0F9h	; �
		db  83h	; �
		db 0E3h	; �
		db    3	;
		db  75h	; u
		db    6	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db 0EBh	; �
		db  2Ah	; *
		db  90h	; �
		db  8Bh	; �
		db  36h	; 6
		db  8Dh	; �
		db  21h	; !
		db  83h	; �
		db 0FEh	; �
		db    0	;
		db  75h	; u
		db    3	;
		db 0E9h	; �
		db  9Eh	; �
		db    0	;
		db 0E8h	; �
		db  97h	; �
		db  49h	; I
		db  3Dh	; =
		db    0	;
		db    0	;
		db  74h	; t
		db    3	;
		db 0E9h	; �
		db  93h	; �
		db    0	;
		db 0EBh	; �
		db  10h	;
		db  90h	; �
		db 0B8h	; �
		db    3	;
		db    0	;
		db 0CDh	; �
		db  33h	; 3
		db 0D1h	; �
		db 0F9h	; �
		db  83h	; �
		db 0E3h	; �
		db    3	;
		db  74h	; t
		db    3	;
		db 0E9h	; �
		db  81h	; �
		db    0	;
		db  83h	; �
		db  3Eh	; >
		db 0F8h	; �
		db    0	;
		db    8	;
		db  74h	; t
		db  29h	; )
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  83h	; �
		db  3Eh	; >
		db 0F8h	; �
		db    0	;
		db    4	;
		db  74h	; t
		db  48h	; H
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db  83h	; �
		db  3Eh	; >
		db  8Dh	; �
		db  21h	; !
		db    0	;
		db  75h	; u
		db 0AAh	; �
		db  83h	; �
		db  3Eh	; >
		db 0F8h	; �
		db    0	;
		db  10h	;
		db  74h	; t
		db  5Fh	; _
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db 0EBh	; �
		db  9Eh	; �
		db 0A1h	; �
		db  2Eh	; .
		db  21h	; !
		db 0A3h	; �
		db  38h	; 8
		db  21h	; !
		db 0E9h	; �
		db  40h	; @
		db 0FFh	; �
		db 0E8h	; �
		db  48h	; H
		db 0F4h	; �
		db  83h	; �
		db  3Eh	; >
		db  2Eh	; .
		db  21h	; !
		db    0	;
		db  74h	; t
		db  8Bh	; �
		db 0FFh	; �
		db  0Eh	;
		db  2Eh	; .
		db  21h	; !
		db 0A1h	; �
		db  2Eh	; .
		db  21h	; !
		db 0BBh	; �
		db  3Ah	; :
		db  21h	; !
		db    3	;
		db 0D8h	; �
		db    3	;
		db 0D8h	; �
		db  8Bh	; �
		db  37h	; 7
		db 0FFh	; �
		db  0Eh	;
		db  2Eh	; .
		db  21h	; !
		db  2Eh	; .
		db  2Eh	; .
		db 0A0h	; �
		db  57h	; W
		db  0Eh	;
		db 0E8h	; �
		db  37h	; 7
		db    0	;
		db 0E9h	; �
		db  8Ch	; �
		db 0FEh	; �
		db  8Bh	; �
		db  36h	; 6
		db  90h	; �
		db  21h	; !
		db 0E8h	; �
		db  1Bh	;
		db 0F4h	; �
		db  83h	; �
		db  3Eh	; >
		db  38h	; 8
		db  21h	; !
		db 0FFh	; �
		db  74h	; t
		db  0Fh	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db 0A1h	; �
		db  2Eh	; .
		db  21h	; !
		db  3Bh	; ;
		db    6	;
		db  38h	; 8
		db  21h	; !
		db  75h	; u
		db    3	;
		db 0E9h	; �
		db  4Fh	; O
		db 0FFh	; �
		db  2Eh	; .
		db  2Eh	; .
		db 0A0h	; �
		db  57h	; W
		db  0Eh	;
		db 0E8h	; �
		db  0Fh	;
		db    0	;
		db 0E9h	; �
		db  64h	; d
		db 0FEh	; �
		db 0C7h	; �
		db    6	;
		db  8Dh	; �
		db  21h	; !
		db    0	;
		db    0	;
		db  50h	; P
		db 0E8h	; �
		db 0F0h	; �
		db 0F3h	; �
		db  58h	; X
		db 0C3h	; �

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CLEARTWIN	proc near		; CODE XREF: SHOP+59Ep	seg000:91E2p
					; ...
		cmp	byte ptr ds:218Fh, 0
		jz	CLEARIT
		nop
		nop
		nop
		push	di
		push	si
		push	dx
		mov	si, 578h
		cmp	byte ptr ds:218Fh, 2
		jnz	loc_0_11A3
		nop
		nop
		nop
		mov	si, 0

loc_0_11A3:				; CODE XREF: CLEARTWIN+15j
		push	ds
		push	es
		mov	bp, 94h	; '�'
		mov	dx, 7Ch	; '|'
		mov	di, 578h
		mov	ax, 0A000h
		mov	bx, ds:0D704h
		mov	es, ax
		assume es:nothing
		mov	ds, bx
		call	COPY_BLOCK
		pop	es
		assume es:nothing
		pop	ds
		pop	dx
		pop	si
		pop	di
		retn
CLEARTWIN	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CLEARIT		proc near		; CODE XREF: CLEARTWIN+5j
		push	di
		push	si
		push	es
		mov	bx, 0A000h
		mov	es, bx
		assume es:nothing
		mov	bp, ds:2124h
		mov	di, ds:212Ah

loc_0_11D2:				; CODE XREF: CLEARIT+1Dj
		push	di
		mov	cx, ds:2126h
		rep stosb
		pop	di
		add	di, 140h
		dec	bp
		jnz	loc_0_11D2
		pop	es
		assume es:nothing
		pop	si
		pop	di
		retn
CLEARIT		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BCDTOSTR	proc near		; CODE XREF: PRINTBCDWORD+13p
					; TEXT_PREPROCESS+C0p
		mov	ch, 0
		jmp	short loc_0_11EC
;����������������������������������������������������������������������������
		nop

HEXTOSTR:				; CODE XREF: PRINTHEXWORD+13p
		mov	ch, 1

loc_0_11EC:				; CODE XREF: BCDTOSTR+2j
		push	es
		push	di
		push	si
		les	di, ds:2185h
		mov	si, 2189h
		mov	bp, si
		add	si, ax

loc_0_11FA:				; CODE XREF: BCDTOSTR+6Dj
		dec	si
		mov	al, [si]
		mov	ah, al
		and	al, 0Fh
		and	ah, 0F0h
		shr	ah, 1
		shr	ah, 1
		shr	ah, 1
		shr	ah, 1
		add	al, 30h	; '0'
		add	ah, 30h	; '0'
		cmp	ah, 39h	; '9'
		jle	loc_0_121C
		nop
		nop
		nop
		add	ah, 7

loc_0_121C:				; CODE XREF: BCDTOSTR+2Fj
		cmp	al, 39h	; '9'
		jle	loc_0_1225
		nop
		nop
		nop
		add	al, 7

loc_0_1225:				; CODE XREF: BCDTOSTR+39j
		cmp	ch, 0
		jnz	loc_0_1237
		nop
		nop
		nop
		cmp	ah, 30h	; '0'
		jz	loc_0_123B
		nop
		nop
		nop
		inc	ch

loc_0_1237:				; CODE XREF: BCDTOSTR+43j
		mov	es:[di], ah
		inc	di

loc_0_123B:				; CODE XREF: BCDTOSTR+4Bj
		cmp	ch, 0
		jnz	loc_0_124C
		nop
		nop
		nop
		cmp	al, 30h	; '0'
		jz	loc_0_1250
		nop
		nop
		nop
		inc	ch

loc_0_124C:				; CODE XREF: BCDTOSTR+59j
		mov	es:[di], al
		inc	di

loc_0_1250:				; CODE XREF: BCDTOSTR+60j
		cmp	si, bp
		jnz	loc_0_11FA
		cmp	ch, 0
		jnz	loc_0_1261
		nop
		nop
		nop
		mov	byte ptr es:[di], 30h ;	'0'
		inc	di

loc_0_1261:				; CODE XREF: BCDTOSTR+72j
		mov	byte ptr es:[di], 0FFh
		mov	ds:2185h, di
		inc	di
		pop	si
		pop	di
		pop	es
		retn
BCDTOSTR	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTHEXWORD	proc near
		push	es
		push	di
		mov	ds:2189h, ax
		mov	ax, ds
		mov	ds:2187h, ax
		mov	word ptr ds:2185h, 217Ch
		mov	ax, 2
		call	HEXTOSTR
		pop	di
		pop	es

loc_0_1286:				; CODE XREF: PRINTBCDWORD+18j
		mov	si, 217Ch
		mov	cl, 0FFh
		mov	dx, ds
		mov	ds:217Ah, dx
		call	PRINTSTRING
		retn
PRINTHEXWORD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTBCDWORD	proc near		; CODE XREF: seg000:934Ap
		push	es
		push	di
		mov	ds:2189h, ax
		mov	ax, ds
		mov	ds:2187h, ax
		mov	word ptr ds:2185h, 217Ch
		mov	ax, 2
		call	BCDTOSTR
		pop	di
		pop	es
		jmp	short loc_0_1286
PRINTBCDWORD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

TEXT_PREPROCESS	proc near		; CODE XREF: seg000:0FA0p TEXT_ROLL?+28p
					; ...
		push	es
		push	ds
		mov	ax, ds:0D702h
		mov	es, ax
		mov	ax, ds:217Ah
		mov	ds, ax
		mov	di, 0

loc_0_12BE:				; CODE XREF: TEXT_PREPROCESS+26j
					; TEXT_PREPROCESS+90j
					; ...
		lodsb
		cmp	al, 0FFh
		jz	loc_0_12D7
		nop
		nop
		nop
		cmp	al, 7Bh	; '{'
		jz	loc_0_12E8
		nop
		nop
		nop
		cmp	al, 7Dh	; '}'
		jz	loc_0_1342
		nop
		nop
		nop
		stosb
		jmp	short loc_0_12BE
;����������������������������������������������������������������������������

loc_0_12D7:				; CODE XREF: TEXT_PREPROCESS+12j
		stosb
		mov	ax, es
		mov	dx, seg001
		mov	ds, dx
		assume ds:seg001
		mov	TEXTSOURCESEG, ax
		mov	si, 0
		pop	ds
		assume ds:nothing
		pop	es
		retn
;����������������������������������������������������������������������������

loc_0_12E8:				; CODE XREF: TEXT_PREPROCESS+19j
		mov	dl, [si]
		mov	al, [si+1]
		add	si, 2
		push	si
		xor	ah, ah
		xor	dh, dh
		push	ds
		mov	cx, seg001
		mov	ds, cx
		assume ds:seg001
		mov	bx, 2192h
		add	bx, dx
		add	bx, dx
		add	bx, dx
		add	bx, dx
		mov	bp, [bx]
		mov	bx, [bx+2]
		mov	bx, [bx]
		mov	ds, bx
		assume ds:nothing
		mov	bx, bp
		mov	cx, 0
		dec	bx

loc_0_1315:				; CODE XREF: TEXT_PREPROCESS+72j
		inc	bx
		cmp	cx, ax
		jz	loc_0_1330
		nop
		nop
		nop
		inc	cx

loc_0_131E:				; CODE XREF: TEXT_PREPROCESS+7Dj
		cmp	byte ptr [bx], 0FFh
		jz	loc_0_1315
		cmp	byte ptr [bx], 0
		jz	loc_0_132E
		nop
		nop
		nop
		inc	bx
		jmp	short loc_0_131E
;����������������������������������������������������������������������������

loc_0_132E:				; CODE XREF: TEXT_PREPROCESS+77j
		mov	bx, bp

loc_0_1330:				; CODE XREF: TEXT_PREPROCESS+69j
		mov	si, bx

loc_0_1332:				; CODE XREF: TEXT_PREPROCESS+8Cj
		lodsb
		cmp	al, 0FFh
		jz	loc_0_133D
		nop
		nop
		nop
		stosb
		jmp	short loc_0_1332
;����������������������������������������������������������������������������

loc_0_133D:				; CODE XREF: TEXT_PREPROCESS+86j
		pop	ds
		pop	si
		jmp	loc_0_12BE
;����������������������������������������������������������������������������

loc_0_1342:				; CODE XREF: TEXT_PREPROCESS+20j
		mov	al, [si]
		xor	ah, ah
		mov	dx, [si+1]
		add	si, 3
		push	ds
		push	es
		push	si
		mov	cx, seg001
		mov	ds, cx
		assume ds:seg001
		mov	es, cx
		assume es:seg001
		mov	OUTSTRADD, di
		mov	bp, BUFFERSEG
		mov	word_FFD_2187, bp
		add	di, ax
		add	di, ax
		mov	cx, ax
		mov	si, dx
		mov	di, 2189h
		rep movsb
		call	BCDTOSTR
		mov	di, OUTSTRADD
		pop	si
		pop	es
		assume es:nothing
		pop	ds
		assume ds:nothing
		jmp	loc_0_12BE
TEXT_PREPROCESS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

FASTHEX		proc near		; CODE XREF: CONTROLLER+5AFp
					; sub_0_5D62+341p ...
		push	ax
		push	dx
		mov	al, dh
		xor	ah, ah
		mov	cx, 0A00h
		mul	cx
		mov	di, ax
		pop	dx
		xor	dh, dh
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		add	di, dx
		pop	ax
		push	ax
		mov	al, ah
		and	al, 0Fh
		and	ah, 0F0h
		shr	ah, 1
		shr	ah, 1
		shr	ah, 1
		shr	ah, 1
		add	al, 30h	; '0'
		add	ah, 30h	; '0'
		cmp	ah, 39h	; '9'
		jle	loc_0_13B5
		nop
		nop
		nop
		add	ah, 7

loc_0_13B5:				; CODE XREF: FASTHEX+31j
		cmp	al, 39h	; '9'
		jle	loc_0_13BE
		nop
		nop
		nop
		add	al, 7

loc_0_13BE:				; CODE XREF: FASTHEX+3Bj
		push	ax
		mov	al, ah
		call	DISPLAY_SMTHNG?
		pop	ax
		call	DISPLAY_SMTHNG?
		pop	ax
		mov	ah, al
		and	al, 0Fh
		and	ah, 0F0h
		shr	ah, 1
		shr	ah, 1
		shr	ah, 1
		shr	ah, 1
		add	al, 30h	; '0'
		add	ah, 30h	; '0'
		cmp	ah, 39h	; '9'
		jle	loc_0_13E8
		nop
		nop
		nop
		add	ah, 7

loc_0_13E8:				; CODE XREF: FASTHEX+64j
		cmp	al, 39h	; '9'
		jle	loc_0_13F1
		nop
		nop
		nop
		add	al, 7

loc_0_13F1:				; CODE XREF: FASTHEX+6Ej
		push	ax
		mov	al, ah
		call	DISPLAY_SMTHNG?
		pop	ax
		call	DISPLAY_SMTHNG?
		retn
FASTHEX		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DISPLAY_SMTHNG?	proc near		; CODE XREF: FASTHEX+45p FASTHEX+49p
					; ...
		sub	al, 20h	; ' '
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		mov	si, ax
		push	es
		push	ds
		mov	ax, ds:0D71Ah
		mov	es, ax
		mov	bx, 0A000h	; VGA?
		mov	ds, bx
		assume ds:nothing
		push	di
		mov	bp, 8

loc_0_141C:				; CODE XREF: DISPLAY_SMTHNG?+42j
		mov	cx, 4

loc_0_141F:				; CODE XREF: DISPLAY_SMTHNG?+3Bj
		mov	al, es:[si]
		mov	dl, al
		shr	dl, 1
		shr	dl, 1
		shr	dl, 1
		shr	dl, 1
		and	al, 0Fh
		mov	[di], dl
		mov	[di+1],	al
		add	di, 2
		inc	si
		loop	loc_0_141F
		add	di, 138h	; 288?
		dec	bp
		jnz	loc_0_141C
		pop	di
		add	di, 8
		pop	ds
		assume ds:nothing
		pop	es
		retn
DISPLAY_SMTHNG?	endp

;����������������������������������������������������������������������������
		db    0	;

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SETMODE		proc near		; CODE XREF: START+71p
		mov	ah, 0
		mov	al, 13h
		int	10h		; - VIDEO - SET	VIDEO MODE
					; AL = mode
		retn
SETMODE		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GET_PAL		proc near		; CODE XREF: LOADANDSHOW+Dp
					; sub_0_7720+15p ...
		mov	di, 0
		push	ds
		push	es
		mov	dx, ds:0D70Eh
		mov	es, dx
		mov	ax, ds:0D702h
		mov	ds, ax
		mov	si, 0
		mov	al, 43h	; 'C'
		mov	ah, 4Dh	; 'M'
		mov	dl, 41h	; 'A'
		mov	dh, 50h	; 'P'

loc_0_146A:				; CODE XREF: GET_PAL+3Ej
		cmp	[si], al
		jnz	loc_0_148C
		nop
		nop
		nop
		cmp	[si+1],	ah
		jnz	loc_0_148C
		nop
		nop
		nop
		cmp	[si+2],	dl
		jnz	loc_0_148C
		nop
		nop
		nop
		cmp	[si+3],	dh
		jnz	loc_0_148C
		nop
		nop
		nop
		jmp	short loc_0_148F
;����������������������������������������������������������������������������
		nop

loc_0_148C:				; CODE XREF: GET_PAL+1Dj GET_PAL+25j
					; ...
		inc	si
		jmp	short loc_0_146A
;����������������������������������������������������������������������������

loc_0_148F:				; CODE XREF: GET_PAL+3Aj
		add	si, 8
		mov	cx, 300h

loc_0_1495:				; CODE XREF: GET_PAL+5Ej
		mov	ah, 0
		mov	al, [si]
		cmp	al, 0
		jz	loc_0_14A8
		nop
		nop
		nop
		inc	ax
		sar	ax, 1
		sar	ax, 1
		dec	ax
		and	al, 3Fh

loc_0_14A8:				; CODE XREF: GET_PAL+4Cj
		mov	es:[di], al
		inc	di
		inc	si
		loop	loc_0_1495
		pop	es
		pop	ds
		retn
GET_PAL		endp

;����������������������������������������������������������������������������
word_0_14B2	dw 0
word_0_14B4	dw 0
word_0_14B6	dw 0			; DATA XREF: seg000:1722r seg000:1759r
					; ...
word_0_14B8	dw 0			; DATA XREF: seg000:173Cr seg000:17BBr
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
word_0_14C0	dw 0			; DATA XREF: seg000:172Fr seg000:17AEr
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

EXP_DP		proc near		; CODE XREF: DISPLAY_LOAD+10p
					; LC1+Dp ...
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		mov	di, 0
		call	near ptr EXP_IFF
		pop	es
		retn
EXP_DP		endp

;����������������������������������������������������������������������������
EXP_IFF		db  2Eh	; .		; CODE XREF: BUILDPADS+43p
					; EXP_DP+9p ...
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	ds:14B2h, es
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	ds:14B4h, di
		push	ds
		mov	ax, ds:0D702h
		mov	ds, ax
		mov	si, 0
		mov	al, 42h	; 'B'
		mov	ah, 4Fh	; 'O'   ; O
		mov	dl, 44h	; 'D'
		mov	dh, 59h	; 'Y'
		call	ISFFFFh?
		add	si, 8
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	ds:14BCh, si
		mov	si, 0
		mov	al, 46h	; 'F'
		mov	ah, 4Fh	; 'O'
		mov	dl, 52h	; 'R'
		mov	dh, 4Dh	; 'M'
		call	ISFFFFh?
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	ds:14BEh, si
		mov	cx, 0
		mov	cl, [si+1Ch]
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	ds:14C0h, cx
		mov	dx, [si+16h]
		xchg	dh, dl
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	ds:14BAh, dx
		mov	dx, [si+14h]
		xchg	dh, dl
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	ds:14B6h, dx
		test	dx, 7
		jz	loc_0_1690
		nop
		nop
		nop
		add	dx, 10h

loc_0_1690:				; CODE XREF: seg000:1688j
		sar	dx, 1
		sar	dx, 1
		sar	dx, 1
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	ds:14B8h, dx
		mov	dl, [si+1Eh]
		pop	ds
		push	ds
		push	es
		mov	ax, ds:0D702h
		mov	ds, ax
		mov	ax, cs
		mov	es, ax
;����������������������������������������������������������������������������
		assume es:seg000
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	si, ds:14BCh
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	bx, ds:14B4h
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	bp, ds:14BAh
		cmp	dl, 0
		jnz	loc_0_16C5
		jmp	loc_0_176B
;����������������������������������������������������������������������������

loc_0_16C5:				; CODE XREF: seg000:16C0j seg000:1765j
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	ax, BUFFERSEG
		mov	ds, ax
		assume ds:nothing
		mov	ax, cs
		mov	es, ax
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	dx, ds:14B8h
		mov	di, 14C3h
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	cx, ds:14C0h

loc_0_16E2:				; CODE XREF: seg000:1713j
		push	cx
		mov	ah, 0
		mov	cx, 0

loc_0_16E8:				; CODE XREF: seg000:1710j
		mov	al, [si]
		inc	si
		cmp	al, 0
		jge	loc_0_1704
		nop
		nop
		nop
		neg	al
		inc	al
		add	ah, al
		mov	cl, al
		mov	ch, 0
		mov	al, [si]
		inc	si
		rep stosb
		jmp	short loc_0_170E
;����������������������������������������������������������������������������
		nop

loc_0_1704:				; CODE XREF: seg000:16EDj
		mov	cl, al
		inc	cl
		add	ah, cl
		mov	ch, 0
		rep movsb

loc_0_170E:				; CODE XREF: seg000:1701j
		cmp	ah, dl
		jnz	loc_0_16E8
		pop	cx
		loop	loc_0_16E2
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	ax, ds:14B2h
		mov	es, ax
		assume es:nothing
		mov	ax, cs
		mov	ds, ax
;����������������������������������������������������������������������������
		assume ds:seg000
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	cx, word_0_14B6
		mov	di, 14C3h
		mov	dx, 0

loc_0_172C:				; CODE XREF: seg000:1752j
		push	cx
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	cx, word_0_14C0
		mov	al, 0
		push	di

loc_0_1736:				; CODE XREF: seg000:1740j
		rcl	byte ptr [di], 1
		rcr	al, 1
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		add	di, word_0_14B8
		loop	loc_0_1736
		pop	di
		mov	es:[bx], al
		inc	bx
		inc	dx
		and	dx, 7
		jnz	loc_0_1751
		nop
		nop
		nop
		inc	di

loc_0_1751:				; CODE XREF: seg000:174Bj
		pop	cx
		loop	loc_0_172C
		mov	ax, 140h
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		sub	ax, word_0_14B6
		add	bx, ax
		dec	bp
		jz	loc_0_1768
		nop
		nop
		nop
		jmp	loc_0_16C5
;����������������������������������������������������������������������������

loc_0_1768:				; CODE XREF: seg000:1760j seg000:17DFj
		pop	es
		pop	ds
		assume ds:nothing
		retn
;����������������������������������������������������������������������������

loc_0_176B:				; CODE XREF: seg000:16C2j seg000:17E1j
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	ax, BUFFERSEG
		mov	ds, ax
		assume ds:nothing
		mov	ax, cs
		mov	es, ax
;����������������������������������������������������������������������������
		assume es:seg000
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	dx, ds:14B8h
		mov	di, 14C3h
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	cx, ds:14C0h

loc_0_1788:				; CODE XREF: seg000:1792j
		push	cx
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	cx, ds:14B8h
		rep movsb
		pop	cx
		loop	loc_0_1788
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	ax, ds:14B2h
		mov	es, ax
		assume es:nothing
		mov	ax, cs
		mov	ds, ax
;����������������������������������������������������������������������������
		assume ds:seg000
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	cx, word_0_14B6
		mov	di, 14C3h
		mov	dx, 0

loc_0_17AB:				; CODE XREF: seg000:17D1j
		push	cx
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	cx, word_0_14C0
		mov	al, 0
		push	di

loc_0_17B5:				; CODE XREF: seg000:17BFj
		rcl	byte ptr [di], 1
		rcr	al, 1
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		add	di, word_0_14B8
		loop	loc_0_17B5
		pop	di
		mov	es:[bx], al
		inc	bx
		inc	dx
		and	dx, 7
		jnz	loc_0_17D0
		nop
		nop
		nop
		inc	di

loc_0_17D0:				; CODE XREF: seg000:17CAj
		pop	cx
		loop	loc_0_17AB
		mov	ax, 140h
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		sub	ax, word_0_14B6
		add	bx, ax
		dec	bp
		jz	loc_0_1768
		jmp	short loc_0_176B

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

ISFFFFh?	proc near		; CODE XREF: seg000:1642p seg000:1659p
					; ...
		cmp	[si], al
		jnz	loc_0_1805
		nop
		nop
		nop
		cmp	[si+1],	ah
		jnz	loc_0_1805
		nop
		nop
		nop
		cmp	[si+2],	dl
		jnz	loc_0_1805
		nop
		nop
		nop
		cmp	[si+3],	dh
		jnz	loc_0_1805
		nop
		nop
		nop
		jmp	short locret_0_180B
;����������������������������������������������������������������������������
		nop

loc_0_1805:				; CODE XREF: ISFFFFh?+2j ISFFFFh?+Aj
					; ...
		inc	si		; si++
		cmp	si, 0FFFFh	; si ==	FFFFh
		jnz	ISFFFFh?	; if (si !== FFFFh)

locret_0_180B:				; CODE XREF: ISFFFFh?+1Fj
		retn
ISFFFFh?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAWSOMETHING?	proc near		; CODE XREF: MONO+B1p
		push	ds
		push	es
		mov	bx, 0A000h
		mov	ax, word ptr sub_0_D703+1
		mov	di, 1440h	; Este es el tama�o de la vista	3D
		mov	si, 0
		jmp	short loc_0_182C
DRAWSOMETHING?	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAWSOMETHING2?	proc near		; CODE XREF: MONO+28p
		push	ds
		push	es
		mov	ax, 0A000h
		mov	bx, word ptr sub_0_D703+1
		mov	si, 1440h	; Tama�o de la vista 3D
		mov	di, 0

loc_0_182C:				; CODE XREF: DRAWSOMETHING?+Ej
		mov	bp, 0C0h ; '�'
		mov	dx, 64h	; 'd'
		mov	es, bx
		assume es:nothing
		mov	ds, ax
		assume ds:nothing
		call	COPY_BLOCK
		pop	es
		assume es:nothing
		pop	ds
		retn
DRAWSOMETHING2?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPYVIEW	proc near		; CODE XREF: DRAWVIEW+1Ep sub_0_550F+194p
					; ...
		cmp	byte ptr ds:6BD4h, 1
		jnz	loc_0_1849
		nop
		nop
		nop
		call	WAITFLY

loc_0_1849:				; CODE XREF: COPYVIEW+5j
		mov	si, 0
COPYVIEW	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAWSOMETHING3?	proc near		; CODE XREF: SCROLL_VIEW_UP+13p
					; SCROLL_VIEW_DN+1Ap
		push	es
		push	ds
		mov	bp, ds:2630h
		mov	di, ds:2632h
		mov	bx, ds:262Eh
		mov	ax, 0A000h
		mov	cx, ds:0D704h
		mov	ds, cx
		mov	es, ax
		assume es:nothing
		mov	ax, 140h
		sub	ax, bp
		sar	bp, 1

loc_0_186C:				; CODE XREF: DRAWSOMETHING3?+29j
		mov	cx, bp
		rep movsw
		add	si, ax
		add	di, ax
		dec	bx
		jnz	loc_0_186C
		pop	ds
		pop	es
		assume es:nothing
		retn
DRAWSOMETHING3?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CLEARVIEW	proc near		; CODE XREF: OPENDOOR+3Dp CONTROLLER+B9Fp
					; ...
		mov	di, ds:2632h
		mov	dx, ds:262Eh
		mov	bp, ds:2630h
		push	es
		mov	bx, 0A000h	; Escribimos en	la direcci�n de	la VGA
		mov	es, bx
		assume es:nothing
		call	BOX		; Llamamos a la	funci�n	BOX
		pop	es
		assume es:nothing
		retn
CLEARVIEW	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CLEARBORDER	proc near		; CODE XREF: seg000:91D9p seg000:94E7p
					; ...
		mov	dx, 7F1h
		mov	bp, 3E80h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		mov	di, 30h	; '0'
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		call	near ptr EXP_IFF
		pop	es
		retn
CLEARBORDER	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CLEARSHOPBOX	proc near		; CODE XREF: SHOP+16Bp	SHOP+336p
					; ...
		mov	di, 578h
		mov	dx, 7Ch	; '|'
		mov	bp, 94h	; '�'
		push	es
		mov	bx, 0A000h
		mov	es, bx
		assume es:nothing
		call	BOX
		pop	es
		assume es:nothing
		retn
CLEARSHOPBOX	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CLEARUNDERMAP	proc near		; CODE XREF: seg000:932Bp seg000:937Ep
		mov	bp, 6Ch	; 'l'
		mov	dx, 18h
		mov	si, 8278h
		mov	di, si
		call	COPY_BLOCK_2V
		retn
CLEARUNDERMAP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BOX		proc near		; CODE XREF: CLEARVIEW+12p
					; CLEARSHOPBOX+Fp ...
		test	bp, 1
		jnz	loc_0_18EF
		nop
		nop
		nop
		shr	bp, 1
		mov	ah, al

loc_0_18DF:				; CODE XREF: BOX+1Aj
		mov	cx, bp
		rep stosw
		sub	di, bp
		sub	di, bp
		add	di, 140h
		dec	dx
		jnz	loc_0_18DF
		retn
;����������������������������������������������������������������������������

loc_0_18EF:				; CODE XREF: BOX+4j BOX+28j
		mov	cx, bp
		rep stosb
		sub	di, bp
		add	di, 140h	; 140h = 200
		dec	dx
		jnz	loc_0_18EF
		retn
BOX		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SCROLL_VIEW_UP	proc near		; CODE XREF: sub_0_49FD+3EFp
					; CHANGELEVEL+DEp ...
		mov	si, 0
		mov	cx, ds:262Eh
		sar	cx, 1
		sar	cx, 1
		call	WAITFLY
		call	WAITFLY

loc_0_190E:				; CODE XREF: SCROLL_VIEW_UP+1Cj
		push	cx
		push	si
		call	DRAWSOMETHING3?
		pop	si
		pop	cx
		add	si, 500h
		loop	loc_0_190E
		retn
SCROLL_VIEW_UP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SCROLL_VIEW_DN	proc near		; CODE XREF: sub_0_49FD+3FEp
					; CHANGELEVEL+EAp
		mov	ax, ds:262Eh
		mov	dx, 140h
		mul	dx
		mov	si, ax
		mov	cx, ds:262Eh
		sar	cx, 1
		sar	cx, 1
		call	WAITFLY
		call	WAITFLY

loc_0_1934:				; CODE XREF: SCROLL_VIEW_DN+23j
		push	cx
		push	si
		call	DRAWSOMETHING3?
		pop	si
		pop	cx
		sub	si, 500h
		loop	loc_0_1934
		retn
SCROLL_VIEW_DN	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BLACK_OVER_IMAGE proc near		; CODE XREF: sub_0_49FD+3FBp
					; CHANGELEVEL+DBp
		call	COPYUNDER
		mov	ax, 0
		mov	di, 0
		mov	dx, ds:262Eh
		mov	bp, ds:2630h
		push	es
		mov	bx, ds:0D704h
		mov	es, bx
		call	BOX
		pop	es
		retn
BLACK_OVER_IMAGE endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BLACK_UNDER_IMAGE proc near		; CODE XREF: sub_0_49FD+3ECp
					; CHANGELEVEL+E7p ...
		mov	ax, ds:262Eh
		mov	dx, 140h
		mul	dx
		mov	di, ax
		mov	dx, ds:262Eh
		mov	bp, ds:2630h
		push	es
		mov	bx, ds:0D704h
		mov	es, bx
		mov	ax, 0
		call	BOX
		pop	es
		retn
BLACK_UNDER_IMAGE endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPYUNDER	proc near		; CODE XREF: BLACK_OVER_IMAGEp
		mov	ax, ds:262Eh
		mov	dx, 140h
		mul	dx
		mov	di, ax
		mov	bp, ds:2630h
		mov	dx, ds:262Eh
		mov	si, 0
		call	COPY_BLOCK_22
		retn
COPYUNDER	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

OPENDOOR	proc near		; CODE XREF: sub_0_49FD+389p
		mov	ax, ds:262Eh
		mov	dx, 140h
		mul	dx
		mov	di, ax
		mov	si, ds:2632h
		push	ds
		push	es
		mov	bp, ds:2630h
		mov	dx, ds:262Eh
		mov	ax, ds:0D704h
		mov	bx, 0A000h
		mov	es, ax
		mov	ds, bx
		assume ds:nothing
		call	COPY_BLOCK
		pop	es
		pop	ds
		assume ds:nothing
		mov	word ptr ds:3776h, 0
		call	MAKEVIEW
		cmp	word ptr ds:5AC9h, 1
		jz	loc_0_1A2D
		nop
		nop
		nop
		mov	ax, 0
		call	CLEARVIEW
		mov	ax, ds:2630h
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		mov	cx, ax
		mov	bp, ds:262Eh
		mov	di, ds:2632h
		add	di, ds:2630h
		sub	di, 8
		mov	si, ds:2630h
		sub	si, 8
		push	es
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		push	ds
		mov	ax, ds:0D704h
		mov	ds, ax

loc_0_1A06:				; CODE XREF: OPENDOOR+8Fj
		push	cx
		push	di
		push	si
		mov	cx, bp

loc_0_1A0B:				; CODE XREF: OPENDOOR+7Ej
		movsw
		movsw
		movsw
		movsw
		add	di, 138h
		add	si, 138h
		loop	loc_0_1A0B
		mov	cx, 1
		call	PAUSE
		pop	si
		pop	di
		pop	cx
		sub	si, 8
		sub	di, 8
		loop	loc_0_1A06
		pop	ds
		pop	es
		assume es:nothing
		retn
;����������������������������������������������������������������������������

loc_0_1A2D:				; CODE XREF: OPENDOOR+35j
		mov	ax, ds:2630h
		sar	ax, 1
		mov	ds:22D0h, ax
		mov	word ptr ds:22D2h, 0
		mov	ds:22D4h, ax
		mov	ds:22D6h, ax
		mov	ax, ds:262Eh
		mov	dx, 140h
		mul	dx
		add	ds:22D2h, ax
		add	ds:22D6h, ax

loc_0_1A51:				; CODE XREF: OPENDOOR+14Dj
		push	ds
		push	es
		mov	bp, ds:2630h
		mov	dx, ds:262Eh
		mov	ax, ds:0D704h
		mov	bx, ds:0D702h
		mov	es, bx
		mov	ds, ax
		mov	si, 0
		mov	di, 0
		call	COPY_BLOCK
		pop	es
		pop	ds
		push	ds
		push	es
		mov	bp, ds:22D0h
		mov	dx, ds:262Eh
		mov	si, ds:22D2h
		mov	di, 0
		mov	ax, ds:0D704h
		mov	bx, ds:0D702h
		mov	es, bx
		mov	ds, ax
		call	COPY_BLOCK
		pop	es
		pop	ds
		push	ds
		push	es
		mov	bp, ds:22D0h
		mov	dx, ds:262Eh
		mov	si, ds:22D6h
		mov	di, ds:22D4h
		mov	ax, ds:0D704h
		mov	bx, ds:0D702h
		mov	es, bx
		mov	ds, ax
		call	COPY_BLOCK
		pop	es
		pop	ds
		push	ds
		push	es
		mov	bp, ds:2630h
		mov	dx, ds:262Eh
		mov	si, 0
		mov	di, ds:2632h
		mov	ax, 0A000h
		mov	bx, ds:0D702h
		mov	es, ax
		assume es:nothing
		mov	ds, bx
		call	COPY_BLOCK
		pop	es
		assume es:nothing
		pop	ds
		add	word ptr ds:22D2h, 4
		add	word ptr ds:22D4h, 4
		sub	word ptr ds:22D0h, 4
		jle	locret_0_1AE9
		jmp	loc_0_1A51
;����������������������������������������������������������������������������

locret_0_1AE9:				; CODE XREF: OPENDOOR+14Bj
		retn
OPENDOOR	endp

;����������������������������������������������������������������������������
		db 0BEh	; �
		db  3Ch	; <
		db  26h	; &
		db  8Bh	; �
		db  1Eh	;
		db  50h	; P
		db  26h	; &
		db  83h	; �
		db 0C3h	; �
		db    6	;
		db  83h	; �
		db  38h	; 8
		db 0FFh	; �
		db  75h	; u
		db    6	;
		db  90h	; �
		db  90h	; �
		db  90h	; �
		db 0BBh	; �
		db    0	;
		db    0	;

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SIZEOK		proc near		; CODE XREF: sub_0_6C64+2CDp
		mov	ds:2650h, bx
		mov	ax, [bx+si]
		mov	ds:262Eh, ax
		mov	ax, [bx+si+2]
		mov	ds:2630h, ax
		mov	ax, [bx+si+4]
		mov	ds:2632h, ax
		call	GETBORDER
		mov	di, 48F4h
		mov	si, 5D5Fh
		call	TPPANDP
		call	CALCVIEWPARMS
		call	SETRATES
		retn
SIZEOK		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GETBORDER	proc near		; CODE XREF: SIZEOK+15p CONTROLLER+BE4p
					; ...
		mov	dx, 1F5h
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	EXP_DP
		call	COPYVIEWBORDER
		retn
GETBORDER	endp

;����������������������������������������������������������������������������
		db 0B9h	; �
		db  28h	; (
		db    0	;
		db 0E8h	; �
		db  7Bh	; {
		db 0EAh	; �
		db 0C3h	; �

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPYVIEWBORDER	proc near		; CODE XREF: GETBORDER+13p
					; sub_0_AD2E+17p
		mov	bp, 0E0h ; '�'
		mov	dx, 84h	; '�'
		mov	si, 30h	; '0'
		mov	di, si
		call	COPY_BLOCK_2V
		retn
COPYVIEWBORDER	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CLEARLOCWIN	proc near		; CODE XREF: SPELLEFFECT+16p
					; SPELLEFFECT+A1p ...
		push	es
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 0Ch
		mov	bp, 68h	; 'h'
		mov	bx, 140h
		sub	bx, bp
		sub	bx, bp
		mov	di, 93B8h
		mov	ax, 0

loc_0_1B6D:				; CODE XREF: CLEARLOCWIN+20j
		mov	cx, bp
		rep stosw
		add	di, bx
		dec	dx
		jnz	loc_0_1B6D
		pop	es
		assume es:nothing
		retn
CLEARLOCWIN	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPY_BLOCK	proc near		; CODE XREF: CLEARTWIN+33p
					; DRAWSOMETHING2?+19p
					; ...
		mov	ax, 140h
		sub	ax, bp
		sar	bp, 1

loc_0_1B7F:				; CODE XREF: COPY_BLOCK+10j
		mov	cx, bp
		rep movsw
		add	si, ax
		add	di, ax
		dec	dx
		jnz	loc_0_1B7F
		retn
COPY_BLOCK	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPY_BLOCKM	proc near		; CODE XREF: sub_0_CDC9+44p
					; COPY_BLOCKM_22+9p ...
		mov	bx, 140h
		sub	bx, bp

loc_0_1B90:				; CODE XREF: COPY_BLOCKM+1Aj
		mov	cx, bp

loc_0_1B92:				; CODE XREF: COPY_BLOCKM+13j
		lodsb
		cmp	al, 0
		jz	loc_0_1B9D
		nop
		nop
		nop
		mov	es:[di], al

loc_0_1B9D:				; CODE XREF: COPY_BLOCKM+Aj
		inc	di
		loop	loc_0_1B92
		add	si, bx
		add	di, bx
		dec	dx
		jnz	loc_0_1B90
		retn
COPY_BLOCKM	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BLITPUBORD	proc near		; CODE XREF: SHOP+393p	SHOP+499p
					; ...
		push	bx
		push	di
		mov	ah, al
		sub	di, 141h
		mov	dx, 12h
		mov	bp, 12h
		push	es
		mov	bx, 0A000h
		mov	es, bx
		assume es:nothing
		call	BOX
		pop	es
		assume es:nothing
		pop	di
		pop	bx
BLITPUBORD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BLITPICKUP	proc near		; CODE XREF: INVENTORY+44p
					; sub_0_62E7+7p ...
		push	ds
		push	es
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		cmp	bx, 0
		jnz	loc_0_1BE8
		nop
		nop
		nop
		mov	ax, 0
		mov	dx, 10h

loc_0_1BD7:				; CODE XREF: BLITPICKUP+1Fj
		mov	cx, 8
		rep stosw
		add	di, 130h
		dec	dx
		jnz	loc_0_1BD7
		pop	es
		assume es:nothing
		pop	ds
		jmp	short locret_0_1C3C
;����������������������������������������������������������������������������
		nop

loc_0_1BE8:				; CODE XREF: BLITPICKUP+Aj
		mov	si, [bx+15h]
		mov	bx, [bx+19h]
		mov	ax, ds:0D708h
		mov	ds, ax
		mov	bp, 10h
		cmp	bl, 0
		mov	dl, bh
		mov	dh, bh
		jz	loc_0_1C23
		nop
		nop
		nop

loc_0_1C02:				; CODE XREF: BLITPICKUP+5Aj
		mov	cx, 8

loc_0_1C05:				; CODE XREF: BLITPICKUP+4Fj
		lodsw
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		add	ax, dx
		stosw
		loop	loc_0_1C05
		add	si, 130h
		add	di, 130h
		dec	bp
		jnz	loc_0_1C02
		pop	es
		pop	ds
		jmp	short locret_0_1C3C
;����������������������������������������������������������������������������
		nop

loc_0_1C23:				; CODE XREF: BLITPICKUP+3Bj
					; BLITPICKUP+76j
		mov	cx, 8

loc_0_1C26:				; CODE XREF: BLITPICKUP+6Bj
		lodsw
		and	ax, 0F0Fh
		add	ax, dx
		stosw
		loop	loc_0_1C26
		add	si, 130h
		add	di, 130h
		dec	bp
		jnz	loc_0_1C23
		pop	es
		pop	ds

locret_0_1C3C:				; CODE XREF: BLITPICKUP+23j
					; BLITPICKUP+5Ej
		retn
BLITPICKUP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPY_BLOCK_HINIB proc near		; CODE XREF: SPELLEFFECT+2Fp
					; SPELLEFFECT+49p ...
		mov	ah, al
		mov	bx, 140h
		sub	bx, bp

loc_0_1C44:				; CODE XREF: COPY_BLOCK_HINIB+1Cj
		mov	cx, bp

loc_0_1C46:				; CODE XREF: COPY_BLOCK_HINIB+15j
		lodsb
		shr	al, 1
		shr	al, 1
		shr	al, 1
		shr	al, 1
		add	al, ah
		stosb
		loop	loc_0_1C46
		add	si, bx
		add	di, bx
		dec	dx
		jnz	loc_0_1C44
		retn
COPY_BLOCK_HINIB endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPY_BLOCK_LONIB proc near		; CODE XREF: sub_0_7878+27p
					; OKPAD+27p ...
		mov	ah, al
		mov	bx, 140h
		sub	bx, bp

loc_0_1C63:				; CODE XREF: COPY_BLOCK_LONIB+16j
		mov	cx, bp

loc_0_1C65:				; CODE XREF: COPY_BLOCK_LONIB+Fj
		lodsb
		and	al, 0Fh
		add	al, ah
		stosb
		loop	loc_0_1C65
		add	si, bx
		add	di, bx
		dec	dx
		jnz	loc_0_1C63
		retn
COPY_BLOCK_LONIB endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPY_BLOCK_LONIBM proc near		; CODE XREF: PRINTOI+39p sub_0_DF76+4Ap
		mov	ah, al
		mov	bx, 140h
		sub	bx, bp

loc_0_1C7C:				; CODE XREF: COPY_BLOCK_LONIBM+1Fj
		mov	cx, bp

loc_0_1C7E:				; CODE XREF: COPY_BLOCK_LONIBM+18j
		lodsb
		and	al, 0Fh
		jnz	loc_0_1C8A
		nop
		nop
		nop
		inc	di
		jmp	short loc_0_1C8D
;����������������������������������������������������������������������������
		nop

loc_0_1C8A:				; CODE XREF: COPY_BLOCK_LONIBM+Cj
		add	al, ah
		stosb

loc_0_1C8D:				; CODE XREF: COPY_BLOCK_LONIBM+12j
		loop	loc_0_1C7E
		add	si, bx
		add	di, bx
		dec	dx
		jnz	loc_0_1C7C
		retn
COPY_BLOCK_LONIBM endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MONO		proc near		; CODE XREF: sub_0_550F+73p
		mov	word ptr ds:23C1h, 3
		mov	word ptr ds:23BFh, 0Ch
		mov	byte ptr ds:23BEh, 10h
		jmp	short loc_0_1CBF
;����������������������������������������������������������������������������
		nop
		mov	word ptr ds:23C1h, 8
		mov	word ptr ds:23BFh, 6
		mov	byte ptr ds:23BEh, 0A0h	; '�'
		jmp	short loc_0_1CBF
;����������������������������������������������������������������������������
		nop

loc_0_1CBF:				; CODE XREF: MONO+11j MONO+25j
		call	DRAWSOMETHING2?
		call	COPYPAL
		push	ds
		mov	ax, ds:0D702h
		mov	ds, ax
		mov	si, 0
		mov	di, 0
		mov	cx, 100h

loc_0_1CD4:				; CODE XREF: MONO+86j
		mov	al, [si]
		mov	ah, 0
		mov	dx, 1Eh
		mul	dx
		mov	bx, 64h	; 'd'
		div	bx
		mov	bp, ax
		mov	al, [si+1]
		mov	ah, 0
		mov	dx, 3Bh	; ';'
		mul	dx
		mov	bx, 64h	; 'd'
		div	bx
		add	bp, ax
		mov	al, [si+2]
		mov	ah, 0
		mov	dx, 0Bh
		mul	dx
		mov	bx, 64h	; 'd'
		div	bx
		add	bp, ax
		mov	ax, 0Ch
		mul	bp
		mov	bp, 3Fh	; '?'
		div	bp
		add	ax, 3
		add	al, 10h
		mov	[di], al
		add	di, 1
		add	si, 3
		loop	loc_0_1CD4
		pop	ds
		push	ds
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ax, ds:0D702h
		mov	ds, ax
		mov	dx, 64h	; 'd'
		mov	bx, 0
		mov	di, 0

loc_0_1D35:				; CODE XREF: MONO+ADj
		mov	cx, 0C0h ; '�'

loc_0_1D38:				; CODE XREF: MONO+A6j
		mov	al, es:[di]
		xlat
		stosb
		loop	loc_0_1D38
		add	di, 80h	; '�'
		dec	dx
		jnz	loc_0_1D35
		pop	es
		pop	ds
		call	DRAWSOMETHING?
		retn
MONO		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MONOFADE	proc near		; CODE XREF: sub_0_550F+197p
		call	PICFADE2
		retn
MONOFADE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PICFADE2	proc near		; CODE XREF: MONOFADEp	PRINTMAP+15p
					; ...
		push	ds
		push	es
		mov	ax, 0A000h
		mov	ds, ax
		assume ds:nothing
		mov	es, ax
		assume es:nothing
		mov	bx, 8

loc_0_1D5C:				; CODE XREF: PICFADE2+39j
		call	WAITFLY
		call	WAITFLY
		mov	ax, 0
		mov	bp, 64h	; 'd'
		mov	di, 1440h
		mov	si, di
		inc	si

loc_0_1D6E:				; CODE XREF: PICFADE2+36j
		push	si
		push	di
		mov	cx, 18h

loc_0_1D73:				; CODE XREF: PICFADE2+29j
		movsw
		movsw
		movsw
		movsb
		stosb
		inc	si
		loop	loc_0_1D73
		pop	di
		pop	si
		add	si, 140h
		add	di, 140h
		dec	bp
		jnz	loc_0_1D6E
		dec	bx
		jnz	loc_0_1D5C
		pop	es
		assume es:nothing
		pop	ds
		assume ds:nothing
		mov	cx, 14h
		call	PAUSE
		retn
PICFADE2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PICRAISE2	proc near		; CODE XREF: CONTROLLER+825p
					; SHOWPIC1+Bp ...
		push	ds
		push	es
		mov	ax, ds:0D704h
		mov	ds, ax
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	bx, 1
		mov	ax, 7

loc_0_1DA6:				; CODE XREF: PICRAISE2+49j
		push	ax
		call	WAITFLY
		call	WAITFLY
		pop	ax
		mov	bp, 64h	; 'd'
		mov	di, 1440h
		mov	si, 0
		add	di, ax
		add	si, ax

loc_0_1DBB:				; CODE XREF: PICRAISE2+42j
		push	si
		push	di
		mov	dx, 18h

loc_0_1DC0:				; CODE XREF: PICRAISE2+35j
		mov	cx, bx
		rep movsb
		add	si, ax
		add	di, ax
		dec	dx
		jnz	loc_0_1DC0
		pop	di
		pop	si
		add	si, 140h
		add	di, 140h
		dec	bp
		jnz	loc_0_1DBB
		dec	ax
		inc	bx
		cmp	bx, 9
		jnz	loc_0_1DA6
		pop	es
		assume es:nothing
		pop	ds
		retn
PICRAISE2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

NEWFLOOR	proc near		; CODE XREF: MAKEVIEW+6p
		mov	bp, 0
		cmp	byte ptr ds:3784h, 0; FLOORATT
		jz	loc_0_1DF2
		nop
		nop
		nop
		mov	bp, 33h	; '3'

loc_0_1DF2:				; CODE XREF: NEWFLOOR+8j
		cmp	word ptr ds:22DAh, 0; FFLAG
		jnz	loc_0_1DFF
		nop
		nop
		nop
		mov	bp, 64h	; 'd'

loc_0_1DFF:				; CODE XREF: NEWFLOOR+15j
		cmp	word ptr ds:262Eh, 64h ; 'd'; XFACTOR
		jnz	loc_0_1E6C
		nop
		nop
		nop
		cmp	byte ptr ds:5E25h, 1; ENHANCED FLAG
		jnz	loc_0_1E56
		nop
		nop
		nop
		cmp	word ptr ds:3776h, 1; XRAYFLAG
		jz	DRAW_SKY_GND?
		nop
		nop
		nop
		cmp	byte ptr ds:3784h, 0; FLOORATT
		jnz	loc_0_1E41
		nop
		nop
		nop
		cmp	word ptr ds:0ADDh, 0FFFFh; HEROX
		jz	loc_0_1E4D
		nop
		nop
		nop
		cmp	word ptr ds:22DAh, 0; FLOOR FLAG
		jz	loc_0_1E41
		nop
		nop
		nop
		call	DRAW_SMTHNG?
		jmp	short loc_0_1E47
;����������������������������������������������������������������������������
		nop

loc_0_1E41:				; CODE XREF: NEWFLOOR+40j NEWFLOOR+54j
		mov	bp, 3Ch	; '<'
		call	DRAW_SMTHNG2?

loc_0_1E47:				; CODE XREF: NEWFLOOR+5Cj
		call	loc_0_20ED	; LASTLINEADD
		jmp	short locret_0_1E6B
;����������������������������������������������������������������������������
		nop

loc_0_1E4D:				; CODE XREF: NEWFLOOR+4Aj
		call	COPY_VIEWPORT
		call	loc_0_20ED	; LASTLINEADD
		jmp	short locret_0_1E6B
;����������������������������������������������������������������������������
		nop

loc_0_1E56:				; CODE XREF: NEWFLOOR+2Cj
		cmp	bp, 0
		jnz	loc_0_1E5E
		jmp	DRAW_SMTHNG?
;����������������������������������������������������������������������������

loc_0_1E5E:				; CODE XREF: NEWFLOOR+77j
		call	DRAW_SMTHNG2?
		cmp	word ptr ds:22DAh, 0; FLOORATT == 0
		jnz	loc_0_1E9B
		nop
		nop
		nop

locret_0_1E6B:				; CODE XREF: NEWFLOOR+68j NEWFLOOR+71j
					; ...
		retn
;����������������������������������������������������������������������������

loc_0_1E6C:				; CODE XREF: NEWFLOOR+22j
		cmp	byte ptr ds:3784h, 0; FLOORATT
		jz	loc_0_1E7C
		nop
		nop
		nop
		call	DRAW_SKY_GND?
		jmp	short loc_0_1E7F
;����������������������������������������������������������������������������
		nop

loc_0_1E7C:				; CODE XREF: NEWFLOOR+8Fj
		call	DRAW_SMTHNG?

loc_0_1E7F:				; CODE XREF: NEWFLOOR+97j
		cmp	byte ptr ds:5E25h, 1; ENHANCEDFLAG
		jnz	loc_0_1E96
		nop
		nop
		nop
		cmp	word ptr ds:3776h, 1; XRAYFLAG
		jz	loc_0_1E96
		nop
		nop
		nop
		call	loc_0_20ED	; LASTLINEADD

loc_0_1E96:				; CODE XREF: NEWFLOOR+A2j NEWFLOOR+ACj
		jmp	short locret_0_1E6B
NEWFLOOR	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAW_SKY_GND?	proc near		; CODE XREF: NEWFLOOR+36j NEWFLOOR+94p
		call	DRAW_SKY?

loc_0_1E9B:				; CODE XREF: NEWFLOOR+84j
		call	DRAW_GROUND?
		jmp	short locret_0_1E6B
DRAW_SKY_GND?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPY_VIEWPORT	proc near		; CODE XREF: NEWFLOOR+6Bp
		mov	bp, ds:2630h	; VIEWPORTW
		mov	bx, bp		; bx=bp
		sar	bp, 1		; bp >>=1
		mov	ax, ds:262Eh	; ax=VIEWPORTH
		sub	ax, ds:2618h	; ax-=HORIZONHT
		mov	cx, 140h	; cx=140h (200)
		imul	cx		; cx*=cx
		mov	di, ax		; di=ax
		add	bx, 140h	; bx=200
		mov	dx, ds:262Eh	; dx=VIEWPORTH
		sub	dx, ds:2618h	; dx-=HORIZONHT
		sub	dx, ds:2618h	; dx-=HORIZONHT
		inc	dx		; dx++
		mov	ax, 0		; ax=0

loc_0_1ECA:				; CODE XREF: COPY_VIEWPORT+31j
		mov	cx, bp
		rep stosw
		sub	di, bx
		dec	dx
		jnz	loc_0_1ECA
		retn
COPY_VIEWPORT	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAW_GROUND?	proc near		; CODE XREF: DRAW_SKY_GND?+3p
		mov	bp, ds:2630h
		sar	bp, 1		; 320 /	2
		mov	bx, 140h	; 200
		sub	bx, ds:2630h
		mov	si, 2652h
		mov	dx, ds:262Eh
		sar	dx, 1		; 200 /	2
		dec	dx
		mov	ax, ds:2628h	; GROUND COLOR?
		mov	di, ds:2622h
		add	di, 140h	; 200

loc_0_1EF6:				; CODE XREF: DRAW_GROUND?+2Ej
		mov	cx, bp
		rep stosw
		add	di, bx
		add	ax, [si]
		add	si, 2
		dec	dx
		jnz	loc_0_1EF6
		retn
DRAW_GROUND?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAW_SKY?	proc near		; CODE XREF: DRAW_SKY_GND?p
		mov	dx, ds:262Eh
		sar	dx, 1
		inc	dx
		mov	ax, ds:2626h
		add	ax, 707h	; 1799
		mov	bp, ds:2630h
		sar	bp, 1
		mov	di, ds:2622h
		mov	bx, 140h	; 200
		add	bx, ds:2630h
		mov	si, 2652h	; 9810

loc_0_1F26:				; CODE XREF: DRAW_SKY?+2Dj
		mov	cx, bp
		rep stosw
		sub	di, bx
		sub	ax, [si]
		add	si, 2
		dec	dx
		jnz	loc_0_1F26
		retn
DRAW_SKY?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAW_SMTHNG?	proc near		; CODE XREF: NEWFLOOR+59p NEWFLOOR+79j
					; ...
		mov	dx, ds:262Eh
		sar	dx, 1
		mov	bp, ds:2630h
		sar	bp, 1
		mov	di, 0
		mov	bx, 140h	; 200
		sub	bx, ds:2630h
		mov	ax, ds:262Ah

loc_0_1F4E:				; CODE XREF: DRAW_SMTHNG?+20j
		mov	cx, bp
		rep stosw
		add	di, bx
		dec	dx
		jnz	loc_0_1F4E
		mov	dx, ds:262Eh
		sar	dx, 1
		mov	ax, ds:262Ch
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_1F6D
		nop
		nop
		nop
		mov	ax, ds:262Ah

loc_0_1F6D:				; CODE XREF: DRAW_SMTHNG?+30j
					; DRAW_SMTHNG?+3Fj
		mov	cx, bp
		rep stosw
		add	di, bx
		dec	dx
		jnz	loc_0_1F6D
		retn
DRAW_SMTHNG?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAW_SMTHNG2?	proc near		; CODE XREF: NEWFLOOR+62p NEWFLOOR+7Cp
		mov	di, 0
		mov	ax, ds:0AD1h
		and	ax, 1Fh
		neg	ax
		add	ax, 1Fh
		mov	dx, 6
		push	ds
		push	es
		mov	cx, ds:0D704h
		mov	es, cx
		mov	cx, ds:0D70Ah
		mov	ds, cx
		mov	bx, bp
		mov	si, 0F020h
		sub	si, ax

loc_0_1F9D:				; CODE XREF: DRAW_SMTHNG2?+36j
		mov	cx, ax
		rep movsb
		add	di, 140h
		sub	di, ax
		add	si, 20h	; ' '
		sub	si, ax
		dec	bx
		jnz	loc_0_1F9D
		mov	di, ax

loc_0_1FB1:				; CODE XREF: DRAW_SMTHNG2?+51j
		mov	bx, bp
		mov	si, 0F000h
		push	di

loc_0_1FB7:				; CODE XREF: DRAW_SMTHNG2?+4Aj
		mov	cx, 10h
		rep movsw
		add	di, 120h
		dec	bx
		jnz	loc_0_1FB7
		pop	di
		add	di, 20h	; ' '
		dec	dx
		jnz	loc_0_1FB1
		pop	es
		pop	ds
		retn
DRAW_SMTHNG2?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MAKETILETABLES	proc near		; CODE XREF: CALCVIEWPARMS+94p
		mov	ax, ds:261Ah
		sar	ax, 1
		push	ax
		call	COSA
		mov	ds:25F2h, ax
		pop	ax
		call	SINA
		mov	ds:25F4h, ax
		mov	ax, ds:261Ch
		sar	ax, 1
		sub	ax, ds:2612h
		mov	dx, 0
		mov	dl, ah
		mov	ah, al
		mov	al, 0
		mov	cx, ds:2618h
		div	cx
		mov	ds:2602h, ax
		mov	word ptr ds:2604h, 0
		mov	dx, ds:262Eh
		sar	dx, 1
		mov	ax, ds:261Ch
		sar	ax, 1
		mov	bx, 23FCh
		mov	di, 24C4h

loc_0_2012:				; CODE XREF: MAKETILETABLES+A5j
		push	dx
		push	ax
		push	di
		push	bx
		push	ax
		call	SINA
		mov	bp, ax
		pop	ax
		call	COSA
		cwd
		mov	cx, ds:2614h
		mul	cx
		div	bp
		cwd
		mov	cx, 0Eh

loc_0_202D:				; CODE XREF: MAKETILETABLES+64j
		shl	ax, 1
		rcl	dx, 1
		loop	loc_0_202D
		mov	bx, ds:25F2h
		div	bx
		pop	bx
		mov	[bx], ax
		mov	dx, ds:25F4h
		mul	dx
		mov	cx, 5

loc_0_2045:				; CODE XREF: MAKETILETABLES+7Cj
		shr	dx, 1
		rcr	ax, 1
		loop	loc_0_2045
		mov	cx, ds:2630h
		div	cx
		pop	di
		mov	[di], ax
		pop	ax
		mov	dx, ds:2602h
		add	ds:2604h, dx
		mov	dl, ds:2605h
		mov	byte ptr ds:2605h, 0
		mov	dh, 0
		sub	ax, dx
		pop	dx
		add	bx, 2
		add	di, 2
		dec	dx
		jnz	loc_0_2012
		retn
MAKETILETABLES	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADTILE	proc near		; CODE XREF: CONTROLLER+C33p
					; seg000:4F7Ap	...
		cmp	dx, 3ADh
		jnz	loc_0_208B
		nop
		nop
		nop
		cmp	word ptr ds:5ABDh, 1
		jnz	loc_0_208B
		nop
		nop
		nop
		mov	dx, 3E7h

loc_0_208B:				; CODE XREF: LOADTILE+4j LOADTILE+Ej
		mov	ds:260Eh, dx
		push	dx
		mov	ax, 0
		call	DRAW_TILE?
		pop	dx
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	locret_0_20BC
		nop
		nop
		nop
		cmp	dx, 42Fh
		jz	loc_0_20B6
		nop
		nop
		nop
		cmp	dx, 447h
		jz	loc_0_20B6
		nop
		nop
		nop
		mov	dx, 3DBh

loc_0_20B6:				; CODE XREF: LOADTILE+30j LOADTILE+39j
		mov	ax, 40h	; '@'
		call	DRAW_TILE?

locret_0_20BC:				; CODE XREF: LOADTILE+27j
		retn
LOADTILE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAW_TILE?	proc near		; CODE XREF: LOADTILE+1Ep LOADTILE+44p
		push	ax
		mov	di, 0
		mov	ax, ds:0D704h
		call	LOADPAD
		pop	di
		push	ds
		push	es
		mov	ax, ds:0D718h
		mov	es, ax
		mov	ax, ds:0D704h
		mov	ds, ax
		mov	dx, 40h	; '@'   ; 64
		mov	si, 0

loc_0_20DA:				; CODE XREF: DRAW_TILE?+2Bj
		mov	cx, 20h	; ' '
		rep movsw
		add	si, 100h	; 256
		add	di, 0C0h ; '�'  ; 192
		dec	dx
		jnz	loc_0_20DA
		pop	es
		pop	ds
		retn
DRAW_TILE?	endp

;����������������������������������������������������������������������������

loc_0_20ED:				; CODE XREF: NEWFLOOR+65p NEWFLOOR+6Ep
					; ...
		mov	ax, ds:2624h	; LASTLINEADD
		mov	ds:2606h, ax
		mov	ax, ds:0AD1h
		mov	dx, ds:261Ah	; XCONE
		sar	dx, 1
		sub	ax, dx
		jge	loc_0_2106
		nop
		nop
		nop
		add	ax, 5A0h

loc_0_2106:				; CODE XREF: seg000:20FEj
		push	ax
		call	COSA
		mov	ds:25F6h, ax
		pop	ax
		call	SINA
		mov	ds:25F8h, ax
		mov	ax, ds:0AD1h
		add	ax, 168h
		cmp	ax, 5A0h
		jl	loc_0_2125
		nop
		nop
		nop
		sub	ax, 5A0h

loc_0_2125:				; CODE XREF: seg000:211Dj
		push	ax
		call	COSA
		mov	ds:25FAh, ax
		pop	ax
		call	SINA
		mov	ds:25FCh, ax
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_213D
		jmp	loc_0_21F9
;����������������������������������������������������������������������������

loc_0_213D:				; CODE XREF: seg000:2138j
		push	es
		mov	bx, ds:0D704h
		mov	es, bx
		mov	si, 23FCh
		mov	di, 24C4h
		mov	bp, ds:2618h

loc_0_214E:				; CODE XREF: seg000:21F0j
		push	bp
		mov	ax, ds:25F6h
		mov	dx, [si]
		imul	dx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		add	dx, ds:0ACDh
		mov	ds:2602h, dx
		mov	ax, ds:25F8h
		mov	dx, [si]
		imul	dx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		add	dx, ds:0ACFh
		mov	ds:2604h, dx
		mov	ax, ds:25FAh
		mov	dx, [di]
		imul	dx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		mov	ds:25FEh, dx
		mov	ax, ds:25FCh
		mov	dx, [di]
		imul	dx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		mov	ds:2600h, dx
		mov	ah, ds:2604h
		mov	dh, ds:2602h
		mov	al, 0
		mov	dl, 0
		mov	bp, ds:2600h
		mov	bx, ds:25FEh
		push	di
		push	si
		mov	di, ds:2606h
		mov	cx, ds:2630h
		push	ds
		mov	si, ds:0D718h
		mov	ds, si

loc_0_21C8:				; CODE XREF: seg000:21DBj
		add	ax, bp
		add	dx, bx
		push	ax
		mov	al, dh
		mov	si, ax
		pop	ax
		shr	si, 1
		shr	si, 1
		and	si, 3F3Fh
		movsb
		loop	loc_0_21C8
		pop	ds
		pop	si
		pop	di
		add	si, 2
		add	di, 2
		sub	word ptr ds:2606h, 140h; 200
		pop	bp
		dec	bp
		jz	loc_0_21F3
		jmp	loc_0_214E
;����������������������������������������������������������������������������

loc_0_21F3:				; CODE XREF: seg000:21EEj
		pop	es
		retn
;����������������������������������������������������������������������������
		db    0	;
		db    0	;
		db    0	;
		db    0	;
;����������������������������������������������������������������������������

loc_0_21F9:				; CODE XREF: seg000:213Aj
		mov	word ptr ds:2608h, 0
		push	es
		mov	bx, ds:0D704h
		mov	es, bx
		mov	si, 23FCh
		mov	di, 24C4h
		mov	bp, ds:2618h
		push	bp
		mov	bp, [di+0C8h]
		mov	ax, ds:25F6h
		mov	dx, [si]
		imul	dx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		add	dx, ds:0ACDh
		mov	ds:2602h, dx
		mov	ax, ds:25F8h
		mov	dx, [si]
		imul	dx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		add	dx, ds:0ACFh
		mov	ds:2604h, dx
		mov	ax, ds:25FAh
		mov	dx, [di]
		imul	dx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		mov	ds:25FEh, dx
		mov	ax, ds:25FCh
		mov	dx, [di]
		imul	dx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		mov	ds:2600h, dx
		mov	ah, ds:2604h
		mov	dh, ds:2602h
		mov	al, 0
		mov	dl, 0
		mov	bx, ds:2600h
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
		db  89h	; �
		db  1Eh	;
		db 0F7h	; �
		db  21h	; !
		db  8Bh	; �
		db  1Eh	;
		db 0FEh	; �
		db  25h	; %
		db  2Eh	; .
		db  2Eh	; .
		db  89h	; �
		db  1Eh	;
		db 0F5h	; �
		db  21h	; !
		db  57h	; W
		db  56h	; V
		db  8Bh	; �
		db  3Eh	; >
		db    6	;
		db  26h	; &
		db  8Bh	; �
		db  1Eh	;
		db    8	;
		db  26h	; &
		db  8Bh	; �
		db  0Eh	;
		db  30h	; 0
		db  26h	; &
		db  1Eh	;
		db  8Bh	; �
		db  36h	; 6
		db  18h	;
		db 0D7h	; �
		db  8Eh	; �
		db 0DEh	; �
		db  2Eh	; .
		db  2Eh	; .
		db    3	;
		db    6	;
		db 0F7h	; �
		db  21h	; !
		db  2Eh	; .
		db  2Eh	; .
		db    3	;
		db  16h	;
		db 0F5h	; �
		db  21h	; !
		db  50h	; P
		db  8Ah	; �
		db 0C6h	; �
		db 0D1h	; �
		db 0E8h	; �
		db 0D1h	; �
		db 0E8h	; �
		db  25h	; %
		db  3Fh	; ?
		db  3Fh	; ?
		db  8Bh	; �
		db 0F0h	; �
		db  8Ah	; �
		db  44h	; D
		db  40h	; @
		db    3	;
		db 0C5h	; �
		db  26h	; &
		db  88h	; �
		db    7	;
		db  43h	; C
		db  8Ah	; �
		db    4	;
		db    3	;
		db 0C5h	; �
		db  26h	; &
		db  88h	; �
		db    5	;
		db  47h	; G
		db  58h	; X
		db 0E2h	; �
		db 0D4h	; �
		db  1Fh	;
		db  5Eh	; ^
		db  5Fh	; _
		db  83h	; �
		db 0C6h	; �
		db    2	;
		db  83h	; �
		db 0C7h	; �
		db    2	;
		db  81h	; �
		db  2Eh	; .
		db    6	;
		db  26h	; &
		db  40h	; @
		db    1	;
		db  81h	; �
		db    6	;
		db    8	;
		db  26h	; &
		db  40h	; @
		db    1	;
		db  5Dh	; ]
		db  4Dh	; M
		db  74h	; t
		db    3	;
		db 0E9h	; �
		db  2Ah	; *
		db 0FFh	; �
		db    7	;
		db 0C3h	; �

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTMAP	proc near		; CODE XREF: CONTROLLER+343p
					; CONTROLLER+78Cp
		mov	byte ptr ds:0AECh, 0
		cmp	word ptr ds:0ADDh, 1
		jnz	loc_0_22FA
		nop
		nop
		nop
		call	LOADGMAP

loc_0_22FA:				; CODE XREF: PRINTMAP+Aj
		call	WAITMRELEASE
		call	PICFADE2
		mov	bp, ds:0ADDh
		push	es
		push	ds
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ax, ds:0D70Ch
		mov	ds, ax
		mov	di, 0
		mov	si, 0
		mov	bx, 80h	; '�'

loc_0_2319:				; CODE XREF: PRINTMAP+A2j
		push	si
		mov	cx, 55h	; 'U'

loc_0_231D:				; CODE XREF: PRINTMAP+96j
		cmp	bp, 0FFFFh
		jnz	loc_0_2336
		nop
		nop
		nop
		mov	al, 12h
		test	byte ptr [si+0AAh], 4
		jnz	loc_0_2333
		nop
		nop
		nop
		mov	al, 11h

loc_0_2333:				; CODE XREF: PRINTMAP+44j
		jmp	short loc_0_2371
;����������������������������������������������������������������������������
		nop

loc_0_2336:				; CODE XREF: PRINTMAP+38j
		mov	ah, [si]
		and	ah, 3
		mov	al, 11h
		cmp	ah, 1
		jz	loc_0_2347
		nop
		nop
		nop
		mov	al, 12h

loc_0_2347:				; CODE XREF: PRINTMAP+58j
		cmp	cx, 55h	; 'U'
		jnz	loc_0_2351
		nop
		nop
		nop
		mov	al, 2

loc_0_2351:				; CODE XREF: PRINTMAP+62j
		cmp	cx, 1
		jnz	loc_0_235B
		nop
		nop
		nop
		mov	al, 2

loc_0_235B:				; CODE XREF: PRINTMAP+6Cj
		cmp	si, 100h
		jg	loc_0_2366
		nop
		nop
		nop
		mov	al, 2

loc_0_2366:				; CODE XREF: PRINTMAP+77j
		cmp	si, 7F00h
		jl	loc_0_2371
		nop
		nop
		nop
		mov	al, 2

loc_0_2371:				; CODE XREF: PRINTMAP+4Bj PRINTMAP+82j
		mov	es:[di+0AAh], al
		mov	es:[di+0ABh], al
		stosb
		stosb
		inc	si
		loop	loc_0_231D
		pop	si
		add	si, 100h
		add	di, 0AAh ; '�'
		dec	bx
		jnz	loc_0_2319
		pop	ds
		pop	es
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, ds:0ADBh
		mov	al, ah
		mov	ah, 0
		sub	ax, 19h
		cmp	ax, 0
		jge	loc_0_23A8
		nop
		nop
		nop
		mov	ax, 0

loc_0_23A8:				; CODE XREF: PRINTMAP+B8j
		cmp	ax, 4Eh	; 'N'
		jl	loc_0_23B3
		nop
		nop
		nop
		mov	ax, 4Eh	; 'N'

loc_0_23B3:				; CODE XREF: PRINTMAP+C3j
		mov	ds:23AAh, ax

loc_0_23B6:				; CODE XREF: PRINTMAP+13Dj
		xor	word ptr ds:23ACh, 0F0Fh
		mov	ax, ds:0ADBh
		mov	cx, ax
		mov	ch, 0
		mov	al, ah
		mov	ah, 0
		mov	dx, 154h
		mul	dx
		add	ax, cx
		add	ax, cx
		mov	bx, ax
		mov	ax, ds:0D704h
		push	es
		mov	es, ax
		mov	ax, ds:23ACh
		mov	es:[bx], ax
		mov	es:[bx+0AAh], ax
		pop	es
		call	DRAW_SMTHNG3?
		cmp	word ptr ds:0F8h, 0
		jnz	loc_0_2427
		nop
		nop
		nop
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	loc_0_2427
		nop
		nop
		nop
		mov	ax, 0Bh
		int	33h		; - MS MOUSE - READ MOTION COUNTERS
					; Return: CX = number of mickeys mouse moved horizontally since	last call
					; DX = number of mickeys mouse moved vertically
		sar	dx, 1
		add	dx, ds:23AAh
		cmp	dx, 0
		jge	loc_0_2416
		nop
		nop
		nop
		mov	dx, 0

loc_0_2416:				; CODE XREF: PRINTMAP+126j
		cmp	dx, 4Eh	; 'N'
		jle	loc_0_2421
		nop
		nop
		nop
		mov	dx, 4Eh	; 'N'

loc_0_2421:				; CODE XREF: PRINTMAP+131j
		mov	ds:23AAh, dx
		jmp	short loc_0_23B6
;����������������������������������������������������������������������������

loc_0_2427:				; CODE XREF: PRINTMAP+104j
					; PRINTMAP+113j
		cmp	word ptr ds:0ADDh, 1
		jnz	loc_0_2434
		nop
		nop
		nop
		call	LOADFMAP

loc_0_2434:				; CODE XREF: PRINTMAP+144j
		call	BACKTOGAME
		call	MOUSEFORGAME
		call	WAITRELEASE
		mov	byte ptr ds:0AECh, 1
		retn
PRINTMAP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAW_SMTHNG3?	proc near		; CODE XREF: PRINTMAP+FCp
		mov	ax, ds:23AAh
		mov	dx, 154h
		mul	dx
		mov	si, ax
		mov	di, 144Bh
		push	es
		push	ds
		mov	ax, ds:0D704h
		mov	ds, ax
		mov	ax, 0A000h	; VGA
		mov	es, ax
		assume es:nothing
		mov	bx, 64h	; 'd'

loc_0_245F:				; CODE XREF: DRAW_SMTHNG3?+26j
		mov	cx, 55h	; 'U'
		rep movsw
		add	di, 96h	; '�'
		dec	bx
		jnz	loc_0_245F
		pop	ds
		pop	es
		assume es:nothing
		retn
DRAW_SMTHNG3?	endp

;����������������������������������������������������������������������������
		db 0C3h	; �

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAWFIST	proc near		; CODE XREF: DRAWVIEW+1Bp
		push	ax
		mov	si, 22DCh
		cmp	word ptr ds:2650h, 0
		jz	loc_0_248D
		nop
		nop
		nop
		add	si, 2
		cmp	word ptr ds:2650h, 6
		jz	loc_0_248D
		nop
		nop
		nop
		add	si, 2

loc_0_248D:				; CODE XREF: DRAWFIST+9j DRAWFIST+16j
		mov	si, [si]
		mov	dx, 0
		pop	ax
		cmp	ax, 0
		jz	loc_0_24A9
		nop
		nop
		nop
		mov	dx, 12h
		cmp	ax, 1
		jz	loc_0_24A9
		nop
		nop
		nop
		add	dx, 12h

loc_0_24A9:				; CODE XREF: DRAWFIST+27j DRAWFIST+32j
		add	si, dx
		call	STRETCHER
		retn
DRAWFIST	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

STRETCHER	proc near		; CODE XREF: DRAWFIST+3Cp sub_0_E05A+B5p
		mov	ax, [si]
		xchg	ah, al
		mov	ds:23A2h, ax
		mov	ax, [si+2]
		xchg	ah, al
		mov	ds:23A0h, ax
		mov	ax, [si+4]
		mov	ds:23A4h, ax
		mov	ax, [si+6]
		mov	ds:23A6h, ax
		mov	ax, [si+8]
		mov	ds:2386h, ax
		add	ax, [si+0Ch]
		mov	ds:2388h, ax
		mov	ax, [si+0Ah]
		mov	ds:238Ah, ax
		add	ax, [si+0Eh]
		mov	ds:238Ch, ax
		mov	ax, [si+0Ch]
		mov	ds:2396h, ax
		mov	ax, [si+0Eh]
		mov	ds:2394h, ax
		mov	ax, [si+10h]
		mov	ds:23A8h, ax
		mov	si, 2384h
		call	SPRITER
		retn
STRETCHER	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPYPAL		proc near		; CODE XREF: MONO+2Bp sub_0_7720+1Bp
					; ...
		mov	dx, ds:0D702h
		mov	bp, 0
COPYPAL		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPYPAL2	proc near		; CODE XREF: SAVE_IFF+65p FLIPBIT1+14p
		push	dx
		call	WAITFLY
		pop	dx
		mov	al, 17h
		mov	ah, 10h
		mov	bx, 0
		mov	cx, 100h
		push	es
		mov	es, dx
		mov	dx, bp
		int	10h		; - VIDEO - READ BLOCK OF DAC REGISTERS	(EGA, VGA/MCGA)
					; BX = starting	palette	register, CX = number of palette registers to read
					; ES:DX	-> buffer (3 * CX bytes	in size)
					; Return: CX number of red, green and blue triples in buffer
		pop	es
		retn
COPYPAL2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPYSCREEN	proc near		; CODE XREF: LOADANDSHOW+26p
					; sub_0_7053+455p ...
		push	ds
		push	es
		mov	ds, si
		mov	es, di
		mov	di, 0
		mov	si, 0
		mov	cx, 7D00h
		rep movsw
		pop	es
		pop	ds
		retn
COPYSCREEN	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SAVE_IFF	proc near		; CODE XREF: CONTROLLER+719p
		push	es
		push	ds
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ax, 0A000h
		mov	ds, ax
		assume ds:nothing
		mov	bp, 0C8h ; '�'
		mov	di, 338h
		mov	si, 0

loc_0_2543:				; CODE XREF: SAVE_IFF+38j
		mov	cx, 28h	; '('

loc_0_2546:				; CODE XREF: SAVE_IFF+31j
		mov	dx, 8

loc_0_2549:				; CODE XREF: SAVE_IFF+2Ej
		mov	bx, 0

loc_0_254C:				; CODE XREF: SAVE_IFF+2Aj
		ror	byte ptr [si], 1
		rcl	byte ptr es:[bx+di], 1
		add	bx, 28h	; '('
		cmp	bx, 140h
		jnz	loc_0_254C
		inc	si
		dec	dx
		jnz	loc_0_2549
		inc	di
		loop	loc_0_2546
		add	di, 118h
		dec	bp
		jnz	loc_0_2543
		pop	ds
		assume ds:nothing
		pop	es
		push	ds
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	si, 23C3h
		mov	di, 0
		mov	cx, 30h	; '0'
		rep movsb
		add	di, 300h
		mov	cx, 8
		rep movsb
		pop	es
		pop	ds
		assume ds:nothing
		mov	dx, ds:0D702h
		mov	bp, 7D0h
		call	COPYPAL2
		push	ds
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ax, ds:0D702h
		mov	ds, ax
		mov	si, 7D0h
		mov	di, 30h	; '0'
		mov	cx, 300h

loc_0_25AB:				; CODE XREF: SAVE_IFF+83j
		lodsb
		shl	al, 1
		shl	al, 1
		stosb
		loop	loc_0_25AB
		pop	es
		pop	ds
		mov	dx, 23AEh
		mov	si, 0
		mov	di, ds:0D704h
		mov	bp, 0FD38h
		call	SAVE_FILE
		retn
SAVE_IFF	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SPELLEFFECT	proc near		; CODE XREF: sub_0_5D62+79p
					; sub_0_5D62+13Fp ...
		push	es
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, 93B8h
		mov	ds:23BAh, ax
		mov	ax, 9478h
		mov	ds:23BCh, ax
		mov	cx, 9

loc_0_25DB:				; CODE XREF: SPELLEFFECT+61j
		push	cx
		call	CLEARLOCWIN
		mov	si, 0E0h ; '�'
		mov	di, ds:23BAh
		mov	bp, 10h
		mov	dx, 0Ch
		push	ds
		mov	ax, ds:0D708h
		mov	ds, ax
		mov	ax, 0
		call	COPY_BLOCK_HINIB
		pop	ds
		mov	si, 0F0h ; '�'
		mov	di, ds:23BCh
		mov	bp, 10h
		mov	dx, 0Ch
		push	ds
		mov	ax, ds:0D708h
		mov	ds, ax
		mov	ax, 0
		call	COPY_BLOCK_HINIB
		pop	ds
		call	WAITFLY
		call	WAITFLY
		call	WAITFLY
		add	word ptr ds:23BAh, 0Bh
		sub	word ptr ds:23BCh, 0Bh
		pop	cx
		loop	loc_0_25DB
		push	es
		mov	ax, 13h
		push	ax
		mov	es, ds:0D714h
		assume es:nothing
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	si, 100h
		mov	cx, 4

loc_0_263F:				; CODE XREF: SPELLEFFECT+9Fj
		push	si
		push	cx
		mov	di, 9418h
		mov	bp, 10h
		mov	dx, 0Ch
		push	ds
		mov	ax, ds:0D708h
		mov	ds, ax
		mov	ax, 0
		call	COPY_BLOCK_HINIB
		pop	ds
		call	WAITFLY
		call	WAITFLY
		call	WAITFLY
		pop	cx
		pop	si
		add	si, 10h
		loop	loc_0_263F
		call	CLEARLOCWIN
		pop	es
		retn
SPELLEFFECT	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CALCVIEWPARMS	proc near		; CODE XREF: LOADUMAP+6p LOADFMAP+6p
					; ...
		mov	ax, ds:2612h
		push	ax
		call	SINA
		mov	bp, ax
		pop	ax
		call	COSA
		cwd
		mov	cx, 64h	; 'd'
		mul	cx
		div	bp
		mov	ds:2616h, ax
		mov	dx, ds:263Ah
		mul	dx
		mov	bx, 0Ah
		div	bx
		add	ds:2616h, ax
		mov	ax, ds:2630h
		xor	dx, dx
		mov	dl, ah
		mov	ah, al
		xor	al, al
		mov	cx, ds:261Ah
		div	cx
		mov	ds:261Eh, ax
		mov	ax, ds:262Eh
		xor	dx, dx
		mov	dl, ah
		mov	ah, al
		xor	al, al
		mov	cx, ds:261Ch
		div	cx
		mov	ds:2620h, ax
		mov	cx, ds:2612h
		mul	cx
		mov	al, ah
		mov	ah, dl
		neg	ax
		mov	cx, ds:262Eh
		sar	cx, 1
		add	ax, cx
		mov	ds:2618h, ax
		mov	ax, ds:262Eh
		sar	ax, 1
		mov	cx, 140h
		mul	cx
		mov	ds:2622h, ax
		mov	cx, ds:262Eh
		sar	cx, 1
		mov	ds:2634h, cx
		mov	cx, ds:2630h
		sar	cx, 1
		dec	cx
		mov	ds:2636h, cx
		mov	ax, ds:262Eh
		dec	ax
		mov	cx, 140h
		mul	cx
		mov	ds:2624h, ax
		call	MAKETILETABLES
		retn
CALCVIEWPARMS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAWVIEW	proc near		; CODE XREF: CONTROLLER+B84p
					; sub_0_681D+59p ...
		call	MAKEVIEW
		cmp	word ptr ds:68A0h, 0FFFFh
		jz	loc_0_2722
		nop
		nop
		nop
		mov	ax, ds:68A0h
		cmp	ax, 2
		jb	loc_0_271F
		nop
		nop
		nop
		mov	ax, 2

loc_0_271F:				; CODE XREF: DRAWVIEW+13j
		call	DRAWFIST

loc_0_2722:				; CODE XREF: DRAWVIEW+8j
		call	COPYVIEW
		retn
DRAWVIEW	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MAKEVIEW	proc near		; CODE XREF: OPENDOOR+2Dp DRAWVIEWp
					; ...
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		call	NEWFLOOR
		mov	bp, ds:261Ah
		sar	bp, 1
		mov	ax, ds:0AD1h
		sub	ax, bp
		mov	si, ax
		call	SINA
		mov	cx, ds:2616h
		shl	cx, 1
		shl	cx, 1
		imul	cx
		add	dx, ds:0ACFh
		mov	ds:3779h, dh
		mov	ax, si
		call	COSA
		mov	cx, ds:2616h
		shl	cx, 1
		shl	cx, 1
		imul	cx
		add	dx, ds:0ACDh
		mov	ds:3778h, dh
		add	si, bp
		mov	ax, ds:0AD7h
		mov	cx, ds:2616h
		shl	cx, 1
		shl	cx, 1
		imul	cx
		add	dx, ds:0ACFh
		mov	ds:377Dh, dh
		mov	ax, ds:0AD9h
		mov	cx, ds:2616h
		shl	cx, 1
		shl	cx, 1
		imul	cx
		add	dx, ds:0ACDh
		mov	ds:377Ch, dh
		add	si, bp
		mov	ax, si
		call	SINA
		mov	cx, ds:2616h
		shl	cx, 1
		shl	cx, 1
		imul	cx
		add	dx, ds:0ACFh
		mov	ds:377Bh, dh
		mov	ax, si
		call	COSA
		mov	cx, ds:2616h
		shl	cx, 1
		shl	cx, 1
		imul	cx
		add	dx, ds:0ACDh
		mov	ds:377Ah, dh
		mov	ax, ds:0ADBh
		mov	bx, ds:3778h
		mov	cx, ds:377Ah
		mov	dx, ds:377Ch
		mov	bp, ax
		cmp	al, bl
		jge	loc_0_27DE
		nop
		nop
		nop
		mov	al, bl

loc_0_27DE:				; CODE XREF: MAKEVIEW+B1j
		cmp	al, cl
		jge	loc_0_27E7
		nop
		nop
		nop
		mov	al, cl

loc_0_27E7:				; CODE XREF: MAKEVIEW+BAj
		cmp	al, dl
		jge	loc_0_27F0
		nop
		nop
		nop
		mov	al, dl

loc_0_27F0:				; CODE XREF: MAKEVIEW+C3j
		inc	al
		cmp	al, 55h	; 'U'
		jle	loc_0_27FB
		nop
		nop
		nop
		mov	al, 55h	; 'U'

loc_0_27FB:				; CODE XREF: MAKEVIEW+CEj
		mov	ds:3780h, al
		mov	ax, bp
		cmp	al, bl
		jle	loc_0_2809
		nop
		nop
		nop
		mov	al, bl

loc_0_2809:				; CODE XREF: MAKEVIEW+DCj
		cmp	al, cl
		jle	loc_0_2812
		nop
		nop
		nop
		mov	al, cl

loc_0_2812:				; CODE XREF: MAKEVIEW+E5j
		cmp	al, dl
		jle	loc_0_281B
		nop
		nop
		nop
		mov	al, dl

loc_0_281B:				; CODE XREF: MAKEVIEW+EEj
		dec	al
		cmp	al, 0
		jge	loc_0_2826
		nop
		nop
		nop
		mov	al, 0

loc_0_2826:				; CODE XREF: MAKEVIEW+F9j
		mov	ds:377Eh, al
		mov	ax, bp
		cmp	ah, 40h	; '@'
		jg	loc_0_2852
		nop
		nop
		nop
		mov	al, ah
		cbw
		mov	bp, ax
		mov	ax, bx
		mov	al, ah
		cbw
		mov	bx, ax
		mov	ax, cx
		mov	al, ah
		cbw
		mov	cx, ax
		mov	ax, dx
		mov	al, ah
		cbw
		mov	dx, ax
		mov	ax, bp
		jmp	short loc_0_2872
;����������������������������������������������������������������������������
		nop

loc_0_2852:				; CODE XREF: MAKEVIEW+108j
		mov	al, ah
		xor	ah, ah
		mov	bp, ax
		mov	ax, bx
		mov	al, ah
		xor	ah, ah
		mov	bx, ax
		mov	ax, cx
		mov	al, ah
		xor	ah, ah
		mov	cx, ax
		mov	ax, dx
		mov	al, ah
		xor	ah, ah
		mov	dx, ax
		mov	ax, bp

loc_0_2872:				; CODE XREF: MAKEVIEW+129j
		cmp	ax, bx
		jge	loc_0_287B
		nop
		nop
		nop
		mov	ax, bx

loc_0_287B:				; CODE XREF: MAKEVIEW+14Ej
		cmp	ax, cx
		jge	loc_0_2884
		nop
		nop
		nop
		mov	ax, cx

loc_0_2884:				; CODE XREF: MAKEVIEW+157j
		cmp	ax, dx
		jge	loc_0_288D
		nop
		nop
		nop
		mov	ax, dx

loc_0_288D:				; CODE XREF: MAKEVIEW+160j
		inc	ax
		cmp	ax, 80h	; '�'
		jle	loc_0_2899
		nop
		nop
		nop
		mov	ax, 80h	; '�'

loc_0_2899:				; CODE XREF: MAKEVIEW+16Bj
		mov	ds:3781h, al
		mov	ax, bp
		cmp	ax, bx
		jle	loc_0_28A7
		nop
		nop
		nop
		mov	ax, bx

loc_0_28A7:				; CODE XREF: MAKEVIEW+17Aj
		cmp	ax, cx
		jle	loc_0_28B0
		nop
		nop
		nop
		mov	ax, cx

loc_0_28B0:				; CODE XREF: MAKEVIEW+183j
		cmp	ax, dx
		jle	loc_0_28B9
		nop
		nop
		nop
		mov	ax, dx

loc_0_28B9:				; CODE XREF: MAKEVIEW+18Cj
		dec	ax
		cmp	ax, 0
		jge	loc_0_28C5
		nop
		nop
		nop
		mov	ax, 0

loc_0_28C5:				; CODE XREF: MAKEVIEW+197j
		mov	ds:377Fh, al
		mov	byte ptr ds:3786h, 1
		cmp	word ptr ds:0ADDh, 0
		jnz	loc_0_28EB
		nop
		nop
		nop
		cmp	byte ptr ds:3784h, 1
		jz	loc_0_28F0
		nop
		nop
		nop
		cmp	byte ptr ds:3785h, 80h ; '�'
		jz	loc_0_28F0
		nop
		nop
		nop

loc_0_28EB:				; CODE XREF: MAKEVIEW+1ACj
		mov	byte ptr ds:3786h, 0

loc_0_28F0:				; CODE XREF: MAKEVIEW+1B6j
					; MAKEVIEW+1C0j
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	ax, ds:377Eh
		mov	bx, ds:3780h
		sub	bh, ah
		sub	bl, al
		mov	dx, bx
		mov	si, ax
		mov	di, 2742h

loc_0_2908:				; CODE XREF: MAKEVIEW+34Cj
		push	si
		push	bx

loc_0_290A:				; CODE XREF: MAKEVIEW+33Fj
		mov	al, es:[si]
		test	al, 60h
		jnz	loc_0_2914
		jmp	loc_0_2A35
;����������������������������������������������������������������������������

loc_0_2914:				; CODE XREF: MAKEVIEW+1E9j
		mov	cl, es:[si+55h]
		mov	ch, es:[si+0AAh]
		cmp	byte ptr ds:3784h, 1
		jz	loc_0_292F
		nop
		nop
		nop
		shr	cx, 1
		shr	cx, 1
		shr	cx, 1
		shr	cx, 1

loc_0_292F:				; CODE XREF: MAKEVIEW+1FCj
		mov	ds:378Eh, cl
		and	cl, 0Fh
		cmp	cl, 0
		jz	loc_0_29A1
		nop
		nop
		nop
		dec	cl
		mov	ah, al
		and	ah, 60h
		cmp	ah, 60h	; '`'
		jz	loc_0_2972
		nop
		nop
		nop
		mov	word ptr [di], 0
		mov	[di+2],	si
		rol	ah, 1
		rol	ah, 1
		mov	[di+4],	ah
		mov	byte ptr [di+5], 0
		mov	[di+6],	cl
		mov	cl, ds:378Eh
		mov	[di+7],	cl
		mov	cl, [di+6]
		add	di, 8
		jmp	short loc_0_29A1
;����������������������������������������������������������������������������
		nop

loc_0_2972:				; CODE XREF: MAKEVIEW+222j
		mov	word ptr [di], 0
		mov	word ptr [di+8], 0
		mov	[di+2],	si
		mov	[di+0Ah], si
		mov	word ptr [di+4], 0
		mov	word ptr [di+0Ch], 1
		mov	[di+6],	cl
		mov	[di+0Eh], cl
		mov	cl, ds:378Eh
		mov	[di+7],	cl
		mov	[di+0Fh], cl
		mov	cl, [di+6]
		add	di, 10h

loc_0_29A1:				; CODE XREF: MAKEVIEW+213j
					; MAKEVIEW+249j
		cmp	byte ptr ds:3786h, 0
		jnz	loc_0_29AB
		jmp	loc_0_2A35
;����������������������������������������������������������������������������

loc_0_29AB:				; CODE XREF: MAKEVIEW+280j
		test	byte ptr ds:3784h, 1
		jnz	loc_0_29C4
		nop
		nop
		nop
		cmp	ch, 0
		jz	loc_0_2A35
		nop
		nop
		nop
		dec	ch
		mov	cl, ch
		jmp	short loc_0_29E3
;����������������������������������������������������������������������������
		nop

loc_0_29C4:				; CODE XREF: MAKEVIEW+28Aj
		and	ch, 3
		cmp	ch, 0
		jz	loc_0_2A35
		nop
		nop
		nop
		cmp	ch, 3
		jz	loc_0_29E3
		nop
		nop
		nop
		mov	cl, 5
		cmp	ch, 1
		jz	loc_0_29E3
		nop
		nop
		nop
		mov	cl, 0Bh

loc_0_29E3:				; CODE XREF: MAKEVIEW+29Bj
					; MAKEVIEW+2ACj ...
		mov	ah, al
		and	ah, 60h
		cmp	ah, 60h	; '`'
		jz	loc_0_2A0B
		nop
		nop
		nop
		mov	word ptr [di], 0
		mov	[di+2],	si
		rol	ah, 1
		rol	ah, 1
		mov	[di+4],	ah
		mov	byte ptr [di+5], 1
		mov	[di+6],	cl
		add	di, 8
		jmp	short loc_0_2A35
;����������������������������������������������������������������������������
		nop

loc_0_2A0B:				; CODE XREF: MAKEVIEW+2C5j
		mov	word ptr [di], 0
		mov	word ptr [di+8], 0
		mov	[di+2],	si
		mov	[di+0Ah], si
		mov	word ptr [di+4], 0
		mov	word ptr [di+0Ch], 1
		mov	[di+6],	cl
		mov	[di+0Eh], cl
		mov	byte ptr [di+5], 1
		mov	byte ptr [di+0Dh], 1
		add	di, 10h

loc_0_2A35:				; CODE XREF: MAKEVIEW+1EBj
					; MAKEVIEW+282j ...
		and	al, 1Ch
		shr	al, 1
		shr	al, 1
		cmp	al, 2
		jl	loc_0_2A60
		nop
		nop
		nop
		mov	word ptr [di], 1
		mov	[di+7],	al
		mov	byte ptr [di+6], 0
		mov	ax, si
		mov	al, 80h	; '�'
		mov	[di+4],	ax
		mov	ax, si
		mov	ah, al
		mov	al, 80h	; '�'
		mov	[di+2],	ax
		add	di, 8

loc_0_2A60:				; CODE XREF: MAKEVIEW+317j
		inc	si
		dec	bl
		jz	loc_0_2A68
		jmp	loc_0_290A
;����������������������������������������������������������������������������

loc_0_2A68:				; CODE XREF: MAKEVIEW+33Dj
		pop	bx
		pop	si
		add	si, 100h
		dec	dh
		jz	loc_0_2A75
		jmp	loc_0_2908
;����������������������������������������������������������������������������

loc_0_2A75:				; CODE XREF: MAKEVIEW+34Aj
		pop	es
		mov	si, 6DCEh
		mov	dx, 800h
		mov	cx, 38h	; '8'

loc_0_2A7F:				; CODE XREF: MAKEVIEW+37Dj
		test	word ptr [si], 2
		jz	loc_0_2A9E
		nop
		nop
		nop
		mov	ax, [si+2]
		mov	[di+2],	ax
		mov	ax, [si+4]
		mov	[di+4],	ax
		mov	word ptr [di], 1
		mov	[di+6],	dx
		add	di, 8

loc_0_2A9E:				; CODE XREF: MAKEVIEW+35Dj
		inc	dh
		add	si, 7Bh	; '{'
		loop	loc_0_2A7F
		mov	si, 88B6h
		mov	dh, 40h	; '@'
		xor	dl, dl
		mov	cx, 40h	; '@'

loc_0_2AAF:				; CODE XREF: MAKEVIEW+3D6j
		test	word ptr [si], 2
		jz	loc_0_2AF7
		nop
		nop
		nop
		xor	dl, dl
		mov	dl, 0
		test	word ptr [si], 1000h
		jz	loc_0_2AD4
		nop
		nop
		nop
		mov	dl, 20h	; ' '
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_2AD4
		nop
		nop
		nop
		add	dl, 10h

loc_0_2AD4:				; CODE XREF: MAKEVIEW+39Aj
					; MAKEVIEW+3A6j
		test	word ptr [si], 20h
		jz	loc_0_2AE1
		nop
		nop
		nop
		mov	dl, ds:689Ah

loc_0_2AE1:				; CODE XREF: MAKEVIEW+3B2j
		mov	ax, [si+2]
		mov	[di+2],	ax
		mov	ax, [si+4]
		mov	[di+4],	ax
		mov	word ptr [di], 1
		mov	[di+6],	dx
		add	di, 8

loc_0_2AF7:				; CODE XREF: MAKEVIEW+38Dj
		inc	dh
		add	si, 2Ch	; ','
		loop	loc_0_2AAF
		mov	si, 0B15h
		add	si, 2
		mov	dh, 80h	; '�'
		xor	dl, dl
		mov	cx, 4

loc_0_2B0B:				; CODE XREF: MAKEVIEW+415j
		cmp	word ptr [si], 0
		jz	loc_0_2B38
		nop
		nop
		nop
		mov	ax, ds:0ADDh
		cmp	ax, [si-0Ah]
		jnz	loc_0_2B38
		nop
		nop
		nop
		mov	ax, [si]
		mov	ah, al
		mov	al, 80h	; '�'
		mov	[di+2],	ax
		mov	ax, [si]
		mov	al, 80h	; '�'
		mov	[di+4],	ax
		mov	word ptr [di], 1
		mov	[di+6],	dx
		add	di, 8

loc_0_2B38:				; CODE XREF: MAKEVIEW+3E8j
					; MAKEVIEW+3F3j
		add	si, 2
		loop	loc_0_2B0B
		cmp	word ptr ds:0ADDh, 0
		jnz	loc_0_2B75
		nop
		nop
		nop
		mov	si, 6083h
		mov	dh, 81h	; '�'
		xor	dl, dl

loc_0_2B4E:				; CODE XREF: MAKEVIEW+44Dj
		mov	ax, [si]
		cmp	ax, 0FFFFh
		jz	loc_0_2B75
		nop
		nop
		nop
		mov	ah, al
		mov	al, 80h	; '�'
		mov	[di+2],	ax
		mov	ax, [si]
		mov	al, 80h	; '�'
		mov	[di+4],	ax
		mov	word ptr [di], 1
		mov	[di+6],	dx
		add	di, 8
		add	si, 2
		jmp	short loc_0_2B4E
;����������������������������������������������������������������������������

loc_0_2B75:				; CODE XREF: MAKEVIEW+41Cj
					; MAKEVIEW+42Dj
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_2BA5
		nop
		nop
		nop
		cmp	word ptr ds:6BECh, 1
		jnz	loc_0_2BA5
		nop
		nop
		nop
		mov	dh, 82h	; '�'
		mov	dl, ds:6BEBh
		mov	ax, ds:6BE7h
		mov	[di+2],	ax
		mov	ax, ds:6BE9h
		mov	[di+4],	ax
		mov	[di+6],	dx
		mov	word ptr [di], 1
		add	di, 8

loc_0_2BA5:				; CODE XREF: MAKEVIEW+454j
					; MAKEVIEW+45Ej
		mov	word ptr [di], 0FFFFh
		mov	ax, di
		sub	ax, 2742h
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		mov	ds:3788h, ax
		mov	di, 3C3Eh
		mov	ds:3752h, di
		mov	bx, 2742h
		mov	word ptr ds:378Ah, 0

loc_0_2BC7:				; CODE XREF: MAKEVIEW+BE9j
		push	bx
		mov	ax, [bx]
		cmp	ax, 0FFFFh
		jnz	loc_0_2BD2
		jmp	loc_0_3312
;����������������������������������������������������������������������������

loc_0_2BD2:				; CODE XREF: MAKEVIEW+4A7j
		cmp	ax, 1
		jnz	loc_0_2BDA
		jmp	loc_0_3019
;����������������������������������������������������������������������������

loc_0_2BDA:				; CODE XREF: MAKEVIEW+4AFj
		mov	ax, [bx+2]
		mov	di, ds:3752h
		mov	[di+12h], ax
		cmp	byte ptr [bx+4], 1
		jnz	loc_0_2C23
		nop
		nop
		nop
		mov	dx, ax
		mov	dh, dl
		xor	dl, dl
		mov	ds:3744h, dx
		mov	ds:3746h, dx
		mov	ds:3748h, dx
		xor	al, al
		mov	ds:374Ah, ax
		add	ax, 80h	; '�'
		mov	ds:374Eh, ax
		add	ax, 80h	; '�'
		mov	ds:374Ch, ax
		mov	ax, [bx+6]
		mov	ds:3754h, ax
		mov	ax, 3916h
		mov	di, ds:3752h
		mov	[di+15h], ax
		jmp	short loc_0_2C58
;����������������������������������������������������������������������������
		nop

loc_0_2C23:				; CODE XREF: MAKEVIEW+4C2j
		mov	dx, ax
		mov	dh, dl
		xor	dl, dl
		mov	ds:3744h, dx
		add	dx, 100h
		mov	ds:3746h, dx
		sub	dx, 80h	; '�'
		mov	ds:3748h, dx
		xor	al, al
		mov	ds:374Ah, ax
		mov	ds:374Eh, ax
		mov	ds:374Ch, ax
		mov	ax, [bx+6]
		mov	ds:3754h, ax
		mov	ax, 3775h
		mov	di, ds:3752h
		mov	[di+15h], ax

loc_0_2C58:				; CODE XREF: MAKEVIEW+4FAj
		mov	ax, 0
		mov	cx, 0
		mov	dx, 39F6h
		cmp	byte ptr [bx+5], 0
		jz	loc_0_2C74
		nop
		nop
		nop
		mov	ax, 0FAh ; '�'
		mov	cx, 5A0h
		add	dx, 100h

loc_0_2C74:				; CODE XREF: MAKEVIEW+53Fj
		mov	ds:376Ah, ax
		mov	ds:376Ch, cx
		mov	ds:376Eh, dx
		mov	ax, ds:3748h
		mov	cx, ds:374Eh
		sub	ax, ds:0ACDh
		sub	cx, ds:0ACFh
		mov	ds:3756h, ax
		mov	ds:3758h, cx
		mov	ax, ds:0AD9h
		imul	word ptr ds:3756h
		push	dx
		push	ax
		mov	ax, ds:0AD7h
		imul	word ptr ds:3758h
		pop	si
		pop	cx
		add	ax, si
		adc	dx, cx
		mov	ds:375Ah, dx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		cmp	dx, ds:2616h
		jle	loc_0_2CC0
		jmp	loc_0_330B
;����������������������������������������������������������������������������

loc_0_2CC0:				; CODE XREF: MAKEVIEW+595j
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_2CF5
		nop
		nop
		nop
		mov	ax, 3775h
		cmp	dh, 2
		jl	loc_0_2CEE
		nop
		nop
		nop
		mov	ax, 3B80h
		cmp	dh, 8
		jge	loc_0_2CEE
		nop
		nop
		nop
		mov	al, dh
		mov	ah, 0
		shl	ax, 1
		mov	si, ax
		add	si, 3BFCh
		mov	ax, [si]

loc_0_2CEE:				; CODE XREF: MAKEVIEW+5AAj
					; MAKEVIEW+5B5j
		mov	si, ds:3752h
		mov	[si+15h], ax

loc_0_2CF5:				; CODE XREF: MAKEVIEW+59Fj
		mov	word ptr ds:3768h, 0
		mov	ax, ds:3744h
		mov	cx, ds:374Ah
		sub	ax, ds:0ACDh
		sub	cx, ds:0ACFh
		mov	ds:3756h, ax
		mov	ds:3758h, cx
		mov	ax, ds:0AD9h
		imul	word ptr ds:3756h
		push	dx
		push	ax
		mov	ax, ds:0AD7h
		imul	word ptr ds:3758h
		pop	si
		pop	cx
		add	ax, si
		adc	dx, cx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		mov	ds:3BF6h, dx
		mov	ax, ds:3756h
		mov	dx, ds:3758h
		call	ARCTAN
		mov	ds:3BF8h, di
		neg	di
		add	di, ds:0AD1h
		cmp	di, 2D0h
		jl	loc_0_2D54
		nop
		nop
		nop
		sub	di, 5A0h

loc_0_2D54:				; CODE XREF: MAKEVIEW+625j
		cmp	di, 0FD30h
		jg	loc_0_2D61
		nop
		nop
		nop
		add	di, 5A0h

loc_0_2D61:				; CODE XREF: MAKEVIEW+632j
		mov	cx, di
		mov	bp, 1
		cmp	cx, 0
		jg	loc_0_2D72
		nop
		nop
		nop
		neg	bp
		neg	cx

loc_0_2D72:				; CODE XREF: MAKEVIEW+643j
		shl	cx, 1
		cmp	cx, ds:261Ah
		jle	loc_0_2D81
		nop
		nop
		nop
		add	ds:3768h, bp

loc_0_2D81:				; CODE XREF: MAKEVIEW+652j
		mov	ax, ds:261Eh
		imul	di
		mov	al, ah
		mov	ah, dl
		neg	ax
		add	ax, ds:2636h
		mov	bx, ds:3752h
		mov	[bx+2],	ax
		mov	ax, ds:375Ah
		mov	[bx+0Eh], ax
		mov	ax, ds:3754h
		mov	[bx+1],	al
		mov	[bx+17h], ah
		mov	byte ptr [bx], 1
		mov	byte ptr [bx+14h], 1
		mov	ax, ds:376Eh
		mov	[bx+10h], ax
		mov	ax, ds:3BF6h
		mov	dx, ds:2614h
		sub	dx, ds:376Ah
		call	ARCTAN
		cmp	di, 2D0h
		jl	loc_0_2DCE
		nop
		nop
		nop
		sub	di, 5A0h

loc_0_2DCE:				; CODE XREF: MAKEVIEW+69Fj
		mov	ax, ds:2620h
		imul	di
		mov	al, ah
		mov	ah, dl
		add	ax, ds:2634h
		mov	bx, ds:3752h
		mov	[bx+8],	ax
		mov	ax, ds:3BF6h
		mov	dx, ds:2614h
		sub	dx, 0FAh ; '�'
		sub	dx, ds:376Ah
		call	ARCTAN
		cmp	di, 2D0h
		jl	loc_0_2E01
		nop
		nop
		nop
		sub	di, 5A0h

loc_0_2E01:				; CODE XREF: MAKEVIEW+6D2j
		mov	ax, ds:2620h
		imul	di
		mov	al, ah
		mov	ah, dl
		add	ax, ds:2634h
		mov	bx, ds:3752h
		mov	[bx+6],	ax
		mov	ax, ds:3746h
		mov	cx, ds:374Ch
		sub	ax, ds:0ACDh
		sub	cx, ds:0ACFh
		mov	ds:3756h, ax
		mov	ds:3758h, cx
		mov	ax, ds:0AD9h
		imul	word ptr ds:3756h
		push	dx
		push	ax
		mov	ax, ds:0AD7h
		imul	word ptr ds:3758h
		pop	si
		pop	cx
		add	ax, si
		adc	dx, cx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		push	dx
		mov	ax, ds:3756h
		mov	dx, ds:3758h
		call	ARCTAN
		mov	ds:3BFAh, di
		neg	di
		add	di, ds:0AD1h
		cmp	di, 2D0h
		jl	loc_0_2E6B
		nop
		nop
		nop
		sub	di, 5A0h

loc_0_2E6B:				; CODE XREF: MAKEVIEW+73Cj
		cmp	di, 0FD30h
		jg	loc_0_2E78
		nop
		nop
		nop
		add	di, 5A0h

loc_0_2E78:				; CODE XREF: MAKEVIEW+749j
		mov	cx, di
		cmp	cx, 0
		mov	bp, 1
		jg	loc_0_2E89
		nop
		nop
		nop
		neg	cx
		neg	bp

loc_0_2E89:				; CODE XREF: MAKEVIEW+75Aj
		shl	cx, 1
		cmp	cx, ds:261Ah
		jle	loc_0_2E98
		nop
		nop
		nop
		add	ds:3768h, bp

loc_0_2E98:				; CODE XREF: MAKEVIEW+769j
		mov	ax, ds:261Eh
		imul	di
		mov	al, ah
		mov	ah, dl
		pop	dx
		mov	bx, ds:3BF6h
		and	bx, dx
		test	bx, 8000h
		jz	loc_0_2EB1
		jmp	loc_0_330B
;����������������������������������������������������������������������������

loc_0_2EB1:				; CODE XREF: MAKEVIEW+786j
		or	ds:3BF6h, dx
		test	word ptr ds:3BF6h, 8000h
		jnz	loc_0_2EC0
		jmp	loc_0_2F70
;����������������������������������������������������������������������������

loc_0_2EC0:				; CODE XREF: MAKEVIEW+795j
		cmp	word ptr ds:3768h, 0
		jz	loc_0_2ECA
		jmp	loc_0_2F70
;����������������������������������������������������������������������������

loc_0_2ECA:				; CODE XREF: MAKEVIEW+79Fj
		push	ax
		push	dx
		mov	dx, 800h
		mov	ax, ds:3744h
		cmp	ax, ds:3746h
		jnz	loc_0_2EDD
		nop
		nop
		nop
		xchg	dh, dl

loc_0_2EDD:				; CODE XREF: MAKEVIEW+7B0j
		cmp	ax, ds:3746h
		jl	loc_0_2EE9
		nop
		nop
		nop
		mov	ax, ds:3746h

loc_0_2EE9:				; CODE XREF: MAKEVIEW+7BBj
		mov	bx, ds:374Ah
		cmp	bx, ds:374Ch
		jl	loc_0_2EFA
		nop
		nop
		nop
		mov	bx, ds:374Ch

loc_0_2EFA:				; CODE XREF: MAKEVIEW+7CBj
		sub	ax, ds:0ACDh
		sub	bx, ds:0ACFh
		mov	ds:3756h, ax
		mov	ds:3758h, bx
		mov	cx, 1Fh

loc_0_2F0C:				; CODE XREF: MAKEVIEW+841j
		push	cx
		push	dx
		mov	ax, ds:3756h
		mov	dx, ds:3758h
		call	ARCTAN
		mov	ax, di
		mov	cx, ds:0AD1h
		mov	dx, cx
		sub	dx, ax
		cmp	dx, 2D0h
		jl	loc_0_2F2F
		nop
		nop
		nop
		sub	dx, 5A0h

loc_0_2F2F:				; CODE XREF: MAKEVIEW+800j
		cmp	dx, 0FD30h
		jg	loc_0_2F3C
		nop
		nop
		nop
		add	dx, 5A0h

loc_0_2F3C:				; CODE XREF: MAKEVIEW+80Dj
		mov	ax, dx
		cmp	ax, 0
		jg	loc_0_2F48
		nop
		nop
		nop
		neg	ax

loc_0_2F48:				; CODE XREF: MAKEVIEW+81Bj
		pop	dx
		pop	cx
		shl	ax, 1
		cmp	ax, ds:261Ah
		jle	loc_0_2F6E
		nop
		nop
		nop
		add	ds:3756h, dh
		adc	byte ptr ds:3757h, 0
		add	ds:3758h, dl
		adc	byte ptr ds:3759h, 0
		loop	loc_0_2F0C
		pop	dx
		pop	ax
		jmp	loc_0_330B
;����������������������������������������������������������������������������

loc_0_2F6E:				; CODE XREF: MAKEVIEW+82Aj
		pop	dx
		pop	ax

loc_0_2F70:				; CODE XREF: MAKEVIEW+797j
					; MAKEVIEW+7A1j
		cmp	word ptr ds:3768h, 0FFFEh
		jnz	loc_0_2F7A
		jmp	loc_0_330B
;����������������������������������������������������������������������������

loc_0_2F7A:				; CODE XREF: MAKEVIEW+84Fj
		cmp	word ptr ds:3768h, 2
		jnz	loc_0_2F84
		jmp	loc_0_330B
;����������������������������������������������������������������������������

loc_0_2F84:				; CODE XREF: MAKEVIEW+859j
		neg	ax
		add	ax, ds:2636h
		mov	bx, ds:3752h
		mov	[bx+4],	ax
		mov	ax, dx
		push	dx
		mov	dx, ds:2614h
		sub	dx, ds:376Ah
		call	ARCTAN
		cmp	di, 2D0h
		jl	loc_0_2FAC
		nop
		nop
		nop
		sub	di, 5A0h

loc_0_2FAC:				; CODE XREF: MAKEVIEW+87Dj
		mov	ax, ds:2620h
		imul	di
		mov	al, ah
		mov	ah, dl
		add	ax, ds:2634h
		mov	bx, ds:3752h
		mov	[bx+0Ch], ax
		pop	ax
		mov	dx, ds:2614h
		sub	dx, 0FAh ; '�'
		sub	dx, ds:376Ah
		call	ARCTAN
		cmp	di, 2D0h
		jl	loc_0_2FDD
		nop
		nop
		nop
		sub	di, 5A0h

loc_0_2FDD:				; CODE XREF: MAKEVIEW+8AEj
		mov	ax, ds:2620h
		imul	di
		mov	al, ah
		mov	ah, dl
		add	ax, ds:2634h
		mov	bx, ds:3752h
		mov	[bx+0Ah], ax
		mov	ax, ds:262Eh
		cmp	ax, [bx+6]
		jg	loc_0_3004
		nop
		nop
		nop
		cmp	ax, [bx+0Ah]
		jg	loc_0_3004
		jmp	loc_0_32F7
;����������������������������������������������������������������������������

loc_0_3004:				; CODE XREF: MAKEVIEW+8D1j
					; MAKEVIEW+8D9j
		cmp	word ptr [bx+8], 0
		jl	loc_0_300D
		jmp	loc_0_32F7
;����������������������������������������������������������������������������

loc_0_300D:				; CODE XREF: MAKEVIEW+8E2j
		cmp	word ptr [bx+0Ch], 0
		jge	loc_0_3016
		jmp	loc_0_330B
;����������������������������������������������������������������������������

loc_0_3016:				; CODE XREF: MAKEVIEW+8EBj
		jmp	loc_0_32F7
;����������������������������������������������������������������������������

loc_0_3019:				; CODE XREF: MAKEVIEW+4B1j
		mov	ax, [bx+2]
		mov	ds:3748h, ax
		mov	dx, [bx+4]
		mov	ds:374Eh, dx
		mov	cx, [bx+6]
		mov	dx, cx
		mov	cl, ch
		xor	ch, ch
		mov	ds:3754h, cx
		xor	dh, dh
		shl	dx, 1
		mov	ds:375Ch, dx
		mov	ax, ds:3748h
		mov	cx, ds:374Eh
		sub	ax, ds:0ACDh
		sub	cx, ds:0ACFh
		mov	ds:3756h, ax
		mov	ds:3758h, cx
		mov	ax, ds:0AD9h
		imul	word ptr ds:3756h
		push	dx
		push	ax
		mov	ax, ds:0AD7h
		imul	word ptr ds:3758h
		pop	si
		pop	cx
		add	ax, si
		adc	dx, cx
		mov	ds:375Ah, dx
		mov	bx, ds:3752h
		mov	[bx+0Eh], dx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		cmp	dx, ds:2616h
		jle	loc_0_3083
		jmp	loc_0_330B
;����������������������������������������������������������������������������

loc_0_3083:				; CODE XREF: MAKEVIEW+958j
		mov	ds:375Ah, dx
		mov	ax, ds:3756h
		mov	dx, ds:3758h
		call	ARCTAN
		mov	ax, di
		mov	cx, ds:0AD1h
		mov	dx, cx
		sub	dx, ax
		cmp	dx, 2D0h
		jl	loc_0_30A8
		nop
		nop
		nop
		sub	dx, 5A0h

loc_0_30A8:				; CODE XREF: MAKEVIEW+979j
		cmp	dx, 0FD30h
		jg	loc_0_30B5
		nop
		nop
		nop
		add	dx, 5A0h

loc_0_30B5:				; CODE XREF: MAKEVIEW+986j
		mov	cx, dx
		cmp	cx, 0
		jg	loc_0_30C1
		nop
		nop
		nop
		neg	cx

loc_0_30C1:				; CODE XREF: MAKEVIEW+994j
		shl	cx, 1
		mov	bx, ds:261Ah
		add	bx, 24h	; '$'
		cmp	cx, bx
		jle	loc_0_30D1
		jmp	loc_0_330B
;����������������������������������������������������������������������������

loc_0_30D1:				; CODE XREF: MAKEVIEW+9A6j
		mov	ax, ds:261Eh
		imul	dx
		mov	al, ah
		mov	ah, dl
		neg	ax
		add	ax, ds:2636h
		mov	bx, ds:3752h
		mov	[bx+2],	ax
		mov	ax, ds:3754h
		mov	[bx+1],	al
		mov	byte ptr [bx], 0FFh
		mov	byte ptr [bx+14h], 1
		mov	byte ptr [bx+18h], 0
		cmp	ax, 8
		jl	loc_0_3160
		nop
		nop
		nop
		cmp	ax, 40h	; '@'
		jl	loc_0_314D
		nop
		nop
		nop
		cmp	ax, 80h	; '�'
		jl	loc_0_313A
		nop
		nop
		nop
		cmp	ax, 80h	; '�'
		jz	loc_0_312E
		nop
		nop
		nop
		cmp	ax, 81h	; '�'
		jz	loc_0_3128
		nop
		nop
		nop
		cmp	ax, 82h	; '�'
		jz	loc_0_3134
		nop
		nop
		nop

loc_0_3128:				; CODE XREF: MAKEVIEW+9F5j
		mov	di, 4FC2h
		jmp	loc_0_3257
;����������������������������������������������������������������������������

loc_0_312E:				; CODE XREF: MAKEVIEW+9EDj
		mov	di, 4FB4h
		jmp	loc_0_3257
;����������������������������������������������������������������������������

loc_0_3134:				; CODE XREF: MAKEVIEW+9FDj
		mov	di, 4FD0h
		jmp	loc_0_3257
;����������������������������������������������������������������������������

loc_0_313A:				; CODE XREF: MAKEVIEW+9E5j
		sub	ax, 40h	; '@'
		mov	di, 88B6h
		mov	cx, 2Ch	; ','
		mul	cx
		add	di, ax
		add	di, 0Dh
		jmp	loc_0_3257
;����������������������������������������������������������������������������

loc_0_314D:				; CODE XREF: MAKEVIEW+9DDj
		sub	ax, 8
		mov	di, 6DCEh
		mov	cx, 7Bh	; '{'
		mul	cx
		add	di, ax
		add	di, 0Dh
		jmp	loc_0_3257
;����������������������������������������������������������������������������

loc_0_3160:				; CODE XREF: MAKEVIEW+9D5j
		sub	ax, 2
		mov	di, ds:4F0Ah
		mov	cx, 0Eh
		mul	cx
		add	di, ax
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_3188
		nop
		nop
		nop
		mov	si, 3C22h
		mov	cl, ds:375Bh
		mov	ch, 0
		add	si, cx
		mov	cl, [si]
		mov	[bx+18h], cl

loc_0_3188:				; CODE XREF: MAKEVIEW+A4Dj
		cmp	di, 4F1Ah
		jnz	loc_0_31BD
		nop
		nop
		nop
		mov	dx, ds:3748h
		add	dx, ds:374Eh
		and	dh, 3
		mov	dl, dh
		xor	dh, dh
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		add	dx, 0AAh ; '�'
		mov	ds:375Eh, dx
		mov	[di], dx
		mov	[bx+0Ah], di
		mov	cx, [di+2]
		jmp	loc_0_3262
;����������������������������������������������������������������������������

loc_0_31BD:				; CODE XREF: MAKEVIEW+A66j
		cmp	di, 4F7Ch
		jnz	loc_0_31E6
		nop
		nop
		nop
		mov	dx, ds:3748h
		add	dx, ds:374Eh
		and	dh, 3
		mov	dl, dh
		xor	dh, dh
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		shl	dx, 1
		add	dx, 1Eh
		mov	[di+2],	dx
		jmp	short loc_0_3257
;����������������������������������������������������������������������������
		nop

loc_0_31E6:				; CODE XREF: MAKEVIEW+A9Bj
		cmp	di, 4F0Ch
		jnz	loc_0_31FB
		nop
		nop
		nop
		push	di
		push	ax
		push	bx
		call	SET_BRAZFRAME
		pop	bx
		pop	ax
		pop	di
		jmp	short loc_0_3257
;����������������������������������������������������������������������������
		nop

loc_0_31FB:				; CODE XREF: MAKEVIEW+AC4j
		cmp	di, 4F8Ah
		jnz	loc_0_322C
		nop
		nop
		nop
		call	RAND
		and	ax, 3
		mov	word ptr [di+8], 5Ch ; '\'
		cmp	ax, 3
		jz	loc_0_322C
		nop
		nop
		nop
		mov	word ptr [di+8], 1BDCh
		cmp	ax, 2
		jz	loc_0_322C
		nop
		nop
		nop
		mov	word ptr [di+8], 375Ch
		jmp	short loc_0_3257
;����������������������������������������������������������������������������
		nop

loc_0_322C:				; CODE XREF: MAKEVIEW+AD9j
					; MAKEVIEW+AECj ...
		cmp	di, 4F98h
		jnz	loc_0_3257
		nop
		nop
		nop
		cmp	word ptr [di+8], 1900h
		jl	loc_0_3244
		nop
		nop
		nop
		sub	word ptr [di+8], 2A80h

loc_0_3244:				; CODE XREF: MAKEVIEW+B14j
		test	word ptr ds:128h, 1Ah
		jnz	loc_0_3257
		nop
		nop
		nop
		add	word ptr [di+8], 2A80h
		jmp	short loc_0_3257
;����������������������������������������������������������������������������
		nop

loc_0_3257:				; CODE XREF: MAKEVIEW+A05j
					; MAKEVIEW+A0Bj ...
		mov	ax, [di]
		mov	ds:375Eh, ax
		mov	[bx+0Ah], di
		mov	cx, [di+2]

loc_0_3262:				; CODE XREF: MAKEVIEW+A94j
		sar	cx, 1
		mov	ax, ds:375Ah
		mov	dx, cx
		call	ARCTAN
		mov	ax, ds:261Eh
		imul	di
		mov	al, ah
		mov	ah, dl
		mov	bx, ds:3752h
		sub	[bx+2],	ax
		shl	ax, 1
		mov	[bx+12h], ax
		add	ax, [bx+2]
		mov	[bx+4],	ax
		mov	ax, ds:375Ah
		mov	dx, ds:2614h
		sub	dx, ds:375Ch
		call	ARCTAN
		cmp	di, 2D0h
		jl	loc_0_32A2
		nop
		nop
		nop
		sub	di, 5A0h

loc_0_32A2:				; CODE XREF: MAKEVIEW+B73j
		mov	ax, ds:2620h
		imul	di
		mov	al, ah
		mov	ah, dl
		add	ax, ds:2634h
		mov	bx, ds:3752h
		mov	[bx+8],	ax
		mov	ax, ds:375Ah
		mov	dx, ds:2614h
		sub	dx, ds:375Ch
		sub	dx, ds:375Eh
		call	ARCTAN
		cmp	di, 2D0h
		jl	loc_0_32D5
		nop
		nop
		nop
		sub	di, 5A0h

loc_0_32D5:				; CODE XREF: MAKEVIEW+BA6j
		mov	ax, ds:2620h
		imul	di
		mov	al, ah
		mov	ah, dl
		add	ax, ds:2634h
		mov	bx, ds:3752h
		mov	[bx+6],	ax
		neg	ax
		add	ax, [bx+8]
		jnz	loc_0_32F4
		nop
		nop
		nop
		inc	ax

loc_0_32F4:				; CODE XREF: MAKEVIEW+BC8j
		mov	[bx+10h], ax

loc_0_32F7:				; CODE XREF: MAKEVIEW+8DBj
					; MAKEVIEW+8E4j ...
		add	word ptr ds:3752h, 19h
		cmp	word ptr ds:378Ah, 0D0h	; '�'
		jz	loc_0_3312
		nop
		nop
		nop
		inc	word ptr ds:378Ah

loc_0_330B:				; CODE XREF: MAKEVIEW+597j
					; MAKEVIEW+788j ...
		pop	bx
		add	bx, 8
		jmp	loc_0_2BC7
;����������������������������������������������������������������������������

loc_0_3312:				; CODE XREF: MAKEVIEW+4A9j
					; MAKEVIEW+BDCj
		pop	bx
		mov	bx, ds:3752h
		mov	byte ptr [bx], 80h ; '�'
		mov	bx, 3C3Eh
		cmp	byte ptr [bx], 80h ; '�'
		jnz	loc_0_332C
		nop
		nop
		nop
		mov	ds:3790h, bx
		jmp	loc_0_3451
;����������������������������������������������������������������������������

loc_0_332C:				; CODE XREF: MAKEVIEW+BFAj
		mov	si, 3790h
		mov	cx, 0
		mov	ds:39C0h, cx

loc_0_3336:				; CODE XREF: MAKEVIEW+C1Cj
		mov	[si], bx
		add	bx, 19h
		add	si, 2
		inc	cx
		cmp	byte ptr [bx], 80h ; '�'
		jnz	loc_0_3336
		mov	[si], bx
		mov	ds:39C0h, cx
		mov	bx, 3C3Eh
		mov	dx, cx
		dec	dx
		jz	loc_0_3381
		nop
		nop
		nop

loc_0_3355:				; CODE XREF: MAKEVIEW+C59j
		mov	bp, 0
		mov	cx, dx
		mov	si, 3790h

loc_0_335D:				; CODE XREF: MAKEVIEW+C54j
		mov	di, [si]
		mov	ax, [di+0Eh]
		mov	di, [si+2]
		cmp	ax, [di+0Eh]
		jge	loc_0_3377
		nop
		nop
		nop
		mov	ax, [si]
		xchg	ax, [si+2]
		mov	[si], ax
		mov	bp, 1

loc_0_3377:				; CODE XREF: MAKEVIEW+C42j
		add	si, 2
		loop	loc_0_335D
		cmp	bp, 1
		jz	loc_0_3355

loc_0_3381:				; CODE XREF: MAKEVIEW+C2Aj
		push	es
		mov	ax, seg001
		mov	es, ax
		assume es:seg001
		mov	bp, 3790h
		mov	ax, ds:39C0h
		dec	ax
		shl	ax, 1
		add	bp, ax
		mov	bx, 39F6h
		mov	di, bx
		mov	cx, 100h
		mov	ax, 0
		rep stosw

loc_0_339F:				; CODE XREF: MAKEVIEW+CDEj
					; MAKEVIEW+D1Dj ...
		mov	si, ds:[bp+0]
		cmp	bp, 3790h
		jge	loc_0_33AC
		jmp	loc_0_3450
;����������������������������������������������������������������������������

loc_0_33AC:				; CODE XREF: MAKEVIEW+C81j
		mov	ax, [si+2]
		mov	dx, [si+4]
		cmp	ax, dx
		jl	loc_0_33BA
		nop
		nop
		nop
		xchg	ax, dx

loc_0_33BA:				; CODE XREF: MAKEVIEW+C8Ej
		cmp	ax, 0
		jge	loc_0_33C5
		nop
		nop
		nop
		mov	ax, 0

loc_0_33C5:				; CODE XREF: MAKEVIEW+C97j
		cmp	dx, ds:2630h
		jle	loc_0_33D2
		nop
		nop
		nop
		mov	dx, ds:2630h

loc_0_33D2:				; CODE XREF: MAKEVIEW+CA3j
		sub	dx, ax
		cmp	byte ptr [si], 0FFh
		jz	loc_0_3406
		nop
		nop
		nop
		mov	di, ax
		add	di, [si+10h]
		mov	cx, dx
		mov	ax, 1
		cmp	cx, 0
		jg	loc_0_33F1
		nop
		nop
		nop
		mov	cx, 1

loc_0_33F1:				; CODE XREF: MAKEVIEW+CC3j
					; MAKEVIEW+CCEj
		add	ah, [di]
		stosb
		loop	loc_0_33F1
		cmp	ah, dl
		jnz	loc_0_3401
		nop
		nop
		nop
		mov	byte ptr [si+14h], 0

loc_0_3401:				; CODE XREF: MAKEVIEW+CD2j
		sub	bp, 2
		jmp	short loc_0_339F
;����������������������������������������������������������������������������

loc_0_3406:				; CODE XREF: MAKEVIEW+CB1j
		mov	di, ax
		add	di, 39F6h
		mov	cx, dx
		cmp	cx, 0
		jg	loc_0_3419
		nop
		nop
		nop
		mov	cx, 1

loc_0_3419:				; CODE XREF: MAKEVIEW+CEBj
					; MAKEVIEW+CF6j
		add	ah, [di]
		inc	di
		loop	loc_0_3419
		cmp	ah, dl
		jz	loc_0_3446
		nop
		nop
		nop
		mov	si, [si+0Ah]
		sub	si, 0Dh
		cmp	si, 6DCEh
		jb	loc_0_3440
		nop
		nop
		nop
		cmp	si, 93B6h
		ja	loc_0_3440
		nop
		nop
		nop
		or	word ptr [si], 8

loc_0_3440:				; CODE XREF: MAKEVIEW+D09j
					; MAKEVIEW+D12j
		sub	bp, 2
		jmp	loc_0_339F
;����������������������������������������������������������������������������

loc_0_3446:				; CODE XREF: MAKEVIEW+CFAj
		mov	byte ptr [si+14h], 0
		sub	bp, 2
		jmp	loc_0_339F
;����������������������������������������������������������������������������

loc_0_3450:				; CODE XREF: MAKEVIEW+C83j
		pop	es
		assume es:nothing

loc_0_3451:				; CODE XREF: MAKEVIEW+C03j
		mov	word ptr ds:273Eh, 0
		mov	word ptr ds:273Ah, 4000h
		mov	word ptr ds:273Ch, 40h ; '@'
		mov	word ptr ds:2738h, 26B8h
		cmp	word ptr ds:3776h, 1
		jz	loc_0_34AC
		nop
		nop
		nop
		mov	ax, ds:0D704h
		mov	es, ax
		mov	di, 3790h

loc_0_347B:				; CODE XREF: MAKEVIEW+D6Ej
					; MAKEVIEW+D77j ...
		mov	si, [di]
		add	di, 2
		cmp	byte ptr [si], 80h ; '�'
		jnz	loc_0_3488
		jmp	loc_0_355E
;����������������������������������������������������������������������������

loc_0_3488:				; CODE XREF: MAKEVIEW+D5Dj
		cmp	byte ptr [si], 0FFh
		jz	loc_0_349F
		nop
		nop
		nop
		cmp	byte ptr [si+14h], 0
		jz	loc_0_347B
		mov	bx, si
		push	di
		call	COLLISIONS
		pop	di
		jmp	short loc_0_347B
;����������������������������������������������������������������������������

loc_0_349F:				; CODE XREF: MAKEVIEW+D65j
		cmp	byte ptr [si+14h], 0
		jz	loc_0_347B
		push	di
		call	SPRITER
		pop	di
		jmp	short loc_0_347B
;����������������������������������������������������������������������������

loc_0_34AC:				; CODE XREF: MAKEVIEW+D48j
		mov	ax, ds:0D704h
		mov	es, ax
		mov	di, 3790h

loc_0_34B4:				; CODE XREF: MAKEVIEW+DE4j
					; MAKEVIEW+E1Ej ...
		mov	word ptr ds:273Ah, 4000h
		mov	word ptr ds:273Ch, 40h ; '@'
		mov	word ptr ds:2738h, 26B8h
		mov	si, [di]
		add	di, 2
		cmp	byte ptr [si], 80h ; '�'
		jnz	loc_0_34D3
		jmp	loc_0_355E
;����������������������������������������������������������������������������

loc_0_34D3:				; CODE XREF: MAKEVIEW+DA8j
		cmp	byte ptr [si], 0FFh
		jz	loc_0_3556
		nop
		nop
		nop
		cmp	byte ptr [si+1], 0Ah
		jz	loc_0_34FF
		nop
		nop
		nop
		cmp	byte ptr [si+1], 8
		jz	loc_0_34FF
		nop
		nop
		nop
		cmp	byte ptr [si+1], 0Bh
		jz	loc_0_34FF
		nop
		nop
		nop
		cmp	byte ptr [si+1], 0Dh
		jnz	loc_0_3505
		nop
		nop
		nop

loc_0_34FF:				; CODE XREF: MAKEVIEW+DB9j
					; MAKEVIEW+DC2j ...
		mov	word ptr ds:273Eh, 1

loc_0_3505:				; CODE XREF: MAKEVIEW+DD4j
		cmp	word ptr [si+10h], 39F6h
		jnz	loc_0_34B4
		cmp	byte ptr [si+14h], 0
		jnz	loc_0_354C
		nop
		nop
		nop
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	loc_0_354C
		nop
		nop
		nop
		mov	word ptr ds:273Ah, 1000h
		mov	word ptr ds:273Ch, 10h
		mov	word ptr ds:2738h, 2718h
		mov	word ptr ds:273Eh, 0
		mov	al, [si+17h]
		shr	al, 1
		shr	al, 1
		shr	al, 1
		shr	al, 1
		jnz	loc_0_3547
		jmp	loc_0_34B4
;����������������������������������������������������������������������������

loc_0_3547:				; CODE XREF: MAKEVIEW+E1Cj
		dec	al
		mov	[si+1],	al

loc_0_354C:				; CODE XREF: MAKEVIEW+DEAj
					; MAKEVIEW+DF4j
		mov	bx, si
		push	di
		call	COLLISIONS
		pop	di
		jmp	loc_0_34B4
;����������������������������������������������������������������������������

loc_0_3556:				; CODE XREF: MAKEVIEW+DB0j
		push	di
		call	SPRITER
		pop	di
		jmp	loc_0_34B4
;����������������������������������������������������������������������������

loc_0_355E:				; CODE XREF: MAKEVIEW+D5Fj
					; MAKEVIEW+DAAj
		pop	es
		retn
MAKEVIEW	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COLLISIONS	proc near		; CODE XREF: MAKEVIEW+D73p
					; MAKEVIEW+E29p
		mov	ax, [bx+15h]
		mov	ds:3760h, ax
		push	ds
		push	es
		push	bx
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	ax, SCREEN2
		mov	es, ax
		assume es:nothing
		mov	ax, [bx+4]
		sub	ax, [bx+2]
		cmp	ax, 0
		jge	loc_0_35A9
		nop
		nop
		nop
		push	ax
		mov	ax, [bx+2]
		mov	cx, [bx+4]
		mov	[bx+2],	cx
		mov	[bx+4],	ax
		mov	ax, [bx+6]
		mov	cx, [bx+0Ah]
		mov	[bx+6],	cx
		mov	[bx+0Ah], ax
		mov	ax, [bx+8]
		mov	cx, [bx+0Ch]
		mov	[bx+8],	cx
		mov	[bx+0Ch], ax
		pop	ax
		neg	ax

loc_0_35A9:				; CODE XREF: COLLISIONS+1Cj
		inc	ax
		mov	word_FFD_4EFE, ax
		mov	word_FFD_4F00, ax
		mov	COLMISSES, 0
		mov	ax, [bx+2]
		cmp	ax, 0
		jge	loc_0_35C4
		nop
		nop
		nop
		mov	COLMISSES, ax

loc_0_35C4:				; CODE XREF: COLLISIONS+5Cj
		dec	COLMISSES
		mov	ax, [bx+4]
		sub	ax, VIEWPORTW
		cmp	ax, 0
		jl	loc_0_35DC
		nop
		nop
		nop
		inc	ax
		sub	word_FFD_4EFE, ax

loc_0_35DC:				; CODE XREF: COLLISIONS+72j
		mov	ax, [bx+6]
		mov	word_FFD_4F08, ax
		mov	dx, 140h
		mul	dx
		add	ax, [bx+2]
		mov	COLDI, ax
		mov	word_FFD_4EF4, 0
		mov	word_FFD_4EF2, 1
		mov	ax, [bx+0Ah]
		sub	ax, [bx+6]
		jge	loc_0_360C
		nop
		nop
		nop
		mov	word_FFD_4EF2, 0
		neg	ax

loc_0_360C:				; CODE XREF: COLLISIONS+9Fj
		xor	dx, dx
		mov	dl, ah
		mov	ah, al
		xor	al, al
		mov	cx, word_FFD_4F00
		div	cx
		mov	word_FFD_4EF0, ax
		mov	word_FFD_4EFC, 1
		mov	ax, [bx+0Ch]
		sub	ax, [bx+8]
		jge	loc_0_3636
		nop
		nop
		nop
		mov	word_FFD_4EFC, 0
		neg	ax

loc_0_3636:				; CODE XREF: COLLISIONS+C9j
		xor	dx, dx
		mov	dl, ah
		mov	ah, al
		xor	al, al
		div	cx
		mov	COLHTINC, ax
		mov	ax, [bx+8]
		sub	ax, [bx+6]
		inc	ax
		xor	dh, dh
		mov	dl, ah
		mov	ah, al
		xor	al, al
		mov	COLHT, ax
		mov	word_FFD_4EF8, dx
		mov	word_FFD_4F02, 0
		xor	dx, dx
		mov	ax, word_FFD_273A
		div	cx
		mov	WWIDTHINC, ax
		mov	al, [bx+1]
		xor	ah, ah
		cmp	LEVEL, 0FFFFh
		jnz	loc_0_3697
		nop
		nop
		nop
		cmp	ax, 2
		jnz	loc_0_3687
		nop
		nop
		nop
		add	ax, FRAME3
		jmp	short loc_0_36A2
;����������������������������������������������������������������������������
		nop

loc_0_3687:				; CODE XREF: COLLISIONS+11Bj
		cmp	ax, 3
		jnz	loc_0_36A2
		nop
		nop
		nop
		add	ax, FRAME3
		dec	ax
		jmp	short loc_0_36A2
;����������������������������������������������������������������������������
		nop

loc_0_3697:				; CODE XREF: COLLISIONS+113j
		cmp	ax, 3
		jnz	loc_0_36A2
		nop
		nop
		nop
		call	DO_SIGN

loc_0_36A2:				; CODE XREF: COLLISIONS+124j
					; COLLISIONS+12Aj ...
		shl	ax, 1
		mov	bx, word_FFD_2738
		add	bx, ax
		mov	ax, [bx]
		mov	word_FFD_4F06, ax
		mov	cx, word_FFD_4EFE

loc_0_36B3:				; CODE XREF: COLLISIONS+20Bj
		inc	COLMISSES
		jl	loc_0_36C0
		nop
		nop
		nop
		call	word_FFD_3760

loc_0_36C0:				; CODE XREF: COLLISIONS+157j
		mov	ax, COLHTINC
		cmp	word_FFD_4EFC, 0
		jnz	loc_0_36CF
		nop
		nop
		nop
		neg	ax

loc_0_36CF:				; CODE XREF: COLLISIONS+168j
		mov	bp, ax
		mov	ax, word_FFD_4EF0
		cmp	word_FFD_4EF2, 0
		jz	loc_0_36E0
		nop
		nop
		nop
		neg	ax

loc_0_36E0:				; CODE XREF: COLLISIONS+179j
		add	bp, ax
		cmp	bp, 0
		jg	loc_0_36F8
		nop
		nop
		nop
		neg	bp
		sub	COLHT, bp
		sbb	word_FFD_4EF8, 0
		jmp	short loc_0_3701
;����������������������������������������������������������������������������
		nop

loc_0_36F8:				; CODE XREF: COLLISIONS+185j
		add	COLHT, bp
		adc	word_FFD_4EF8, 0

loc_0_3701:				; CODE XREF: COLLISIONS+195j
		inc	COLDI
		mov	ax, word_FFD_4EF0
		add	ax, word_FFD_4EF4
		cmp	ah, 0
		jz	loc_0_373A
		nop
		nop
		nop
		push	ax
		mov	al, ah
		xor	ah, ah
		mov	di, ax
		mov	bp, ax
		mov	ax, 140h
		cmp	word_FFD_4EF2, 0
		jnz	loc_0_372E
		nop
		nop
		nop
		neg	bp
		neg	ax

loc_0_372E:				; CODE XREF: COLLISIONS+1C5j
					; COLLISIONS+1D3j
		add	COLDI, ax
		dec	di
		jnz	loc_0_372E
		add	word_FFD_4F08, bp
		pop	ax

loc_0_373A:				; CODE XREF: COLLISIONS+1AFj
		xor	ah, ah
		mov	word_FFD_4EF4, ax
		mov	ax, WWIDTHINC
		add	ax, word_FFD_4F02
		cmp	ah, 0
		jz	loc_0_3760
		nop
		nop
		nop
		push	ax
		mov	al, ah
		xor	ah, ah
		mov	di, ax
		mov	ax, 140h

loc_0_3758:				; CODE XREF: COLLISIONS+1FDj
		add	word_FFD_4F06, ax
		dec	di
		jnz	loc_0_3758
		pop	ax

loc_0_3760:				; CODE XREF: COLLISIONS+1E9j
		xor	ah, ah
		mov	word_FFD_4F02, ax
		dec	cx
		jz	loc_0_376E
		nop
		nop
		nop
		jmp	loc_0_36B3
;����������������������������������������������������������������������������

loc_0_376E:				; CODE XREF: COLLISIONS+206j
		pop	bx
		add	bx, 19h
		pop	es
		assume es:nothing
		pop	ds
		assume ds:nothing
		retn
COLLISIONS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DRAW_SMTHNG4?	proc near
		push	cx
		mov	cx, ds:4EF7h
		cmp	cx, ds:273Ch
		jle	loc_0_3783
		jmp	loc_0_3852
;����������������������������������������������������������������������������

loc_0_3783:				; CODE XREF: DRAW_SMTHNG4?+9j
		cmp	cx, 0
		jnz	loc_0_378E
		nop
		nop
		nop
		mov	cx, 1

loc_0_378E:				; CODE XREF: DRAW_SMTHNG4?+11j
		xor	dx, dx
		mov	ax, ds:273Ah
		div	cx
		mov	si, ds:4F06h
		mov	di, ds:4EEEh
		mov	bp, ds:4F08h
		cmp	bp, ds:262Eh
		jge	loc_0_3814
		nop
		nop
		nop
		mov	byte ptr ds:3782h, 0
		cmp	bp, 0
		jge	loc_0_37DC
		nop
		nop
		nop
		xchg	ax, bp
		neg	ax
		sub	cx, ax
		jle	loc_0_3814
		nop
		nop
		nop
		mov	bx, ax
		mul	bp
		mov	ds:3782h, al
		mov	al, ah
		mov	ah, dl
		add	si, ax
		mov	ax, bx
		mov	bx, 140h
		mul	bx
		add	di, ax
		mov	ax, bp
		mov	bp, 0

loc_0_37DC:				; CODE XREF: DRAW_SMTHNG4?+3Dj
		add	bp, cx
		sub	bp, ds:262Eh
		cmp	bp, 0
		jle	loc_0_37EC
		nop
		nop
		nop
		sub	cx, bp

loc_0_37EC:				; CODE XREF: DRAW_SMTHNG4?+70j
		xor	dh, dh
		mov	dl, ah
		mov	ah, ds:3782h
		mov	bp, dx
		dec	bp
		cmp	word ptr ds:273Eh, 1
		jz	loc_0_3816
		nop
		nop
		nop
		push	ds
		mov	dx, ds:0D70Ah
		mov	ds, dx

loc_0_3808:				; CODE XREF: DRAW_SMTHNG4?+9Cj
		movsb
		add	ah, al
		adc	si, bp
		add	di, 13Fh
		loop	loc_0_3808
		pop	ds

loc_0_3814:				; CODE XREF: DRAW_SMTHNG4?+30j
					; DRAW_SMTHNG4?+47j
		pop	cx
		retn
;����������������������������������������������������������������������������

loc_0_3816:				; CODE XREF: DRAW_SMTHNG4?+87j
		mov	bl, ds:262Ah
		push	ds
		mov	dx, ds:0D70Ah
		mov	ds, dx

loc_0_3821:				; CODE XREF: DRAW_SMTHNG4?+D8j
		mov	dl, [si]
		cmp	dl, 20h	; ' '
		jnz	loc_0_3840
		nop
		nop
		nop
		mov	dl, es:[di]
		cmp	dl, 90h	; '�'
		jl	loc_0_3843
		nop
		nop
		nop
		cmp	dl, 9Fh	; '�'
		jg	loc_0_3843
		nop
		nop
		nop
		mov	dl, bl

loc_0_3840:				; CODE XREF: DRAW_SMTHNG4?+B1j
		mov	es:[di], dl

loc_0_3843:				; CODE XREF: DRAW_SMTHNG4?+BCj
					; DRAW_SMTHNG4?+C4j
		inc	si
		inc	di
		add	ah, al
		adc	si, bp
		add	di, 13Fh
		loop	loc_0_3821
		pop	ds
		pop	cx
		retn
;����������������������������������������������������������������������������

loc_0_3852:				; CODE XREF: DRAW_SMTHNG4?+Bj
		mov	dx, ds:273Ch
		xor	ax, ax
		div	cx
		mov	si, ds:4F06h
		mov	di, ds:4EEEh
		mov	bp, ds:4F08h
		cmp	bp, ds:262Eh
		jge	loc_0_38D0
		nop
		nop
		nop
		mov	word ptr ds:3782h, 0
		cmp	bp, 0
		jge	loc_0_389E
		nop
		nop
		nop
		xchg	ax, bp
		neg	ax
		sub	cx, ax
		jle	loc_0_38D0
		nop
		nop
		nop
		mov	bx, ax
		mul	bp
		mov	ds:3782h, ax
		add	si, dx
		mov	ax, bx
		mov	bx, 140h
		mul	bx
		add	di, ax
		mov	ax, bp
		mov	bp, 0

loc_0_389E:				; CODE XREF: DRAW_SMTHNG4?+103j
		add	bp, cx
		sub	bp, ds:262Eh
		cmp	bp, 0
		jle	loc_0_38AE
		nop
		nop
		nop
		sub	cx, bp

loc_0_38AE:				; CODE XREF: DRAW_SMTHNG4?+132j
		mov	bx, ds:3782h
		cmp	word ptr ds:273Eh, 1
		jz	loc_0_38D2
		nop
		nop
		nop
		push	ds
		mov	dx, ds:0D70Ah
		mov	ds, dx

loc_0_38C3:				; CODE XREF: DRAW_SMTHNG4?+158j
		movsb
		add	bx, ax
		adc	si, 0FFFFh
		add	di, 13Fh
		loop	loc_0_38C3
		pop	ds

loc_0_38D0:				; CODE XREF: DRAW_SMTHNG4?+F5j
					; DRAW_SMTHNG4?+10Dj
		pop	cx
		retn
;����������������������������������������������������������������������������

loc_0_38D2:				; CODE XREF: DRAW_SMTHNG4?+142j
		mov	bp, bx
		mov	bl, ds:262Ah
		push	ds
		mov	dx, ds:0D70Ah
		mov	ds, dx
		mov	dh, bl
		mov	bx, bp

loc_0_38E3:				; CODE XREF: DRAW_SMTHNG4?+19Bj
		mov	dl, [si]
		cmp	dl, 20h	; ' '
		jnz	loc_0_3902
		nop
		nop
		nop
		mov	dl, es:[di]
		cmp	dl, 90h	; '�'
		jl	loc_0_3905
		nop
		nop
		nop
		cmp	dl, 9Fh	; '�'
		jg	loc_0_3905
		nop
		nop
		nop
		mov	dl, dh

loc_0_3902:				; CODE XREF: DRAW_SMTHNG4?+173j
		mov	es:[di], dl

loc_0_3905:				; CODE XREF: DRAW_SMTHNG4?+17Ej
					; DRAW_SMTHNG4?+186j
		inc	si
		inc	di
		add	bx, ax
		adc	si, 0FFFFh
		add	di, 13Fh
		loop	loc_0_38E3
		pop	ds
		pop	cx
		retn
DRAW_SMTHNG4?	endp

;����������������������������������������������������������������������������
		db    0	;
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	byte ptr ds:3915h, 20h ; ' '

loc_0_391D:				; CODE XREF: SET_UNK_16+5j
					; SET_UNK_32+5j ...
		push	cx
		mov	cx, ds:4EF7h
		cmp	cx, ds:273Ch
		jle	loc_0_392B
		jmp	loc_0_3A0A
;����������������������������������������������������������������������������

loc_0_392B:				; CODE XREF: seg000:3926j
		cmp	cx, 0
		jnz	loc_0_3936
		nop
		nop
		nop
		mov	cx, 1

loc_0_3936:				; CODE XREF: seg000:392Ej
		xor	dx, dx
		mov	ax, ds:273Ah
		div	cx
		mov	si, ds:4F06h
		mov	di, ds:4EEEh
		mov	bp, ds:4F08h	; COLHTINC
		cmp	bp, ds:262Eh	; XFACTOR
		jge	loc_0_39C7
		nop
		nop
		nop
		mov	byte ptr ds:3782h, 0
		cmp	bp, 0
		jge	loc_0_3984
		nop
		nop
		nop
		xchg	ax, bp
		neg	ax
		sub	cx, ax
		jle	loc_0_39C7
		nop
		nop
		nop
		mov	bx, ax
		mul	bp
		mov	ds:3782h, al
		mov	al, ah
		mov	ah, dl
		add	si, ax
		mov	ax, bx
		mov	bx, 140h	; 320
		mul	bx
		add	di, ax
		mov	ax, bp
		mov	bp, 0

loc_0_3984:				; CODE XREF: seg000:395Aj
		add	bp, cx
		sub	bp, ds:262Eh	; XFACTOR
		cmp	bp, 0
		jle	loc_0_3994
		nop
		nop
		nop
		sub	cx, bp

loc_0_3994:				; CODE XREF: seg000:398Dj
		xor	dh, dh
		mov	dl, ah
		mov	ah, ds:3782h	; UNK2
		mov	bp, dx
		cmp	word ptr ds:273Eh, 1
		jz	loc_0_39C9
		nop
		nop
		nop
		push	ds
		mov	dx, ds:0D70Ah	; PANELSEG
		mov	ds, dx
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	dh, ds:3915h

loc_0_39B5:				; CODE XREF: seg000:39C4j
		mov	dl, [si]
		add	dl, dh
		mov	es:[di], dl
		add	ah, al
		adc	si, bp
		add	di, 140h	; 320
		loop	loc_0_39B5
		pop	ds

loc_0_39C7:				; CODE XREF: seg000:394Dj seg000:3964j
		pop	cx
		retn
;����������������������������������������������������������������������������

loc_0_39C9:				; CODE XREF: seg000:39A3j
		mov	bl, ds:262Ah
		push	ds
		mov	dx, ds:0D70Ah
		mov	ds, dx
		mov	dh, 20h	; ' '

loc_0_39D6:				; CODE XREF: seg000:3A05j
		mov	dl, [si]
		cmp	dl, 20h	; ' '
		jnz	loc_0_39F8
		nop
		nop
		nop
		mov	dl, es:[di]
		cmp	dl, 90h	; '�'
		jl	loc_0_39FD
		nop
		nop
		nop
		cmp	dl, 9Fh	; '�'
		jg	loc_0_39FD
		nop
		nop
		nop
		mov	dl, bl
		jmp	short loc_0_39FA
;����������������������������������������������������������������������������
		nop

loc_0_39F8:				; CODE XREF: seg000:39DBj
		add	dl, dh

loc_0_39FA:				; CODE XREF: seg000:39F5j
		mov	es:[di], dl

loc_0_39FD:				; CODE XREF: seg000:39E6j seg000:39EEj
		add	ah, al
		adc	si, bp
		add	di, 140h
		loop	loc_0_39D6
		pop	ds
		pop	cx
		retn
;����������������������������������������������������������������������������

loc_0_3A0A:				; CODE XREF: seg000:3928j
		mov	dx, ds:273Ch
		xor	ax, ax
		div	cx
		mov	si, ds:4F06h
		mov	di, ds:4EEEh
		mov	bp, ds:4F08h
		cmp	bp, ds:262Eh
		jge	loc_0_3A94
		nop
		nop
		nop
		mov	word ptr ds:3782h, 0
		cmp	bp, 0
		jge	loc_0_3A56
		nop
		nop
		nop
		xchg	ax, bp
		neg	ax
		sub	cx, ax
		jle	loc_0_3A94
		nop
		nop
		nop
		mov	bx, ax
		mul	bp
		mov	ds:3782h, ax
		add	si, dx
		mov	ax, bx
		mov	bx, 140h
		mul	bx
		add	di, ax
		mov	ax, bp
		mov	bp, 0

loc_0_3A56:				; CODE XREF: seg000:3A30j
		add	bp, cx
		sub	bp, ds:262Eh
		cmp	bp, 0
		jle	loc_0_3A66
		nop
		nop
		nop
		sub	cx, bp

loc_0_3A66:				; CODE XREF: seg000:3A5Fj
		mov	bx, ds:3782h
		cmp	word ptr ds:273Eh, 1
		jz	loc_0_3A96
		nop
		nop
		nop
		push	ds
		mov	dx, ds:0D70Ah
		mov	ds, dx
;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .
;����������������������������������������������������������������������������
		mov	dh, ds:3915h

loc_0_3A81:				; CODE XREF: seg000:3A91j
		mov	dl, [si]
		add	dl, dh
		mov	es:[di], dl
		add	bx, ax
		adc	si, 0
		add	di, 140h
		loop	loc_0_3A81
		pop	ds

loc_0_3A94:				; CODE XREF: seg000:3A22j seg000:3A3Aj
		pop	cx
		retn
;����������������������������������������������������������������������������

loc_0_3A96:				; CODE XREF: seg000:3A6Fj
		mov	bp, bx
		mov	bl, ds:262Ah
		push	ds
		mov	dx, ds:0D70Ah
		mov	ds, dx
		mov	dh, bl
		mov	bx, bp

loc_0_3AA7:				; CODE XREF: seg000:3AD8j
		mov	dl, [si]
		cmp	dl, 20h	; ' '
		jnz	loc_0_3AC9
		nop
		nop
		nop
		mov	dl, es:[di]
		cmp	dl, 90h	; '�'
		jl	loc_0_3ACF
		nop
		nop
		nop
		cmp	dl, 9Fh	; '�'
		jg	loc_0_3ACF
		nop
		nop
		nop
		mov	dl, dh
		jmp	short loc_0_3ACC
;����������������������������������������������������������������������������
		nop

loc_0_3AC9:				; CODE XREF: seg000:3AACj
		add	dl, 20h	; ' '

loc_0_3ACC:				; CODE XREF: seg000:3AC6j
		mov	es:[di], dl

loc_0_3ACF:				; CODE XREF: seg000:3AB7j seg000:3ABFj
		add	bx, ax
		adc	si, 0
		add	di, 140h
		loop	loc_0_3AA7
		pop	ds
		pop	cx
		retn

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SET_BRAZFRAME	proc near		; CODE XREF: MAKEVIEW+ACCp
		cmp	word ptr ds:13Bh, 0; Si	BRAZFLAG es 0x00
		jz	loc_0_3AFE
		nop
		nop
		nop
		cmp	byte ptr ds:608Dh, 0FFh; Si BRAZFRAME es 0xFF
		jz	locret_0_3B43
		nop
		nop
		nop
		mov	byte ptr ds:608Dh, 0FFh; Si BRAZFRAME es 0xFF
		mov	ax, 0E8h ; '�'
		mov	si, ax
		jmp	short loc_0_3B17
;����������������������������������������������������������������������������
		nop

loc_0_3AFE:				; CODE XREF: SET_BRAZFRAME+5j
		mov	ax, ds:6864h	; FRAME3
		cmp	ds:608Dh, al	; BRAZFRAME
		jz	locret_0_3B43
		nop
		nop
		nop
		mov	ds:608Dh, al	; BRAZFRAME
		mov	dx, 1180h
		mul	dx
		add	ax, 2877h
		mov	si, ax

loc_0_3B17:				; CODE XREF: SET_BRAZFRAME+1Ej
		push	ds
		mov	dx, ds:0D708h
		mov	ds, dx
		mov	dx, 0Eh
		mov	bp, 0Eh
		mov	di, 0
		mov	bx, 124h

loc_0_3B2A:				; CODE XREF: SET_BRAZFRAME+63j
		mov	cx, bp

loc_0_3B2C:				; CODE XREF: SET_BRAZFRAME+5Cj
		lodsw
		and	word ptr [di], 0F0F0h
		and	ax, 0F0Fh
		or	[di], ax
		add	di, 2
		loop	loc_0_3B2C
		add	si, bx
		add	di, bx
		dec	dx
		jnz	loc_0_3B2A
		pop	ds

locret_0_3B43:				; CODE XREF: SET_BRAZFRAME+Fj
					; SET_BRAZFRAME+28j
		retn
SET_BRAZFRAME	endp

;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SET_UNK_16	proc near
		mov	byte ptr ds:3915h, 10h
		jmp	loc_0_391D
SET_UNK_16	endp

;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SET_UNK_32	proc near
		mov	byte ptr ds:3915h, 20h ; ' '
		jmp	loc_0_391D
SET_UNK_32	endp

;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SET_UNK_48	proc near		; 48
		mov	byte ptr ds:3915h, 30h ; '0'
		jmp	loc_0_391D
SET_UNK_48	endp

;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SET_UNK_80	proc near
		mov	byte ptr ds:3915h, 50h ; 'P'
		jmp	loc_0_391D
SET_UNK_80	endp

;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SET_UNK_96	proc near
		mov	byte ptr ds:3915h, 60h ; '`'
		jmp	loc_0_391D
SET_UNK_96	endp

;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SET_UNK_112	proc near
		mov	byte ptr ds:3915h, 70h ; 'p'
		jmp	loc_0_391D
SET_UNK_112	endp

;����������������������������������������������������������������������������
		db  2Eh	; .
		db  2Eh	; .

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SET_UNK_128	proc near
		mov	byte ptr ds:3915h, 80h ; '�'
		jmp	loc_0_391D
SET_UNK_128	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PLAYER_MOVE	proc near
		mov	si, bx
		mov	ax, ds:0ACDh	; HEROX
		mov	cx, ds:0ACFh	; HEROY
		push	ds
		mov	bp, ds:0D70Ch	; MAPSEG
		mov	ds, bp

loc_0_3B9A:				; CODE XREF: PLAYER_MOVE+1Bj
		add	ax, dx		; HEROX+=dx
		add	cx, si		; HEROY+=si
		mov	bl, ah
		mov	bh, ch
		test	byte ptr [bx], 1; COLISION?
		jnz	loc_0_3B9A
		pop	ds
		mov	ax, bx
		retn
PLAYER_MOVE	endp

;����������������������������������������������������������������������������
		db    0	;

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADTRIG	proc near		; CODE XREF: START+240p
		mov	dx, 5A88h
		mov	bp, 2D2h
		mov	si, 50E2h
		mov	di, seg001
		call	LOAD
		mov	dx, 5A95h
		mov	bp, 402h
		mov	si, 5686h
		mov	di, seg001
		call	LOAD
		mov	bx, 50E2h
		mov	di, 53B4h
		mov	cx, 169h

loc_0_3BD3:				; CODE XREF: LOADTRIG+3Dj
		mov	ax, [bx]
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		mov	[di], ax
		add	bx, 2
		add	di, 2
		loop	loc_0_3BD3
		retn
LOADTRIG	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COSA8		proc near
		sub	ax, 438h
		mov	bx, 53B4h
		jmp	short loc_0_3BFB
;����������������������������������������������������������������������������
		nop
COSA8		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COSA		proc near		; CODE XREF: SETTRIG+Cp MAKETILETABLES+6p
					; ...
		sub	ax, 438h
COSA		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SINA		proc near		; CODE XREF: SETTRIG+3p MAKETILETABLES+Dp
					; ...
		mov	bx, 50E2h	; 20706

loc_0_3BFB:				; CODE XREF: COSA8+6j SINA+Bj
		test	ax, 8000h	; 32768
		jns	loc_0_3C05
		add	ax, 5A0h	; 1440
		jmp	short loc_0_3BFB
;����������������������������������������������������������������������������

loc_0_3C05:				; CODE XREF: SINA+6j
		cmp	ax, 5A0h	; 1440
		jl	loc_0_3C0D
		sub	ax, 5A0h	; 1440

loc_0_3C0D:				; CODE XREF: SINA+10j
		mov	cx, ax
		sub	dx, dx
		cmp	ax, 438h	; 1080
		jl	loc_0_3C21
		mov	dx, 3
		sub	cx, 5A0h	; 1440
		neg	cx
		jmp	short loc_0_3C3D
;����������������������������������������������������������������������������

loc_0_3C21:				; CODE XREF: SINA+1Cj
		cmp	ax, 2D0h	; 720
		jl	loc_0_3C2F
		mov	dx, 2
		sub	cx, 2D0h	; 720
		jmp	short loc_0_3C3D
;����������������������������������������������������������������������������

loc_0_3C2F:				; CODE XREF: SINA+2Cj
		cmp	ax, 168h	; 360
		jl	loc_0_3C3D
		mov	dx, 1
		sub	cx, 2D0h	; 720
		neg	cx

loc_0_3C3D:				; CODE XREF: SINA+27j SINA+35j
					; ...
		shl	cx, 1
		mov	di, cx
		mov	ax, [bx+di]
		test	dx, 2
		jz	locret_0_3C4B
		neg	ax

locret_0_3C4B:				; CODE XREF: SINA+4Fj
		retn
SINA		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

ARCTAN		proc near		; CODE XREF: MAKEVIEW+614p
					; MAKEVIEW+698p ...
		cmp	ax, 0
		jnz	loc_0_3C5E
		mov	di, 168h	; 360
		cmp	dx, 0
		jg	locret_0_3C5D
		add	di, 2D0h	; 720

locret_0_3C5D:				; CODE XREF: ARCTAN+Bj
		retn
;����������������������������������������������������������������������������

loc_0_3C5E:				; CODE XREF: ARCTAN+3j
		push	ax
		push	dx
		test	dx, 8000h	; 32768
		jns	loc_0_3C68
		neg	dx

loc_0_3C68:				; CODE XREF: ARCTAN+18j
		test	ax, 8000h	; 32768
		jns	loc_0_3C6F
		neg	ax

loc_0_3C6F:				; CODE XREF: ARCTAN+1Fj
		push	ax
		push	dx
		cmp	dx, ax
		jb	loc_0_3C76
		xchg	ax, dx

loc_0_3C76:				; CODE XREF: ARCTAN+27j
		mov	bx, ax
		mov	ax, dx
		sub	dx, dx
		shl	ax, 1
		rcl	dx, 1
		mov	dl, ah
		mov	ah, al
		sub	al, al
		div	bx
		mov	bx, 5686h	; 22150
		shl	ax, 1
		add	bx, ax
		mov	di, [bx]
		pop	dx
		pop	ax
		cmp	dx, ax
		jb	loc_0_3C9D
		sub	di, 168h	; 360
		neg	di

loc_0_3C9D:				; CODE XREF: ARCTAN+49j
		pop	dx
		pop	ax
		test	ax, 8000h	; 32768
		js	loc_0_3CB1
		test	dx, 8000h	; 32768
		jns	locret_0_3CB0
		sub	di, 5A0h	; 1440
		neg	di

locret_0_3CB0:				; CODE XREF: ARCTAN+5Cj
		retn
;����������������������������������������������������������������������������

loc_0_3CB1:				; CODE XREF: ARCTAN+56j
		test	dx, 8000h	; 32768
		jns	loc_0_3CBC
		add	di, 2D0h	; 720
		retn
;����������������������������������������������������������������������������

loc_0_3CBC:				; CODE XREF: ARCTAN+69j
		sub	di, 2D0h	; 720
		neg	di
		retn
ARCTAN		endp

;����������������������������������������������������������������������������
		db    0	;

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CONTROLLER	proc near		; CODE XREF: START+279p
		call	CALCVIEWPARMS
		call	SETRATES
		call	C_RANDINIT
		call	P_RANDINIT
		call	PUT_TRIVIA
		mov	ax, 7
		call	LOADSPRITES
		call	SET_TODAYS_JOB
		call	MAKEREGULARS
		mov	dx, 0D733h	; AUTOLOAD
		mov	bp, 2
		mov	si, 0D731h	; AUTONO
		mov	di, seg001
		call	LOAD
		cmp	word ptr ds:0D731h, 0; AUTONO==0
		jz	loc_0_3CFF
		nop
		nop
		nop
		mov	ax, ds:0D731h	; ax=AUTONO
		dec	ax		; --ax
		call	LOADDATASEG

loc_0_3CFF:				; CODE XREF: CONTROLLER+2Fj
		push	es
		mov	ax, 1Bh		; 27
		push	ax
		mov	es, ds:0D714h	; SOUNDSEG
		call	dword ptr ds:0D6E4h; SENDSND
		inc	sp		; ++sp
		inc	sp		; ++sp
		pop	es
		call	MAKEVIEW
		call	BACKTOGAME
		mov	word ptr ds:68A2h, 1; INPUTMODE
		jmp	short loc_0_3D1E
;����������������������������������������������������������������������������
		nop

loc_0_3D1E:				; CODE XREF: CONTROLLER+57j
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0
		mov	dx, 270h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 88h	; '�'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 96h	; '�'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	byte ptr ds:13Dh, 1

loc_0_3D4E:				; CODE XREF: CONTROLLER+B99j
		call	RAND
		cmp	word ptr ds:0ADDh, 0FFFFh; LEVEL
		jz	loc_0_3DC5
		nop
		nop
		nop
		mov	ax, ds:0D744h	; RAN
		cmp	ah, 1		; AH==1
		jz	loc_0_3D66
		jmp	loc_0_3DFD
;����������������������������������������������������������������������������

loc_0_3D66:				; CODE XREF: CONTROLLER+9Dj
		cmp	word ptr ds:0AF0h, 3; HOURS==3
		jl	loc_0_3DB2
		nop
		nop
		nop
		cmp	word ptr ds:0AF0h, 0Ch;	HOURS==12
		jg	loc_0_3DB2
		nop
		nop
		nop
		cmp	word ptr ds:5E5Ch, 5E7Eh; DAYCYCLE==5E7E
		jnz	loc_0_3DFD
		nop
		nop
		nop
		test	al, 8
		jz	loc_0_3D9F
		nop
		nop
		nop
		push	es
		mov	ax, 1Ch		; 28
		push	ax
		mov	es, ds:0D714h	; SOUNDSEG
		call	dword ptr ds:0D6E4h; SENDSND
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_3DFD
;����������������������������������������������������������������������������
		nop

loc_0_3D9F:				; CODE XREF: CONTROLLER+C3j
		push	es
		mov	ax, 1Bh		; 27
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_3DFD
;����������������������������������������������������������������������������
		nop

loc_0_3DB2:				; CODE XREF: CONTROLLER+A7j
					; CONTROLLER+B1j
		push	es
		mov	ax, 1Fh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_3DFD
;����������������������������������������������������������������������������
		nop

loc_0_3DC5:				; CODE XREF: CONTROLLER+92j
		mov	ax, ds:0D744h
		cmp	ax, 0C8h ; '�'
		ja	loc_0_3DFD
		nop
		nop
		nop
		test	al, 8
		jz	loc_0_3DEA
		nop
		nop
		nop
		push	es
		mov	ax, 18h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_3DFD
;����������������������������������������������������������������������������
		nop

loc_0_3DEA:				; CODE XREF: CONTROLLER+10Ej
		push	es
		mov	ax, 19h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_3DFD
;����������������������������������������������������������������������������
		nop

loc_0_3DFD:				; CODE XREF: CONTROLLER+9Fj
					; CONTROLLER+BCj ...
		mov	di, ds:0BB6h
		cmp	byte ptr [di+0Bh], 0Ah
		jnz	loc_0_3E10
		nop
		nop
		nop
		mov	ax, ds:0ADBh
		mov	ds:9A8Eh, ax

loc_0_3E10:				; CODE XREF: CONTROLLER+141j
		dec	word ptr ds:22DAh; FFLAG
		jge	loc_0_3E1F
		nop
		nop
		nop
		mov	word ptr ds:22DAh, 0; FFLAG

loc_0_3E1F:				; CODE XREF: CONTROLLER+150j
		inc	word ptr ds:0AE9h; PLAYERSEX
		inc	word ptr ds:6864h; FRAME3
		cmp	word ptr ds:6864h, 3; FRAME3
		jnz	loc_0_3E37
		nop
		nop
		nop
		mov	word ptr ds:6864h, 0; FRAME3

loc_0_3E37:				; CODE XREF: CONTROLLER+168j
		cmp	byte ptr ds:13Ah, 0; CLWFLAG
		jz	loc_0_3E49
		nop
		nop
		nop
		mov	byte ptr ds:13Ah, 0; CLWFLAG
		call	CLEARLOCWIN

loc_0_3E49:				; CODE XREF: CONTROLLER+178j
		mov	word ptr ds:3776h, 0; XRAYFLAG
		mov	byte ptr ds:5E22h, 0
		mov	byte ptr ds:5E23h, 0
		cmp	word ptr ds:68A2h, 0; INPUTMODE
		jnz	loc_0_3E63
		jmp	loc_0_42B0
;����������������������������������������������������������������������������

loc_0_3E63:				; CODE XREF: CONTROLLER+19Aj
		cmp	word ptr ds:68A2h, 0FFFFh; INPUTMODE
		jnz	loc_0_3E6D
		jmp	loc_0_41E7
;����������������������������������������������������������������������������

loc_0_3E6D:				; CODE XREF: CONTROLLER+1A4j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	loc_0_3EB7
		nop
		nop
		nop
		cmp	cx, 110h
		jl	loc_0_3EAA
		nop
		nop
		nop
		cmp	dx, 88h	; '�'
		jnz	loc_0_3EAA
		nop
		nop
		nop
		mov	ax, 7
		mov	cx, 220h	; 544
		mov	dx, 270h	; 624
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 10h		; 16
		mov	dx, 8Ah	; '�'   ; 138
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	word ptr ds:68A2h, 0FFFFh

loc_0_3EAA:				; CODE XREF: CONTROLLER+1BCj
					; CONTROLLER+1C5j
		mov	byte ptr ds:5E1Fh, 0
		mov	byte ptr ds:5E1Eh, 0
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3EB7:				; CODE XREF: CONTROLLER+1B3j
		test	bx, 2
		jz	loc_0_3EF7
		nop
		nop
		nop

loc_0_3EC0:				; CODE XREF: CONTROLLER+573j
		cmp	byte ptr ds:5E1Fh, 1
		jnz	loc_0_3ECA
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3ECA:				; CODE XREF: CONTROLLER+201j
		mov	byte ptr ds:5E1Fh, 1
		mov	ax, ds:68A2h
		mov	ds:68A4h, ax
		mov	word ptr ds:68A2h, 0; INPUTMODE
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		mov	ds:68A6h, cx	; OLDCX
		mov	ds:68A8h, dx	; OLDCY
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, 0Bh
		int	33h		; - MS MOUSE - READ MOTION COUNTERS
					; Return: CX = number of mickeys mouse moved horizontally since	last call
					; DX = number of mickeys mouse moved vertically
		jmp	loc_0_42B0
;����������������������������������������������������������������������������

loc_0_3EF7:				; CODE XREF: CONTROLLER+1F7j
		mov	si, 68AAh	; SSBOXES
		call	CHECKBOXES
		cmp	ax, 0		; ax==0
		jnz	loc_0_3F05
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3F05:				; CODE XREF: CONTROLLER+23Cj
		sub	cx, [si]
		sub	dx, [si+2]
		cmp	ax, 5		; ax==5
		jnz	loc_0_3F12
		jmp	loc_0_408E
;����������������������������������������������������������������������������

loc_0_3F12:				; CODE XREF: CONTROLLER+249j
		cmp	ax, 6		; ax==6
		jnz	loc_0_3F1A
		jmp	loc_0_4196
;����������������������������������������������������������������������������

loc_0_3F1A:				; CODE XREF: CONTROLLER+251j
		dec	ax		; --ax
		mov	si, 6A92h
		add	si, ax
		mov	al, [si]
		xor	ah, ah
		shl	ax, 1
		mov	si, 6A88h
		add	si, ax
		mov	ax, [si]
		jmp	ax
;����������������������������������������������������������������������������
		mov	si, 68E8h	; PADBOXES
		call	CHECKBOXES
		cmp	ax, 0
		jnz	loc_0_3F3D
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3F3D:				; CODE XREF: CONTROLLER+274j
		cmp	ax, 1
		jnz	loc_0_3F4B
		nop
		nop
		nop
		call	sub_0_495E
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3F4B:				; CODE XREF: CONTROLLER+27Cj
		cmp	ax, 2		; ax ==	2
		jnz	loc_0_3F59
		nop
		nop
		nop
		call	sub_0_4979
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3F59:				; CODE XREF: CONTROLLER+28Aj
		cmp	ax, 3		; ax ==	3
		jnz	loc_0_3F67
		nop
		nop
		nop
		call	sub_0_4948
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3F67:				; CODE XREF: CONTROLLER+298j
		cmp	ax, 4		; ax ==	4
		jnz	loc_0_3F75
		nop
		nop
		nop
		call	sub_0_4FD2
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3F75:				; CODE XREF: CONTROLLER+2A6j
		cmp	ax, 5		; ax ==	5
		jnz	loc_0_3F83
		nop
		nop
		nop
		call	loc_0_4992
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3F83:				; CODE XREF: CONTROLLER+2B4j
		cmp	ax, 6		; ax ==	6
		jnz	loc_0_3F91
		nop
		nop
		nop
		call	sub_0_5066
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3F91:				; CODE XREF: CONTROLLER+2C2j
		cmp	ax, 7		; ax ==	7
		jnz	loc_0_3F9F
		nop
		nop
		nop
		call	sub_0_4923
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3F9F:				; CODE XREF: CONTROLLER+2D0j
		cmp	ax, 8		; ax ==	8
		jnz	loc_0_3FAD
		nop
		nop
		nop
		call	sub_0_5089
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3FAD:				; CODE XREF: CONTROLLER+2DEj
		cmp	ax, 9		; ax ==	9
		jnz	loc_0_3FBB
		nop
		nop
		nop
		call	sub_0_7A9A
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3FBB:				; CODE XREF: CONTROLLER+2ECj
		jmp	loc_0_4337
;����������������������������������������������������������������������������
		mov	si, 68E8h	; PADBOXES
		call	CHECKBOXES
		cmp	ax, 0
		jnz	loc_0_3FCC
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3FCC:				; CODE XREF: CONTROLLER+303j
		cmp	ax, 1
		jnz	loc_0_3FD7
		nop
		nop
		nop
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3FD7:				; CODE XREF: CONTROLLER+30Bj
		cmp	ax, 2
		jnz	loc_0_3FF4
		nop
		nop
		nop
		cmp	byte ptr ds:5E1Fh, 1
		jnz	loc_0_3FE9
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3FE9:				; CODE XREF: CONTROLLER+320j
		mov	byte ptr ds:5E1Fh, 1
		call	sub_0_6C23
		jmp	loc_0_44B3
;����������������������������������������������������������������������������

loc_0_3FF4:				; CODE XREF: CONTROLLER+316j
		cmp	ax, 3
		jnz	loc_0_3FFF
		nop
		nop
		nop
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_3FFF:				; CODE XREF: CONTROLLER+333j
		cmp	ax, 4
		jnz	loc_0_400D
		nop
		nop
		nop
		call	PRINTMAP
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_400D:				; CODE XREF: CONTROLLER+33Ej
		cmp	ax, 5
		jnz	loc_0_402D
		nop
		nop
		nop
		call	SPELLBOOK1

loc_0_4018:				; CODE XREF: CONTROLLER+374j
		call	MOUSEFORGAME
		mov	ax, 4
		mov	cx, ds:68A6h
		shl	cx, 1
		mov	dx, ds:68A8h
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_402D:				; CODE XREF: CONTROLLER+34Cj
		cmp	ax, 6
		jnz	loc_0_403A
		nop
		nop
		nop
		call	SPELLBOOK2
		jmp	short loc_0_4018
;����������������������������������������������������������������������������

loc_0_403A:				; CODE XREF: CONTROLLER+36Cj
		cmp	ax, 7
		jnz	loc_0_4048
		nop
		nop
		nop
		call	sub_0_550F
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_4048:				; CODE XREF: CONTROLLER+379j
		cmp	ax, 8
		jnz	loc_0_4065
		nop
		nop
		nop
		cmp	byte ptr ds:5E1Fh, 1; UNK5
		jnz	loc_0_405A
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_405A:				; CODE XREF: CONTROLLER+391j
		mov	byte ptr ds:5E1Fh, 1; UNK5
		call	sub_0_7053
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_4065:				; CODE XREF: CONTROLLER+387j
		cmp	ax, 9
		jnz	loc_0_4073
		nop
		nop
		nop
		call	sub_0_7A19
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_4073:				; CODE XREF: CONTROLLER+3A4j
		jmp	loc_0_4337
;����������������������������������������������������������������������������
		sub	cx, 20h	; ' '
		sub	dx, 20h	; ' '
		mov	ax, cx
		call	ARCTAN
		mov	ds:0AD1h, di
		call	SETTRIG
		jmp	loc_0_4337
;����������������������������������������������������������������������������
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_408E:				; CODE XREF: CONTROLLER+24Bj
		mov	si, 6964h	; BOXES
		call	CHECKBOXES
		cmp	ax, 0
		jnz	loc_0_409C
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_409C:				; CODE XREF: CONTROLLER+3D3j
		cmp	ax, 1
		jnz	loc_0_40AA
		nop
		nop
		nop
		call	sub_0_62FD
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_40AA:				; CODE XREF: CONTROLLER+3DBj
		cmp	ax, 2
		jnz	loc_0_40B8
		nop
		nop
		nop
		call	DROP
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_40B8:				; CODE XREF: CONTROLLER+3E9j
		cmp	ax, 3
		jz	loc_0_40C0
		jmp	loc_0_414E
;����������������������������������������������������������������������������

loc_0_40C0:				; CODE XREF: CONTROLLER+3F7j
		cmp	word ptr ds:0BB6h, 0
		jnz	loc_0_40CA
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_40CA:				; CODE XREF: CONTROLLER+401j
		mov	di, ds:0BB6h
		cmp	byte ptr [di+0Bh], 2Bh ; '+'
		jnz	loc_0_40D7
		jmp	loc_0_4183
;����������������������������������������������������������������������������

loc_0_40D7:				; CODE XREF: CONTROLLER+40Ej
		cmp	byte ptr [di+0Bh], 3Ah ; ':'
		jnz	loc_0_40E0
		jmp	loc_0_4178
;����������������������������������������������������������������������������

loc_0_40E0:				; CODE XREF: CONTROLLER+417j
		cmp	byte ptr [di+0Bh], 6Ch ; 'l'
		jz	loc_0_415F
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 8
		jz	loc_0_4151
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 0Fh
		jnz	loc_0_4100
		nop
		nop
		nop
		mov	word ptr [di+27h], 8

loc_0_4100:				; CODE XREF: CONTROLLER+432j
		mov	ax, [di+1Dh]
		cmp	ax, 0
		jz	loc_0_4148
		nop
		nop
		nop
		cmp	ax, 10h
		jnz	loc_0_4119
		nop
		nop
		nop
		mov	bx, 0A872h
		mov	byte ptr [bx], 2

loc_0_4119:				; CODE XREF: CONTROLLER+44Aj
		cmp	ax, 23h	; '#'   ; ax==0x23
		jz	loc_0_416D
		nop
		nop
		nop
		dec	ax
		push	es
		mov	dx, ds:0D716h	; SCRIPTSEG
		mov	es, dx
		mov	es:4953h, al
		mov	al, [di+0Bh]
		mov	es:4949h, al
		pop	es
		mov	si, 4947h
		mov	byte ptr ds:0AECh, 0; TIMEON
		call	SCROLLTEXT
		mov	byte ptr ds:0AECh, 1; TIMEON
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_4148:				; CODE XREF: CONTROLLER+442j
		call	CLEARLOCWIN?
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_414E:				; CODE XREF: CONTROLLER+3F9j
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_4151:				; CODE XREF: CONTROLLER+429j
		mov	byte ptr ds:0AECh, 0; TIMEON
		mov	dx, 31Fh
		call	LC1
		jmp	short loc_0_418B
;����������������������������������������������������������������������������
		nop

loc_0_415F:				; CODE XREF: CONTROLLER+420j
		mov	byte ptr ds:0AECh, 0; TIMEON
		mov	dx, 315h
		call	LC1
		jmp	short loc_0_418B
;����������������������������������������������������������������������������
		nop

loc_0_416D:				; CODE XREF: CONTROLLER+458j
		mov	byte ptr ds:0AECh, 0; TIMEON
		call	LOADCRYPTMAP
		jmp	short loc_0_418B
;����������������������������������������������������������������������������
		nop

loc_0_4178:				; CODE XREF: CONTROLLER+419j
		mov	byte ptr ds:0AECh, 0; TIMEON
		call	LOADARCHPLAN
		jmp	short loc_0_418B
;����������������������������������������������������������������������������
		nop

loc_0_4183:				; CODE XREF: CONTROLLER+410j
		mov	byte ptr ds:0AECh, 0; TIMEON
		call	LOADLABMAP

loc_0_418B:				; CODE XREF: CONTROLLER+498j
					; CONTROLLER+4A6j ...
		call	sub_0_7952
		mov	byte ptr ds:0AECh, 1; TIMEON
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_4196:				; CODE XREF: CONTROLLER+253j
		mov	si, 6944h	; BOXES?
		call	CHECKBOXES
		cmp	ax, 0
		jnz	loc_0_41A4
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_41A4:				; CODE XREF: CONTROLLER+4DBj
		cmp	ax, 1
		jnz	loc_0_41B2
		nop
		nop
		nop
		call	sub_0_5D62
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_41B2:				; CODE XREF: CONTROLLER+4E3j
		cmp	ax, 2
		jnz	loc_0_41CB
		nop
		nop
		nop
		cmp	word ptr ds:9A8Ah, 0FFFFh; AVAILABLEPICKUP
		jz	loc_0_41CB
		nop
		nop
		nop
		mov	di, ds:9A8Ah	; AVAILABLEPICKUP
		call	CLEARLOCWIN?

loc_0_41CB:				; CODE XREF: CONTROLLER+4F1j
					; CONTROLLER+4FBj
		cmp	ax, 3
		jnz	loc_0_41E4
		nop
		nop
		nop
		call	sub_0_6C64
		cmp	word ptr ds:6AB5h, 1020h
		jnz	loc_0_41E1
		jmp	loc_0_4860
;����������������������������������������������������������������������������

loc_0_41E1:				; CODE XREF: CONTROLLER+518j
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_41E4:				; CODE XREF: CONTROLLER+50Aj
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_41E7:				; CODE XREF: CONTROLLER+1A6j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	loc_0_422B
		nop
		nop
		nop
		cmp	dx, 8Ah	; '�'
		jnz	loc_0_4220
		nop
		nop
		nop
		mov	ax, 7
		mov	cx, 0
		mov	dx, 270h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 88h	; '�'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	word ptr ds:68A2h, 1

loc_0_4220:				; CODE XREF: CONTROLLER+536j
		mov	byte ptr ds:5E1Fh, 0
		call	PRINTCASH
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_422B:				; CODE XREF: CONTROLLER+52Dj
		test	bx, 2
		jz	loc_0_423D
		nop
		nop
		nop
		call	PRINTCASH
		jmp	loc_0_3EC0
;����������������������������������������������������������������������������
		db 0EBh	; �
		db  71h	; q
		db  90h	; �
;����������������������������������������������������������������������������

loc_0_423D:				; CODE XREF: CONTROLLER+56Bj
		mov	si, 69FCh
		call	CHECKBOXES
		cmp	ax, 0
		jnz	loc_0_4253
		nop
		nop
		nop
		mov	byte ptr ds:5E1Fh, 0
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_4253:				; CODE XREF: CONTROLLER+582j
		cmp	al, 6
		jg	loc_0_4279
		nop
		nop
		nop
		dec	al
		xor	ah, ah
		mov	dx, 0Ah
		mul	dx
		add	ax, 0B29h
		add	ax, 0
		mov	bx, ax
		mov	ax, [bx]
		call	HEXTOBCD2
		mov	dx, 123h
		call	FASTHEX
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_4279:				; CODE XREF: CONTROLLER+591j
		cmp	byte ptr ds:5E1Fh, 1
		jz	loc_0_42AD
		nop
		nop
		nop
		mov	byte ptr ds:5E1Fh, 1
		sub	al, 7
		xor	ah, ah
		mov	dx, 0Ah
		mul	dx
		add	ax, 0B65h
		add	ax, 0
		mov	bx, ax
		mov	ax, [bx]
		xchg	ax, ds:0BB6h
		mov	[bx], ax
		mov	byte ptr ds:13Dh, 1
		mov	di, ds:0BB6h
		call	CLEARLOCWIN?

loc_0_42AD:				; CODE XREF: CONTROLLER+5BAj
		jmp	loc_0_4337
;����������������������������������������������������������������������������

loc_0_42B0:				; CODE XREF: CONTROLLER+19Cj
					; CONTROLLER+230j
		mov	ax, 0Bh
		int	33h		; - MS MOUSE - READ MOTION COUNTERS
					; Return: CX = number of mickeys mouse moved horizontally since	last call
					; DX = number of mickeys mouse moved vertically
		cmp	cx, 0
		jz	loc_0_42DE
		nop
		nop
		nop
		mov	ax, ds:0AD1h
		add	ax, cx
		cmp	ax, 5A0h
		jl	loc_0_42CD
		nop
		nop
		nop
		sub	ax, 5A0h

loc_0_42CD:				; CODE XREF: CONTROLLER+601j
		cmp	ax, 0
		jge	loc_0_42D8
		nop
		nop
		nop
		add	ax, 5A0h

loc_0_42D8:				; CODE XREF: CONTROLLER+60Cj
		mov	ds:0AD1h, ax
		call	SETTRIG

loc_0_42DE:				; CODE XREF: CONTROLLER+5F4j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		test	bx, 2
		jz	loc_0_4323
		nop
		nop
		nop
		cmp	byte ptr ds:5E1Fh, 1
		jz	loc_0_4337
		nop
		nop
		nop
		mov	byte ptr ds:5E1Fh, 1
		mov	ax, 4
		mov	cx, ds:68A6h
		shl	cx, 1
		mov	dx, ds:68A8h
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 0Bh
		int	33h		; - MS MOUSE - READ MOTION COUNTERS
					; Return: CX = number of mickeys mouse moved horizontally since	last call
					; DX = number of mickeys mouse moved vertically
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	ax, ds:68A4h
		xchg	ax, ds:68A2h
		mov	ds:68A4h, ax
		jmp	short loc_0_4337
;����������������������������������������������������������������������������
		nop

loc_0_4323:				; CODE XREF: CONTROLLER+625j
		mov	byte ptr ds:5E1Fh, 0
		test	bx, 1
		jz	loc_0_4334
		nop
		nop
		nop
		call	sub_0_4979

loc_0_4334:				; CODE XREF: CONTROLLER+668j
		jmp	short loc_0_4337
;����������������������������������������������������������������������������
		nop

loc_0_4337:				; CODE XREF: CONTROLLER+1F0j
					; CONTROLLER+203j ...
		mov	ax, ds:0F8h
		mov	ds:0FEh, ax
		cmp	word ptr ds:0FEh, 0
		jnz	loc_0_434F
		nop
		nop
		nop
		mov	byte ptr ds:5E20h, 0
		jmp	loc_0_44B3
;����������������������������������������������������������������������������

loc_0_434F:				; CODE XREF: CONTROLLER+67Ej
		test	word ptr ds:0FEh, 1
		jz	loc_0_4360
		nop
		nop
		nop
		call	sub_0_4948
		jmp	loc_0_44B3
;����������������������������������������������������������������������������

loc_0_4360:				; CODE XREF: CONTROLLER+691j
		test	word ptr ds:0FEh, 2
		jz	loc_0_4371
		nop
		nop
		nop
		call	sub_0_495E
		jmp	loc_0_44B3
;����������������������������������������������������������������������������

loc_0_4371:				; CODE XREF: CONTROLLER+6A2j
		test	word ptr ds:0F8h, 8
		jz	loc_0_4382
		nop
		nop
		nop
		call	sub_0_4979
		jmp	loc_0_44B3
;����������������������������������������������������������������������������

loc_0_4382:				; CODE XREF: CONTROLLER+6B3j
		test	word ptr ds:0F8h, 4
		jz	loc_0_4393
		nop
		nop
		nop
		call	sub_0_5089
		jmp	loc_0_44B3
;����������������������������������������������������������������������������

loc_0_4393:				; CODE XREF: CONTROLLER+6C4j
		cmp	word ptr ds:0FEh, 40h ;	'@'
		jnz	loc_0_43B2
		nop
		nop
		nop
		cmp	byte ptr ds:5E20h, 1
		jz	loc_0_43B2
		nop
		nop
		nop
		mov	byte ptr ds:5E20h, 1
		call	sub_0_6C23
		jmp	loc_0_44B3
;����������������������������������������������������������������������������

loc_0_43B2:				; CODE XREF: CONTROLLER+6D4j
					; CONTROLLER+6DEj
		cmp	word ptr ds:0FEh, 4000h
		jnz	loc_0_43C2
		nop
		nop
		nop
		push	ax
		call	sub_0_7A19
		pop	ax

loc_0_43C2:				; CODE XREF: CONTROLLER+6F4j
		cmp	word ptr ds:0FEh, 8000h
		jnz	loc_0_43D2
		nop
		nop
		nop
		push	ax
		call	sub_0_62FD
		pop	ax

loc_0_43D2:				; CODE XREF: CONTROLLER+704j
		cmp	word ptr ds:0FEh, 5000h
		jnz	loc_0_43E0
		nop
		nop
		nop
		call	SAVE_IFF

loc_0_43E0:				; CODE XREF: CONTROLLER+714j
		cmp	word ptr ds:0F8h, 800h
		jnz	loc_0_4445
		nop
		nop
		nop
		cmp	word ptr ds:0CCCDh, 0
		jz	loc_0_4418
		nop
		nop
		nop
		cmp	byte ptr ds:6899h, 1
		jz	loc_0_4445
		nop
		nop
		nop
		push	es
		mov	ax, 11h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	bx, 33h	; '3'
		call	sub_0_78AC
		jmp	short loc_0_4445
;����������������������������������������������������������������������������
		nop

loc_0_4418:				; CODE XREF: CONTROLLER+72Cj
		cmp	word ptr ds:0CCCFh, 0
		jz	loc_0_4445
		nop
		nop
		nop
		cmp	byte ptr ds:6899h, 1
		jz	loc_0_4445
		nop
		nop
		nop
		push	es
		mov	ax, 1Bh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	bx, 2Ch	; ','
		call	sub_0_78AC
		jmp	short loc_0_4445
;����������������������������������������������������������������������������
		nop

loc_0_4445:				; CODE XREF: CONTROLLER+722j
					; CONTROLLER+736j ...
		cmp	word ptr ds:0FEh, 400h
		jnz	loc_0_4456
		nop
		nop
		nop
		call	PRINTMAP
		call	WAITRELEASE

loc_0_4456:				; CODE XREF: CONTROLLER+787j
		cmp	word ptr ds:0FEh, 200h
		jnz	loc_0_4479
		nop
		nop
		nop
		call	SPELLBOOK1

loc_0_4464:				; CODE XREF: CONTROLLER+7C3j
		call	MOUSEFORGAME
		mov	ax, 4
		mov	cx, ds:68A6h
		shl	cx, 1
		mov	dx, ds:68A8h
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		jmp	short loc_0_4489
;����������������������������������������������������������������������������
		nop

loc_0_4479:				; CODE XREF: CONTROLLER+798j
		cmp	word ptr ds:0FEh, 80h ;	'�'
		jnz	loc_0_4489
		nop
		nop
		nop
		call	SPELLBOOK2
		jmp	short loc_0_4464
;����������������������������������������������������������������������������

loc_0_4489:				; CODE XREF: CONTROLLER+7B2j
					; CONTROLLER+7BBj
		cmp	word ptr ds:0FEh, 100h
		jnz	loc_0_4497
		nop
		nop
		nop
		call	sub_0_550F

loc_0_4497:				; CODE XREF: CONTROLLER+7CBj
		cmp	word ptr ds:0FEh, 2000h
		jnz	loc_0_44A5
		nop
		nop
		nop
		call	sub_0_7053

loc_0_44A5:				; CODE XREF: CONTROLLER+7D9j
		cmp	word ptr ds:0FEh, 1010h
		jnz	loc_0_44B3
		nop
		nop
		nop
		call	sub_0_7A9A

loc_0_44B3:				; CODE XREF: CONTROLLER+32Dj
					; CONTROLLER+688j ...
		cmp	word ptr ds:0B1Fh, 270Fh
		jb	loc_0_44C4
		nop
		nop
		nop
		mov	word ptr ds:0B1Fh, 270Fh

loc_0_44C4:				; CODE XREF: CONTROLLER+7F5j
		cmp	word ptr ds:0D442h, 9
		jz	loc_0_44CE
		jmp	loc_0_4563
;����������������������������������������������������������������������������

loc_0_44CE:				; CODE XREF: CONTROLLER+805j
		cmp	word ptr ds:9B3Ch, 1
		jnz	loc_0_453D
		nop
		nop
		nop
		mov	byte ptr ds:0AECh, 1
		mov	dx, 2C5h
		call	LC1
		call	PICFADE2
		call	SWOPAL
		call	PICRAISE2
		mov	si, 0A98Fh
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		call	SCROLLRESP
		call	BLANK_AND_SETPAL
		call	BACKTOGAME
		mov	byte ptr ds:0A816h, 0
		mov	byte ptr ds:0A882h, 0
		inc	word ptr ds:0D485h
		cmp	word ptr ds:0D485h, 1
		jnz	loc_0_452C
		nop
		nop
		nop
		mov	bx, 57h	; 'W'
		mov	ax, 1180h
		mov	dx, 0E80h
		mov	cx, 0FFFFh
		mov	bp, 50h	; 'P'
		call	SETUPPICKUP
		mov	ds:6BF4h, si

loc_0_452C:				; CODE XREF: CONTROLLER+84Dj
		mov	word ptr ds:9B3Ch, 0
		mov	word ptr ds:0AAD6h, 1
		mov	byte ptr ds:0AECh, 0

loc_0_453D:				; CODE XREF: CONTROLLER+80Fj
		cmp	word ptr ds:0D485h, 1
		jle	loc_0_4563
		nop
		nop
		nop
		mov	di, ds:0D44Bh
		mov	ax, [di+6]
		mov	si, ds:6BF4h
		cmp	[si+6],	ax
		jnz	loc_0_4563
		nop
		nop
		nop
		mov	word ptr [si], 1
		mov	word ptr [di+0Bh], 58h ; 'X'

loc_0_4563:				; CODE XREF: CONTROLLER+807j
					; CONTROLLER+87Ej ...
		cmp	word ptr ds:0D442h, 0Dh
		jnz	loc_0_4584
		nop
		nop
		nop
		cmp	word ptr ds:0D47Bh, 7
		jnz	loc_0_4584
		nop
		nop
		nop
		mov	di, ds:0D44Bh
		and	word ptr [di], 0FFFBh
		mov	word ptr ds:0D47Bh, 0

loc_0_4584:				; CODE XREF: CONTROLLER+8A4j
					; CONTROLLER+8AEj
		cmp	word ptr ds:0CA1Ch, 168h
		jnz	loc_0_45AD
		nop
		nop
		nop
		call	PICFADE2
		call	MAKEVIEW
		call	BACKTOGAME
		mov	word ptr ds:5AB5h, 1
		call	sub_0_550F
		mov	word ptr ds:5AB5h, 0
		mov	si, 0AEB7h
		call	PRINTINLOCWIN

loc_0_45AD:				; CODE XREF: CONTROLLER+8C6j
		mov	ax, 1
		cmp	word ptr ds:0CB3Eh, 0
		jnz	loc_0_45BA
		jmp	loc_0_4867
;����������������������������������������������������������������������������

loc_0_45BA:				; CODE XREF: CONTROLLER+8F1j
		mov	ax, 2
		cmp	word ptr ds:0CA84h, 32h	; '2'
		jle	loc_0_45C7
		jmp	loc_0_4867
;����������������������������������������������������������������������������

loc_0_45C7:				; CODE XREF: CONTROLLER+8FEj
					; CONTROLLER+C36j
		cmp	word ptr ds:0F66h, 0
		jz	loc_0_45D4
		nop
		nop
		nop
		call	JUSTICE

loc_0_45D4:				; CODE XREF: CONTROLLER+908j
		call	sub_0_64AF
		call	INVENTORY
		call	COMPASS
		call	C_ROUGHWALK
		call	sub_0_7A1C
		call	P_PROCESS
		call	PROCESS_TRIG
		call	sub_0_5740
		cmp	word ptr ds:0AF8h, 1
		jz	loc_0_45F6
		jmp	loc_0_46F7
;����������������������������������������������������������������������������

loc_0_45F6:				; CODE XREF: CONTROLLER+92Dj
		mov	ax, ds:5AC5h
		add	ds:5AC7h, ax
		mov	word ptr ds:5AC5h, 1
		cmp	word ptr ds:0CCAEh, 0
		jz	loc_0_4611
		nop
		nop
		nop
		dec	word ptr ds:0CCAEh

loc_0_4611:				; CODE XREF: CONTROLLER+944j
		call	SECOND_CHARSTUFF
		cmp	word ptr ds:0D13Ch, 0
		jz	loc_0_4642
		nop
		nop
		nop
		dec	word ptr ds:0D13Ch
		mov	dx, ds:0D13Ch
		shl	dx, 1
		add	dx, ds:0D13Ch
		mov	bx, 707h
		call	CHARS_BARBLANK
		push	es
		mov	ax, 2
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es

loc_0_4642:				; CODE XREF: CONTROLLER+955j
		cmp	word ptr ds:0CCCDh, 0
		jz	loc_0_4673
		nop
		nop
		nop
		dec	word ptr ds:0CCCDh
		mov	dx, ds:0CCCDh
		shl	dx, 1
		add	dx, ds:0CCCDh

loc_0_465A:				; CODE XREF: CONTROLLER+9C7j
		mov	bx, 606h
		call	CHARS_BARBLANK
		push	es
		mov	ax, 2
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_468D
;����������������������������������������������������������������������������
		nop

loc_0_4673:				; CODE XREF: CONTROLLER+983j
		cmp	word ptr ds:0CCCFh, 0
		jz	loc_0_468D
		nop
		nop
		nop
		dec	word ptr ds:0CCCFh
		mov	dx, ds:0CCCFh
		shl	dx, 1
		add	dx, ds:0CCCFh
		jmp	short loc_0_465A
;����������������������������������������������������������������������������

loc_0_468D:				; CODE XREF: CONTROLLER+9ACj
					; CONTROLLER+9B4j
		cmp	word ptr ds:0D142h, 1
		jnz	loc_0_46C8
		nop
		nop
		nop
		mov	word ptr ds:0D142h, 0
		mov	word ptr ds:5ABDh, 0
		mov	word ptr ds:100Ch, 0
		mov	word ptr ds:100Ah, 0
		call	PICFADE2
		mov	bx, 0D144h
		add	bx, ds:0D140h
		add	bx, ds:0D140h
		mov	ax, [bx]
		call	RELOCATE
		call	sub_0_6B1E
		call	BACKTOGAME

loc_0_46C8:				; CODE XREF: CONTROLLER+9CEj
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_46F7
		nop
		nop
		nop
		cmp	word ptr ds:5ACBh, 0
		jz	loc_0_46F7
		nop
		nop
		nop
		mov	word ptr ds:5ACBh, 0
		xor	word ptr ds:5E9Eh, 1
		push	es
		mov	ax, ds:5E9Eh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es

loc_0_46F7:				; CODE XREF: CONTROLLER+92Fj
					; CONTROLLER+A09j ...
		mov	word ptr ds:0AF8h, 0
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	loc_0_4707
		jmp	loc_0_47C2
;����������������������������������������������������������������������������

loc_0_4707:				; CODE XREF: CONTROLLER+A3Ej
		cmp	word ptr ds:6BECh, 1
		jz	loc_0_475E
		nop
		nop
		nop
		cmp	word ptr ds:0D487h, 1
		jnz	loc_0_471B
		jmp	loc_0_47C2
;����������������������������������������������������������������������������

loc_0_471B:				; CODE XREF: CONTROLLER+A52j
		mov	word ptr ds:6BE7h, 3D10h
		mov	word ptr ds:6BE9h, 5FF0h
		mov	byte ptr ds:6BEBh, 38h ; '8'
		mov	word ptr ds:6BF2h, 0
		mov	ax, ds:0D740h
		mov	bx, ax
		mov	cx, ds:0D744h
		and	cl, 1
		jz	loc_0_4745
		nop
		nop
		nop
		sar	ax, 1

loc_0_4745:				; CODE XREF: CONTROLLER+A7Aj
		mov	ds:6BEEh, ax
		neg	bx
		and	ch, 1
		jz	loc_0_4754
		nop
		nop
		nop
		sar	bx, 1

loc_0_4754:				; CODE XREF: CONTROLLER+A89j
		mov	ds:6BF0h, bx
		mov	word ptr ds:6BECh, 1

loc_0_475E:				; CODE XREF: CONTROLLER+A48j
		cmp	byte ptr ds:6BEBh, 10h
		jz	loc_0_476C
		nop
		nop
		nop
		dec	byte ptr ds:6BEBh

loc_0_476C:				; CODE XREF: CONTROLLER+A9Fj
		mov	ax, ds:0D740h
		add	ds:6BF2h, ax
		cmp	word ptr ds:6BF2h, 300h
		jge	loc_0_47BC
		nop
		nop
		nop
		mov	cx, ds:6BF0h
		add	ds:6BE9h, cx
		mov	ax, ds:6BEEh
		add	ds:6BE7h, ax
		mov	ah, ds:6BEAh
		mov	al, ds:6BE8h
		cmp	ax, ds:0ADBh
		jnz	loc_0_47C2
		nop
		nop
		nop
		inc	word ptr ds:0CA84h
		dec	word ptr ds:0CB3Eh
		dec	word ptr ds:0CB40h
		call	DISPLAYATTRIBS
		push	es
		mov	ax, 1Ah
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es

loc_0_47BC:				; CODE XREF: CONTROLLER+AB5j
		mov	word ptr ds:6BECh, 0

loc_0_47C2:				; CODE XREF: CONTROLLER+A40j
					; CONTROLLER+A54j ...
		cmp	word ptr ds:0CB04h, 0
		jz	loc_0_4848
		nop
		nop
		nop
		mov	ax, ds:5E29h
		mov	dx, ds:261Ch
		add	dx, ax
		cmp	dx, 64h	; 'd'
		jz	loc_0_47E6
		nop
		nop
		nop
		cmp	dx, 0C8h ; '�'
		jnz	loc_0_47E8
		nop
		nop
		nop

loc_0_47E6:				; CODE XREF: CONTROLLER+B14j
		neg	ax

loc_0_47E8:				; CODE XREF: CONTROLLER+B1Dj
		mov	ds:261Ch, dx
		mov	ds:5E29h, ax
		call	CALCVIEWPARMS
		cmp	byte ptr ds:5E23h, 0
		jz	loc_0_4839
		nop
		nop
		nop
		mov	ax, ds:5E27h
		add	ds:0AD1h, ax
		cmp	word ptr ds:0AD1h, 0
		jge	loc_0_4813
		nop
		nop
		nop
		add	word ptr ds:0AD1h, 5A0h

loc_0_4813:				; CODE XREF: CONTROLLER+B44j
		cmp	word ptr ds:0AD1h, 5A0h
		jl	loc_0_4824
		nop
		nop
		nop
		sub	word ptr ds:0AD1h, 5A0h

loc_0_4824:				; CODE XREF: CONTROLLER+B55j
		mov	ax, ds:0AD1h
		call	SINA
		mov	ds:0AD7h, ax
		mov	ax, ds:0AD1h
		call	COSA
		mov	ds:0AD9h, ax
		jmp	short loc_0_4848
;����������������������������������������������������������������������������
		nop

loc_0_4839:				; CODE XREF: CONTROLLER+B33j
		test	word ptr ds:0D744h, 10h
		jnz	loc_0_4848
		nop
		nop
		nop
		neg	word ptr ds:5E27h

loc_0_4848:				; CODE XREF: CONTROLLER+B03j
					; CONTROLLER+B72j ...
		call	DRAWVIEW
		cmp	byte ptr ds:6AB0h, 0
		jz	loc_0_485D
		nop
		nop
		nop
		call	COMBAT
		mov	byte ptr ds:6AB0h, 0

loc_0_485D:				; CODE XREF: CONTROLLER+B8Cj
		jmp	loc_0_3D4E
;����������������������������������������������������������������������������

loc_0_4860:				; CODE XREF: CONTROLLER+51Aj
					; CONTROLLER+C5Cj
		mov	ax, 0
		call	CLEARVIEW
		retn
;����������������������������������������������������������������������������

loc_0_4867:				; CODE XREF: CONTROLLER+8F3j
					; CONTROLLER+900j
		mov	word ptr ds:5ABDh, 0
		push	ax
		call	LOADREAPER
		pop	ax
		mov	si, 4845h
		cmp	ax, 1
		jnz	loc_0_4880
		nop
		nop
		nop
		mov	si, 487Eh

loc_0_4880:				; CODE XREF: CONTROLLER+BB4j
		push	si
		call	PICFADE2
		call	SWOPAL
		pop	si
		call	SCROLLTEXT
		cmp	word ptr ds:9B34h, 0
		jz	loc_0_489B
		nop
		nop
		nop
		mov	si, 48B1h
		call	SCROLLTEXT

loc_0_489B:				; CODE XREF: CONTROLLER+BCCj
		call	BLANK_AND_SETPAL
		cmp	word ptr ds:2650h, 0
		jz	loc_0_48AB
		nop
		nop
		nop
		call	GETBORDER

loc_0_48AB:				; CODE XREF: CONTROLLER+BDFj
		cmp	word ptr ds:0D489h, 0FFFEh
		jnz	loc_0_48BE
		nop
		nop
		nop
		mov	word ptr ds:0D489h, 0
		jmp	short loc_0_48FD
;����������������������������������������������������������������������������
		nop

loc_0_48BE:				; CODE XREF: CONTROLLER+BECj
		cmp	word ptr ds:0D442h, 1Dh
		jz	loc_0_48FD
		nop
		nop
		nop
		cmp	word ptr ds:9B34h, 0
		jz	loc_0_48FD
		nop
		nop
		nop
		dec	word ptr ds:9B34h
		mov	word ptr ds:0CB3Eh, 64h	; 'd'
		mov	word ptr ds:0CB40h, 64h	; 'd'
		mov	word ptr ds:0CA84h, 0
		call	DISPLAYATTRIBS
		mov	ax, ds:6BE5h
		call	RELOCATE
		call	sub_0_6B1E
		mov	dx, 3B8h
		call	LOADTILE
		jmp	loc_0_45C7
;����������������������������������������������������������������������������

loc_0_48FD:				; CODE XREF: CONTROLLER+BF7j
					; CONTROLLER+BFFj ...
		mov	word ptr ds:0CB3Eh, 64h	; 'd'
		mov	word ptr ds:0CA84h, 0
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		call	CLS
		mov	dx, 34Bh
		call	LOADANDSHOW
		call	WAITRELEASE
		call	WAITKEY
		call	CLS
		jmp	loc_0_4860
CONTROLLER	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_4923	proc near		; CODE XREF: CONTROLLER+2D5p
		cmp	byte ptr ds:5E1Fh, 1
		jz	locret_0_4947
		nop
		nop
		nop
		mov	byte ptr ds:5E1Fh, 1
		push	ax
		mov	ax, ds:0AD1h
		sub	ax, 2D0h
		cmp	ax, 0
		jge	loc_0_4944
		nop
		nop
		nop
		add	ax, 5A0h

loc_0_4944:				; CODE XREF: sub_0_4923+19j
		jmp	short loc_0_4971
;����������������������������������������������������������������������������
		nop

locret_0_4947:				; CODE XREF: sub_0_4923+5j
		retn
sub_0_4923	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_4948	proc near		; CODE XREF: CONTROLLER+29Dp
					; CONTROLLER+696p
		push	ax
		mov	ax, ds:0AD1h
		add	ax, ds:5B05h
		cmp	ax, 5A0h
		jl	loc_0_495B
		nop
		nop
		nop
		sub	ax, 5A0h

loc_0_495B:				; CODE XREF: sub_0_4948+Bj
		jmp	short loc_0_4971
sub_0_4948	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_495E	proc near		; CODE XREF: CONTROLLER+281p
					; CONTROLLER+6A7p ...
		push	ax
		mov	ax, ds:0AD1h
		sub	ax, ds:5B05h
		cmp	ax, 0
		jge	loc_0_4971
		nop
		nop
		nop
		add	ax, 5A0h

loc_0_4971:				; CODE XREF: sub_0_4923+21j
					; sub_0_4948+13j ...
		mov	ds:0AD1h, ax
		call	SETTRIG
		pop	ax
		retn
sub_0_495E	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_4979	proc near		; CODE XREF: CONTROLLER+28Fp
					; CONTROLLER+66Dp ...
		mov	byte ptr ds:5E24h, 0
		mov	cx, 2
		mov	word ptr ds:5AC5h, 0
		test	word ptr ds:0F8h, 800h
		jz	loc_0_49A1
		nop
		nop
		nop

loc_0_4992:				; CODE XREF: CONTROLLER+2B9p
		mov	byte ptr ds:5E24h, 0
		mov	cx, ds:5B03h
		mov	word ptr ds:5AC5h, 0FFFFh

loc_0_49A1:				; CODE XREF: sub_0_4979+14j
					; sub_0_4979+3Cj
		push	cx
		call	sub_0_49FD
		mov	byte ptr ds:5E22h, 0
		pop	cx
		cmp	byte ptr ds:5E24h, 1
		jz	locret_0_49B7
		nop
		nop
		nop
		loop	loc_0_49A1

locret_0_49B7:				; CODE XREF: sub_0_4979+37j
		retn
sub_0_4979	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_49B8	proc near		; CODE XREF: sub_0_49FD+16p
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	ax, ds:0D740h
		sar	ax, 1
		or	ax, 1
		mov	bx, ds:0AD9h
		imul	bx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		add	ds:0ACDh, dx
		mov	ds:5B0Bh, dx
		mov	ax, ds:0D740h
		sar	ax, 1
		or	ax, 1
		mov	bx, ds:0AD7h
		imul	bx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		add	ds:0ACFh, dx
		mov	ds:5B0Dh, dx
		call	sub_0_5467
		retn
sub_0_49B8	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_49FD	proc near		; CODE XREF: sub_0_4979+29p
		mov	byte ptr ds:5E23h, 1
		cmp	byte ptr ds:5E22h, 0
		jz	loc_0_4A0C
		jmp	locret_0_4FD1
;����������������������������������������������������������������������������

loc_0_4A0C:				; CODE XREF: sub_0_49FD+Aj
		mov	byte ptr ds:5E22h, 1
		push	ax
		push	es
		call	sub_0_49B8
		cmp	al, 0
		jnz	loc_0_4A1D
		jmp	loc_0_4FC0
;����������������������������������������������������������������������������

loc_0_4A1D:				; CODE XREF: sub_0_49FD+1Bj
		mov	word ptr ds:5AC9h, 0
		cmp	al, 3
		jz	loc_0_4A9D
		nop
		nop
		nop
		cmp	al, 2
		jnz	loc_0_4A31
		jmp	loc_0_4B80
;����������������������������������������������������������������������������

loc_0_4A31:				; CODE XREF: sub_0_49FD+2Fj
		cmp	al, 4
		jnz	loc_0_4A38
		jmp	loc_0_4DBC
;����������������������������������������������������������������������������

loc_0_4A38:				; CODE XREF: sub_0_49FD+36j
		cmp	al, 5
		jnz	loc_0_4A3F
		jmp	loc_0_4DC6
;����������������������������������������������������������������������������

loc_0_4A3F:				; CODE XREF: sub_0_49FD+3Dj
		cmp	al, 6
		jnz	loc_0_4A46
		jmp	loc_0_4F50
;����������������������������������������������������������������������������

loc_0_4A46:				; CODE XREF: sub_0_49FD+44j
		cmp	al, 7
		jz	loc_0_4A57
		nop
		nop
		nop
		cmp	al, 8
		jz	loc_0_4A6D
		nop
		nop
		nop
		jmp	loc_0_4F88
;����������������������������������������������������������������������������

loc_0_4A57:				; CODE XREF: sub_0_49FD+4Bj
		cmp	word ptr ds:0CAE4h, 0
		jz	loc_0_4A61
		jmp	loc_0_4F88
;����������������������������������������������������������������������������

loc_0_4A61:				; CODE XREF: sub_0_49FD+5Fj
		mov	ax, 0Ah
		call	TAKEDRINK
		call	DISPLAYATTRIBS
		jmp	loc_0_4F88
;����������������������������������������������������������������������������

loc_0_4A6D:				; CODE XREF: sub_0_49FD+52j
		call	sub_0_5498
		cmp	ax, 0
		jz	loc_0_4A78
		jmp	loc_0_4F88
;����������������������������������������������������������������������������

loc_0_4A78:				; CODE XREF: sub_0_49FD+76j
		mov	byte ptr ds:5E24h, 1
		mov	ax, [bx+4]
		and	word ptr ds:0ACDh, 0FF00h
		add	ds:0ACDh, ax
		mov	ax, [bx+6]
		and	word ptr ds:0ACFh, 0FF00h
		add	ds:0ACFh, ax
		call	sub_0_7986
		jmp	loc_0_4FC6
;����������������������������������������������������������������������������

loc_0_4A9D:				; CODE XREF: sub_0_49FD+28j
		call	sub_0_5498
		cmp	ax, 0
		jz	loc_0_4AA8
		jmp	loc_0_4B7D
;����������������������������������������������������������������������������

loc_0_4AA8:				; CODE XREF: sub_0_49FD+A6j
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	loc_0_4ABC
		nop
		nop
		nop
		cmp	byte ptr ds:3784h, 0
		jz	loc_0_4B19
		nop
		nop
		nop

loc_0_4ABC:				; CODE XREF: sub_0_49FD+B0j
		mov	byte ptr ds:5E24h, 1
		mov	word ptr ds:3776h, 1
		cmp	byte ptr ds:0BBCh, 0
		jnz	loc_0_4B19
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 143Eh
		jz	loc_0_4B19
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 1640h
		jz	loc_0_4B19
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 1442h
		jz	loc_0_4B19
		nop
		nop
		nop
		mov	di, 6DCEh
		mov	cx, 2Bh	; '+'
		mov	ax, 0Bh

loc_0_4AFB:				; CODE XREF: sub_0_49FD+112j
		cmp	byte ptr [di+0Bh], 2
		jnz	loc_0_4B0C
		nop
		nop
		nop
		cmp	[di+67h], ax
		jz	loc_0_4B19
		nop
		nop
		nop

loc_0_4B0C:				; CODE XREF: sub_0_49FD+102j
		add	di, 7Bh	; '{'
		loop	loc_0_4AFB
		mov	bp, 0Bh
		push	bx
		call	MAKE_ARRESTER
		pop	bx

loc_0_4B19:				; CODE XREF: sub_0_49FD+BAj
					; sub_0_49FD+CFj ...
		cmp	word ptr ds:0ADDh, 1
		jz	loc_0_4B7D
		nop
		nop
		nop
		cmp	word ptr ds:0D13Ch, 0
		jnz	loc_0_4B42
		nop
		nop
		nop
		cmp	byte ptr ds:0BBCh, 2
		jl	loc_0_4B7D
		nop
		nop
		nop
		test	word ptr ds:0F8h, 10h
		jz	loc_0_4B7D
		nop
		nop
		nop

loc_0_4B42:				; CODE XREF: sub_0_49FD+12Bj
		cmp	word ptr ds:0D442h, 20h	; ' '
		jnz	loc_0_4B62
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 582Eh
		jz	loc_0_4B7D
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 592Eh
		jz	loc_0_4B7D
		nop
		nop
		nop

loc_0_4B62:				; CODE XREF: sub_0_49FD+14Aj
		push	bx
		push	es
		mov	ax, 10h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		pop	bx
		mov	word ptr ds:5AC9h, 1
		jmp	loc_0_4CE4
;����������������������������������������������������������������������������

loc_0_4B7D:				; CODE XREF: sub_0_49FD+A8j
					; sub_0_49FD+121j ...
		jmp	loc_0_4F88
;����������������������������������������������������������������������������

loc_0_4B80:				; CODE XREF: sub_0_49FD+31j
		mov	al, ds:3784h
		mov	ds:5EA4h, al
		call	sub_0_5498
		cmp	ax, 0
		jz	loc_0_4B91
		jmp	loc_0_4DB9
;����������������������������������������������������������������������������

loc_0_4B91:				; CODE XREF: sub_0_49FD+18Fj
		cmp	word ptr ds:0ADBh, 7E14h
		jnz	loc_0_4BB8
		nop
		nop
		nop
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	LOADWHARF
		call	sub_0_7952
		call	MOUSEFORGAME
		call	WAITMRELEASE
		call	WAITRELEASE
		mov	byte ptr ds:5E24h, 1
		jmp	loc_0_4DB9
;����������������������������������������������������������������������������

loc_0_4BB8:				; CODE XREF: sub_0_49FD+19Aj
		mov	si, 1
		cmp	word ptr [bx+8], 0
		jz	loc_0_4BD4
		nop
		nop
		nop
		mov	si, 100h
		cmp	word ptr [bx+8], 168h
		jz	loc_0_4BD4
		nop
		nop
		nop
		mov	si, 0

loc_0_4BD4:				; CODE XREF: sub_0_49FD+1C2j
					; sub_0_49FD+1CFj
		add	si, ds:0ADBh
		cmp	si, ds:100Ch
		jnz	loc_0_4BFD
		nop
		nop
		nop
		cmp	word ptr ds:100Ah, 0
		jnz	loc_0_4BEB
		jmp	loc_0_4CD2
;����������������������������������������������������������������������������

loc_0_4BEB:				; CODE XREF: sub_0_49FD+1E9j
		cmp	word ptr ds:0D13Ch, 0
		jz	loc_0_4BF5
		jmp	loc_0_4CD2
;����������������������������������������������������������������������������

loc_0_4BF5:				; CODE XREF: sub_0_49FD+1F3j
		mov	al, 0
		call	sub_0_6A8D
		jmp	loc_0_4DB9
;����������������������������������������������������������������������������

loc_0_4BFD:				; CODE XREF: sub_0_49FD+1DFj
		mov	bp, bx
		mov	bx, 5EA5h

loc_0_4C02:				; CODE XREF: sub_0_49FD+217j
					; sub_0_49FD+227j
		cmp	word ptr [bx], 0FFFFh
		jnz	loc_0_4C0A
		jmp	loc_0_4CD0
;����������������������������������������������������������������������������

loc_0_4C0A:				; CODE XREF: sub_0_49FD+208j
		cmp	[bx], si
		jz	loc_0_4C16
		nop
		nop
		nop
		add	bx, 5
		jmp	short loc_0_4C02
;����������������������������������������������������������������������������

loc_0_4C16:				; CODE XREF: sub_0_49FD+20Fj
		mov	ax, ds:0ADDh
		cmp	[bx+2],	al
		jz	loc_0_4C26
		nop
		nop
		nop
		add	bx, 5
		jmp	short loc_0_4C02
;����������������������������������������������������������������������������

loc_0_4C26:				; CODE XREF: sub_0_49FD+21Fj
		mov	al, [bx+3]
		mov	ah, 0
		mov	di, 6003h
		add	di, ax
		cmp	byte ptr [di], 1
		jnz	loc_0_4C38
		jmp	loc_0_4CD0
;����������������������������������������������������������������������������

loc_0_4C38:				; CODE XREF: sub_0_49FD+236j
		cmp	word ptr ds:0BB6h, 0
		jz	loc_0_4C4E
		nop
		nop
		nop
		mov	di, ds:0BB6h
		cmp	al, [di+21h]
		jz	loc_0_4CB0
		nop
		nop
		nop

loc_0_4C4E:				; CODE XREF: sub_0_49FD+240j
		cmp	word ptr ds:0D13Ch, 0
		jz	loc_0_4C61
		nop
		nop
		nop
		test	byte ptr [bx+4], 1
		jz	loc_0_4CD0
		nop
		nop
		nop

loc_0_4C61:				; CODE XREF: sub_0_49FD+256j
		cmp	byte ptr ds:0BBCh, 2
		jbe	loc_0_4C7F
		nop
		nop
		nop
		test	byte ptr [bx+4], 2
		jnz	loc_0_4C7F
		nop
		nop
		nop
		mov	si, 3E4Ch
		push	bp
		call	PRINTINLOCWIN
		pop	bp
		jmp	short loc_0_4CD0
;����������������������������������������������������������������������������
		nop

loc_0_4C7F:				; CODE XREF: sub_0_49FD+269j
					; sub_0_49FD+272j
		test	byte ptr [bx+4], 4
		jnz	loc_0_4CA7
		nop
		nop
		nop
		cmp	word ptr ds:0F8h, 800h
		jnz	loc_0_4CA7
		nop
		nop
		nop
		cmp	byte ptr ds:0BBAh, 2
		jg	loc_0_4CD0
		nop
		nop
		nop
		cmp	byte ptr ds:0BBBh, 2
		jg	loc_0_4CD0
		nop
		nop
		nop

loc_0_4CA7:				; CODE XREF: sub_0_49FD+286j
					; sub_0_49FD+291j
		mov	al, [bx+4]
		call	sub_0_6A8D
		jmp	loc_0_4DB9
;����������������������������������������������������������������������������

loc_0_4CB0:				; CODE XREF: sub_0_49FD+24Cj
		cmp	byte ptr [di+21h], 7Fh ; ''
		ja	loc_0_4CD0
		nop
		nop
		nop
		mov	si, 6003h
		add	si, ax
		mov	byte ptr [si], 1
		mov	word ptr [di], 1
		mov	word ptr ds:0BB6h, 0
		mov	byte ptr ds:13Dh, 1

loc_0_4CD0:				; CODE XREF: sub_0_49FD+20Aj
					; sub_0_49FD+238j ...
		mov	bx, bp

loc_0_4CD2:				; CODE XREF: sub_0_49FD+1EBj
					; sub_0_49FD+1F5j
		push	bx
		push	es
		mov	ax, 0Ah
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		pop	bx

loc_0_4CE4:				; CODE XREF: sub_0_49FD+17Dj
		mov	byte ptr ds:5E24h, 1
		mov	ax, [bx+4]
		and	word ptr ds:0ACDh, 0FF00h
		add	ds:0ACDh, ax
		mov	ax, [bx+6]
		and	word ptr ds:0ACFh, 0FF00h
		add	ds:0ACFh, ax
		mov	ax, [bx+8]
		mov	ds:0AD1h, ax
		call	COSA
		mov	ds:0AD9h, ax
		mov	ax, ds:0AD1h
		call	SINA
		mov	ds:0AD7h, ax
		call	sub_0_7986
		push	es
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_4D2C
		nop
		nop
		nop
		call	LOADUGPANELS
		jmp	short loc_0_4D3F
;����������������������������������������������������������������������������
		nop

loc_0_4D2C:				; CODE XREF: sub_0_49FD+324j
		cmp	byte ptr ds:3784h, 0
		jz	loc_0_4D3C
		nop
		nop
		nop
		call	LOADOSPANELS
		jmp	short loc_0_4D3F
;����������������������������������������������������������������������������
		nop

loc_0_4D3C:				; CODE XREF: sub_0_49FD+334j
		call	LOADISPANELS

loc_0_4D3F:				; CODE XREF: sub_0_49FD+32Cj
					; sub_0_49FD+33Cj
		pop	es
		mov	ax, ds:0ACFh
		mov	al, ds:0ACEh
		mov	ds:0ADBh, ax
		cmp	word ptr ds:0ADBh, 5408h
		jnz	loc_0_4D5A
		nop
		nop
		nop
		mov	word ptr ds:5ABDh, 1

loc_0_4D5A:				; CODE XREF: sub_0_49FD+352j
		cmp	word ptr ds:0ADBh, 5407h
		jnz	loc_0_4D71
		nop
		nop
		nop
		mov	word ptr ds:5ABDh, 0
		mov	word ptr ds:0D48Bh, 1

loc_0_4D71:				; CODE XREF: sub_0_49FD+363j
		call	sub_0_6B1E
		mov	word ptr ds:5E30h, 0
		call	MAKEREGULARS
		call	sub_0_6AC8
		mov	word ptr ds:22DAh, 0
		call	OPENDOOR
		cmp	word ptr ds:5AC9h, 1
		jz	loc_0_4D96
		nop
		nop
		nop
		call	sub_0_5AF3

loc_0_4D96:				; CODE XREF: sub_0_49FD+391j
		push	es
		mov	ax, 0Bh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		cmp	byte ptr ds:3784h, 0
		jz	loc_0_4DB6
		nop
		nop
		nop
		mov	word ptr ds:5B01h, 1

loc_0_4DB6:				; CODE XREF: sub_0_49FD+3AEj
		jmp	loc_0_4FC6
;����������������������������������������������������������������������������

loc_0_4DB9:				; CODE XREF: sub_0_49FD+191j
					; sub_0_49FD+1B8j ...
		jmp	loc_0_4F88
;����������������������������������������������������������������������������

loc_0_4DBC:				; CODE XREF: sub_0_49FD+38j
		mov	bp, 1
		mov	ds:6866h, bp
		jmp	short loc_0_4DD0
;����������������������������������������������������������������������������
		nop

loc_0_4DC6:				; CODE XREF: sub_0_49FD+3Fj
		call	KILLALLMON
		mov	bp, 0FFFFh
		mov	ds:6866h, bp

loc_0_4DD0:				; CODE XREF: sub_0_49FD+3C6j
		call	sub_0_5498
		cmp	ax, 0
		jz	loc_0_4DDB
		jmp	loc_0_4F88
;����������������������������������������������������������������������������

loc_0_4DDB:				; CODE XREF: sub_0_49FD+3D9j
		mov	byte ptr ds:5E24h, 1
		push	bp
		cmp	bp, 1
		jz	loc_0_4DF8
		nop
		nop
		nop
		call	BLACK_UNDER_IMAGE
		call	SCROLL_VIEW_UP
		mov	ax, 0
		call	CLEARVIEW
		jmp	short loc_0_4E04
;����������������������������������������������������������������������������
		nop

loc_0_4DF8:				; CODE XREF: sub_0_49FD+3E7j
		call	BLACK_OVER_IMAGE
		call	SCROLL_VIEW_DN
		mov	ax, 0
		call	CLEARVIEW

loc_0_4E04:				; CODE XREF: sub_0_49FD+3F8j
		pop	bp
		mov	ax, ds:0AD1h
		add	ax, 2D0h
		cmp	ax, 5A0h
		jl	loc_0_4E16
		nop
		nop
		nop
		sub	ax, 5A0h

loc_0_4E16:				; CODE XREF: sub_0_49FD+411j
		mov	ds:0AD1h, ax
		call	SETTRIG
		mov	ax, ds:5B0Bh
		sub	ds:0ACDh, ax
		mov	ax, ds:5B0Dh
		sub	ds:0ACFh, ax
		call	CHANGELEVEL
		mov	word ptr ds:22DAh, 0
		jmp	loc_0_4FC6
sub_0_49FD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CHANGELEVEL	proc near		; CODE XREF: sub_0_49FD+42Dp
					; sub_0_5089+4Ep ...
		push	es
		mov	ax, 1Bh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	word ptr ds:5B01h, 1
		add	ds:0ADDh, bp
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_4E6F
		nop
		nop
		nop
		call	LOADUMAP
		call	LOADUGPANELS
		mov	ax, 26F6h
		mov	ds:2716h, ax
		mov	word ptr ds:4F0Ah, 4F60h
		jmp	short loc_0_4EA1
;����������������������������������������������������������������������������
		nop

loc_0_4E6F:				; CODE XREF: CHANGELEVEL+1Fj
		cmp	word ptr ds:0ADDh, 0
		jnz	loc_0_4E9B
		nop
		nop
		nop
		cmp	word ptr ds:6866h, 1
		jnz	loc_0_4E86
		nop
		nop
		nop
		call	sub_0_4F34

loc_0_4E86:				; CODE XREF: CHANGELEVEL+48j
		call	LOADGMAP
		call	LOADISPANELS
		mov	ax, 26D6h
		mov	ds:2716h, ax
		mov	word ptr ds:4F0Ah, 4F0Ch
		jmp	short loc_0_4EA1
;����������������������������������������������������������������������������
		nop

loc_0_4E9B:				; CODE XREF: CHANGELEVEL+3Ej
		call	LOADFMAP
		call	LOADISPANELS

loc_0_4EA1:				; CODE XREF: CHANGELEVEL+36j
					; CHANGELEVEL+62j
		call	sub_0_7986
		mov	cx, ds:0AE9h
		cmp	cx, 1F4h
		jb	loc_0_4EB4
		nop
		nop
		nop
		mov	cx, 1F4h

loc_0_4EB4:				; CODE XREF: CHANGELEVEL+76j
		call	MOVECHARS
		mov	word ptr ds:0AE9h, 0
		mov	ax, ds:0ACFh
		mov	al, ds:0ACEh
		mov	ds:0ADBh, ax
		mov	word ptr ds:5ABDh, 0
		cmp	word ptr ds:0ADDh, 0
		jnz	loc_0_4EF2
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 4C19h
		jz	loc_0_4EEC
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 4F0Eh
		jnz	loc_0_4EF2
		nop
		nop
		nop

loc_0_4EEC:				; CODE XREF: CHANGELEVEL+A6j
		mov	word ptr ds:5ABDh, 1

loc_0_4EF2:				; CODE XREF: CHANGELEVEL+9Bj
					; CHANGELEVEL+B1j
		call	sub_0_6B1E
		call	KILLREGS
		mov	word ptr ds:5E30h, 1
		call	MAKEREGULARS
		call	sub_0_6AC8
		cmp	word ptr ds:6866h, 0FFFFh
		jnz	loc_0_4F1A
		nop
		nop
		nop
		call	MAKEVIEW
		call	BLACK_OVER_IMAGE
		call	SCROLL_VIEW_UP
		jmp	short loc_0_4F23
;����������������������������������������������������������������������������
		nop

loc_0_4F1A:				; CODE XREF: CHANGELEVEL+D3j
		call	MAKEVIEW
		call	BLACK_UNDER_IMAGE
		call	SCROLL_VIEW_DN

loc_0_4F23:				; CODE XREF: CHANGELEVEL+E1j
		cmp	word ptr ds:0CC8Eh, 1
		jz	loc_0_4F30
		nop
		nop
		nop
		call	sub_0_5AF3

loc_0_4F30:				; CODE XREF: CHANGELEVEL+F2j
		call	PUT_TRIVIA
		retn
CHANGELEVEL	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_4F34	proc near		; CODE XREF: CHANGELEVEL+4Dp
					; RELOCATE+1Ap
		mov	bx, 70h	; 'p'
		mov	cx, 40h	; '@'
		mov	dx, 150h
		call	SETPALBIT
		mov	bx, 0E0h ; '�'
		mov	cx, 10h
		mov	dx, 2A0h
		call	SETPALBIT
		call	KILLALLMON
		retn
sub_0_4F34	endp

;����������������������������������������������������������������������������

loc_0_4F50:				; CODE XREF: sub_0_49FD+46j
		mov	byte ptr ds:5E24h, 1
		push	ax
		push	bx
		push	cx
		push	dx
		push	si
		push	di
		push	bp
		push	es
		mov	byte ptr ds:218Fh, 1
		call	SHOP
		mov	byte ptr ds:218Fh, 0
		mov	dx, 3B8h
		cmp	word ptr ds:0ADDh, 1
		jnz	loc_0_4F7A
		nop
		nop
		nop
		mov	dx, 3C4h

loc_0_4F7A:				; CODE XREF: seg000:4F72j
		call	LOADTILE
		pop	es
		pop	bp
		pop	di
		pop	si
		pop	dx
		pop	cx
		pop	bx
		pop	ax
		jmp	short loc_0_4F88
;����������������������������������������������������������������������������
		nop

loc_0_4F88:				; CODE XREF: sub_0_49FD+57j
					; sub_0_49FD+61j ...
		mov	ax, ds:5B0Bh
		sub	ds:0ACDh, ax
		call	sub_0_5467
		cmp	al, 0
		jz	loc_0_4FC0
		nop
		nop
		nop
		mov	ax, ds:5B0Bh
		add	ds:0ACDh, ax
		mov	ax, ds:5B0Dh
		sub	ds:0ACFh, ax
		call	sub_0_5467
		cmp	al, 0
		jz	loc_0_4FC0
		nop
		nop
		nop
		mov	ax, ds:5B0Bh
		sub	ds:0ACDh, ax
		mov	byte ptr ds:5E24h, 1
		jmp	short loc_0_4FC6
;����������������������������������������������������������������������������
		nop

loc_0_4FC0:				; CODE XREF: sub_0_49FD+1Dj
					; seg000:4F94j	...
		mov	word ptr ds:22DAh, 5

loc_0_4FC6:				; CODE XREF: sub_0_49FD+9Dj
					; sub_0_49FD+3B9j ...
		mov	ax, ds:0ACFh
		mov	al, ds:0ACEh
		mov	ds:0ADBh, ax
		pop	es
		pop	ax

locret_0_4FD1:				; CODE XREF: sub_0_49FD+Cj
		retn

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_4FD2	proc near		; CODE XREF: CONTROLLER+2ABp
		mov	ax, ds:0AD1h
		sub	ax, 168h
		cmp	ax, 0
		jge	loc_0_4FE3
		nop
		nop
		nop
		add	ax, 5A0h

loc_0_4FE3:				; CODE XREF: sub_0_4FD2+9j
		push	ax
		call	COSA
		mov	ds:5E2Ch, ax
		pop	ax
		call	SINA
		mov	ds:5E2Eh, ax
		call	sub_0_4FF5
		retn
sub_0_4FD2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_4FF5	proc near		; CODE XREF: sub_0_4FD2+1Fp
					; sub_0_5066+1Fp ...
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	ax, ds:0D740h
		sar	ax, 1
		jnz	loc_0_5008
		nop
		nop
		nop
		mov	ax, 1

loc_0_5008:				; CODE XREF: sub_0_4FF5+Bj
		mov	cx, ax
		mov	bx, ds:5E2Ch
		imul	bx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		add	ds:0ACDh, dx
		mov	ds:5B0Bh, dx
		mov	ax, cx
		mov	bx, ds:5E2Eh
		imul	bx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		add	ds:0ACFh, dx
		mov	ds:5B0Dh, dx
		call	sub_0_5467
		mov	bp, ax
		cmp	al, 0
		jz	loc_0_5055
		nop
		nop
		nop
		mov	ax, ds:5B0Bh
		sub	ds:0ACDh, ax
		mov	ax, ds:5B0Dh
		sub	ds:0ACFh, ax
		jmp	short loc_0_505B
;����������������������������������������������������������������������������
		nop

loc_0_5055:				; CODE XREF: sub_0_4FF5+4Aj
		mov	word ptr ds:22DAh, 5

loc_0_505B:				; CODE XREF: sub_0_4FF5+5Dj
		mov	ax, ds:0ACFh
		mov	al, ds:0ACEh
		mov	ds:0ADBh, ax
		pop	es
		retn
sub_0_4FF5	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_5066	proc near		; CODE XREF: CONTROLLER+2C7p
		mov	ax, ds:0AD1h
		add	ax, 168h
		cmp	ax, 5A0h
		jl	loc_0_5077
		nop
		nop
		nop
		sub	ax, 5A0h

loc_0_5077:				; CODE XREF: sub_0_5066+9j
		push	ax
		call	COSA
		mov	ds:5E2Ch, ax
		pop	ax
		call	SINA
		mov	ds:5E2Eh, ax
		call	sub_0_4FF5
		retn
sub_0_5066	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_5089	proc near		; CODE XREF: CONTROLLER+2E3p
					; CONTROLLER+6C9p
		mov	ax, ds:0AD1h
		sub	ax, 2D0h
		cmp	ax, 0
		jge	loc_0_509A
		nop
		nop
		nop
		add	ax, 5A0h

loc_0_509A:				; CODE XREF: sub_0_5089+9j
		push	ax
		call	COSA
		mov	ds:5E2Ch, ax
		pop	ax
		call	SINA
		mov	ds:5E2Eh, ax
		call	sub_0_4FF5
		mov	ax, bp
		cmp	al, 5
		jnz	locret_0_50DB
		nop
		nop
		nop
		call	BLACK_UNDER_IMAGE
		call	SCROLL_VIEW_UP
		mov	ax, 0
		call	CLEARVIEW
		mov	bp, 0FFFFh
		mov	ds:6866h, bp
		mov	byte ptr ds:0ACDh, 80h ; '�'
		mov	byte ptr ds:0ACFh, 80h ; '�'
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		call	CHANGELEVEL
		pop	es

locret_0_50DB:				; CODE XREF: sub_0_5089+26j
		retn
sub_0_5089	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_50DC	proc near		; CODE XREF: sub_0_51F3+14p
					; sub_0_7986+9p
		mov	bp, bx
		mov	al, es:[bx]
		mov	dl, al
		mov	ah, al
		and	ah, 80h
		mov	ds:3785h, ah
		and	al, 3
		mov	ds:3784h, al
		mov	dh, es:[bx+155h]
		mov	ah, es:[bx+100h]
		mov	ds:5B0Fh, ah
		mov	ch, es:[bx+56h]
		mov	ah, es:[bx+1]
		mov	cl, es:[bx+55h]
		mov	bx, ds:2716h
		cmp	byte ptr ds:3784h, 1
		jz	loc_0_512C
		nop
		nop
		nop
		shr	cx, 1
		shr	cx, 1
		shr	cx, 1
		shr	cx, 1
		shr	dh, 1
		shr	dh, 1
		shr	dh, 1
		shr	dh, 1
		add	bx, 10h

loc_0_512C:				; CODE XREF: sub_0_50DC+38j
		and	cx, 0F0Fh
		and	dh, 0Fh
		mov	al, cl
		cmp	al, 0
		jz	loc_0_516C
		nop
		nop
		nop
		xlat
		test	dl, 40h
		jz	loc_0_5161
		nop
		nop
		nop
		test	dl, 20h
		jnz	loc_0_5158
		nop
		nop
		nop
		mov	ds:5B07h, al
		mov	byte ptr ds:5B09h, 0
		jmp	short loc_0_5176
;����������������������������������������������������������������������������
		nop

loc_0_5158:				; CODE XREF: sub_0_50DC+6Cj
		mov	ds:5B07h, al
		mov	ds:5B09h, al
		jmp	short loc_0_5176
;����������������������������������������������������������������������������
		nop

loc_0_5161:				; CODE XREF: sub_0_50DC+64j
		mov	byte ptr ds:5B07h, 0
		mov	ds:5B09h, al
		jmp	short loc_0_5176
;����������������������������������������������������������������������������
		nop

loc_0_516C:				; CODE XREF: sub_0_50DC+5Bj
		mov	byte ptr ds:5B09h, 0
		mov	byte ptr ds:5B07h, 0

loc_0_5176:				; CODE XREF: sub_0_50DC+79j
					; sub_0_50DC+82j ...
		test	ah, 40h
		jz	loc_0_5187
		nop
		nop
		nop
		mov	al, ch
		xlat
		mov	ds:5B08h, al
		jmp	short loc_0_518C
;����������������������������������������������������������������������������
		nop

loc_0_5187:				; CODE XREF: sub_0_50DC+9Dj
		mov	byte ptr ds:5B08h, 0

loc_0_518C:				; CODE XREF: sub_0_50DC+A8j
		test	byte ptr ds:5B0Fh, 20h
		jz	loc_0_519F
		nop
		nop
		nop
		mov	al, dh
		xlat
		mov	ds:5B0Ah, al
		jmp	short loc_0_51A4
;����������������������������������������������������������������������������
		nop

loc_0_519F:				; CODE XREF: sub_0_50DC+B5j
		mov	byte ptr ds:5B0Ah, 0

loc_0_51A4:				; CODE XREF: sub_0_50DC+C0j
		mov	bx, bp
		test	byte ptr es:[bx-100h], 2
		jz	loc_0_51B6
		nop
		nop
		nop
		mov	byte ptr ds:5B09h, 1

loc_0_51B6:				; CODE XREF: sub_0_50DC+D0j
		test	byte ptr es:[bx-1], 2
		jz	loc_0_51C5
		nop
		nop
		nop
		mov	byte ptr ds:5B07h, 1

loc_0_51C5:				; CODE XREF: sub_0_50DC+DFj
		test	byte ptr es:[bx+1], 2
		jz	loc_0_51D4
		nop
		nop
		nop
		mov	byte ptr ds:5B08h, 1

loc_0_51D4:				; CODE XREF: sub_0_50DC+EEj
		test	byte ptr es:[bx+100h], 2
		jz	locret_0_51E4
		nop
		nop
		nop
		mov	byte ptr ds:5B0Ah, 1

locret_0_51E4:				; CODE XREF: sub_0_50DC+FEj
		retn
sub_0_50DC	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MAKECELLMAP	proc near		; CODE XREF: MAKEHCELLMAP+Ap
					; sub_0_5467+11p ...
		mov	ax, ds:5E17h
		mov	di, ds:5E19h
		mov	ds:5E19h, ax
		mov	ds:5E17h, di
MAKECELLMAP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_51F3	proc near		; CODE XREF: sub_0_6A07+2Ap
		cmp	[di+100h], bx
		jnz	loc_0_51FC
		jmp	locret_0_544D
;����������������������������������������������������������������������������

loc_0_51FC:				; CODE XREF: sub_0_51F3+4j
		mov	[di+100h], bx
		or	byte ptr es:[bx+0AAh], 4
		push	bx
		call	sub_0_50DC
		pop	bx
		mov	cx, 80h	; '�'
		mov	al, 0
		mov	ah, al

loc_0_5212:				; CODE XREF: sub_0_51F3+24j
		mov	[di], ax
		add	di, 2
		loop	loc_0_5212
		cmp	byte ptr ds:5B09h, 0
		jz	loc_0_5242
		nop
		nop
		nop
		mov	di, ds:5E17h
		add	di, 4
		mov	al, ds:5B09h
		mov	ah, al
		mov	cx, 4

loc_0_5232:				; CODE XREF: sub_0_51F3+4Dj
		mov	[di], ax
		mov	[di+10h], ax
		mov	[di+20h], ax
		mov	[di+30h], ax
		add	di, 2
		loop	loc_0_5232

loc_0_5242:				; CODE XREF: sub_0_51F3+2Bj
		cmp	byte ptr ds:5B0Ah, 0
		jz	loc_0_526C
		nop
		nop
		nop
		mov	di, ds:5E17h
		add	di, 0C4h ; '�'
		mov	al, ds:5B0Ah
		mov	ah, al
		mov	cx, 4

loc_0_525C:				; CODE XREF: sub_0_51F3+77j
		mov	[di], ax
		mov	[di+10h], ax
		mov	[di+20h], ax
		mov	[di+30h], ax
		add	di, 2
		loop	loc_0_525C

loc_0_526C:				; CODE XREF: sub_0_51F3+54j
		cmp	byte ptr ds:5B07h, 0
		jz	loc_0_528F
		nop
		nop
		nop
		mov	di, ds:5E17h
		add	di, 40h	; '@'
		mov	al, ds:5B07h
		mov	ah, al
		mov	cx, 8

loc_0_5285:				; CODE XREF: sub_0_51F3+9Aj
		mov	[di], ax
		mov	[di+2],	ax
		add	di, 10h
		loop	loc_0_5285

loc_0_528F:				; CODE XREF: sub_0_51F3+7Ej
		cmp	byte ptr ds:5B08h, 0
		jz	loc_0_52B2
		nop
		nop
		nop
		mov	di, ds:5E17h
		add	di, 4Ch	; 'L'
		mov	al, ds:5B08h
		mov	ah, al
		mov	cx, 8

loc_0_52A8:				; CODE XREF: sub_0_51F3+BDj
		mov	[di], ax
		mov	[di+2],	ax
		add	di, 10h
		loop	loc_0_52A8

loc_0_52B2:				; CODE XREF: sub_0_51F3+A1j
		mov	dl, 0Fh
		cmp	byte ptr ds:3784h, 0
		jnz	loc_0_52C0
		nop
		nop
		nop
		mov	dl, 0F0h ; '�'

loc_0_52C0:				; CODE XREF: sub_0_51F3+C6j
		mov	cl, ds:5B09h
		add	cl, ds:5B07h
		jnz	loc_0_5307
		nop
		nop
		nop
		test	byte ptr es:[bx-101h], 2
		jnz	loc_0_5307
		nop
		nop
		nop
		mov	ah, es:[bx-100h]
		mov	al, es:[bx-1]
		test	ah, 40h
		jz	loc_0_52F5
		nop
		nop
		nop
		mov	ah, es:[bx-0ABh]
		and	ah, dl
		jnz	loc_0_5307
		nop
		nop
		nop

loc_0_52F5:				; CODE XREF: sub_0_51F3+F1j
		test	al, 20h
		jz	loc_0_531C
		nop
		nop
		nop
		mov	al, es:[bx+54h]
		and	al, dl
		jz	loc_0_531C
		nop
		nop
		nop

loc_0_5307:				; CODE XREF: sub_0_51F3+D5j
					; sub_0_51F3+E0j ...
		mov	di, ds:5E17h
		mov	al, 1
		mov	ah, al
		mov	cx, 4

loc_0_5312:				; CODE XREF: sub_0_51F3+127j
		mov	[di], ax
		mov	[di+2],	ax
		add	di, 10h
		loop	loc_0_5312

loc_0_531C:				; CODE XREF: sub_0_51F3+104j
					; sub_0_51F3+10Fj
		mov	cl, ds:5B09h
		add	cl, ds:5B08h
		jnz	loc_0_5363
		nop
		nop
		nop
		test	byte ptr es:[bx-0FFh], 2
		jnz	loc_0_5363
		nop
		nop
		nop
		mov	ah, es:[bx-0FFh]
		mov	al, es:[bx+1]
		test	ah, 40h
		jz	loc_0_5351
		nop
		nop
		nop
		mov	ah, es:[bx-0AAh]
		and	ah, dl
		jnz	loc_0_5363
		nop
		nop
		nop

loc_0_5351:				; CODE XREF: sub_0_51F3+14Dj
		test	al, 20h
		jz	loc_0_537B
		nop
		nop
		nop
		mov	al, es:[bx+56h]
		and	al, dl
		jz	loc_0_537B
		nop
		nop
		nop

loc_0_5363:				; CODE XREF: sub_0_51F3+131j
					; sub_0_51F3+13Cj ...
		mov	di, ds:5E17h
		add	di, 0Ch
		mov	al, 1
		mov	ah, al
		mov	cx, 4

loc_0_5371:				; CODE XREF: sub_0_51F3+186j
		mov	[di], ax
		mov	[di+2],	ax
		add	di, 10h
		loop	loc_0_5371

loc_0_537B:				; CODE XREF: sub_0_51F3+160j
					; sub_0_51F3+16Bj
		mov	cl, ds:5B0Ah
		add	cl, ds:5B07h
		jnz	loc_0_53BF
		nop
		nop
		nop
		test	byte ptr es:[bx+0FFh], 2
		jnz	loc_0_53BF
		nop
		nop
		nop
		mov	ax, es:[bx+0FFh]
		test	ah, 40h
		jz	loc_0_53AC
		nop
		nop
		nop
		mov	ah, es:[bx+155h]
		and	ah, dl
		jnz	loc_0_53BF
		nop
		nop
		nop

loc_0_53AC:				; CODE XREF: sub_0_51F3+1A8j
		test	al, 20h
		jz	loc_0_53D8
		nop
		nop
		nop
		mov	al, es:[bx+154h]
		and	al, dl
		jz	loc_0_53D8
		nop
		nop
		nop

loc_0_53BF:				; CODE XREF: sub_0_51F3+190j
					; sub_0_51F3+19Bj ...
		mov	di, ds:5E17h
		add	di, 0C0h ; '�'
		mov	al, 1
		mov	ah, al
		mov	cx, 4

loc_0_53CE:				; CODE XREF: sub_0_51F3+1E3j
		mov	[di], ax
		mov	[di+2],	ax
		add	di, 10h
		loop	loc_0_53CE

loc_0_53D8:				; CODE XREF: sub_0_51F3+1BBj
					; sub_0_51F3+1C7j
		mov	cl, ds:5B0Ah
		add	cl, ds:5B08h
		jnz	loc_0_5409
		nop
		nop
		nop
		test	byte ptr es:[bx+101h], 2
		jnz	loc_0_5409
		nop
		nop
		nop
		mov	ah, es:[bx+101h]
		test	ah, 60h
		jz	loc_0_5422
		nop
		nop
		nop
		mov	al, es:[bx+156h]
		and	al, dl
		jz	loc_0_5422
		nop
		nop
		nop

loc_0_5409:				; CODE XREF: sub_0_51F3+1EDj
					; sub_0_51F3+1F8j
		mov	di, ds:5E17h
		add	di, 0CCh ; '�'
		mov	al, 1
		mov	ah, al
		mov	cx, 4

loc_0_5418:				; CODE XREF: sub_0_51F3+22Dj
		mov	[di], ax
		mov	[di+2],	ax
		add	di, 10h
		loop	loc_0_5418

loc_0_5422:				; CODE XREF: sub_0_51F3+205j
					; sub_0_51F3+211j
		mov	al, es:[bx]
		shr	al, 1
		shr	al, 1
		and	al, 7
		cmp	al, 2
		jl	locret_0_544D
		nop
		nop
		nop
		mov	di, ds:5E17h
		add	di, 55h	; 'U'
		mov	al, 1
		mov	ah, al
		mov	cx, 6

loc_0_5440:				; CODE XREF: sub_0_51F3+258j
		mov	[di], ax
		mov	[di+2],	ax
		mov	[di+4],	ax
		add	di, 10h
		loop	loc_0_5440

locret_0_544D:				; CODE XREF: sub_0_51F3+6j
					; sub_0_51F3+23Aj
		retn
sub_0_51F3	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_544E	proc near		; CODE XREF: sub_0_5467+14p
					; sub_0_5467+2Dp
		mov	ax, ds:0ACFh
		mov	dx, ds:0ACDh
		shr	dl, 1
		shr	dl, 1
		shr	dl, 1
		shr	dl, 1
		and	al, 0F0h
		or	al, dl
		mov	bx, ds:5E17h
		xlat
		retn
sub_0_544E	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_5467	proc near		; CODE XREF: sub_0_49B8+41p
					; seg000:4F8Fp	...
		mov	ax, ds:0ACFh
		mov	al, ds:0ACEh
		cmp	ax, ds:0ADBh
		jz	loc_0_5494
		nop
		nop
		nop
		mov	bx, ax
		call	MAKECELLMAP
		call	sub_0_544E
		cmp	al, 0
		jz	locret_0_5497
		nop
		nop
		nop
		mov	bx, ds:5E17h
		xchg	bx, ds:5E19h
		mov	ds:5E17h, bx
		jmp	short locret_0_5497
;����������������������������������������������������������������������������
		nop

loc_0_5494:				; CODE XREF: sub_0_5467+Aj
		call	sub_0_544E

locret_0_5497:				; CODE XREF: sub_0_5467+19j
					; sub_0_5467+2Aj
		retn
sub_0_5467	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_5498	proc near		; CODE XREF: sub_0_49FD+70p
					; sub_0_49FD+A0p ...
		mov	bx, 5E34h
		cmp	byte ptr ds:0ACDh, 0C0h	; '�'
		jnb	loc_0_54CF
		nop
		nop
		nop
		add	bx, 0Ah
		cmp	byte ptr ds:0ACFh, 0C0h	; '�'
		jnb	loc_0_54CF
		nop
		nop
		nop
		add	bx, 0Ah
		cmp	byte ptr ds:0ACDh, 40h ; '@'
		jb	loc_0_54CF
		nop
		nop
		nop
		add	bx, 0Ah
		cmp	byte ptr ds:0ACFh, 40h ; '@'
		jbe	loc_0_54CF
		nop
		nop
		nop
		jmp	short loc_0_550B
;����������������������������������������������������������������������������
		nop

loc_0_54CF:				; CODE XREF: sub_0_5498+8j
					; sub_0_5498+15j ...
		mov	ax, [bx]
		mov	dx, [bx+2]
		cmp	bx, 5E34h
		jz	loc_0_54F2
		nop
		nop
		nop
		cmp	ds:0AD1h, ax
		jl	loc_0_550B
		nop
		nop
		nop
		cmp	ds:0AD1h, dx
		jg	loc_0_550B
		nop
		nop
		nop
		jmp	short loc_0_5507
;����������������������������������������������������������������������������
		nop

loc_0_54F2:				; CODE XREF: sub_0_5498+40j
		cmp	ds:0AD1h, ax
		jg	loc_0_5507
		nop
		nop
		nop
		cmp	ds:0AD1h, dx
		jl	loc_0_5507
		nop
		nop
		nop
		jmp	short loc_0_550B
;����������������������������������������������������������������������������
		nop

loc_0_5507:				; CODE XREF: sub_0_5498+57j
					; sub_0_5498+5Ej ...
		mov	ax, 0
		retn
;����������������������������������������������������������������������������

loc_0_550B:				; CODE XREF: sub_0_5498+34j
					; sub_0_5498+49j ...
		mov	ax, 1
		retn
sub_0_5498	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_550F	proc near		; CODE XREF: CONTROLLER+37Ep
					; CONTROLLER+7D0p ...
		mov	word ptr ds:0D13Ch, 0
		mov	word ptr ds:0CCCDh, 0
		mov	word ptr ds:0CCCFh, 0
		mov	dx, 0
		call	CHARS_BARBLANK
		call	CLEARLOCWIN
		cmp	word ptr ds:68A2h, 0
		jz	loc_0_5539
		nop
		nop
		nop
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh

loc_0_5539:				; CODE XREF: sub_0_550F+20j
		mov	ax, 2
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	loc_0_556D
		nop
		nop
		nop
		mov	ax, 0
		cmp	byte ptr ds:3784h, 1
		jz	loc_0_556D
		nop
		nop
		nop
		mov	word ptr ds:5ABBh, 3
		call	NEARBASKET
		cmp	bp, 1
		jz	loc_0_556A
		nop
		nop
		nop
		mov	ax, 1
		jmp	short loc_0_556D
;����������������������������������������������������������������������������
		nop

loc_0_556A:				; CODE XREF: sub_0_550F+50j
		mov	ax, 3

loc_0_556D:				; CODE XREF: sub_0_550F+32j
					; sub_0_550F+3Fj ...
		mov	ds:0CB46h, ax
		mov	byte ptr ds:0AEBh, 1
		mov	bp, 0Ch
		cmp	word ptr ds:5AB5h, 1
		jnz	loc_0_5582
		jmp	loc_0_5645
;����������������������������������������������������������������������������

loc_0_5582:				; CODE XREF: sub_0_550F+6Ej
		call	MONO
		mov	dx, 4CCh
		cmp	word ptr ds:100Ah, 0
		jz	loc_0_5595
		nop
		nop
		nop
		mov	dx, 4D4h

loc_0_5595:				; CODE XREF: sub_0_550F+7Ej
		mov	di, 1E48h
		mov	ax, 0A000h
		call	LOADPAD
		call	WAITRELEASE
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 90h	; '�'
		mov	dx, 110h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 18h
		mov	dx, 58h	; 'X'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 50h	; 'P'
		mov	dx, 30h	; '0'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_55CC:				; CODE XREF: sub_0_550F+D1j
					; sub_0_550F+134j
		cmp	word ptr ds:0F8h, 0
		jz	loc_0_55D6
		jmp	loc_0_56C3
;����������������������������������������������������������������������������

loc_0_55D6:				; CODE XREF: sub_0_550F+C2j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_55CC
		test	bx, 2
		jz	loc_0_55EB
		jmp	loc_0_56C3
;����������������������������������������������������������������������������

loc_0_55EB:				; CODE XREF: sub_0_550F+D7j
		sub	cx, 48h	; 'H'
		sub	dx, 18h
		mov	si, 68E8h
		call	CHECKBOXES
		mov	bp, 2
		cmp	ax, 5
		jz	loc_0_5645
		nop
		nop
		nop
		mov	bp, 4
		cmp	ax, 6
		jz	loc_0_5645
		nop
		nop
		nop
		mov	bp, 8
		cmp	ax, 8
		jz	loc_0_5645
		nop
		nop
		nop
		mov	bp, 0Ch
		cmp	ax, 9
		jz	loc_0_5645
		nop
		nop
		nop
		cmp	ax, 7
		jnz	loc_0_562B
		jmp	loc_0_56C3
;����������������������������������������������������������������������������

loc_0_562B:				; CODE XREF: sub_0_550F+117j
		cmp	word ptr ds:100Ah, 0
		jz	loc_0_5643
		nop
		nop
		nop
		cmp	ax, 4
		jnz	loc_0_5643
		nop
		nop
		nop
		mov	ax, ds:100Ah
		jmp	short loc_0_5674
;����������������������������������������������������������������������������
		nop

loc_0_5643:				; CODE XREF: sub_0_550F+121j
					; sub_0_550F+129j
		jmp	short loc_0_55CC
;����������������������������������������������������������������������������

loc_0_5645:				; CODE XREF: sub_0_550F+70j
					; sub_0_550F+EEj ...
		call	RAND
		sar	ah, 1
		sar	ah, 1
		mov	al, ah
		and	ax, 3
		dec	ax
		add	bp, ax
		mov	ax, 10h
		mul	bp
		mov	bp, 18h
		div	bp
		cmp	ax, 0
		jg	loc_0_5669
		nop
		nop
		nop
		mov	ax, 1

loc_0_5669:				; CODE XREF: sub_0_550F+152j
		cmp	ax, 18h
		jl	loc_0_5674
		nop
		nop
		nop
		mov	ax, 18h

loc_0_5674:				; CODE XREF: sub_0_550F+131j
					; sub_0_550F+15Dj
		mov	cx, ax
		push	ax

loc_0_5677:				; CODE XREF: sub_0_550F+17Dj
		push	cx
		call	CLOCK
		call	sub_0_5740
		cmp	word ptr ds:0CA1Ch, 14h
		jle	loc_0_568B
		nop
		nop
		nop
		call	TAKESLEEP

loc_0_568B:				; CODE XREF: sub_0_550F+174j
		pop	cx
		loop	loc_0_5677
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		cmp	word ptr ds:2650h, 0
		jz	loc_0_56A3
		nop
		nop
		nop
		call	GETBORDER
		jmp	short loc_0_56A9
;����������������������������������������������������������������������������
		nop

loc_0_56A3:				; CODE XREF: sub_0_550F+189j
		call	COPYVIEW
		call	MONOFADE

loc_0_56A9:				; CODE XREF: sub_0_550F+191j
		mov	cx, 0C8h ; '�'
		call	MOVECHARS
		pop	ax
		call	MUGGED
		cmp	word ptr ds:0CB46h, 0
		jnz	loc_0_56C3
		nop
		nop
		nop
		mov	bp, 1
		call	MAKE_ARRESTER

loc_0_56C3:				; CODE XREF: sub_0_550F+C4j
					; sub_0_550F+D9j ...
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	LOADPANELS
		mov	dx, ds:260Eh
		cmp	dx, 0
		jz	loc_0_56DA
		nop
		nop
		nop
		call	LOADTILE

loc_0_56DA:				; CODE XREF: sub_0_550F+1C3j
		call	sub_0_6B1E
		call	BACKTOGAME
		mov	byte ptr ds:0AEBh, 0
		call	WAITRELEASE
		call	MOUSEFORGAME
		retn
sub_0_550F	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

NEARBASKET	proc near		; CODE XREF: sub_0_550F+4Ap
					; sub_0_8027+145p ...
		mov	bp, 0
		mov	ax, ds:0ADBh
		mov	dx, ds:0B17h
		call	CELLSAPART
		cmp	ax, ds:5ABBh
		jle	loc_0_573C
		nop
		nop
		nop
		mov	ax, ds:0ADBh
		mov	dx, ds:0B19h
		call	CELLSAPART
		cmp	ax, ds:5ABBh
		jle	loc_0_573C
		nop
		nop
		nop
		mov	ax, ds:0ADBh
		mov	dx, ds:0B1Bh
		call	CELLSAPART
		cmp	ax, ds:5ABBh
		jle	loc_0_573C
		nop
		nop
		nop
		mov	ax, ds:0ADBh
		mov	dx, ds:0B1Dh
		call	CELLSAPART
		cmp	ax, ds:5ABBh
		jle	loc_0_573C
		nop
		nop
		nop
		retn
;����������������������������������������������������������������������������

loc_0_573C:				; CODE XREF: NEARBASKET+11j
					; NEARBASKET+24j ...
		mov	bp, 1
		retn
NEARBASKET	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_5740	proc near		; CODE XREF: CONTROLLER+925p
					; sub_0_550F+16Cp ...
		cmp	byte ptr ds:0AEDh, 0
		jnz	loc_0_574A
		jmp	loc_0_58A9
;����������������������������������������������������������������������������

loc_0_574A:				; CODE XREF: sub_0_5740+5j
		cmp	byte ptr ds:0AEBh, 1
		jz	loc_0_578C
		nop
		nop
		nop
		mov	bx, ds:5E5Ch
		add	bx, ds:0AF0h
		mov	al, [bx]
		cmp	al, 0
		jz	loc_0_578C
		nop
		nop
		nop
		cmp	al, 1
		jnz	loc_0_5772
		nop
		nop
		nop
		call	sub_0_59CB
		jmp	short loc_0_578C
;����������������������������������������������������������������������������
		nop

loc_0_5772:				; CODE XREF: sub_0_5740+27j
		cmp	al, 3
		jnz	loc_0_577F
		nop
		nop
		nop
		call	sub_0_58DE
		jmp	short loc_0_578C
;����������������������������������������������������������������������������
		nop

loc_0_577F:				; CODE XREF: sub_0_5740+34j
		cmp	al, 2
		jnz	loc_0_578C
		nop
		nop
		nop
		call	sub_0_58AF
		jmp	short loc_0_578C
;����������������������������������������������������������������������������
		nop

loc_0_578C:				; CODE XREF: sub_0_5740+Fj
					; sub_0_5740+20j ...
		cmp	word ptr ds:5AB9h, 0
		jz	loc_0_57A8
		nop
		nop
		nop
		dec	word ptr ds:5AB9h
		jnz	loc_0_57A8
		nop
		nop
		nop
		dec	word ptr ds:5AC1h
		mov	byte ptr ds:13Dh, 1

loc_0_57A8:				; CODE XREF: sub_0_5740+51j
					; sub_0_5740+5Aj
		cmp	word ptr ds:5AB7h, 0
		jz	loc_0_57C4
		nop
		nop
		nop
		dec	word ptr ds:5AB7h
		jnz	loc_0_57C4
		nop
		nop
		nop
		dec	word ptr ds:5AC3h
		mov	byte ptr ds:13Dh, 1

loc_0_57C4:				; CODE XREF: sub_0_5740+6Dj
					; sub_0_5740+76j
		mov	di, 88B6h
		mov	cx, 40h	; '@'

loc_0_57CA:				; CODE XREF: sub_0_5740+CFj
		push	cx
		mov	ax, [di+27h]
		cmp	ax, 0FFFFh
		jz	loc_0_580B
		nop
		nop
		nop
		cmp	ax, 0
		jz	loc_0_57E5
		nop
		nop
		nop
		dec	ax
		mov	[di+27h], ax
		jmp	short loc_0_580B
;����������������������������������������������������������������������������
		nop

loc_0_57E5:				; CODE XREF: sub_0_5740+99j
		test	word ptr [di], 4
		jnz	loc_0_580B
		nop
		nop
		nop
		mov	al, ds:0ADDh
		cmp	[di+0Ah], al
		jnz	loc_0_5802
		nop
		nop
		nop
		cmp	word ptr [di+8], 8
		jl	loc_0_580B
		nop
		nop
		nop

loc_0_5802:				; CODE XREF: sub_0_5740+B4j
		mov	word ptr [di], 1
		mov	word ptr [di+27h], 0FFFFh

loc_0_580B:				; CODE XREF: sub_0_5740+91j
					; sub_0_5740+A2j ...
		pop	cx
		add	di, 2Ch	; ','
		loop	loc_0_57CA
		cmp	word ptr ds:100Ah, 0
		jz	loc_0_582D
		nop
		nop
		nop
		dec	word ptr ds:100Ah
		jnz	loc_0_582D
		nop
		nop
		nop
		mov	word ptr ds:100Ch, 0
		call	PRINTFREE

loc_0_582D:				; CODE XREF: sub_0_5740+D6j
					; sub_0_5740+DFj
		mov	bx, ds:5AC7h
		sar	bx, 1
		sar	bx, 1
		sar	bx, 1
		mov	dx, 0
		call	UPDATEHEALTH
		mov	word ptr ds:5AC7h, 0
		call	PROCESS_ILLNESS
		test	byte ptr ds:0AEDh, 2
		jz	loc_0_589F
		nop
		nop
		nop
		inc	byte ptr ds:0F5Fh
		cmp	byte ptr ds:0F5Fh, 7
		jnz	loc_0_5863
		nop
		nop
		nop
		mov	byte ptr ds:0F5Fh, 0

loc_0_5863:				; CODE XREF: sub_0_5740+119j
		call	MIDNIGHT
		mov	ax, 5E5Eh
		cmp	word ptr ds:0AF2h, 0
		jz	loc_0_589C
		nop
		nop
		nop
		mov	ax, 5E6Eh
		cmp	word ptr ds:0AF2h, 40h ; '@'
		jz	loc_0_589C
		nop
		nop
		nop
		mov	ax, 5E7Eh
		cmp	word ptr ds:0AF2h, 80h ; '�'
		jz	loc_0_589C
		nop
		nop
		nop
		mov	ax, 5E8Eh
		cmp	word ptr ds:0AF2h, 0C0h	; '�'
		jnz	loc_0_589F
		nop
		nop
		nop

loc_0_589C:				; CODE XREF: sub_0_5740+12Ej
					; sub_0_5740+13Bj ...
		mov	ds:5E5Ch, ax

loc_0_589F:				; CODE XREF: sub_0_5740+10Bj
					; sub_0_5740+157j
		test	byte ptr ds:0AEDh, 4
		jz	loc_0_58A9
		nop
		nop
		nop

loc_0_58A9:				; CODE XREF: sub_0_5740+7j
					; sub_0_5740+164j
		mov	byte ptr ds:0AEDh, 0
		retn
sub_0_5740	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_58AF	proc near		; CODE XREF: sub_0_5740+46p
					; sub_0_58DE+D1j
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	locret_0_58DD
		nop
		nop
		nop
		mov	dx, 339h
		call	LC1
		call	WAITMRELEASE
		call	SHOWPIC1
		call	LOADPANELS
		mov	dx, ds:260Eh
		cmp	dx, 0
		jz	loc_0_58D7
		nop
		nop
		nop
		call	LOADTILE

loc_0_58D7:				; CODE XREF: sub_0_58AF+20j
		call	sub_0_6B1E
		call	SHOWPIC2

locret_0_58DD:				; CODE XREF: sub_0_58AF+5j
		retn
sub_0_58AF	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_58DE	proc near		; CODE XREF: sub_0_5740+39p
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_58E8
		jmp	locret_0_59CA
;����������������������������������������������������������������������������

loc_0_58E8:				; CODE XREF: sub_0_58DE+5j
		mov	dx, 342h
		call	LC1
		call	WAITMRELEASE
		call	SHOWPIC1
		cmp	word ptr ds:5ABDh, 1
		jnz	loc_0_58FE
		jmp	loc_0_59B2
;����������������������������������������������������������������������������

loc_0_58FE:				; CODE XREF: sub_0_58DE+1Bj
		cmp	word ptr ds:0ADDh, 1
		jnz	loc_0_5908
		jmp	loc_0_59B2
;����������������������������������������������������������������������������

loc_0_5908:				; CODE XREF: sub_0_58DE+25j
		cmp	word ptr ds:0CAF4h, 0
		jnz	loc_0_5912
		jmp	loc_0_59B2
;����������������������������������������������������������������������������

loc_0_5912:				; CODE XREF: sub_0_58DE+2Fj
		cmp	byte ptr ds:3784h, 1
		jz	loc_0_591C
		jmp	loc_0_59B2
;����������������������������������������������������������������������������

loc_0_591C:				; CODE XREF: sub_0_58DE+39j
		mov	byte ptr ds:0AEBh, 1

loc_0_5921:				; CODE XREF: sub_0_58DE+54j
		call	CLOCK
		call	sub_0_5740
		mov	bx, ds:5E5Ch
		add	bx, ds:0AF0h
		cmp	byte ptr [bx], 2
		jnz	loc_0_5921
		mov	byte ptr ds:0AEBh, 0
		push	es
		mov	ax, 18h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		call	FLIPBIT1
		mov	ax, 184h
		call	FLI_FROMDISKS
		mov	cx, 64h	; 'd'
		call	PAUSE
		mov	cx, 100h
		call	FLIPBIT2
		push	es
		mov	ax, 18h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax

loc_0_5974:				; CODE XREF: sub_0_58DE+A5j
		call	RAND
		and	ax, 3F1Fh
		add	ax, 2026h
		call	ACCELL2
		cmp	bp, 0
		jz	loc_0_5974
		mov	ds:0ADBh, ax
		mov	dh, al
		mov	dl, 80h	; '�'
		mov	al, 80h	; '�'
		mov	ds:0ACFh, ax
		mov	ds:0ACDh, dx
		mov	bx, ds:0ADBh
		call	MAKECELLMAP
		pop	es
		mov	bp, 6
		call	MAKE_ARRESTER
		mov	bp, 6
		call	MAKE_ARRESTER
		mov	bp, 6
		call	MAKE_ARRESTER
		jmp	sub_0_58AF
;����������������������������������������������������������������������������

loc_0_59B2:				; CODE XREF: sub_0_58DE+1Dj
					; sub_0_58DE+27j ...
		call	LOADPANELS
		mov	dx, ds:260Eh
		cmp	dx, 0
		jz	loc_0_59C4
		nop
		nop
		nop
		call	LOADTILE

loc_0_59C4:				; CODE XREF: sub_0_58DE+DEj
		call	sub_0_6B1E
		call	SHOWPIC2

locret_0_59CA:				; CODE XREF: sub_0_58DE+7j
		retn
sub_0_58DE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_59CB	proc near		; CODE XREF: sub_0_5740+2Cp
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	locret_0_5A15
		nop
		nop
		nop
		mov	di, 60h	; '`'
		cmp	byte ptr ds:3784h, 0
		jz	loc_0_59EF
		nop
		nop
		nop
		cmp	word ptr ds:0AF0h, 8
		jl	loc_0_59EF
		nop
		nop
		nop
		mov	di, 480h

loc_0_59EF:				; CODE XREF: sub_0_59CB+12j
					; sub_0_59CB+1Cj
		mov	bx, 20h	; ' '
		mov	cx, 40h	; '@'
		mov	dx, di
		call	SETPALBIT
		mov	si, 1B0h
		cmp	word ptr ds:0AF0h, 8
		jl	loc_0_5A0A
		nop
		nop
		nop
		mov	si, 540h

loc_0_5A0A:				; CODE XREF: sub_0_59CB+37j
		mov	bx, 90h	; '�'
		mov	cx, 10h
		mov	dx, si
		call	SETPALBIT

locret_0_5A15:				; CODE XREF: sub_0_59CB+5j
		retn
sub_0_59CB	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADPANELS	proc near		; CODE XREF: sub_0_550F+1B9p
					; sub_0_58AF+16p ...
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	loc_0_5A46
		nop
		nop
		nop
		cmp	byte ptr ds:3784h, 0
		jz	loc_0_5A30
		nop
		nop
		nop
		call	LOADOSP
		jmp	short locret_0_5A75
;����������������������������������������������������������������������������
		nop

loc_0_5A30:				; CODE XREF: LOADPANELS+Fj
		cmp	byte ptr ds:0AFAh, 3
		jz	loc_0_5A40
		nop
		nop
		nop
		call	LOADISP
		jmp	short locret_0_5A75
;����������������������������������������������������������������������������
		nop

loc_0_5A40:				; CODE XREF: LOADPANELS+1Fj
		call	BOATYARD
		jmp	short locret_0_5A75
;����������������������������������������������������������������������������
		nop

loc_0_5A46:				; CODE XREF: LOADPANELS+5j
		cmp	byte ptr ds:0AFAh, 2
		jz	loc_0_5A64
		nop
		nop
		nop
		cmp	byte ptr ds:0AFAh, 4
		jz	loc_0_5A64
		nop
		nop
		nop
		cmp	byte ptr ds:0AFAh, 5
		jnz	loc_0_5A6A
		nop
		nop
		nop

loc_0_5A64:				; CODE XREF: LOADPANELS+35j
					; LOADPANELS+3Fj
		call	LOADUGP
		jmp	short locret_0_5A75
;����������������������������������������������������������������������������
		nop

loc_0_5A6A:				; CODE XREF: LOADPANELS+49j
		mov	byte ptr ds:0AFAh, 0FFh
		call	LOADUGPANELS
		jmp	short locret_0_5A75
;����������������������������������������������������������������������������
		nop

locret_0_5A75:				; CODE XREF: LOADPANELS+17j
					; LOADPANELS+27j ...
		retn
LOADPANELS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CHECKBOXES	proc near		; CODE XREF: START+E6p	CONTROLLER+236p
					; ...
		mov	ax, [si]
		cmp	ax, 0FFFFh
		jz	loc_0_5AB0
		nop
		nop
		nop
		cmp	ax, cx
		jg	loc_0_5AAB
		nop
		nop
		nop
		add	ax, [si+4]
		cmp	ax, cx
		jl	loc_0_5AAB
		nop
		nop
		nop
		mov	ax, [si+2]
		cmp	ax, dx
		jg	loc_0_5AAB
		nop
		nop
		nop
		add	ax, [si+6]
		cmp	ax, dx
		jl	loc_0_5AAB
		nop
		nop
		nop
		mov	ax, [si+8]
		jmp	short locret_0_5AB3
;����������������������������������������������������������������������������
		nop

loc_0_5AAB:				; CODE XREF: CHECKBOXES+Cj
					; CHECKBOXES+16j ...
		add	si, 0Ah
		jmp	short CHECKBOXES
;����������������������������������������������������������������������������

loc_0_5AB0:				; CODE XREF: CHECKBOXES+5j
		mov	ax, 0

locret_0_5AB3:				; CODE XREF: CHECKBOXES+32j
		retn
CHECKBOXES	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CHECKBOXES_B	proc near		; CODE XREF: CHECKBOXES_B+37j
					; seg000:A880p
		mov	al, [si]
		cmp	al, 0FFh
		jz	loc_0_5AED
		nop
		nop
		nop
		cmp	al, cl
		jg	loc_0_5AE8
		nop
		nop
		nop
		add	al, [si+2]
		cmp	al, cl
		jl	loc_0_5AE8
		nop
		nop
		nop
		mov	al, [si+1]
		cmp	al, dl
		jg	loc_0_5AE8
		nop
		nop
		nop
		add	al, [si+3]
		cmp	al, dl
		jl	loc_0_5AE8
		nop
		nop
		nop
		mov	al, [si+4]
		jmp	short loc_0_5AF0
;����������������������������������������������������������������������������
		nop

loc_0_5AE8:				; CODE XREF: CHECKBOXES_B+Bj
					; CHECKBOXES_B+15j ...
		add	si, 5
		jmp	short CHECKBOXES_B
;����������������������������������������������������������������������������

loc_0_5AED:				; CODE XREF: CHECKBOXES_B+4j
		mov	ax, 0

loc_0_5AF0:				; CODE XREF: CHECKBOXES_B+31j
		mov	ah, 0
		retn
CHECKBOXES_B	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_5AF3	proc near		; CODE XREF: sub_0_49FD+396p
					; CHANGELEVEL+F7p
		call	CLEARLOCWIN
		mov	ax, ds:132h
		add	ax, 0C8h ; '�'
		mov	ds:138h, ax
		mov	byte ptr ds:13Ah, 0
		mov	si, 0BE5h
		mov	ax, ds:0ADBh
		mov	si, 0BE5h
		mov	bp, 4

loc_0_5B10:				; CODE XREF: sub_0_5AF3+2Ej
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_5B68
		nop
		nop
		nop
		cmp	[si], ax
		jz	loc_0_5B23
		nop
		nop
		nop
		add	si, bp
		jmp	short loc_0_5B10
;����������������������������������������������������������������������������

loc_0_5B23:				; CODE XREF: sub_0_5AF3+27j
		mov	ax, [si+2]
		mov	cx, ds:0ADDh
		cmp	cl, ah
		jnz	loc_0_5B62
		nop
		nop
		nop
		mov	ah, 0

loc_0_5B33:				; CODE XREF: sub_0_5AF3+8Bj
		mov	si, 11h
		mov	cx, ds:0D716h
		mov	ds:217Ah, cx
		push	es
		mov	es, cx
		mov	byte ptr es:[si], 7Bh ;	'{'
		mov	es:[si+1], ah
		mov	es:[si+2], al
		mov	ds:0D14Eh, al
		mov	byte ptr es:[si+3], 0FFh
		pop	es
		mov	di, 9640h
		call	TPPANDP
		mov	word ptr ds:5B01h, 0

loc_0_5B62:				; CODE XREF: sub_0_5AF3+39j
					; sub_0_5AF3+7Aj ...
		mov	byte ptr ds:5EA4h, 0
		retn
;����������������������������������������������������������������������������

loc_0_5B68:				; CODE XREF: sub_0_5AF3+20j
		cmp	byte ptr ds:3784h, 0
		jnz	loc_0_5B62
		cmp	byte ptr ds:5EA4h, 1
		jnz	loc_0_5B62
		mov	ax, ds:0ADBh
		and	ax, 3
		mov	ah, 44h	; 'D'
		jmp	short loc_0_5B33
sub_0_5AF3	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CLEARLOCWIN?	proc near		; CODE XREF: CONTROLLER+484p
					; CONTROLLER+504p ...
		push	di		; CLEARLOCWIN?
		call	CLEARLOCWIN
		pop	di
		cmp	di, 0
		jz	locret_0_5BC1
		nop
		nop
		nop
		mov	al, [di+0Bh]
CLEARLOCWIN?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

TEXT_ROLL?	proc near		; CODE XREF: sub_0_5D62+143p
		mov	cx, ds:132h	; HERTZCOUNT
		add	cx, 64h	; 'd'
		mov	ds:138h, cx	; CLWCOUNT
		mov	byte ptr ds:13Ah, 0; CLWFLAG
		mov	si, 0F35h	; VARSTRING
		mov	cx, seg001
		mov	ds:217Ah, cx	; TEXTSOURCESEG
		mov	byte ptr [si], 7Bh ; '{'
		mov	byte ptr [si+1], 1
		mov	[si+2],	al
		mov	byte ptr [si+3], 0FFh
		call	TEXT_PREPROCESS
		mov	di, 9640h
		call	PTOV

locret_0_5BC1:				; CODE XREF: CLEARLOCWIN?+8j
		retn
TEXT_ROLL?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SETRATES	proc near		; CODE XREF: SIZEOK+24p CONTROLLER+3p
					; ...
		mov	word ptr ds:0D73Eh, 0; FPS
		mov	word ptr ds:12Ch, 0; SCFLAG
		mov	word ptr ds:12Ah, 0; SPEEDCOUNTER

loc_0_5BD4:				; CODE XREF: SETRATES+23j
		inc	word ptr ds:0D73Eh; FPS
		cmp	word ptr ds:12Ch, 1; SCFLAG
		jz	loc_0_5BE7
		nop
		nop
		nop
		call	MAKEVIEW
		jmp	short loc_0_5BD4
;����������������������������������������������������������������������������

loc_0_5BE7:				; CODE XREF: SETRATES+1Bj
		mov	byte ptr ds:6BD4h, 0; FLYFLAG
		cmp	word ptr ds:0D73Eh, 25h	; '%'; FPS
		jle	loc_0_5C23
		nop
		nop
		nop
		mov	byte ptr ds:6BD4h, 1; FLYFLAG
		mov	word ptr ds:0D73Eh, 0; FPS
		mov	word ptr ds:12Ch, 0; SCFLAG
		mov	word ptr ds:12Ah, 0; SPEEDCOUNTER

loc_0_5C0D:				; CODE XREF: SETRATES+5Fj
		inc	word ptr ds:0D73Eh; FPS
		cmp	word ptr ds:12Ch, 1; SCFLAG
		jz	loc_0_5C23
		nop
		nop
		nop
		call	MAKEVIEW
		call	WAITFLY
		jmp	short loc_0_5C0D
;����������������������������������������������������������������������������

loc_0_5C23:				; CODE XREF: SETRATES+2Fj SETRATES+54j
		mov	ax, ds:0D73Ch	; GAMESPEED
		cwd
		mov	bx, ds:0D73Eh	; FPS
		cmp	bx, 1
		jge	loc_0_5C36
		nop
		nop
		nop
		mov	bx, 1

loc_0_5C36:				; CODE XREF: SETRATES+6Cj
		div	bx
		cmp	ax, 0
		jl	loc_0_5C58
		nop
		nop
		nop
		cmp	ax, 1
		jg	loc_0_5C4B
		nop
		nop
		nop
		mov	ax, 2

loc_0_5C4B:				; CODE XREF: SETRATES+81j
		mov	ds:0D740h, ax	; LINVEL
		mov	ds:0D742h, ax	; CHARVEL
		shl	word ptr ds:0D740h, 1
		jmp	short loc_0_5C64
;����������������������������������������������������������������������������
		nop

loc_0_5C58:				; CODE XREF: SETRATES+79j
		mov	ax, 1
		mov	ds:0D740h, ax	; LINVEL
		mov	word ptr ds:0D742h, 2; CHARVEL

loc_0_5C64:				; CODE XREF: SETRATES+93j
		mov	di, 6DCEh	; C_BLOCKS
		mov	cx, 38h	; '8'

loc_0_5C6A:				; CODE XREF: SETRATES+EEj
		test	word ptr [di], 1
		jnz	loc_0_5CAD
		nop
		nop
		nop
		call	MAKEVEL
		mov	[di+1Bh], ax
		mov	[di+1Dh], ax
		mov	word ptr [di+1Fh], 0
		mov	word ptr [di+25h], 0
		mov	bx, ax
		mov	ax, 100h	; 160
		cwd
		div	bx
		cmp	al, 0
		jg	loc_0_5C97
		nop
		nop
		nop
		mov	al, 0FFh	; 255

loc_0_5C97:				; CODE XREF: SETRATES+CEj
		mov	[di+24h], al
		mov	ax, [di+1Bh]
		mov	dx, 0Ah		; 10
		mul	dx
		mov	[di+29h], al
		mov	byte ptr [di+2Ah], 0
		mov	byte ptr [di+23h], 1

loc_0_5CAD:				; CODE XREF: SETRATES+ACj
		add	di, 7Bh	; '{'
		loop	loc_0_5C6A
		retn
SETRATES	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COMPASS		proc near		; CODE XREF: CONTROLLER+916p
		mov	dx, 0C8F8h
		mov	di, dx
		mov	ax, ds:0AD1h
		cmp	word ptr ds:5ACDh, 0
		jz	loc_0_5D0E
		nop
		nop
		nop
		mov	dx, ds:0ADBh
		cmp	dx, ds:0D465h
		jnz	loc_0_5CDB
		nop
		nop
		nop
		mov	ax, ds:0D744h
		and	ax, 3FFh
		jmp	short loc_0_5D0E
;����������������������������������������������������������������������������
		nop

loc_0_5CDB:				; CODE XREF: COMPASS+1Aj
		push	di
		push	ax
		mov	ax, ds:0D461h
		sub	ax, ds:0ACDh
		mov	dx, ds:0D463h
		sub	dx, ds:0ACFh
		call	ARCTAN
		mov	ax, di
		pop	dx
		sub	ax, dx
		sub	ax, 168h
		cmp	ax, 0
		jge	loc_0_5D02
		nop
		nop
		nop
		add	ax, 5A0h

loc_0_5D02:				; CODE XREF: COMPASS+47j
		cmp	ax, 5A0h
		jl	loc_0_5D0D
		nop
		nop
		nop
		sub	ax, 5A0h

loc_0_5D0D:				; CODE XREF: COMPASS+52j
		pop	di

loc_0_5D0E:				; CODE XREF: COMPASS+Dj COMPASS+25j
		sub	ax, 40Bh
		jge	loc_0_5D19
		nop
		nop
		nop
		add	ax, 5A0h

loc_0_5D19:				; CODE XREF: COMPASS+5Ej
		cwd
		mov	bx, 5Ah	; 'Z'
		idiv	bx
		mov	bx, 6869h
		add	bx, ax
		add	bx, ax
		mov	si, [bx]
		cmp	al, ds:5E21h
		jz	locret_0_5D61
		nop
		nop
		nop
		mov	ds:5E21h, al
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		push	ds
		push	es
		mov	ax, ds:0D712h
		mov	ds, ax
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 0Fh
		mov	bp, 0Fh

loc_0_5D4B:				; CODE XREF: COMPASS+A5j
		mov	cx, bp
		rep movsb
		add	di, 131h
		add	si, 0F0h ; '�'
		dec	dx
		jnz	loc_0_5D4B
		pop	es
		assume es:nothing
		pop	ds
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

locret_0_5D61:				; CODE XREF: COMPASS+79j
		retn
COMPASS		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_5D62	proc near		; CODE XREF: CONTROLLER+4E8p
		mov	byte ptr ds:13Dh, 0
		cmp	word ptr ds:9A8Ah, 0FFFFh
		jnz	loc_0_5D71
		jmp	loc_0_5F9F
;����������������������������������������������������������������������������

loc_0_5D71:				; CODE XREF: sub_0_5D62+Aj
		cmp	byte ptr ds:5E1Eh, 1
		jnz	loc_0_5D7B
		jmp	loc_0_5F9F
;����������������������������������������������������������������������������

loc_0_5D7B:				; CODE XREF: sub_0_5D62+14j
		mov	di, ds:9A8Ah
		test	word ptr [di], 20h
		jz	loc_0_5D88
		jmp	loc_0_5F9F
;����������������������������������������������������������������������������

loc_0_5D88:				; CODE XREF: sub_0_5D62+21j
		cmp	byte ptr [di+0Bh], 3Dh ; '='
		jnz	loc_0_5D91
		jmp	loc_0_5FA8
;����������������������������������������������������������������������������

loc_0_5D91:				; CODE XREF: sub_0_5D62+2Aj
		cmp	byte ptr [di+0Bh], 56h ; 'V'
		jnz	loc_0_5D9A
		jmp	loc_0_5FA3
;����������������������������������������������������������������������������

loc_0_5D9A:				; CODE XREF: sub_0_5D62+33j
		cmp	byte ptr [di+0Bh], 5Ch ; '\'
		jz	loc_0_5DAC
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 5Dh ; ']'
		jnz	loc_0_5DCB
		nop
		nop
		nop

loc_0_5DAC:				; CODE XREF: sub_0_5D62+3Cj
					; sub_0_5D62+77j
		mov	word ptr ds:0D489h, 0FFFEh

loc_0_5DB2:				; CODE XREF: sub_0_5D62+89j
		mov	word ptr ds:0CB3Eh, 0
		push	es
		mov	ax, 1Bh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	loc_0_5F9F
;����������������������������������������������������������������������������

loc_0_5DCB:				; CODE XREF: sub_0_5D62+45j
		cmp	byte ptr [di+0Bh], 5Eh ; '^'
		jnz	loc_0_5DE7
		nop
		nop
		nop
		cmp	word ptr ds:0D48Fh, 1
		jnz	loc_0_5DAC
		call	SPELLEFFECT
		mov	word ptr ds:0D489h, 0FFFFh
		jmp	loc_0_5F9F
;����������������������������������������������������������������������������

loc_0_5DE7:				; CODE XREF: sub_0_5D62+6Dj
		cmp	byte ptr [di+0Bh], 5Fh ; '_'
		jz	loc_0_5DB2
		cmp	byte ptr [di+0Bh], 3Eh ; '>'
		jnz	loc_0_5E06
		nop
		nop
		nop
		cmp	word ptr ds:5ACFh, 1
		jz	loc_0_5E00
		jmp	loc_0_5FAD
;����������������������������������������������������������������������������

loc_0_5E00:				; CODE XREF: sub_0_5D62+99j
		mov	word ptr ds:5ACFh, 0

loc_0_5E06:				; CODE XREF: sub_0_5D62+8Fj
		mov	byte ptr ds:5E1Eh, 1
		cmp	byte ptr [di+0Bh], 2Ch ; ','
		jnz	loc_0_5E5F
		nop
		nop
		nop
		mov	si, ds:0BB6h
		cmp	si, 0
		jz	loc_0_5E59
		nop
		nop
		nop
		cmp	byte ptr [si+0Bh], 2Dh ; '-'
		jnz	loc_0_5E59
		nop
		nop
		nop
		mov	word ptr [di], 1
		mov	byte ptr [si+0Bh], 2Eh ; '.'
		add	word ptr [si+15h], 10h
		mov	word ptr ds:5ACDh, 0
		mov	byte ptr ds:13Dh, 1
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	dx, 47Bh
		mov	di, 0AAE0h
		mov	ax, 0A000h
		call	LOADPAD
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jmp	loc_0_5F9F
;����������������������������������������������������������������������������

loc_0_5E59:				; CODE XREF: sub_0_5D62+B9j
					; sub_0_5D62+C2j
		call	sub_0_6A69
		jmp	loc_0_5F9F
;����������������������������������������������������������������������������

loc_0_5E5F:				; CODE XREF: sub_0_5D62+ADj
		cmp	byte ptr [di+0Bh], 3Fh ; '?'
		jnz	loc_0_5E77
		nop
		nop
		nop
		mov	word ptr ds:5ABFh, 1
		mov	word ptr ds:5B03h, 8
		jmp	short loc_0_5E94
;����������������������������������������������������������������������������
		nop

loc_0_5E77:				; CODE XREF: sub_0_5D62+101j
		cmp	byte ptr [di+0Bh], 40h ; '@'
		jnz	loc_0_5E87
		nop
		nop
		nop
		inc	word ptr ds:5AC1h
		jmp	short loc_0_5E94
;����������������������������������������������������������������������������
		nop

loc_0_5E87:				; CODE XREF: sub_0_5D62+119j
		cmp	byte ptr [di+0Bh], 41h ; 'A'
		jnz	loc_0_5EAB
		nop
		nop
		nop
		inc	word ptr ds:5AC3h

loc_0_5E94:				; CODE XREF: sub_0_5D62+112j
					; sub_0_5D62+122j
		mov	al, [di+0Bh]
		mov	word ptr [di], 1
		mov	byte ptr ds:13Dh, 1
		push	ax
		call	SPELLEFFECT
		pop	ax
		call	TEXT_ROLL?
		jmp	loc_0_5F9F
;����������������������������������������������������������������������������

loc_0_5EAB:				; CODE XREF: sub_0_5D62+129j
		cmp	di, ds:0D44Bh
		jnz	loc_0_5EBA
		nop
		nop
		nop
		mov	word ptr ds:0D44Fh, 1

loc_0_5EBA:				; CODE XREF: sub_0_5D62+14Dj
		cmp	di, 93B8h
		jnz	loc_0_5EC3
		jmp	loc_0_5FB2
;����������������������������������������������������������������������������

loc_0_5EC3:				; CODE XREF: sub_0_5D62+15Cj
		cmp	byte ptr [di+0Bh], 8
		jge	loc_0_5F40
		nop
		nop
		nop
		push	es
		mov	ax, 5
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	al, [di+0Bh]
		xor	ah, ah
		mov	si, ax
		sub	si, 2
		mov	bx, 0Ah
		mul	bx
		mov	bx, ax
		add	bx, 0B15h
		add	bx, 0
		add	si, 0AFDh
		mov	cl, [si]
		mov	ch, 0
		cmp	byte ptr [di+0Bh], 1
		jnz	loc_0_5F09
		nop
		nop
		nop
		mov	cx, ds:0B09h

loc_0_5F09:				; CODE XREF: sub_0_5D62+19Ej
		mov	ax, [di+2Ah]
		add	[bx], ax
		cmp	cx, [bx]
		jge	loc_0_5F36
		nop
		nop
		nop
		mov	ax, cx
		sub	cx, [bx]
		neg	cx
		mov	[bx], ax
		mov	[di+2Ah], cx
		push	es
		mov	ax, 0Fh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		call	sub_0_6A9D
		jmp	short loc_0_5F9F
;����������������������������������������������������������������������������
		nop

loc_0_5F36:				; CODE XREF: sub_0_5D62+1AEj
		mov	word ptr [di], 1
		call	CLEARLOCWIN?
		jmp	short loc_0_5F9F
;����������������������������������������������������������������������������
		nop

loc_0_5F40:				; CODE XREF: sub_0_5D62+165j
		cmp	word ptr ds:0BB6h, 0
		jz	loc_0_5F80
		nop
		nop
		nop
		mov	bx, 0B65h
		add	bx, 0
		mov	cx, 6

loc_0_5F53:				; CODE XREF: sub_0_5D62+1FCj
		cmp	word ptr [bx], 0
		jz	loc_0_5F63
		nop
		nop
		nop
		add	bx, 0Ah
		loop	loc_0_5F53
		jmp	short loc_0_5F9F
;����������������������������������������������������������������������������
		nop

loc_0_5F63:				; CODE XREF: sub_0_5D62+1F4j
		or	word ptr [di], 4
		mov	[bx], di
		mov	byte ptr ds:13Dh, 1
		push	es
		mov	ax, 3
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_5F9F
;����������������������������������������������������������������������������
		nop

loc_0_5F80:				; CODE XREF: sub_0_5D62+1E3j
		or	word ptr [di], 4
		mov	ds:0BB6h, di
		mov	byte ptr ds:13Dh, 1
		call	CLEARLOCWIN?

loc_0_5F8F:				; CODE XREF: sub_0_5D62+244j
					; sub_0_5D62+249j ...
		push	es
		mov	ax, 3
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es

loc_0_5F9F:				; CODE XREF: sub_0_5D62+Cj
					; sub_0_5D62+16j ...
		call	PRINTCASH
		retn
;����������������������������������������������������������������������������

loc_0_5FA3:				; CODE XREF: sub_0_5D62+35j
		call	sub_0_6A7B
		jmp	short loc_0_5F8F
;����������������������������������������������������������������������������

loc_0_5FA8:				; CODE XREF: sub_0_5D62+2Cj
		call	sub_0_6A81
		jmp	short loc_0_5F8F
;����������������������������������������������������������������������������

loc_0_5FAD:				; CODE XREF: sub_0_5D62+9Bj
		call	sub_0_6A87
		jmp	short loc_0_5F8F
;����������������������������������������������������������������������������

loc_0_5FB2:				; CODE XREF: sub_0_5D62+15Ej
		mov	byte ptr ds:0AECh, 0
		push	es
		mov	ax, 0Fh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	ax, [di+6]
		mov	dx, 2
		cmp	ax, ds:0B17h
		jz	loc_0_5FF1
		nop
		nop
		nop
		add	dx, 2
		cmp	ax, ds:0B19h
		jz	loc_0_5FF1
		nop
		nop
		nop
		add	dx, 2
		cmp	ax, ds:0B1Bh
		jz	loc_0_5FF1
		nop
		nop
		nop
		add	dx, 2

loc_0_5FF1:				; CODE XREF: sub_0_5D62+26Fj
					; sub_0_5D62+27Bj ...
		mov	ds:6AA4h, dx
		push	ds
		push	es
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ds, ax
		assume ds:nothing
		mov	si, 9D6h
		mov	di, 2756h
		mov	bp, 24h	; '$'
		mov	dx, 3Ah	; ':'
		call	COPY_BLOCK
		mov	si, 72D4h
		mov	di, 3B82h
		mov	bp, 2Ah	; '*'
		mov	dx, 2Ah	; '*'
		call	COPY_BLOCK
		pop	es
		assume es:nothing
		pop	ds
		assume ds:nothing
		call	CLEARLOCWIN
		mov	si, 2F1Ah
		mov	di, 9640h
		call	TPPANDP
		call	sub_0_62C6
		mov	ax, 7
		mov	cx, 12Ch
		mov	dx, 270h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 6
		mov	dx, 88h	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 128h
		mov	dx, 70h	; 'p'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_6053:				; CODE XREF: sub_0_5D62+31Ej
		cmp	byte ptr ds:5E1Dh, 0
		jz	loc_0_6068
		nop
		nop
		nop
		call	PRINTCASH
		call	sub_0_62B4
		mov	byte ptr ds:5E1Dh, 0

loc_0_6068:				; CODE XREF: sub_0_5D62+2F6j
					; sub_0_5D62+35Bj ...
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	loc_0_60CB
		nop
		nop
		nop
		mov	si, 6984h
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_6053
		cmp	al, 6
		jg	loc_0_60BF
		nop
		nop
		nop
		dec	al

loc_0_608B:				; CODE XREF: sub_0_5D62+367j
		xor	ah, ah
		mov	dx, 0Ah
		mul	dx
		add	ax, 0B29h
		push	ax
		add	ax, 0
		mov	bx, ax
		mov	ax, [bx]
		call	HEXTOBCD2
		mov	dx, 123h
		call	FASTHEX
		pop	ax
		add	ax, ds:6AA4h
		mov	bx, ax
		mov	ax, [bx]
		call	HEXTOBCD2
		mov	dx, 413h
		call	FASTHEX
		mov	byte ptr ds:5E1Dh, 1
		jmp	short loc_0_6068
;����������������������������������������������������������������������������

loc_0_60BF:				; CODE XREF: sub_0_5D62+322j
		cmp	al, 12h
		jg	loc_0_6068
		cmp	al, 0Dh
		jl	loc_0_6068
		sub	al, 0Dh
		jmp	short loc_0_608B
;����������������������������������������������������������������������������

loc_0_60CB:				; CODE XREF: sub_0_5D62+310j
		test	bx, 2
		jz	loc_0_60DA
		nop
		nop
		nop
		call	PRINTCASH
		jmp	loc_0_6209
;����������������������������������������������������������������������������

loc_0_60DA:				; CODE XREF: sub_0_5D62+36Dj
		mov	byte ptr ds:5E1Fh, 1
		mov	si, 6984h
		call	CHECKBOXES
		cmp	ax, 0
		jnz	loc_0_60ED
		jmp	loc_0_6068
;����������������������������������������������������������������������������

loc_0_60ED:				; CODE XREF: sub_0_5D62+386j
		cmp	al, 6
		jle	loc_0_60F4
		jmp	loc_0_617B
;����������������������������������������������������������������������������

loc_0_60F4:				; CODE XREF: sub_0_5D62+38Dj
		dec	al
		mov	bp, 1

loc_0_60F9:				; CODE XREF: sub_0_5D62+42Cj
		xor	ah, ah
		mov	bx, ax
		mov	dx, 0Ah
		mul	dx
		add	ax, 0B29h
		push	ax
		add	ax, 0
		mov	si, ax
		pop	ax
		add	ax, ds:6AA4h
		mov	di, ax
		add	bx, 0B03h
		cmp	bp, 0FFFFh
		jnz	loc_0_6123
		nop
		nop
		nop
		xchg	si, di
		sub	bx, 6

loc_0_6123:				; CODE XREF: sub_0_5D62+3B7j
		cmp	word ptr [si], 0
		jz	loc_0_6173
		nop
		nop
		nop
		mov	ax, 0
		mov	al, [bx]

loc_0_6130:				; CODE XREF: sub_0_5D62+463j
		cmp	[di], ax
		jz	loc_0_6173
		nop
		nop
		nop
		dec	word ptr [si]
		inc	word ptr [di]
		cmp	bp, 0FFFFh
		jnz	loc_0_6145
		nop
		nop
		nop
		xchg	si, di

loc_0_6145:				; CODE XREF: sub_0_5D62+3DCj
		mov	ax, [si]
		push	di
		call	HEXTOBCD2
		mov	dx, 123h
		call	FASTHEX
		pop	di
		mov	ax, [di]
		call	HEXTOBCD2
		mov	dx, 413h
		call	FASTHEX
		mov	byte ptr ds:5E1Dh, 1
		cmp	word ptr ds:0F8h, 800h
		jz	loc_0_6173
		nop
		nop
		nop
		mov	cx, 0Ah
		call	PAUSE

loc_0_6173:				; CODE XREF: sub_0_5D62+3C4j
					; sub_0_5D62+3D0j ...
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jmp	loc_0_6068
;����������������������������������������������������������������������������

loc_0_617B:				; CODE XREF: sub_0_5D62+38Fj
		cmp	al, 12h
		jg	loc_0_6191
		nop
		nop
		nop
		cmp	al, 0Dh
		jl	loc_0_61DB
		nop
		nop
		nop
		sub	al, 0Dh
		mov	bp, 0FFFFh
		jmp	loc_0_60F9
;����������������������������������������������������������������������������

loc_0_6191:				; CODE XREF: sub_0_5D62+41Bj
		cmp	al, 16h
		jle	loc_0_61DB
		nop
		nop
		nop
		push	ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		pop	ax
		mov	si, 0B1Fh
		add	si, 0
		mov	di, 0B1Fh
		add	di, ds:6AA4h
		mov	bp, 1
		mov	bx, 0B09h
		cmp	al, 17h
		jnz	loc_0_61BE
		nop
		nop
		nop
		xchg	si, di
		mov	bp, 0FFFFh

loc_0_61BE:				; CODE XREF: sub_0_5D62+452j
		cmp	word ptr [si], 0
		jz	loc_0_6173
		mov	ax, [bx]
		jmp	loc_0_6130
;����������������������������������������������������������������������������

loc_0_61C8:				; CODE XREF: sub_0_5D62+47Bj
		sub	al, 13h
		mov	ah, 0
		mov	dx, 0Ah
		mul	dx
		add	ax, 0B65h
		add	ax, ds:6AA4h
		jmp	short loc_0_61EE
;����������������������������������������������������������������������������
		nop

loc_0_61DB:				; CODE XREF: sub_0_5D62+422j
					; sub_0_5D62+431j
		cmp	al, 13h
		jge	loc_0_61C8
		sub	al, 7
		xor	ah, ah
		mov	dx, 0Ah
		mul	dx
		add	ax, 0B65h
		add	ax, 0

loc_0_61EE:				; CODE XREF: sub_0_5D62+476j
		mov	bx, ax
		mov	ax, [bx]
		xchg	ax, ds:0BB6h
		mov	[bx], ax
		mov	byte ptr ds:13Dh, 1
		call	INVENTORY
		call	sub_0_62C6
		call	WAITMRELEASE
		jmp	loc_0_6068
;����������������������������������������������������������������������������

loc_0_6209:				; CODE XREF: sub_0_5D62+375j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	byte ptr ds:0AECh, 1
		call	CLEARLOCWIN
		cmp	word ptr ds:2650h, 0
		jz	loc_0_6223
		nop
		nop
		nop
		call	GETBORDER

loc_0_6223:				; CODE XREF: sub_0_5D62+4B9j
		mov	word ptr ds:68A2h, 1
		mov	byte ptr ds:5E1Fh, 1
		mov	ax, 7
		mov	cx, 0
		mov	dx, 270h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 88h	; '�'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 130h
		mov	dx, 0A0h ; '�'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		retn
sub_0_5D62	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

INVENTORY	proc near		; CODE XREF: LOADPLAYSCREEN+38p
					; CONTROLLER+913p ...
		cmp	byte ptr ds:13Dh, 1
		jnz	loc_0_62A1
		nop
		nop
		nop
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	PRINTCASH
		mov	bx, 5AD1h
		mov	si, ds:5ABFh
		call	sub_0_7878
		add	bx, 4
		mov	si, ds:5AC1h
		call	sub_0_7878
		add	bx, 4
		mov	si, ds:5AC3h
		call	sub_0_7878
		mov	si, 6A96h
		add	bx, 0
		mov	cx, 6
		call	sub_0_62E4
		mov	bx, ds:0BB6h
		mov	di, ds:6AA2h
		call	BLITPICKUP
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_62A1:				; CODE XREF: INVENTORY+5j
		mov	byte ptr ds:13Dh, 0
		retn
INVENTORY	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTCASH	proc near		; CODE XREF: CONTROLLER+561p
					; CONTROLLER+570p ...
		mov	ax, ds:0B1Fh
		call	HEXTOBCD2
		mov	dx, 123h
		call	FASTHEX
		retn
PRINTCASH	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_62B4	proc near		; CODE XREF: sub_0_5D62+2FEp
					; sub_0_62C6+5p
		mov	di, ds:6AA4h
		mov	ax, [di+0B1Fh]
		call	HEXTOBCD2
		mov	dx, 413h
		call	FASTHEX
		retn
sub_0_62B4	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_62C6	proc near		; CODE XREF: sub_0_5D62+2C8p
					; sub_0_5D62+49Ep
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	sub_0_62B4
		mov	si, 6AA6h
		mov	bx, 0B65h
		add	bx, ds:6AA4h
		mov	cx, 4
		call	sub_0_62E7
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		retn
sub_0_62C6	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_62E4	proc near		; CODE XREF: INVENTORY+39p
		mov	bx, 0B65h
sub_0_62E4	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_62E7	proc near		; CODE XREF: sub_0_62C6+15p
					; sub_0_62E7+13j
		push	bx
		push	si
		push	cx
		mov	bx, [bx]
		mov	di, [si]
		call	BLITPICKUP
		pop	cx
		pop	si
		pop	bx
		add	bx, 0Ah
		add	si, 2
		loop	sub_0_62E7
		retn
sub_0_62E7	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_62FD	proc near		; CODE XREF: CONTROLLER+3E0p
					; CONTROLLER+70Ap ...
		cmp	word ptr ds:0BB6h, 0
		jnz	loc_0_6307
		jmp	locret_0_63A7
;����������������������������������������������������������������������������

loc_0_6307:				; CODE XREF: sub_0_62FD+5j
		cmp	byte ptr ds:6899h, 1
		jnz	loc_0_6311
		jmp	locret_0_63A7
;����������������������������������������������������������������������������

loc_0_6311:				; CODE XREF: sub_0_62FD+Fj
		mov	ax, ds:0BB6h
		mov	ds:6897h, ax
		mov	bp, 0
		call	sub_0_63FF
		or	word ptr [di], 20h
		mov	byte ptr ds:689Ch, 0
		mov	ax, ds:0D744h
		and	ax, 7
		add	ax, ds:0D740h
		mov	ds:6891h, ax
		mov	byte ptr ds:6899h, 1
		mov	word ptr ds:688Bh, 0
		mov	ax, ds:0AD7h
		mov	ds:688Dh, ax
		mov	ax, ds:0AD9h
		mov	ds:688Fh, ax
		mov	byte ptr ds:689Ah, 30h ; '0'
		mov	ax, ds:0D740h
		or	ax, 1
		mov	ds:689Bh, al
		mov	al, [di+1Fh]
		sub	al, 7
		cmp	al, 0
		jge	loc_0_6365
		nop
		nop
		nop
		neg	al

loc_0_6365:				; CODE XREF: sub_0_62FD+61j
		cmp	al, 0
		jnz	loc_0_636E
		nop
		nop
		nop
		mov	al, 1

loc_0_636E:				; CODE XREF: sub_0_62FD+6Aj
		mov	ah, 0
		neg	ax
		add	ax, 9
		mov	dx, 78h	; 'x'
		mul	dx
		mov	ds:689Dh, ax
		mov	ax, ds:6891h
		mov	bx, ds:0AD9h
		imul	bx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		mov	ds:6893h, dx
		mov	ax, ds:6891h
		mov	bx, ds:0AD7h
		imul	bx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		mov	ds:6895h, dx

locret_0_63A7:				; CODE XREF: sub_0_62FD+7j
					; sub_0_62FD+11j
		retn
sub_0_62FD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DROP		proc near		; CODE XREF: CONTROLLER+3EEp
					; sub_0_7A1C+1Fp ...
		cmp	word ptr ds:0BB6h, 0
		jnz	loc_0_63B2
		jmp	locret_0_64AE
;����������������������������������������������������������������������������

loc_0_63B2:				; CODE XREF: DROP+5j
		push	es
		mov	ax, 0Ch
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	bp, 0
		mov	di, ds:0ADBh
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	al, es:[di]
		pop	es
		sar	al, 1
		sar	al, 1
		and	al, 7
		mov	ah, 5
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_63E7
		nop
		nop
		nop
		mov	ah, 3

loc_0_63E7:				; CODE XREF: DROP+38j
		cmp	al, ah
		jnz	sub_0_63FF
		nop
		nop
		nop
		mov	bp, 1000h
		mov	bx, ds:0ACDh
		mov	bl, 80h	; '�'
		mov	ax, ds:0ACFh
		mov	al, 80h	; '�'
		jmp	short loc_0_6406
DROP		endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_63FF	proc near		; CODE XREF: sub_0_62FD+1Dp
					; DROP+41j ...
		mov	bx, ds:0ACDh
		mov	ax, ds:0ACFh

loc_0_6406:				; CODE XREF: DROP+54j
		mov	di, ds:0BB6h
		mov	word ptr ds:0BB6h, 0
		and	word ptr [di], 0FFFBh
		and	word ptr [di], 0EFFFh
		or	[di], bp
		mov	byte ptr ds:13Dh, 1
		mov	[di+2],	bx
		mov	[di+4],	ax
		mov	al, bh
		mov	[di+6],	ax
		mov	al, ds:0ADDh
		mov	[di+0Ah], al
		mov	word ptr [di+8], 1
		cmp	word ptr ds:0D442h, 4
		jnz	loc_0_645D
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 55h ; 'U'
		jnz	loc_0_645D
		nop
		nop
		nop
		cmp	word ptr [di+6], 7E14h
		jnz	loc_0_645D
		nop
		nop
		nop
		mov	word ptr ds:0D489h, 1
		mov	word ptr ds:0D48Fh, 1

loc_0_645D:				; CODE XREF: sub_0_63FF+3Aj
					; sub_0_63FF+43j ...
		cmp	word ptr ds:0D442h, 12h
		jnz	loc_0_6485
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 47h ; 'G'
		jnz	loc_0_6485
		nop
		nop
		nop
		cmp	word ptr [di+6], 314Ah
		jnz	loc_0_6485
		nop
		nop
		nop
		mov	word ptr [di+27h], 1
		mov	word ptr ds:0D479h, 1

loc_0_6485:				; CODE XREF: sub_0_63FF+63j
					; sub_0_63FF+6Cj ...
		cmp	word ptr ds:0D442h, 17h
		jnz	locret_0_64AE
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 46h ; 'F'
		jnz	locret_0_64AE
		nop
		nop
		nop
		cmp	word ptr [di+6], 400Eh
		jnz	locret_0_64AE
		nop
		nop
		nop
		mov	word ptr [di+27h], 1
		mov	bx, ds:0D44Bh
		and	word ptr [bx], 0FFFBh

locret_0_64AE:				; CODE XREF: DROP+7j sub_0_63FF+8Bj
					; ...
		retn
sub_0_63FF	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_64AF	proc near		; CODE XREF: CONTROLLER+910p
		cmp	byte ptr ds:6899h, 1
		jz	loc_0_64B9
		jmp	locret_0_6675
;����������������������������������������������������������������������������

loc_0_64B9:				; CODE XREF: sub_0_64AF+5j
		mov	cx, 4

loc_0_64BC:				; CODE XREF: sub_0_64AF+F8j
		mov	ax, ds:6891h
		add	ds:688Bh, ax
		mov	ax, ds:689Dh
		cmp	ds:688Bh, ax
		jle	loc_0_653C
		nop
		nop
		nop
		mov	di, ds:6897h
		cmp	byte ptr [di+0Bh], 49h ; 'I'
		jz	loc_0_64E5
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 33h ; '3'
		jnz	loc_0_64EB
		nop
		nop
		nop

loc_0_64E5:				; CODE XREF: sub_0_64AF+28j
		call	sub_0_78D1
		jmp	locret_0_6675
;����������������������������������������������������������������������������

loc_0_64EB:				; CODE XREF: sub_0_64AF+31j
		cmp	byte ptr [di+0Bh], 2Ch ; ','
		jnz	loc_0_64FA
		nop
		nop
		nop
		call	sub_0_6676
		jmp	locret_0_6675
;����������������������������������������������������������������������������

loc_0_64FA:				; CODE XREF: sub_0_64AF+40j
		mov	al, ds:689Bh
		sar	al, 1
		sar	al, 1
		cmp	al, 0
		jg	loc_0_650A
		nop
		nop
		nop
		mov	al, 1

loc_0_650A:				; CODE XREF: sub_0_64AF+54j
		sub	ds:689Ah, al
		mov	al, ds:689Ch
		cmp	ds:689Ah, al
		jg	loc_0_653C
		nop
		nop
		nop
		mov	ds:689Ah, al
		mov	di, ds:6897h
		and	word ptr [di], 0FFDFh
		mov	byte ptr ds:6899h, 0
		push	es
		mov	ax, 0Dh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	locret_0_6675
;����������������������������������������������������������������������������

loc_0_653C:				; CODE XREF: sub_0_64AF+1Bj
					; sub_0_64AF+66j
		mov	di, ds:6897h
		mov	dx, ds:6893h
		add	[di+2],	dx
		mov	ax, ds:6895h
		add	[di+4],	ax
		mov	ah, [di+5]
		mov	al, [di+3]
		mov	[di+6],	ax
		mov	bx, ax
		push	cx
		call	sub_0_6A07
		pop	cx
		cmp	al, 0
		jnz	loc_0_65AD
		nop
		nop
		nop
		mov	si, 6DCEh
		mov	dx, 38h	; '8'

loc_0_656A:				; CODE XREF: sub_0_64AF+F2j
		test	word ptr [si], 8
		jz	loc_0_659D
		nop
		nop
		nop
		mov	ax, [si+2]
		sub	ax, [di+2]
		jg	loc_0_6580
		nop
		nop
		nop
		neg	ax

loc_0_6580:				; CODE XREF: sub_0_64AF+CAj
		mov	bx, [si+4]
		sub	bx, [di+4]
		jg	loc_0_658D
		nop
		nop
		nop
		neg	bx

loc_0_658D:				; CODE XREF: sub_0_64AF+D7j
		add	ax, bx
		cmp	ax, 1Eh
		jge	loc_0_659D
		nop
		nop
		nop
		call	sub_0_681D
		jmp	locret_0_6675
;����������������������������������������������������������������������������

loc_0_659D:				; CODE XREF: sub_0_64AF+BFj
					; sub_0_64AF+E3j
		add	si, 7Bh	; '{'
		dec	dx
		jnz	loc_0_656A
		loop	loc_0_65A7
		jmp	short loc_0_65AA
;����������������������������������������������������������������������������

loc_0_65A7:				; CODE XREF: sub_0_64AF+F4j
		jmp	loc_0_64BC
;����������������������������������������������������������������������������

loc_0_65AA:				; CODE XREF: sub_0_64AF+F6j
		jmp	locret_0_6675
;����������������������������������������������������������������������������

loc_0_65AD:				; CODE XREF: sub_0_64AF+B0j
		cmp	byte ptr [di+0Bh], 49h ; 'I'
		jz	loc_0_65BF
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 33h ; '3'
		jnz	loc_0_65D5
		nop
		nop
		nop

loc_0_65BF:				; CODE XREF: sub_0_64AF+102j
		call	sub_0_78D1
		push	es
		mov	ax, 12h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	locret_0_6675
;����������������������������������������������������������������������������

loc_0_65D5:				; CODE XREF: sub_0_64AF+10Bj
		cmp	byte ptr [di+0Bh], 2Ch ; ','
		jnz	loc_0_65E4
		nop
		nop
		nop
		call	sub_0_6676
		jmp	locret_0_6675
;����������������������������������������������������������������������������

loc_0_65E4:				; CODE XREF: sub_0_64AF+12Aj
		mov	dx, ds:689Dh
		mov	ds:688Bh, dx
		mov	dx, ds:6893h
		sub	[di+2],	dx
		mov	ax, ds:6895h
		sub	[di+4],	ax
		mov	ax, 0
		sar	word ptr ds:6893h, 1
		sar	word ptr ds:6895h, 1
		test	word ptr [di], 1000h
		jnz	loc_0_6665
		nop
		nop
		nop
		mov	si, [di+6]
		mov	bp, 0
		and	word ptr [di], 0EFFFh
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	al, es:[si]
		pop	es
		sar	al, 1
		sar	al, 1
		and	al, 7
		mov	ah, 5
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_6635
		nop
		nop
		nop
		mov	ah, 3

loc_0_6635:				; CODE XREF: sub_0_64AF+17Fj
		cmp	al, ah
		jz	loc_0_663C
		jmp	sub_0_63FF
;����������������������������������������������������������������������������

loc_0_663C:				; CODE XREF: sub_0_64AF+188j
		mov	ax, 20h	; ' '
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_664C
		nop
		nop
		nop
		add	ax, 10h

loc_0_664C:				; CODE XREF: sub_0_64AF+195j
		cmp	ds:689Ah, al
		jl	loc_0_6665
		nop
		nop
		nop
		mov	bp, 1000h
		or	[di], bp
		mov	byte ptr [di+2], 80h ; '�'
		mov	byte ptr [di+4], 80h ; '�'
		mov	ds:689Ch, al

loc_0_6665:				; CODE XREF: sub_0_64AF+159j
					; sub_0_64AF+1A1j
		push	es
		mov	ax, 0Ch
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es

locret_0_6675:				; CODE XREF: sub_0_64AF+7j
					; sub_0_64AF+39j ...
		retn
sub_0_64AF	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6676	proc near		; CODE XREF: sub_0_64AF+45p
					; sub_0_64AF+12Fp ...
		push	si
		push	di
		and	word ptr [di], 0FFDFh
		mov	byte ptr ds:6899h, 0
		mov	word ptr [di], 1
		mov	ax, [di+2]
		mov	cx, [di+4]
		mov	dx, cx
		mov	dl, ah
		mov	ds:0D499h, dx
		sub	ax, ds:0ACDh
		sub	cx, ds:0ACFh
		mov	ds:3756h, ax
		mov	ds:3758h, cx
		mov	ax, ds:0AD9h
		imul	word ptr ds:3756h
		push	dx
		push	ax
		mov	ax, ds:0AD7h
		imul	word ptr ds:3758h
		pop	si
		pop	cx
		add	ax, si
		adc	dx, cx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		mov	ds:375Ah, dx
		call	CALC1
		shl	cx, 1
		mov	bx, ds:261Ah
		add	bx, 24h	; '$'
		cmp	cx, bx
		jle	loc_0_66D6
		jmp	loc_0_6770
;����������������������������������������������������������������������������

loc_0_66D6:				; CODE XREF: sub_0_6676+5Bj
		mov	ax, ds:261Eh
		imul	dx
		mov	al, ah
		mov	ah, dl
		neg	ax
		add	ax, ds:2636h
		mov	ds:5EA0h, ax
		mov	ax, ds:375Ah
		mov	dx, ds:2614h
		call	ARCTAN
		cmp	di, 2D0h
		jl	loc_0_66FF
		nop
		nop
		nop
		sub	di, 5A0h

loc_0_66FF:				; CODE XREF: sub_0_6676+80j
		mov	ax, ds:2620h
		imul	di
		mov	al, ah
		mov	ah, dl
		add	ax, ds:2634h
		mov	ds:5EA2h, ax
		mov	cx, 0Ah

loc_0_6712:				; CODE XREF: sub_0_6676+F8j
		push	cx
		call	MAKEVIEW
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ax, ds:5EA2h
		mov	dx, 140h
		mul	dx
		add	ax, ds:5EA0h
		mov	si, ax
		mov	di, ax
		mov	bp, 808h

loc_0_672F:				; CODE XREF: sub_0_6676+EBj
		mov	es:[si], bp
		mov	es:[di], bp
		sub	si, 140h
		sub	di, 140h
		mov	cx, 1
		mov	bx, 1
		call	RAND
		cmp	al, 9Ch	; '�'
		ja	loc_0_674F
		nop
		nop
		nop
		neg	cx

loc_0_674F:				; CODE XREF: sub_0_6676+D2j
		cmp	ah, 64h	; 'd'
		ja	loc_0_6759
		nop
		nop
		nop
		neg	bx

loc_0_6759:				; CODE XREF: sub_0_6676+DCj
		add	si, cx
		add	di, bx
		cmp	si, 0EA60h
		jb	loc_0_672F
		pop	es
		call	COPYVIEW
		mov	cx, 4
		call	PAUSE
		pop	cx
		loop	loc_0_6712

loc_0_6770:				; CODE XREF: sub_0_6676+5Dj
		cmp	word ptr ds:0D442h, 1Bh
		jz	loc_0_677A
		jmp	loc_0_681A
;����������������������������������������������������������������������������

loc_0_677A:				; CODE XREF: sub_0_6676+FFj
		mov	ax, ds:0D499h
		mov	bx, ds:0D491h
		mov	bp, 0
		mov	di, 0D491h
		cmp	ax, 462Fh
		jz	loc_0_67EB
		nop
		nop
		nop
		mov	bp, 7Bh	; '{'
		mov	bx, ds:0D493h
		mov	di, 0D493h
		cmp	ax, 4933h
		jz	loc_0_67EB
		nop
		nop
		nop
		mov	bp, 0F6h ; '�'
		mov	bx, ds:0D495h
		mov	di, 0D495h
		cmp	ax, 4635h
		jz	loc_0_67EB
		nop
		nop
		nop
		mov	bx, ds:0D497h
		cmp	ax, 4433h
		jnz	loc_0_681A
		nop
		nop
		nop
		cmp	bx, 0
		jz	loc_0_681A
		nop
		nop
		nop
		mov	word ptr [bx], 1
		mov	di, ds:0D44Bh
		and	word ptr [di], 0FFFBh
		mov	word ptr ds:0D497h, 0
		push	es
		mov	ax, 11h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_681A
;����������������������������������������������������������������������������
		nop

loc_0_67EB:				; CODE XREF: sub_0_6676+114j
					; sub_0_6676+126j ...
		cmp	bx, 0
		jz	loc_0_681A
		nop
		nop
		nop
		mov	word ptr [di], 0
		mov	word ptr [bx], 1
		mov	di, 84DEh
		add	di, bp
		mov	cl, 0FFh
		mov	dl, 12h
		mov	si, ax
		call	MAKECHAR
		or	word ptr [di], 4000h
		mov	word ptr [di+27h], 0FC18h
		mov	byte ptr [di+6Ch], 18h
		mov	byte ptr [di+6Bh], 0Ch

loc_0_681A:				; CODE XREF: sub_0_6676+101j
					; sub_0_6676+144j ...
		pop	di
		pop	si
		retn
sub_0_6676	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_681D	proc near		; CODE XREF: sub_0_64AF+E8p
		push	cx
		push	dx
		push	si
		push	di
		cmp	byte ptr [di+0Bh], 2Ch ; ','
		jnz	loc_0_6830
		nop
		nop
		nop
		call	sub_0_6676
		jmp	loc_0_6911
;����������������������������������������������������������������������������

loc_0_6830:				; CODE XREF: sub_0_681D+8j
		cmp	byte ptr [di+0Bh], 49h ; 'I'
		jnz	loc_0_684C
		nop
		nop
		nop
		call	sub_0_78D1
		cmp	byte ptr [si+0Bh], 2
		jz	loc_0_6845
		jmp	loc_0_6A02
;����������������������������������������������������������������������������

loc_0_6845:				; CODE XREF: sub_0_681D+23j
		mov	byte ptr [si+6Ch], 0
		jmp	loc_0_6911
;����������������������������������������������������������������������������

loc_0_684C:				; CODE XREF: sub_0_681D+17j
		cmp	byte ptr [di+0Bh], 33h ; '3'
		jnz	loc_0_6899
		nop
		nop
		nop
		push	es
		mov	ax, 12h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	cx, 2

loc_0_6868:				; CODE XREF: sub_0_681D+65j
		push	cx
		shl	word ptr [di+0Dh], 1
		shl	word ptr [di+0Fh], 1
		mov	word ptr [di+15h], 1520h
		push	di
		push	si
		call	DRAWVIEW
		call	WAITFLY
		call	WAITFLY
		pop	si
		pop	di
		pop	cx
		loop	loc_0_6868
		call	sub_0_78D1
		mov	al, 0Ah
		cmp	byte ptr [si+0Bh], 19h
		jnz	loc_0_68E4
		nop
		nop
		nop
		mov	byte ptr [si+6Ch], 0
		jmp	short loc_0_6911
;����������������������������������������������������������������������������
		nop

loc_0_6899:				; CODE XREF: sub_0_681D+33j
		cmp	byte ptr [di+0Bh], 37h ; '7'
		jnz	loc_0_68D4
		nop
		nop
		nop
		cmp	byte ptr [si+0Bh], 12h
		jnz	loc_0_68D4
		nop
		nop
		nop
		cmp	byte ptr [si+1Ah], 0E0h	; '�'
		jnz	loc_0_68D4
		nop
		nop
		nop
		push	si
		push	di
		mov	bx, 36h	; '6'
		mov	ax, [si+2]
		mov	dx, [si+4]
		mov	cx, 0
		mov	cl, [si+0Ah]
		mov	bp, 2
		call	SETUPPICKUP
		pop	di
		pop	si
		mov	byte ptr [si+6Ch], 0
		jmp	short loc_0_6911
;����������������������������������������������������������������������������
		nop

loc_0_68D4:				; CODE XREF: sub_0_681D+80j
					; sub_0_681D+89j ...
		mov	al, [di+1Fh]
		sar	al, 1
		cmp	byte ptr [di+29h], 0
		jz	loc_0_68E4
		nop
		nop
		nop
		add	al, 0Ah

loc_0_68E4:				; CODE XREF: sub_0_681D+70j
					; sub_0_681D+C0j
		cmp	byte ptr [di+0Bh], 74h ; 't'
		jnz	loc_0_68F2
		nop
		nop
		nop
		add	al, 0Ah
		call	sub_0_78D1

loc_0_68F2:				; CODE XREF: sub_0_681D+CBj
		sub	[si+6Ch], al
		cmp	byte ptr [si+6Ch], 0
		jle	loc_0_6911
		nop
		nop
		nop
		push	si
		push	di
		mov	si, 0AA16h
		call	PRINTOI
		mov	cx, 19h
		call	PAUSE
		pop	di
		pop	si
		jmp	short loc_0_6985
;����������������������������������������������������������������������������
		nop

loc_0_6911:				; CODE XREF: sub_0_681D+10j
					; sub_0_681D+2Cj ...
		cmp	byte ptr [si+0Bh], 18h
		jnz	loc_0_6927
		nop
		nop
		nop
		mov	ax, ds:0AF0h
		sar	ax, 1
		cmp	ax, 7
		jz	loc_0_6927
		jmp	loc_0_6A02
;����������������������������������������������������������������������������

loc_0_6927:				; CODE XREF: sub_0_681D+F8j
					; sub_0_681D+105j
		push	si
		push	di
		mov	di, si
		call	TERMINATECHAR
		pop	di
		pop	si
		push	si
		push	di
		mov	si, 0AA16h
		call	PRINTOI
		mov	cx, 19h
		call	PAUSE
		call	MAKEVIEW
		mov	cx, 64h	; 'd'

loc_0_6944:				; CODE XREF: sub_0_681D+164j
		push	cx

loc_0_6945:				; CODE XREF: sub_0_681D+131j
		call	RAND
		mov	ah, 0
		cmp	ax, ds:262Eh
		jge	loc_0_6945
		mov	bx, ds:2630h
		mov	di, ds:2632h
		push	ds
		push	es
		mov	dx, ds:0D704h
		mov	ds, dx
		mov	dx, 0A000h
		mov	es, dx
		assume es:nothing
		mov	dx, 140h
		mul	dx
		mov	si, ax
		add	di, ax
		mov	cx, bx
		rep movsb
		pop	es
		assume es:nothing
		pop	ds
		pop	cx
		test	cx, 3
		jnz	loc_0_6981
		nop
		nop
		nop
		call	WAITFLY

loc_0_6981:				; CODE XREF: sub_0_681D+15Cj
		loop	loc_0_6944
		pop	di
		pop	si

loc_0_6985:				; CODE XREF: sub_0_681D+F1j
		cmp	word ptr ds:0D442h, 2Ah	; '*'
		jnz	loc_0_69AE
		nop
		nop
		nop
		cmp	byte ptr [si+0Bh], 9
		jnz	loc_0_69AE
		nop
		nop
		nop
		cmp	word ptr ds:0D45Fh, 0
		jnz	loc_0_69AE
		nop
		nop
		nop
		push	si
		push	di
		mov	di, si
		call	DROPDIVINER
		pop	si
		pop	di
		jmp	short loc_0_69D9
;����������������������������������������������������������������������������
		nop

loc_0_69AE:				; CODE XREF: sub_0_681D+16Dj
					; sub_0_681D+176j ...
		cmp	word ptr [si+4Ch], 0
		jz	loc_0_69D9
		nop
		nop
		nop
		mov	bx, [si+4Ch]
		mov	word ptr [si+4Ch], 0
		and	word ptr [bx], 0FFFBh
		mov	ax, [si+2]
		mov	[bx+2],	ax
		mov	dx, [si+4]
		mov	[bx+4],	dx
		mov	dl, ah
		mov	[bx+6],	dx
		mov	dl, [si+0Ah]
		mov	[bx+0Ah], dl

loc_0_69D9:				; CODE XREF: sub_0_681D+18Ej
					; sub_0_681D+195j
		push	es
		mov	ax, 0Fh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	dx, ds:6893h
		sub	[di+2],	dx
		mov	ax, ds:6895h
		sub	[di+4],	ax
		mov	ax, 0
		mov	ds:6893h, ax
		mov	ds:6895h, ax
		mov	ds:689Ah, al

loc_0_6A02:				; CODE XREF: sub_0_681D+25j
					; sub_0_681D+107j
		pop	di
		pop	si
		pop	dx
		pop	cx
		retn
sub_0_681D	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6A07	proc near		; CODE XREF: sub_0_64AF+AAp
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		push	di
		mov	di, 5B11h
		mov	ax, ds:5E17h
		mov	ds:5E17h, di
		push	ax
		mov	al, ds:3784h
		push	ax
		mov	al, ds:3785h
		push	ax
		mov	al, ds:5B07h
		push	ax
		mov	al, ds:5B08h
		push	ax
		mov	al, ds:5B09h
		push	ax
		mov	al, ds:5B0Ah
		push	ax
		call	sub_0_51F3
		pop	ax
		mov	ds:5B0Ah, al
		pop	ax
		mov	ds:5B09h, al
		pop	ax
		mov	ds:5B08h, al
		pop	ax
		mov	ds:5B07h, al
		pop	ax
		mov	ds:3785h, al
		pop	ax
		mov	ds:3784h, al
		pop	ax
		mov	ds:5E17h, ax
		pop	di
		mov	ax, [di+4]
		mov	dx, [di+2]
		shr	dl, 1
		shr	dl, 1
		shr	dl, 1
		shr	dl, 1
		and	al, 0F0h
		or	al, dl
		mov	bx, 5B11h
		xlat
		pop	es
		retn
sub_0_6A07	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6A69	proc near		; CODE XREF: sub_0_5D62+F7p
		mov	si, 495Ch
		jmp	short PRINTINLOCWIN
sub_0_6A69	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTFREE	proc near		; CODE XREF: sub_0_5740+EAp
		mov	si, 3E97h
		jmp	short PRINTINLOCWIN
PRINTFREE	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTCLOSED	proc near		; CODE XREF: SHOP+A2p
		mov	si, 3E8Fh
		jmp	short PRINTINLOCWIN
PRINTCLOSED	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6A7B	proc near		; CODE XREF: sub_0_5D62+241p
		mov	si, 3E1Ah
		jmp	short PRINTINLOCWIN
sub_0_6A7B	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6A81	proc near		; CODE XREF: sub_0_5D62+246p
		mov	si, 3E2Dh
		jmp	short PRINTINLOCWIN
sub_0_6A81	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6A87	proc near		; CODE XREF: sub_0_5D62+24Bp
		mov	si, 3E3Bh
		jmp	short PRINTINLOCWIN
sub_0_6A87	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6A8D	proc near		; CODE XREF: sub_0_49FD+1FAp
					; sub_0_49FD+2ADp
		mov	si, 3E74h
		test	al, 1
		jnz	loc_0_6A9A
		nop
		nop
		nop
		mov	si, 3E60h

loc_0_6A9A:				; CODE XREF: sub_0_6A8D+5j
		jmp	short PRINTINLOCWIN
sub_0_6A8D	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6A9D	proc near		; CODE XREF: sub_0_5D62+1CEp
		mov	si, 3EB0h
		jmp	short PRINTINLOCWIN
sub_0_6A9D	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTINLOCWIN	proc near		; CODE XREF: CONTROLLER+8E6p
					; sub_0_49FD+27Bp ...
		mov	cx, ds:0D716h
		mov	ds:217Ah, cx
PRINTINLOCWIN	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTINLOCWIN2	proc near		; CODE XREF: sub_0_7053+103p
		push	si
		call	CLEARLOCWIN
		mov	ax, ds:132h
		add	ax, 32h	; '2'
		mov	ds:138h, ax
		mov	byte ptr ds:13Ah, 0
		pop	si
		call	TEXT_PREPROCESS
		mov	di, 9640h
		call	PTOV
		retn
PRINTINLOCWIN2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6AC8	proc near		; CODE XREF: sub_0_49FD+380p
					; CHANGELEVEL+CBp
		mov	word ptr ds:260Ch, 0
		mov	di, 636Ah
		mov	ax, ds:0ADBh

loc_0_6AD4:				; CODE XREF: sub_0_6AC8+2Aj
		cmp	word ptr [di], 0FFFFh
		jz	locret_0_6B1D
		nop
		nop
		nop
		cmp	[di], ax
		jnz	loc_0_6AEF
		nop
		nop
		nop
		mov	dx, [di+4]
		cmp	dx, ds:0ADDh
		jz	loc_0_6AF4
		nop
		nop
		nop

loc_0_6AEF:				; CODE XREF: sub_0_6AC8+16j
		add	di, 6
		jmp	short loc_0_6AD4
;����������������������������������������������������������������������������

loc_0_6AF4:				; CODE XREF: sub_0_6AC8+22j
		cmp	word ptr ds:0D47Dh, 0
		jz	loc_0_6B13
		nop
		nop
		nop
		mov	dx, 423h
		cmp	word ptr [di], 5C39h
		jz	loc_0_6B16
		nop
		nop
		nop
		cmp	word ptr [di], 6038h
		jz	loc_0_6B16
		nop
		nop
		nop

loc_0_6B13:				; CODE XREF: sub_0_6AC8+31j
		mov	dx, [di+2]

loc_0_6B16:				; CODE XREF: sub_0_6AC8+3Dj
					; sub_0_6AC8+46j
		mov	ds:260Ch, dx
		call	LOADTILE

locret_0_6B1D:				; CODE XREF: sub_0_6AC8+Fj
		retn
sub_0_6AC8	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6B1E	proc near		; CODE XREF: CONTROLLER+9FEp
					; CONTROLLER+C2Dp ...
		mov	ax, 0FFFFh
		mov	dx, ds:0ADBh
		mov	si, 6510h

loc_0_6B28:				; CODE XREF: sub_0_6B1E+28j
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_6B7A
		nop
		nop
		nop
		cmp	[si], dx
		jnz	loc_0_6B43
		nop
		nop
		nop
		mov	cx, ds:0ADDh
		cmp	[si+2],	cx
		jz	loc_0_6B48
		nop
		nop
		nop

loc_0_6B43:				; CODE XREF: sub_0_6B1E+14j
		add	si, 6
		jmp	short loc_0_6B28
;����������������������������������������������������������������������������

loc_0_6B48:				; CODE XREF: sub_0_6B1E+20j
		mov	ax, [si+4]
		cmp	word ptr [si], 470Bh
		jz	loc_0_6B5D
		nop
		nop
		nop
		cmp	word ptr [si], 440Ch
		jnz	loc_0_6B77
		nop
		nop
		nop

loc_0_6B5D:				; CODE XREF: sub_0_6B1E+31j
		cmp	byte ptr ds:0F5Fh, 3
		jnz	loc_0_6B6A
		nop
		nop
		nop
		mov	ax, 0Ah

loc_0_6B6A:				; CODE XREF: sub_0_6B1E+44j
		cmp	byte ptr ds:0F5Fh, 5
		jnz	loc_0_6B77
		nop
		nop
		nop
		mov	ax, 0Fh

loc_0_6B77:				; CODE XREF: sub_0_6B1E+3Aj
					; sub_0_6B1E+51j
		jmp	short loc_0_6BCB
;����������������������������������������������������������������������������
		nop

loc_0_6B7A:				; CODE XREF: sub_0_6B1E+Dj
		cmp	byte ptr ds:3784h, 0
		jz	loc_0_6BCB
		nop
		nop
		nop
		call	WHICHPANELS
		cmp	bp, 0
		jnz	loc_0_6BC8
		nop
		nop
		nop
		push	es
		mov	ax, ds:0D716h
		mov	es, ax
		mov	dl, ds:0F5Fh
		pop	es
		mov	bx, ds:0AF0h
		cmp	bx, 8
		ja	loc_0_6BAF
		nop
		nop
		nop
		dec	dl
		jge	loc_0_6BAF
		nop
		nop
		nop
		mov	dl, 6

loc_0_6BAF:				; CODE XREF: sub_0_6B1E+83j
					; sub_0_6B1E+8Aj
		cmp	dl, 0
		jz	loc_0_6BC8
		nop
		nop
		nop
		mov	ax, 8
		test	dl, 1
		jz	loc_0_6BCB
		nop
		nop
		nop
		mov	ax, 9
		jmp	short loc_0_6BCB
;����������������������������������������������������������������������������
		nop

loc_0_6BC8:				; CODE XREF: sub_0_6B1E+6Cj
					; sub_0_6B1E+94j
		mov	ax, 7

loc_0_6BCB:				; CODE XREF: sub_0_6B1E+59j
					; sub_0_6B1E+61j ...
		call	LOADSPRITES
		mov	al, ds:979h
		cmp	al, 0Ch
		jz	locret_0_6C22
		nop
		nop
		nop
		mov	ah, 1
		cmp	al, 3
		jz	loc_0_6BE3
		nop
		nop
		nop
		mov	ah, 3

loc_0_6BE3:				; CODE XREF: sub_0_6B1E+BEj
		mov	di, 6DCEh
		mov	cx, 2Bh	; '+'

loc_0_6BE9:				; CODE XREF: sub_0_6B1E+EFj
		cmp	[di+0Bh], ah
		jnz	loc_0_6C0A
		nop
		nop
		nop
		push	di
		push	cx
		push	ax
		push	dx
		push	bx
		mov	cl, [di+0Ah]
		mov	dl, al
		mov	si, [di+6]
		mov	word ptr [di], 1
		call	MAKECHAR
		pop	bx
		pop	dx
		pop	ax
		pop	cx
		pop	di

loc_0_6C0A:				; CODE XREF: sub_0_6B1E+CEj
		add	di, 7Bh	; '{'
		loop	loc_0_6BE9
		mov	cx, 5

loc_0_6C12:				; CODE XREF: sub_0_6B1E+102j
		cmp	[di+0Bh], ah
		jnz	loc_0_6C1D
		nop
		nop
		nop
		or	word ptr [di], 1

loc_0_6C1D:				; CODE XREF: sub_0_6B1E+F7j
		add	di, 7Bh	; '{'
		loop	loc_0_6C12

locret_0_6C22:				; CODE XREF: sub_0_6B1E+B5j
		retn
sub_0_6B1E	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6C23	proc near		; CODE XREF: CONTROLLER+32Ap
					; CONTROLLER+6E8p
		call	DROPNW
		mov	word ptr ds:68A0h, 4
		mov	word ptr ds:134h, 0
		mov	word ptr ds:5E32h, 4

loc_0_6C38:				; CODE XREF: sub_0_6C23+3Ej
		call	DRAWVIEW
		mov	ax, ds:5E32h
		cmp	ax, ds:134h
		ja	loc_0_6C61
		nop
		nop
		nop
		mov	ax, ds:134h
		add	ax, 4
		mov	ds:5E32h, ax
		dec	word ptr ds:68A0h
		jge	loc_0_6C61
		nop
		nop
		nop
		mov	byte ptr ds:6AB0h, 1
		jmp	short locret_0_6C63
;����������������������������������������������������������������������������
		nop

loc_0_6C61:				; CODE XREF: sub_0_6C23+1Fj
					; sub_0_6C23+31j
		jmp	short loc_0_6C38
;����������������������������������������������������������������������������

locret_0_6C63:				; CODE XREF: sub_0_6C23+3Bj
		retn
sub_0_6C23	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6C64	proc near		; CODE XREF: CONTROLLER+50Fp
		mov	byte ptr ds:0AECh, 0
		mov	word ptr ds:6AB3h, 0
		mov	byte ptr ds:6BD5h, 0
		mov	byte ptr ds:218Fh, 0
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0C0h ; '�'
		mov	dx, 1C0h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 24h	; '$'
		mov	dx, 0A4h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 140h
		mov	dx, 64h	; 'd'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		call	PICFADE2
		call	LOADSWITCH
		push	ds
		push	es
		mov	bp, 80h	; '�'
		mov	dx, 80h	; '�'
		mov	si, 2D60h
		mov	di, 0C0h ; '�'
		mov	ax, 0A000h
		mov	bx, ds:0D704h
		mov	es, bx
		mov	ds, ax
		assume ds:nothing
		call	COPY_BLOCK
		pop	es
		pop	ds
		assume ds:nothing
		call	sub_0_6F48
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_6CCB:				; CODE XREF: sub_0_6C64+A3j
					; sub_0_6C64+DAj ...
		call	sub_0_6F9F

loc_0_6CCE:				; CODE XREF: sub_0_6C64+74j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_6CCE
		test	bx, 2
		jz	loc_0_6CE3
		jmp	loc_0_6ED6
;����������������������������������������������������������������������������

loc_0_6CE3:				; CODE XREF: sub_0_6C64+7Aj
		mov	si, 6AB7h
		sub	cx, 60h	; '`'
		sub	dx, 24h	; '$'
		call	CHECKBOXES
		cmp	ax, 0
		jnz	loc_0_6CF7
		jmp	loc_0_6ED6
;����������������������������������������������������������������������������

loc_0_6CF7:				; CODE XREF: sub_0_6C64+8Ej
		cmp	ax, 1
		jnz	loc_0_6D09
		nop
		nop
		nop
		xor	byte ptr ds:5E26h, 1
		call	WAITMRELEASE
		jmp	short loc_0_6CCB
;����������������������������������������������������������������������������

loc_0_6D09:				; CODE XREF: sub_0_6C64+96j
		cmp	ax, 2
		jnz	loc_0_6D40
		nop
		nop
		nop
		push	es
		mov	ax, 0
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	cx, 5
		call	PAUSE
		xor	byte ptr ds:0D728h, 1
		mov	si, 0D728h
		mov	di, seg001
		mov	bp, 2
		mov	dx, 0D72Ah
		call	SAVE_FILE
		call	WAITMRELEASE
		jmp	short loc_0_6CCB
;����������������������������������������������������������������������������

loc_0_6D40:				; CODE XREF: sub_0_6C64+A8j
		cmp	ax, 3
		jnz	loc_0_6D4E
		nop
		nop
		nop
		call	sub_0_6F58
		jmp	loc_0_6CCB
;����������������������������������������������������������������������������

loc_0_6D4E:				; CODE XREF: sub_0_6C64+DFj
		cmp	ax, 4
		jnz	loc_0_6D67
		nop
		nop
		nop
		xor	byte ptr ds:5E25h, 1
		mov	word ptr ds:6AB3h, 1
		call	WAITMRELEASE
		jmp	loc_0_6CCB
;����������������������������������������������������������������������������

loc_0_6D67:				; CODE XREF: sub_0_6C64+EDj
		cmp	ax, 5
		jnz	loc_0_6D8F
		nop
		nop
		nop
		inc	word ptr ds:263Ah
		cmp	word ptr ds:263Ah, 6
		jnz	loc_0_6D83
		nop
		nop
		nop
		mov	word ptr ds:263Ah, 0

loc_0_6D83:				; CODE XREF: sub_0_6C64+114j
		mov	word ptr ds:6AB3h, 1
		call	WAITMRELEASE
		jmp	loc_0_6CCB
;����������������������������������������������������������������������������

loc_0_6D8F:				; CODE XREF: sub_0_6C64+106j
		cmp	ax, 6
		jnz	loc_0_6DB8
		nop
		nop
		nop
		add	word ptr ds:2650h, 6
		cmp	word ptr ds:2650h, 12h
		jnz	loc_0_6DAC
		nop
		nop
		nop
		mov	word ptr ds:2650h, 0

loc_0_6DAC:				; CODE XREF: sub_0_6C64+13Dj
		mov	word ptr ds:6AB3h, 1
		call	WAITMRELEASE
		jmp	loc_0_6CCB
;����������������������������������������������������������������������������

loc_0_6DB8:				; CODE XREF: sub_0_6C64+12Ej
		cmp	ax, 7
		jnz	loc_0_6DF9
		nop
		nop
		nop
		call	LOAD_GAME
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0C0h ; '�'
		mov	dx, 1C0h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 24h	; '$'
		mov	dx, 0A4h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 140h
		mov	dx, 64h	; 'd'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		call	LOADSWITCH
		mov	byte ptr ds:6BD5h, 1
		jmp	loc_0_6CCB
;����������������������������������������������������������������������������

loc_0_6DF9:				; CODE XREF: sub_0_6C64+157j
		cmp	ax, 8
		jz	loc_0_6E01
		jmp	loc_0_6E7F
;����������������������������������������������������������������������������

loc_0_6E01:				; CODE XREF: sub_0_6C64+198j
		call	sub_0_78DE
		cmp	ax, 1
		jnz	loc_0_6E0C
		jmp	loc_0_6CCB
;����������������������������������������������������������������������������

loc_0_6E0C:				; CODE XREF: sub_0_6C64+1A3j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		cmp	word ptr ds:6AB3h, 1
		jnz	loc_0_6E4B
		nop
		nop
		nop
		mov	bx, ds:2650h
		mov	si, 263Ch
		mov	ds:2650h, bx
		mov	ax, [bx+si]
		mov	ds:262Eh, ax
		mov	ax, [bx+si+2]
		mov	ds:2630h, ax
		mov	ax, [bx+si+4]
		mov	ds:2632h, ax
		call	CALCVIEWPARMS
		call	SETRATES
		call	LOADSWITCH
		mov	byte ptr ds:6BD5h, 1
		mov	word ptr ds:6AB3h, 0

loc_0_6E4B:				; CODE XREF: sub_0_6C64+1B2j
		call	sub_0_7604
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0C0h ; '�'
		mov	dx, 1C0h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 24h	; '$'
		mov	dx, 0A4h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 140h
		mov	dx, 64h	; 'd'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		call	WAITMRELEASE
		jmp	loc_0_6CCB
;����������������������������������������������������������������������������

loc_0_6E7F:				; CODE XREF: sub_0_6C64+19Aj
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	word ptr ds:2120h, 63h ; 'c'
		mov	word ptr ds:2122h, 27h ; '''
		mov	word ptr ds:2124h, 7Ah ; 'z'
		mov	word ptr ds:2126h, 7Ah ; 'z'
		mov	si, 5E3Ah
		mov	cs:PAGECOLOUR, 14h
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT
		call	WAITMRELEASE
		mov	bx, 90h	; '�'
		mov	ax, 8Ch	; '�'
		call	YNPAD
		cmp	ax, 0
		jnz	loc_0_6ED0
		nop
		nop
		nop
		call	WAITMRELEASE
		call	sub_0_6F48
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jmp	loc_0_6CCB
;����������������������������������������������������������������������������

loc_0_6ED0:				; CODE XREF: sub_0_6C64+259j
		mov	word ptr ds:6AB5h, 1020h

loc_0_6ED6:				; CODE XREF: sub_0_6C64+7Cj
					; sub_0_6C64+90j
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		cmp	byte ptr ds:6BD5h, 1
		jz	loc_0_6EF7
		nop
		nop
		nop
		mov	bp, 80h	; '�'
		mov	dx, 80h	; '�'
		mov	di, 2D60h
		mov	si, 0C0h ; '�'
		call	COPY_BLOCK_2V
		jmp	short loc_0_6EFA
;����������������������������������������������������������������������������
		nop

loc_0_6EF7:				; CODE XREF: sub_0_6C64+27Cj
		call	LOADPLAYSCREEN

loc_0_6EFA:				; CODE XREF: sub_0_6C64+290j
		mov	ax, 7
		mov	cx, 0
		mov	dx, 270h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 88h	; '�'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 96h	; '�'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		cmp	word ptr ds:6AB3h, 1
		jnz	loc_0_6F34
		nop
		nop
		nop
		mov	bx, ds:2650h
		mov	si, 263Ch
		call	SIZEOK

loc_0_6F34:				; CODE XREF: sub_0_6C64+2C1j
		cmp	word ptr ds:6AB5h, 1020h
		jz	loc_0_6F42
		nop
		nop
		nop
		call	DRAWVIEW

loc_0_6F42:				; CODE XREF: sub_0_6C64+2D6j
		mov	byte ptr ds:0AECh, 1
		retn
sub_0_6C64	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6F48	proc near		; CODE XREF: sub_0_6C64+5Fp
					; sub_0_6C64+261p ...
		mov	bp, 80h	; '�'
		mov	dx, 80h	; '�'
		mov	di, 2D60h
		mov	si, 0
		call	COPY_BLOCK_2V
		retn
sub_0_6F48	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6F58	proc near		; CODE XREF: sub_0_6C64+E4p
		mov	si, 5DCCh
sub_0_6F58	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6F5B	proc near		; CODE XREF: sub_0_78DE+2Bp
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	word ptr ds:2120h, 63h ; 'c'
		mov	word ptr ds:2122h, 27h ; '''
		mov	word ptr ds:2124h, 7Ah ; 'z'
		mov	word ptr ds:2126h, 7Ah ; 'z'
		mov	cs:PAGECOLOUR, 14h
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT
		call	WAITMRELEASE
		mov	bx, 98h	; '�'
		mov	ax, 8Ch	; '�'
		call	OKPAD
		call	WAITMRELEASE
		call	sub_0_6F48
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		retn
sub_0_6F5B	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_6F9F	proc near		; CODE XREF: sub_0_6C64+67p
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	di, 3768h
		mov	si, 0A000h
		cmp	byte ptr ds:5E26h, 1
		jz	loc_0_6FB7
		nop
		nop
		nop
		add	si, 20h	; ' '

loc_0_6FB7:				; CODE XREF: sub_0_6F9F+10j
		call	sub_0_7049
		mov	di, 3790h
		mov	si, 0C800h
		cmp	byte ptr ds:0D728h, 1
		jnz	loc_0_6FCD
		nop
		nop
		nop
		add	si, 20h	; ' '

loc_0_6FCD:				; CODE XREF: sub_0_6F9F+26j
		call	sub_0_7049
		mov	di, 37B8h
		mov	si, 78A0h
		call	sub_0_7049
		mov	di, 6968h
		mov	si, 0A040h
		cmp	byte ptr ds:5E25h, 1
		jz	loc_0_6FEC
		nop
		nop
		nop
		add	si, 20h	; ' '

loc_0_6FEC:				; CODE XREF: sub_0_6F9F+45j
		call	sub_0_7049
		mov	di, 6990h
		mov	si, 80h	; '�'
		mov	ax, 2800h
		mov	dx, ds:263Ah
		mul	dx
		add	si, ax
		call	sub_0_7049
		mov	di, 69B8h
		mov	si, 0A0h ; '�'
		cmp	word ptr ds:2650h, 6
		jnz	loc_0_7017
		nop
		nop
		nop
		add	si, 2800h

loc_0_7017:				; CODE XREF: sub_0_6F9F+6Fj
		cmp	word ptr ds:2650h, 0Ch
		jnz	loc_0_7025
		nop
		nop
		nop
		add	si, 5000h

loc_0_7025:				; CODE XREF: sub_0_6F9F+7Dj
		call	sub_0_7049
		mov	di, 9B68h
		mov	si, 0C840h
		call	sub_0_7049
		mov	di, 9B90h
		mov	si, 0C860h
		call	sub_0_7049
		mov	di, 9BB8h
		mov	si, 0A0A0h
		call	sub_0_7049
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		retn
sub_0_6F9F	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7049	proc near		; CODE XREF: sub_0_6F9F+18p
					; sub_0_6F9F+2Ep ...
		mov	bp, 20h	; ' '
		mov	dx, 20h	; ' '
		call	COPY_BLOCK_2V
		retn
sub_0_7049	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7053	proc near		; CODE XREF: CONTROLLER+39Bp
					; CONTROLLER+7DEp
		cmp	word ptr ds:0BB6h, 0
		mov	si, 4917h
		jnz	loc_0_7060
		jmp	loc_0_7570
;����������������������������������������������������������������������������

loc_0_7060:				; CODE XREF: sub_0_7053+8j
		mov	di, ds:0BB6h
		mov	al, [di+20h]
		cmp	al, 0
		jz	loc_0_70AA
		nop
		nop
		nop
		mov	ah, 0
		call	TAKEFOOD
		call	DISPLAYATTRIBS
		mov	di, ds:0BB6h
		cmp	byte ptr [di+0Bh], 24h ; '$'
		jnz	loc_0_7088
		nop
		nop
		nop
		add	word ptr ds:0CB04h, 2

loc_0_7088:				; CODE XREF: sub_0_7053+2Bj
		mov	word ptr ds:0BB6h, 0
		or	word ptr [di], 1
		mov	byte ptr ds:13Dh, 1
		push	es
		mov	ax, ds:0D716h
		mov	es, ax
		mov	al, [di+0Bh]
		mov	es:4932h, al
		pop	es
		mov	si, 492Ah
		jmp	loc_0_7570
;����������������������������������������������������������������������������

loc_0_70AA:				; CODE XREF: sub_0_7053+16j
		mov	di, ds:0BB6h
		mov	al, [di+23h]
		cmp	al, 0
		jz	loc_0_70E6
		nop
		nop
		nop
		mov	ah, 0

loc_0_70BA:				; CODE XREF: sub_0_7053+508j
		call	TAKEDRINK
		call	DISPLAYATTRIBS
		mov	di, ds:0BB6h
		mov	word ptr ds:0BB6h, 0
		or	word ptr [di], 1
		mov	byte ptr ds:13Dh, 1
		push	es
		mov	ax, ds:0D716h
		mov	es, ax
		mov	al, [di+0Bh]
		mov	es:493Ch, al
		pop	es
		mov	si, 4934h
		jmp	loc_0_7570
;����������������������������������������������������������������������������

loc_0_70E6:				; CODE XREF: sub_0_7053+60j
		mov	di, ds:0BB6h
		mov	al, [di+22h]
		cmp	al, 0
		jz	loc_0_7125
		nop
		nop
		nop
		mov	ah, 0
		cmp	ax, 1
		jnz	loc_0_710A
		nop
		nop
		nop
		mov	word ptr ds:0D13Ch, 10h
		call	SPELLEFFECT
		jmp	short loc_0_710D
;����������������������������������������������������������������������������
		nop

loc_0_710A:				; CODE XREF: sub_0_7053+A6j
		jmp	short loc_0_7125
;����������������������������������������������������������������������������
		nop

loc_0_710D:				; CODE XREF: sub_0_7053+B4j
		mov	di, ds:0BB6h
		mov	word ptr ds:0BB6h, 0
		or	word ptr [di], 1
		mov	byte ptr ds:13Dh, 1
		call	sub_0_7574
		jmp	loc_0_7570
;����������������������������������������������������������������������������

loc_0_7125:				; CODE XREF: sub_0_7053+9Cj
					; sub_0_7053+B7j
		cmp	byte ptr [di+0Bh], 28h ; '('
		jnz	loc_0_713D
		nop
		nop
		nop
		call	sub_0_7574
		call	PRINTINLOCWIN
		call	LOADSTARS
		call	sub_0_7952
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_713D:				; CODE XREF: sub_0_7053+D6j
		cmp	byte ptr [di+0Bh], 9
		jnz	loc_0_715C
		nop
		nop
		nop
		mov	ax, ds:0AF0h
		sar	ax, 1
		mov	ds:0F5Bh, al
		mov	si, 0F59h
		mov	ax, ds
		mov	ds:217Ah, ax
		call	PRINTINLOCWIN2
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_715C:				; CODE XREF: sub_0_7053+EEj
		cmp	byte ptr [di+0Bh], 2Fh ; '/'
		jnz	loc_0_7193
		nop
		nop
		nop
		mov	word ptr ds:5ACDh, 1
		mov	word ptr [di], 1
		mov	byte ptr ds:13Dh, 1
		mov	word ptr ds:0BB6h, 0
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	dx, 4DDh
		mov	di, 0AAE0h
		mov	ax, 0A000h
		call	LOADPAD
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_7193:				; CODE XREF: sub_0_7053+10Dj
		cmp	byte ptr [di+0Bh], 0Fh
		jz	loc_0_719C
		jmp	loc_0_7258
;����������������������������������������������������������������������������

loc_0_719C:				; CODE XREF: sub_0_7053+144j
		cmp	word ptr [di+1Dh], 11h
		jnz	loc_0_71C0
		nop
		nop
		nop
		mov	word ptr ds:5ACFh, 1
		mov	word ptr [di], 1
		mov	byte ptr ds:13Dh, 1
		mov	word ptr ds:0BB6h, 0
		call	SPELLEFFECT
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_71C0:				; CODE XREF: sub_0_7053+14Dj
		cmp	word ptr [di+1Dh], 13h
		jz	loc_0_71C9
		jmp	loc_0_7258
;����������������������������������������������������������������������������

loc_0_71C9:				; CODE XREF: sub_0_7053+171j
		cmp	word ptr ds:0AD1h, 470h
		jbe	loc_0_71D4
		jmp	loc_0_7258
;����������������������������������������������������������������������������

loc_0_71D4:				; CODE XREF: sub_0_7053+17Cj
		cmp	word ptr ds:0AD1h, 3F0h
		jb	loc_0_7258
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 7313h
		jz	loc_0_720B
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 7314h
		jz	loc_0_720B
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 7413h
		jz	loc_0_720B
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 7414h
		jnz	loc_0_7258
		nop
		nop
		nop

loc_0_720B:				; CODE XREF: sub_0_7053+192j
					; sub_0_7053+19Dj ...
		push	word ptr ds:0BB6h
		call	sub_0_62FD
		pop	word ptr ds:0BB6h
		mov	word ptr ds:688Bh, 800h
		mov	di, ds:0D44Bh
		mov	ds:6897h, di
		mov	byte ptr ds:689Ah, 78h ; 'x'
		mov	word ptr ds:6893h, 0
		mov	word ptr ds:6895h, 0
		and	word ptr [di], 0FFFBh
		or	word ptr [di], 20h
		and	word ptr [di], 0EFFFh
		mov	di, ds:0BB6h
		mov	word ptr [di], 1
		and	word ptr [di], 0FFDFh
		mov	byte ptr ds:13Dh, 1
		mov	word ptr ds:0BB6h, 0
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_7258:				; CODE XREF: sub_0_7053+146j
					; sub_0_7053+173j ...
		cmp	byte ptr [di+0Bh], 48h ; 'H'
		jnz	loc_0_728E
		nop
		nop
		nop
		cmp	byte ptr ds:6899h, 1
		jz	loc_0_728E
		nop
		nop
		nop
		cmp	word ptr ds:0D442h, 12h
		jnz	loc_0_728E
		nop
		nop
		nop
		push	es
		mov	ax, 0Fh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	bx, 49h	; 'I'
		call	sub_0_78AC
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_728E:				; CODE XREF: sub_0_7053+209j
					; sub_0_7053+213j ...
		cmp	byte ptr [di+0Bh], 4Ch ; 'L'
		jnz	loc_0_72B8
		nop
		nop
		nop
		cmp	byte ptr ds:0D14Eh, 6Ch	; 'l'
		jnz	loc_0_72B8
		nop
		nop
		nop
		mov	byte ptr [di+0Bh], 4Dh ; 'M'
		mov	dx, 423h
		mov	ds:260Ch, dx
		call	LOADTILE
		mov	word ptr ds:0D47Dh, 1
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_72B8:				; CODE XREF: sub_0_7053+23Fj
					; sub_0_7053+249j
		cmp	byte ptr [di+0Bh], 4Fh ; 'O'
		jnz	loc_0_72D0
		nop
		nop
		nop
		call	sub_0_7574
		call	PRINTINLOCWIN
		call	LOADLAMIABOOK
		call	sub_0_7952
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_72D0:				; CODE XREF: sub_0_7053+269j
		cmp	byte ptr [di+0Bh], 50h ; 'P'
		jnz	loc_0_7301
		nop
		nop
		nop
		mov	word ptr ds:0D455h, 1
		mov	word ptr [di], 1
		mov	byte ptr ds:13Dh, 1
		mov	word ptr ds:0BB6h, 0
		push	es
		mov	ax, 13h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_7301:				; CODE XREF: sub_0_7053+281j
		cmp	byte ptr [di+0Bh], 52h ; 'R'
		jnz	loc_0_7338
		nop
		nop
		nop
		mov	si, 0A29Dh
		cmp	word ptr ds:0D442h, 27h	; '''
		jnz	loc_0_7332
		nop
		nop
		nop
		cmp	word ptr ds:0ADBh, 6037h
		jnz	loc_0_7332
		nop
		nop
		nop
		mov	si, 0A2B5h
		call	SCROLLTEXT
		mov	di, ds:0D44Bh
		and	word ptr [di], 0FFFBh
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_7332:				; CODE XREF: sub_0_7053+2BFj
					; sub_0_7053+2CAj
		call	PRINTINLOCWIN
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_7338:				; CODE XREF: sub_0_7053+2B2j
		cmp	byte ptr [di+0Bh], 5Bh ; '['
		jnz	loc_0_7389
		nop
		nop
		nop
		mov	si, 0A568h
		cmp	word ptr ds:0D489h, 0
		jz	loc_0_736E
		nop
		nop
		nop
		cmp	word ptr ds:0D489h, 2
		jz	loc_0_7358
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_7358:				; CODE XREF: sub_0_7053+300j
		mov	ax, 55h	; 'U'
		call	sub_0_79C5
		cmp	ax, 1
		jz	loc_0_7366
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_7366:				; CODE XREF: sub_0_7053+30Ej
		mov	si, 0A611h
		mov	byte ptr ds:0A822h, 1

loc_0_736E:				; CODE XREF: sub_0_7053+2F6j
		mov	word ptr ds:0D489h, 2
		mov	byte ptr ds:0AECh, 0
		push	si
		call	LOADGENIE
		pop	si
		call	sub_0_79AD
		mov	byte ptr ds:0AECh, 1
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_7389:				; CODE XREF: sub_0_7053+2E9j
		cmp	byte ptr [di+0Bh], 61h ; 'a'
		jnz	loc_0_73C4
		nop
		nop
		nop
		mov	si, ds:9A8Ah
		cmp	byte ptr [si+0Bh], 5Fh ; '_'
		jnz	loc_0_73C4
		nop
		nop
		nop
		mov	si, ds:0D44Bh
		mov	word ptr [si], 1
		mov	word ptr ds:0D475h, 1
		mov	byte ptr [di+0Bh], 65h ; 'e'
		push	es
		mov	ax, 17h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_73C4:				; CODE XREF: sub_0_7053+33Aj
					; sub_0_7053+347j
		cmp	byte ptr [di+0Bh], 63h ; 'c'
		jnz	loc_0_73DF
		nop
		nop
		nop
		call	sub_0_7574
		call	PRINTINLOCWIN
		mov	dx, 2DDh
		call	LC1
		call	sub_0_7952
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_73DF:				; CODE XREF: sub_0_7053+375j
		cmp	byte ptr [di+0Bh], 6Ah ; 'j'
		jnz	loc_0_73FA
		nop
		nop
		nop
		call	sub_0_7574
		call	PRINTINLOCWIN
		mov	dx, 2F4h
		call	LC1
		call	sub_0_7952
		jmp	locret_0_7573
;����������������������������������������������������������������������������

loc_0_73FA:				; CODE XREF: sub_0_7053+390j
		cmp	byte ptr [di+0Bh], 6Bh ; 'k'
		jz	loc_0_7403
		jmp	loc_0_7535
;����������������������������������������������������������������������������

loc_0_7403:				; CODE XREF: sub_0_7053+3ABj
		cmp	word ptr ds:5AC3h, 0
		jnz	loc_0_740D
		jmp	loc_0_752C
;����������������������������������������������������������������������������

loc_0_740D:				; CODE XREF: sub_0_7053+3B5j
		mov	ax, 6Ah	; 'j'
		call	sub_0_79C5
		cmp	ax, 1
		jz	loc_0_741B
		jmp	loc_0_752C
;����������������������������������������������������������������������������

loc_0_741B:				; CODE XREF: sub_0_7053+3C3j
		mov	ax, ds:0AF0h
		sar	ax, 1
		cmp	ax, 7
		jz	loc_0_7428
		jmp	loc_0_752C
;����������������������������������������������������������������������������

loc_0_7428:				; CODE XREF: sub_0_7053+3D0j
		mov	ax, 66h	; 'f'
		call	sub_0_79EA
		cmp	ax, 2951h
		jz	loc_0_7436
		jmp	loc_0_752C
;����������������������������������������������������������������������������

loc_0_7436:				; CODE XREF: sub_0_7053+3DEj
		mov	ax, 67h	; 'g'
		call	sub_0_79EA
		cmp	ax, 2B51h
		jz	loc_0_7444
		jmp	loc_0_752C
;����������������������������������������������������������������������������

loc_0_7444:				; CODE XREF: sub_0_7053+3ECj
		mov	ax, 68h	; 'h'
		call	sub_0_79EA
		cmp	ax, 2A52h
		jz	loc_0_7452
		jmp	loc_0_752C
;����������������������������������������������������������������������������

loc_0_7452:				; CODE XREF: sub_0_7053+3FAj
		mov	ax, 69h	; 'i'
		call	sub_0_79EA
		cmp	ax, 2A50h
		jz	loc_0_7460
		jmp	loc_0_752C
;����������������������������������������������������������������������������

loc_0_7460:				; CODE XREF: sub_0_7053+408j
		mov	byte ptr ds:13Dh, 1
		mov	di, ds:0BB6h
		mov	word ptr [di], 1
		mov	bx, 10h
		mov	ax, 3680h
		mov	dx, 3080h
		mov	cx, 0FFFFh
		mov	bp, 0Ah
		call	SETUPPICKUP
		mov	byte ptr [si+21h], 15h
		or	word ptr [si], 4
		mov	ds:0BB6h, si
		push	es
		mov	ax, 13h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	dx, 30Ah
		call	LC1
		mov	si, ds:0D704h
		mov	di, ds:0D70Ah
		call	COPYSCREEN
		mov	dx, 2FFh
		call	LC1
		call	PICFADE2
		call	SWOPAL1
		mov	bx, 6BF6h
		mov	si, 6C64h

loc_0_74BD:				; CODE XREF: sub_0_7053+4ACj
		mov	al, [si]
		cbw
		cmp	ax, 0FFFFh
		jz	loc_0_7501
		nop
		nop
		nop
		push	si
		push	bx
		dec	ax
		mov	dx, 0Ah
		mul	dx
		add	bx, ax
		mov	di, [bx+8]
		mov	ax, [di]
		mov	cl, [si+1]
		mov	ch, 0
		push	cx
		mov	si, [bx]
		mov	di, [bx+2]
		mov	bp, [bx+4]
		mov	dx, [bx+6]
		push	ds
		push	es
		mov	ds, ax
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		call	COPY_BLOCK
		pop	es
		assume es:nothing
		pop	ds
		pop	cx
		call	PAUSE
		pop	bx
		pop	si
		add	si, 2
		jmp	short loc_0_74BD
;����������������������������������������������������������������������������

loc_0_7501:				; CODE XREF: sub_0_7053+470j
		mov	si, 0AD48h
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		call	SCTEXT2
		call	WAITKEY
		call	PICFADE2
		call	BLANK_AND_SETPAL
		push	word ptr ds:260Eh
		call	LOADPANELS
		pop	dx
		call	LOADTILE
		call	INVENTORY
		mov	byte ptr ds:0A836h, 32h	; '2'
		jmp	short locret_0_7573
;����������������������������������������������������������������������������
		nop

loc_0_752C:				; CODE XREF: sub_0_7053+3B7j
					; sub_0_7053+3C5j ...
		mov	word ptr ds:0CB3Eh, 0
		jmp	short locret_0_7573
;����������������������������������������������������������������������������
		nop

loc_0_7535:				; CODE XREF: sub_0_7053+3ADj
		cmp	byte ptr [di+0Bh], 76h ; 'v'
		jnz	loc_0_755E
		nop
		nop
		nop
		sar	word ptr ds:0CA84h, 1
		mov	ax, ds:0AF0h
		sar	ax, 1
		cmp	ax, 7
		jnz	loc_0_7555
		nop
		nop
		nop
		mov	word ptr ds:0CA84h, 0

loc_0_7555:				; CODE XREF: sub_0_7053+4F7j
		call	SPELLEFFECT
		mov	ax, 32h	; '2'
		jmp	loc_0_70BA
;����������������������������������������������������������������������������

loc_0_755E:				; CODE XREF: sub_0_7053+4E6j
		cmp	byte ptr [di+29h], 0
		jz	loc_0_756D
		nop
		nop
		nop
		mov	si, 4971h
		jmp	short loc_0_7570
;����������������������������������������������������������������������������
		nop

loc_0_756D:				; CODE XREF: sub_0_7053+50Fj
		mov	si, 4955h

loc_0_7570:				; CODE XREF: sub_0_7053+Aj
					; sub_0_7053+54j ...
		call	PRINTINLOCWIN

locret_0_7573:				; CODE XREF: sub_0_7053+E7j
					; sub_0_7053+106j ...
		retn
sub_0_7053	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7574	proc near		; CODE XREF: sub_0_7053+CCp
					; sub_0_7053+DBp ...
		push	es
		mov	ax, ds:0D716h
		mov	es, ax
		mov	al, [di+0Bh]
		mov	es:4945h, al
		pop	es
		mov	si, 493Eh
		retn
sub_0_7574	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOAD_GAME	proc near		; CODE XREF: sub_0_6C64+15Cp
		call	sub_0_7720
		mov	si, 5BA6h
		mov	di, 10BEh
		call	TPPANDP
		call	GETINP
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	sub_0_7767
		cmp	word ptr ds:6BE3h, 0FFFFh
		jz	locret_0_7603
		nop
		nop
		nop
		mov	ax, ds:6BE3h
LOAD_GAME	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADDATASEG	proc near		; CODE XREF: CONTROLLER+38p
		mov	dx, 0Bh
		mul	dx
		mov	dx, 97Fh
		add	dx, ax
		mov	bp, 0D694h
		mov	si, 0
		mov	di, seg001
		call	LOAD
		call	LOADPALFILE
		mov	bx, 0
		mov	cx, 100h
		mov	dx, 0
		call	SETPALBIT
		mov	al, ds:6BD6h
		mov	cs:PAGECOLOUR, al
		call	LOADPANELS
		call	LMAP
		mov	al, ds:97Ah
		mov	word ptr ds:977h, 0FFFFh
		mov	word ptr ds:979h, 0FFFFh
		mov	word ptr ds:1014h, 1
		call	LOADSPRITES
		mov	dx, ds:260Ch
		cmp	dx, 0
		jz	locret_0_7603
		nop
		nop
		nop
		call	LOADTILE

locret_0_7603:				; CODE XREF: LOAD_GAME+1Cj
					; LOADDATASEG+51j
		retn
LOADDATASEG	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7604	proc near		; CODE XREF: sub_0_6C64+1E7p
		call	sub_0_7720
		mov	si, 5BB3h
		mov	di, 10BEh
		call	TPPANDP

loc_0_7610:				; CODE XREF: sub_0_7604+99j
		call	sub_0_7858
		cmp	ax, 0FFFFh
		jnz	loc_0_761B
		jmp	loc_0_770F
;����������������������������������������������������������������������������

loc_0_761B:				; CODE XREF: sub_0_7604+12j
		mov	bx, 6BD7h
		add	bx, ax
		cmp	byte ptr [bx], 1
		jnz	loc_0_76A4
		nop
		nop
		nop
		inc	ax
		mov	ds:6BE3h, ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	bp, 0A0h ; '�'
		mov	dx, 3Ch	; '<'
		mov	si, 3ED0h
		mov	di, 0
		mov	ax, 0A000h
		call	COPY_BLOCK_22
		mov	word ptr ds:2120h, 50h ; 'P'
		mov	word ptr ds:2122h, 32h ; '2'
		mov	word ptr ds:2124h, 3Ch ; '<'
		mov	word ptr ds:2126h, 0A0h	; '�'
		mov	cs:PAGECOLOUR, 18h
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		mov	si, 5BC0h
		call	SSTOVIDTEXT
		call	WAITMRELEASE
		mov	bx, 90h	; '�'
		mov	ax, 5Ah	; 'Z'
		call	YNPAD
		push	ax
		mov	bp, 0A0h ; '�'
		mov	dx, 3Ch	; '<'
		mov	di, 3ED0h
		mov	si, 0
		call	COPY_BLOCK_2V
		call	WAITMRELEASE
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		pop	ax
		cmp	ax, 0
		jnz	loc_0_76A0
		jmp	loc_0_7610
;����������������������������������������������������������������������������

loc_0_76A0:				; CODE XREF: sub_0_7604+97j
		mov	ax, ds:6BE3h
		dec	ax

loc_0_76A4:				; CODE XREF: sub_0_7604+1Fj
		push	ax
		mov	dx, ax
		add	dx, 8
		mov	ax, ds:9E0h
		mov	ds:9E0h, dx
		mov	dx, 0Bh
		mul	dx
		mov	dx, 9E2h
		add	dx, ax
		mov	bp, 5EA0h
		mov	si, 3E8h
		mov	di, ds:0D702h
		call	LOAD
		mov	ax, ds:9E0h
		mov	dx, 0Bh
		mul	dx
		mov	dx, 9E2h
		add	dx, ax
		mov	si, 3E8h
		mov	di, ds:0D702h
		mov	bp, 5EA0h
		call	SAVE_FILE
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	al, cs:PAGECOLOUR
		mov	ds:6BD6h, al
		mov	si, 0
		mov	di, seg001
		mov	bp, 0D694h
		pop	ax
		mov	ds:0D731h, ax
		inc	word ptr ds:0D731h
		mov	dx, 0Bh
		mul	dx
		mov	dx, 97Fh
		add	dx, ax
		call	SAVE_FILE
		call	WRITEAUTOLOAD

loc_0_770F:				; CODE XREF: sub_0_7604+14j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	sub_0_7767
		call	LOADSWITCH
		mov	byte ptr ds:6BD5h, 1
		retn
sub_0_7604	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7720	proc near		; CODE XREF: LOAD_GAMEp sub_0_7604p
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	dx, 26Ah
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	GET_PAL
		call	EXP_DP
		call	COPYPAL
		mov	bx, 10h
		mov	cx, 0F0h ; '�'
		mov	dx, 30h	; '0'
		call	SETPALBIT
		mov	di, ds:0D70Ah
		mov	si, 0A000h
		call	COPYSCREEN
		mov	si, ds:0D704h
		mov	di, 0A000h
		call	COPYSCREEN
		call	sub_0_77D7
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		retn
sub_0_7720	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7767	proc near		; CODE XREF: LOAD_GAME+14p
					; sub_0_7604+110p
		mov	si, ds:0D70Ah
		mov	di, 0A000h
		call	COPYSCREEN
		push	es
		mov	ah, 10h
		mov	al, 12h
		mov	bx, 10h
		mov	cx, 0F0h ; '�'
		mov	dx, ds:0D702h
		mov	es, dx
		mov	dx, 30h	; '0'
		int	10h		; - VIDEO - SET	BLOCK OF DAC REGISTERS (EGA, VGA/MCGA)
					; BX = starting	color register,	CX = number of registers to set
					; ES:DX	-> table of 3*CX bytes where each 3 byte group represents one
					; byte each of red, green and blue (0-63)
		pop	es
		call	LOADPALFILE
		call	LOADPANELS
		retn
sub_0_7767	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SAVE_FILE	proc near		; CODE XREF: START+AEp	SAVE_IFF+94p
					; ...
		mov	ah, 3Ch	; '<'
		mov	cx, 0
		int	21h		; DOS -	2+ - CREATE A FILE WITH	HANDLE (CREAT)
					; CX = attributes for file
					; DS:DX	-> ASCIZ filename (may include drive and path)
		mov	ds:0D726h, ax
		mov	ah, 40h	; '@'
		mov	bx, ds:0D726h
		mov	cx, bp
		push	cx
		push	ds
		mov	ds, di
		mov	dx, si
		int	21h		; DOS -	2+ - WRITE TO FILE WITH	HANDLE
					; BX = file handle, CX = number	of bytes to write, DS:DX -> buffer
		pop	ds
		pop	cx
		cmp	ax, cx
		jz	loc_0_77CE
		nop
		nop
		nop
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	di, 0D4F8h
		mov	si, 5AA2h
		mov	cx, seg001
		call	TPPANDPD
		mov	cx, 32h	; '2'
		call	PAUSE
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_77CE:				; CODE XREF: SAVE_FILE+1Ej
		mov	ah, 3Eh	; '>'
		mov	bx, ds:0D726h
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		retn
SAVE_FILE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_77D7	proc near		; CODE XREF: sub_0_7720+3Ep
		mov	dx, 97Fh
		mov	bp, 3Dh	; '='
		mov	ds:112h, bp
sub_0_77D7	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PDIR		proc near		; CODE XREF: START+16Dp
		mov	cx, 8
		mov	bx, 6BD7h
		mov	di, 3868h

loc_0_77EA:				; CODE XREF: PDIR+74j
		push	dx
		push	cx
		push	bx
		push	di
		mov	ah, 3Dh	; '='
		mov	al, 2
		mov	cx, 0
		int	21h		; DOS -	2+ - OPEN DISK FILE WITH HANDLE
					; DS:DX	-> ASCIZ filename
					; AL = access mode
					; 2 - read & write
		jb	loc_0_782E
		nop
		nop
		nop
		mov	ds:0D726h, ax
		mov	ah, 42h	; 'B'
		mov	al, 0
		mov	bx, ds:0D726h
		mov	cx, 0
		mov	dx, ds:112h
		int	21h		; DOS -	2+ - MOVE FILE READ/WRITE POINTER (LSEEK)
					; AL = method: offset from beginning of	file
		mov	ah, 3Fh	; '?'
		mov	bx, ds:0D726h
		mov	cx, 19h
		push	ds
		mov	dx, ds:0D716h
		mov	ds, dx
		mov	dx, 5B82h
		int	21h		; DOS -	2+ - READ FROM FILE WITH HANDLE
					; BX = file handle, CX = number	of bytes to read
					; DS:DX	-> buffer
		pop	ds
		mov	si, 5B82h
		mov	al, 1
		jmp	short loc_0_7836
;����������������������������������������������������������������������������
		nop

loc_0_782E:				; CODE XREF: PDIR+16j
		mov	bp, 0
		mov	si, 5B7Ch
		mov	al, 0

loc_0_7836:				; CODE XREF: PDIR+4Aj
		push	ax
		mov	bx, ds:0D726h
		mov	ah, 3Eh	; '>'
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		pop	ax
		pop	di
		pop	bx
		mov	[bx], al
		push	bx
		push	di
		call	TPPANDP
		pop	di
		pop	bx
		pop	cx
		pop	dx
		inc	bx
		add	di, 12C0h
		add	dx, 0Bh
		loop	loc_0_77EA
		retn
PDIR		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7858	proc near		; CODE XREF: sub_0_7604+Cp
					; sub_0_7858+Dj ...
		mov	si, 6B13h
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	sub_0_7858
		mov	ax, 0
		test	bx, 2
		jnz	loc_0_7876
		nop
		nop
		nop
		call	CHECKBOXES

loc_0_7876:				; CODE XREF: sub_0_7858+16j
		dec	ax
		retn
sub_0_7858	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7878	proc near		; CODE XREF: INVENTORY+19p
					; INVENTORY+23p ...
		mov	cl, 4
		shl	si, cl
		mov	cx, si
		push	bx
		push	ds
		push	es
		mov	di, [bx+si+2]
		mov	si, [bx+si]
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, ds:0D708h
		mov	ds, ax
		mov	bp, 10h
		mov	dx, bp
		mov	al, 0C0h ; '�'
		cmp	cx, 10h
		jnz	loc_0_78A5
		nop
		nop
		nop
		call	COPY_BLOCK_LONIB
		jmp	short loc_0_78A8
;����������������������������������������������������������������������������
		nop

loc_0_78A5:				; CODE XREF: sub_0_7878+22j
		call	COPY_BLOCK_HINIB

loc_0_78A8:				; CODE XREF: sub_0_7878+2Aj
		pop	es
		assume es:nothing
		pop	ds
		pop	bx
		retn
sub_0_7878	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_78AC	proc near		; CODE XREF: CONTROLLER+74Ep
					; CONTROLLER+77Bp ...
		push	word ptr ds:0BB6h
		mov	ax, 4F80h
		mov	dx, 3680h
		mov	cx, 0
		mov	bp, 1
		call	SETUPPICKUP
		or	word ptr [si], 4
		mov	ds:0BB6h, si
		call	sub_0_62FD
		pop	word ptr ds:0BB6h
		call	WAITRELEASE
		retn
sub_0_78AC	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_78D1	proc near		; CODE XREF: sub_0_64AF+36p
					; sub_0_64AF+110p ...
		and	word ptr [di], 0FFDFh
		mov	byte ptr ds:6899h, 0
		mov	word ptr [di], 1
		retn
sub_0_78D1	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_78DE	proc near		; CODE XREF: sub_0_6C64+19Dp
		cmp	word ptr ds:5B01h, 0
		jnz	loc_0_7906
		nop
		nop
		nop
		cmp	byte ptr ds:0D14Eh, 41h	; 'A'
		jz	loc_0_7910
		nop
		nop
		nop
		cmp	byte ptr ds:0D14Eh, 8
		jb	loc_0_7906
		nop
		nop
		nop
		cmp	byte ptr ds:0D14Eh, 11h
		jbe	loc_0_7910
		nop
		nop
		nop

loc_0_7906:				; CODE XREF: sub_0_78DE+5j
					; sub_0_78DE+19j
		mov	si, 5D6Ah
		call	sub_0_6F5B
		mov	ax, 1
		retn
;����������������������������������������������������������������������������

loc_0_7910:				; CODE XREF: sub_0_78DE+Fj
					; sub_0_78DE+23j
		mov	ax, 0
		retn
sub_0_78DE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

RELOCATE	proc near		; CODE XREF: START+25Bp CONTROLLER+9FBp
					; ...
		mov	ds:0ADBh, ax
		mov	bh, al
		mov	al, 80h	; '�'
		mov	bl, 80h	; '�'
		mov	ds:0ACDh, bx
		mov	ds:0ACFh, ax
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_7931
		nop
		nop
		nop
		call	sub_0_4F34

loc_0_7931:				; CODE XREF: RELOCATE+15j
		mov	word ptr ds:0ADDh, 0
		call	LOADMAP
		call	MAKEHCELLMAP
		mov	byte ptr ds:0AFAh, 0FFh
		call	LOADPANELS
		mov	word ptr ds:100Ah, 0
		mov	word ptr ds:100Ch, 0
		retn
RELOCATE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7952	proc near		; CODE XREF: CONTROLLER+4C7p
					; sub_0_49FD+1A7p ...
		call	SHOWPIC1
		call	SHOWPIC2
		retn
sub_0_7952	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SHOWPIC1	proc near		; CODE XREF: sub_0_58AF+13p
					; sub_0_58DE+13p ...
		mov	byte ptr ds:0AECh, 0
		call	PICFADE2
		call	SWOPAL
		call	PICRAISE2
		call	WAITKEY
		call	BLANK_AND_SETPAL
		retn
SHOWPIC1	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SHOWPIC2	proc near		; CODE XREF: sub_0_58AF+2Bp
					; sub_0_58DE+E9p ...
		call	BACKTOGAME
		mov	byte ptr ds:0AECh, 1
		retn
SHOWPIC2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

KILLREGS	proc near		; CODE XREF: CHANGELEVEL+BFp
					; sub_0_D78E+Ep
		mov	si, 8277h
		mov	cx, 5

loc_0_797D:				; CODE XREF: KILLREGS+Cj
		or	word ptr [si], 1
		add	si, 7Bh	; '{'
		loop	loc_0_797D
		retn
KILLREGS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7986	proc near		; CODE XREF: sub_0_49FD+9Ap
					; sub_0_49FD+31Bp ...
		mov	bx, ds:0ACFh
		mov	bl, ds:0ACEh
		push	bx
		call	sub_0_50DC
		pop	bx
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		call	MAKECELLMAP
		pop	es
		retn
sub_0_7986	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

KILLALLMON	proc near		; CODE XREF: LOADSPRITES+122p
					; sub_0_49FD+3C9p ...
		mov	di, 84DEh
		mov	cx, 8

loc_0_79A4:				; CODE XREF: KILLALLMON+Cj
		or	word ptr [di], 1
		add	di, 7Bh	; '{'
		loop	loc_0_79A4
		retn
KILLALLMON	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_79AD	proc near		; CODE XREF: sub_0_7053+32Bp
		push	si
		call	PICFADE2
		call	SWOPAL
		pop	si
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		call	SCTEXT2
		call	BLANK_AND_SETPAL
		call	BACKTOGAME
		retn
sub_0_79AD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_79C5	proc near		; CODE XREF: sub_0_7053+308p
					; sub_0_7053+3BDp
		mov	cx, 6
		mov	bx, 0B65h

loc_0_79CB:				; CODE XREF: sub_0_79C5+1Bj
		cmp	word ptr [bx], 0
		jz	loc_0_79DD
		nop
		nop
		nop
		mov	di, [bx]
		cmp	[di+0Bh], al
		jz	loc_0_79E6
		nop
		nop
		nop

loc_0_79DD:				; CODE XREF: sub_0_79C5+9j
		add	bx, 0Ah
		loop	loc_0_79CB
		mov	ax, 0
		retn
;����������������������������������������������������������������������������

loc_0_79E6:				; CODE XREF: sub_0_79C5+13j
		mov	ax, 1
		retn
sub_0_79C5	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_79EA	proc near		; CODE XREF: sub_0_7053+3D8p
					; sub_0_7053+3E6p ...
		mov	si, 88B6h
		mov	cx, 40h	; '@'

loc_0_79F0:				; CODE XREF: sub_0_79EA+29j
		test	word ptr [si], 1
		jnz	loc_0_7A10
		nop
		nop
		nop
		test	word ptr [si], 4
		jnz	loc_0_7A10
		nop
		nop
		nop
		cmp	[si+0Bh], al
		jnz	loc_0_7A10
		nop
		nop
		nop
		mov	ax, [si+6]
		jmp	short locret_0_7A18
;����������������������������������������������������������������������������
		nop

loc_0_7A10:				; CODE XREF: sub_0_79EA+Aj
					; sub_0_79EA+13j ...
		add	si, 2Ch	; ','
		loop	loc_0_79F0
		mov	ax, 0

locret_0_7A18:				; CODE XREF: sub_0_79EA+23j
		retn
sub_0_79EA	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7A19	proc near		; CODE XREF: CONTROLLER+3A9p
					; CONTROLLER+6FAp
		call	HAILCHAR
sub_0_7A19	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7A1C	proc near		; CODE XREF: CONTROLLER+91Cp
		cmp	byte ptr ds:6AB0h, 2
		jnz	locret_0_7A49
		nop
		nop
		nop
		mov	di, ds:0BB6h
		cmp	di, 0
		jz	loc_0_7A41
		nop
		nop
		nop
		cmp	byte ptr [di+29h], 0
		jnz	loc_0_7A41
		nop
		nop
		nop
		call	DROP
		call	INVENTORY

loc_0_7A41:				; CODE XREF: sub_0_7A1C+11j
					; sub_0_7A1C+1Aj
		call	COMBAT
		mov	byte ptr ds:6AB0h, 0

locret_0_7A49:				; CODE XREF: sub_0_7A1C+5j
		retn
sub_0_7A1C	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DROPNW		proc near		; CODE XREF: sub_0_6C23p COMBAT+5p
		mov	di, ds:0BB6h
		cmp	di, 0
		jz	locret_0_7A6D
		nop
		nop
		nop
		cmp	byte ptr [di+29h], 0
		jnz	locret_0_7A6D
		nop
		nop
		nop
		call	DROP
		mov	bx, di
		mov	di, 0C808h
		call	BLITPICKUP
		call	INVENTORY

locret_0_7A6D:				; CODE XREF: DROPNW+7j	DROPNW+10j
		retn
DROPNW		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GETINP		proc near		; CODE XREF: START+175p LOAD_GAME+Cp
					; ...
		call	WAITMRELEASE
		call	sub_0_7858
		mov	ds:6BE3h, ax
		cmp	ax, 0FFFFh
		jz	locret_0_7A89
		nop
		nop
		nop
		mov	bx, 6BD7h
		add	bx, ax
		cmp	byte ptr [bx], 0
		jz	GETINP

locret_0_7A89:				; CODE XREF: GETINP+Cj
		retn
GETINP		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

WRITEAUTOLOAD	proc near		; CODE XREF: START+1ACp sub_0_7604+108p
		mov	si, 0D731h
		mov	di, seg001
		mov	bp, 2
		mov	dx, 0D733h
		call	SAVE_FILE
		retn
WRITEAUTOLOAD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7A9A	proc near		; CODE XREF: CONTROLLER+2F1p
					; CONTROLLER+7ECp
		mov	byte ptr ds:0AECh, 0
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		call	LOADFLIP
		call	FLIPBIT1
		call	GET_PAL
		mov	bx, 0
		mov	cx, 0C0h ; '�'
		mov	dx, 0
		call	SETPALBIT
		push	ds
		push	es
		mov	ax, ds:0D704h
		mov	bx, ds:0D702h
		mov	si, 0
		mov	di, 7D00h
		mov	bp, 36h	; '6'
		mov	dx, 3Ch	; '<'
		mov	es, bx
		mov	ds, ax
		call	COPY_BLOCK
		pop	es
		pop	ds
		mov	di, 0A78h
		call	PLOTFACE
		mov	ax, ds:9E0h
		call	sub_0_7C89
		mov	si, 1080h
		mov	dx, 0C8h ; '�'
		mov	bp, 64h	; 'd'
		mov	di, 0
		call	sub_0_7CA2
		mov	si, ds:0D704h
		mov	di, 0A000h
		call	COPYSCREEN
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		call	sub_0_7C3A
		mov	word ptr ds:6CEDh, 0
		call	sub_0_7C19

loc_0_7B0D:				; CODE XREF: sub_0_7A9A+9Ej
					; sub_0_7A9A+A9j ...
		mov	si, 6D0Dh
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_7B33
		nop
		nop
		nop
		test	bx, 2
		jz	loc_0_7B28
		jmp	loc_0_7C05
;����������������������������������������������������������������������������

loc_0_7B28:				; CODE XREF: sub_0_7A9A+89j
		call	CHECKBOXES
		cmp	ax, 0
		jnz	loc_0_7B45
		nop
		nop
		nop

loc_0_7B33:				; CODE XREF: sub_0_7A9A+80j
		cmp	word ptr ds:6CEDh, 0
		jz	loc_0_7B0D
		call	sub_0_7C19
		mov	word ptr ds:6CEDh, 0
		jmp	short loc_0_7B0D
;����������������������������������������������������������������������������

loc_0_7B45:				; CODE XREF: sub_0_7A9A+94j
		cmp	ax, 13h
		jle	loc_0_7B4D
		jmp	loc_0_7C02
;����������������������������������������������������������������������������

loc_0_7B4D:				; CODE XREF: sub_0_7A9A+AEj
		cmp	word ptr ds:6CEDh, 1
		jz	loc_0_7B0D
		mov	word ptr ds:6CEDh, 1
		cmp	ax, 9
		jg	loc_0_7B87
		nop
		nop
		nop
		dec	ax
		mov	ah, 20h	; ' '

loc_0_7B65:				; CODE XREF: sub_0_7A9A+15Ej
					; sub_0_7A9A+165j
		mov	si, 0F35h
		mov	cx, seg001
		mov	ds:217Ah, cx
		mov	byte ptr [si], 7Bh ; '{'
		mov	[si+1],	ah
		mov	[si+2],	al
		mov	byte ptr [si+3], 0FFh
		call	TEXT_PREPROCESS
		mov	di, 6979h
		call	PTOV
		jmp	short loc_0_7B0D
;����������������������������������������������������������������������������

loc_0_7B87:				; CODE XREF: sub_0_7A9A+C3j
		cmp	ax, 0Ah
		jg	loc_0_7BAF
		nop
		nop
		nop
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	si, 3Dh	; '='
		mov	cx, seg001
		mov	ds:217Ah, cx
		call	TEXT_PREPROCESS
		mov	di, 6979h
		call	PTOV
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jmp	loc_0_7B0D
;����������������������������������������������������������������������������

loc_0_7BAF:				; CODE XREF: sub_0_7A9A+F0j
		sub	ax, 0Ah
		cmp	word ptr ds:0F8h, 1000h
		jnz	loc_0_7BE1
		nop
		nop
		nop
		cmp	word ptr ds:0D746h, 1
		jnz	loc_0_7BE1
		nop
		nop
		nop
		push	ax
		sub	ax, 1
		mov	bx, 0BB8h
		add	bx, ax
		inc	byte ptr [bx]
		cmp	byte ptr [bx], 6
		jnz	loc_0_7BDD
		nop
		nop
		nop
		mov	byte ptr [bx], 0

loc_0_7BDD:				; CODE XREF: sub_0_7A9A+13Bj
		call	sub_0_7C3A
		pop	ax

loc_0_7BE1:				; CODE XREF: sub_0_7A9A+11Ej
					; sub_0_7A9A+128j
		dec	ax
		mov	bx, 6BCBh
		mov	si, 0BB8h
		add	si, ax
		add	bx, ax
		mov	ah, [bx]
		mov	al, [si]
		cmp	al, 0
		jz	loc_0_7BFB
		nop
		nop
		nop
		dec	ax
		jmp	loc_0_7B65
;����������������������������������������������������������������������������

loc_0_7BFB:				; CODE XREF: sub_0_7A9A+158j
		mov	ah, 45h	; 'E'
		mov	al, 0
		jmp	loc_0_7B65
;����������������������������������������������������������������������������

loc_0_7C02:				; CODE XREF: sub_0_7A9A+B0j
		jmp	loc_0_7B0D
;����������������������������������������������������������������������������

loc_0_7C05:				; CODE XREF: sub_0_7A9A+8Bj
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	cx, 0C0h ; '�'
		call	FLIPBIT2
		call	MOUSEFORGAME
		mov	byte ptr ds:0AECh, 1
		retn
sub_0_7A9A	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7C19	proc near		; CODE XREF: sub_0_7A9A+70p
					; sub_0_7A9A+A0p
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	di, 6978h
		mov	dx, 0Ah
		mov	bp, 0C0h ; '�'
		mov	ax, 0
		push	es
		mov	bx, 0A000h
		mov	es, bx
		assume es:nothing
		call	BOX
		pop	es
		assume es:nothing
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		retn
sub_0_7C19	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7C3A	proc near		; CODE XREF: sub_0_7A9A+67p
					; sub_0_7A9A+143p
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	cx, 9
		mov	bp, 6CEFh
		mov	bx, 0BB8h

loc_0_7C48:				; CODE XREF: sub_0_7C3A+41j
		push	bx
		push	cx
		push	bp
		mov	al, [bx]
		mov	ah, 0
		mov	si, 6D01h
		add	si, ax
		add	si, ax
		mov	si, [si]
		mov	di, ds:[bp+0]
		push	ds
		push	es
		mov	ax, 0A000h
		mov	bx, ds:0D702h
		mov	bp, 12h
		mov	dx, 1Eh
		mov	es, ax
		assume es:nothing
		mov	ds, bx
		call	COPY_BLOCK
		pop	es
		assume es:nothing
		pop	ds
		pop	bp
		pop	cx
		pop	bx
		inc	bx
		add	bp, 2
		loop	loc_0_7C48
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	cx, 14h
		call	PAUSE
		retn
sub_0_7C3A	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7C89	proc near		; CODE XREF: sub_0_7A9A+46p
					; PLOTFACE+1Fp
		mov	dx, 0Bh
		mul	dx
		mov	dx, ax
		add	dx, 9E2h
		mov	bp, 7530h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		retn
sub_0_7C89	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_7CA2	proc near		; CODE XREF: sub_0_7A9A+55p
					; PLOTFACE+2Bp
		push	ds
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ax, ds:0D702h
		mov	ds, ax

loc_0_7CAE:				; CODE XREF: sub_0_7CA2+17j
		mov	cx, bp
		rep movsb
		add	di, 140h
		sub	di, bp
		dec	dx
		jnz	loc_0_7CAE
		pop	es
		pop	ds
		retn
sub_0_7CA2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PLOTFACE	proc near		; CODE XREF: sub_0_7A9A+40p
					; NOTICEBOARD+18Cp ...
		push	di
		mov	dx, 9D7h
		mov	ax, 3D02h
		mov	cx, 0
		int	21h		; DOS -	2+ - OPEN DISK FILE WITH HANDLE
					; DS:DX	-> ASCIZ filename
					; AL = access mode
					; 2 - read & write
		jb	loc_0_7CDA
		nop
		nop
		nop
		pop	di
		mov	dx, 9D7h
		mov	ax, ds:0D704h
		call	LOADPAD
		retn
;����������������������������������������������������������������������������

loc_0_7CDA:				; CODE XREF: PLOTFACE+Cj
		mov	ax, ds:9E0h
		call	sub_0_7C89
		mov	dx, 40h	; '@'
		mov	bp, dx
		mov	si, 80h	; '�'
		pop	di
		call	sub_0_7CA2
		retn
PLOTFACE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

FLIPBIT1	proc near		; CODE XREF: sub_0_58DE+6Bp
					; sub_0_7A9A+Dp
		mov	di, ds:0D70Ah
		mov	si, 0A000h
		call	COPYSCREEN
		call	CLS
		mov	dx, ds:0D70Eh
		mov	bp, 300h
		call	COPYPAL2
		retn
FLIPBIT1	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

FLIPBIT2	proc near		; CODE XREF: sub_0_58DE+7Dp
					; sub_0_7A9A+173p
		push	cx
		call	CLS
		pop	cx
		mov	bx, 0
		mov	dx, 300h
		call	SETPALBIT
		call	LOADPALFILE
		mov	si, ds:0D70Ah
		mov	di, 0A000h
		call	COPYSCREEN
		mov	al, ds:608Ah
		push	ax
		push	word ptr ds:260Eh
		call	LOADPANELS
		pop	dx
		call	LOADTILE
		pop	ax
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	locret_0_7D45
		nop
		nop
		nop
		mov	ah, 0
		mov	di, 5100h
		mov	si, 5000h
		call	LANDSETTAP

locret_0_7D45:				; CODE XREF: FLIPBIT2+30j
		retn
FLIPBIT2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

C_RANDINIT	proc near		; CODE XREF: CONTROLLER+6p
		mov	di, 6DCEh
		mov	cx, 30h	; '0'

loc_0_7D4C:				; CODE XREF: C_RANDINIT+Cj
		or	word ptr [di], 1
		add	di, 7Bh	; '{'
		loop	loc_0_7D4C
C_RANDINIT	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

C_CREATE	proc near		; CODE XREF: SECOND_CHARSTUFF+B6p
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	di, 6DCEh
		mov	cx, 2Bh	; '+'

loc_0_7D60:				; CODE XREF: C_CREATE+9Aj
		push	cx
		test	word ptr [di], 1
		jz	loc_0_7DE6
		nop
		nop
		nop

loc_0_7D6A:				; CODE XREF: C_CREATE+1Fj C_CREATE+24j
					; ...
		call	RAND
		and	ax, 7F3Fh
		cmp	ah, 8
		jb	loc_0_7D6A
		cmp	ah, 4Eh	; 'N'
		ja	loc_0_7D6A
		cmp	al, 8
		jb	loc_0_7D6A
		mov	si, ax
		mov	dl, es:[si]
		mov	dh, dl
		and	dl, 3
		cmp	dl, 1
		jnz	loc_0_7D6A
		test	dh, 1Ch
		jnz	loc_0_7D6A
		mov	[di+6],	si
		push	si
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	si, 0
		call	TESTFORWALL
		jnb	loc_0_7DCC
		nop
		nop
		nop
		mov	si, 1
		call	TESTFORWALL
		jnb	loc_0_7DCC
		nop
		nop
		nop
		mov	si, 2
		call	TESTFORWALL
		jnb	loc_0_7DCC
		nop
		nop
		nop
		mov	si, 3
		call	TESTFORWALL
		jnb	loc_0_7DCC
		nop
		nop
		nop
		pop	es
		pop	si
		jmp	short loc_0_7D6A
;����������������������������������������������������������������������������

loc_0_7DCC:				; CODE XREF: C_CREATE+4Ej C_CREATE+59j
					; ...
		pop	es
		pop	si
		call	RAND
		and	ax, 3
		dec	ax
		jge	loc_0_7DDD
		nop
		nop
		nop
		mov	ax, 0

loc_0_7DDD:				; CODE XREF: C_CREATE+81j
		mov	dh, 0
		mov	dl, al
		mov	cl, 0
		call	MAKECHAR

loc_0_7DE6:				; CODE XREF: C_CREATE+11j
		pop	cx
		add	di, 7Bh	; '{'
		loop	loc_0_7DEE
		jmp	short loc_0_7DF1
;����������������������������������������������������������������������������

loc_0_7DEE:				; CODE XREF: C_CREATE+96j
		jmp	loc_0_7D60
;����������������������������������������������������������������������������

loc_0_7DF1:				; CODE XREF: C_CREATE+98j
		pop	es
		retn
C_CREATE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

P_RANDINIT	proc near		; CODE XREF: CONTROLLER+9p
		mov	bx, 3Fh	; '?'
		mov	ax, 5280h
		mov	dx, 3980h
		mov	cx, 0
		mov	bp, 0FFFFh
		call	SETUPPICKUP
		mov	bx, 40h	; '@'
		mov	ax, 3580h
		mov	dx, 1380h
		mov	cx, 1
		mov	bp, 0FFFFh
		call	SETUPPICKUP
		mov	bx, 41h	; 'A'
		mov	ax, 3D80h
		mov	dx, 3A80h
		mov	cx, 0FFFFh
		mov	bp, 0FFFFh
		call	SETUPPICKUP
		mov	bx, 9
		mov	ax, 4F80h
		mov	dx, 3680h
		mov	cx, 0
		mov	bp, 0FFFFh
		call	SETUPPICKUP
		mov	bx, 9C48h
		mov	ax, [si+1Bh]
		call	SETINSHOP
		mov	bx, 8
		mov	ax, 5040h
		mov	dx, 3640h
		mov	cx, 0
		mov	bp, 0FFFFh
		call	SETUPPICKUP
		mov	bx, 9DE2h
		mov	ax, [si+1Bh]
		call	SETINSHOP
		mov	bx, 0Fh
		mov	ax, 5240h
		mov	dx, 3740h
		mov	cx, 0
		mov	bp, 0FFFFh
		call	SETUPPICKUP
		mov	bx, 9CECh
		mov	ax, [si+1Bh]
		call	SETINSHOP
		mov	bx, 6Ah	; 'j'
		mov	ax, 3B80h
		mov	dx, 4A80h
		mov	cx, 0FFFFh
		mov	bp, 0FFFFh
		call	SETUPPICKUP
		mov	bx, 6Bh	; 'k'
		mov	ax, 0E80h
		mov	dx, 1680h
		mov	cx, 1
		mov	bp, 0FFFFh
		call	SETUPPICKUP
		mov	bx, 6Ch	; 'l'
		mov	ax, 4F80h
		mov	dx, 3680h
		mov	cx, 0
		mov	bp, 1
		call	SETUPPICKUP
		mov	bx, 9C71h
		mov	ax, [si+1Bh]
		call	SETINSHOP
		mov	bx, ds:1054h
		cmp	bx, 0
		jz	locret_0_7EDB
		nop
		nop
		nop
		mov	ax, 0E80h
		mov	dx, 1680h
		mov	cx, 1
		mov	bp, 5
		call	SETUPPICKUP
		or	word ptr [si], 4
		mov	ds:0BB6h, si

locret_0_7EDB:				; CODE XREF: P_RANDINIT+CDj
		retn
P_RANDINIT	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

C_ROUGHWALK	proc near		; CODE XREF: CONTROLLER+919p
					; MOVECHARS+6p
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	di, 6DCEh
		mov	cx, 38h	; '8'

loc_0_7EE8:				; CODE XREF: C_ROUGHWALK+136j
		push	cx
		or	word ptr [di], 2
		test	word ptr [di], 1
		jz	loc_0_7EFB
		nop
		nop
		nop
		and	word ptr [di], 0FFFDh
		jmp	loc_0_8007
;����������������������������������������������������������������������������

loc_0_7EFB:				; CODE XREF: C_ROUGHWALK+14j
		mov	al, [di+0Ah]
		cmp	al, ds:0ADDh
		jz	loc_0_7F0D
		nop
		nop
		nop
		and	word ptr [di], 0FFFDh
		jmp	loc_0_8007
;����������������������������������������������������������������������������

loc_0_7F0D:				; CODE XREF: C_ROUGHWALK+26j
		cmp	word ptr [di+8], 10h
		jl	loc_0_7F28
		nop
		nop
		nop
		and	word ptr [di], 0FFFDh
		test	word ptr [di], 400h
		jz	loc_0_7F28
		nop
		nop
		nop
		or	word ptr [di], 1
		jmp	loc_0_8007
;����������������������������������������������������������������������������

loc_0_7F28:				; CODE XREF: C_ROUGHWALK+35j
					; C_ROUGHWALK+41j
		cmp	word ptr [di+8], 3
		jg	loc_0_7F35
		nop
		nop
		nop
		inc	word ptr ds:5ACBh

loc_0_7F35:				; CODE XREF: C_ROUGHWALK+50j
		cmp	byte ptr [di+0Bh], 15h
		jz	loc_0_7FAC
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 18h
		jz	loc_0_7F98
		nop
		nop
		nop
		test	word ptr [di], 4
		jz	loc_0_7F5B
		nop
		nop
		nop
		dec	word ptr [di+4Ah]
		jnz	loc_0_7FC7
		nop
		nop
		nop
		and	word ptr [di], 0FFFBh

loc_0_7F5B:				; CODE XREF: C_ROUGHWALK+6Fj
		mov	ax, [di+1Dh]
		add	ax, [di+2]
		mov	bx, [di+1Fh]
		add	bx, [di+4]
		mov	dx, bx
		mov	dl, ah
		dec	byte ptr [di+23h]
		jnz	loc_0_7F8C
		nop
		nop
		nop
		mov	cl, [di+24h]
		mov	[di+23h], cl
		mov	cl, [di+21h]
		mov	[di+2],	cl
		mov	al, cl
		mov	cl, [di+22h]
		mov	[di+4],	cl
		mov	bl, cl
		call	sub_0_8027

loc_0_7F8C:				; CODE XREF: C_ROUGHWALK+92j
		mov	[di+2],	ax
		mov	[di+4],	bx
		mov	[di+6],	dx
		jmp	short loc_0_7FAC
;����������������������������������������������������������������������������
		nop

loc_0_7F98:				; CODE XREF: C_ROUGHWALK+66j
		mov	ax, ds:0ADBh
		cmp	ax, [di+6]
		jnz	loc_0_7FAC
		nop
		nop
		nop
		mov	ds:0A2FFh, di
		mov	byte ptr ds:6AB0h, 3

loc_0_7FAC:				; CODE XREF: C_ROUGHWALK+5Dj
					; C_ROUGHWALK+B9j ...
		test	word ptr [di], 2
		jz	loc_0_8007
		nop
		nop
		nop
		mov	al, [di+29h]
		add	[di+2Ah], al
		jnb	loc_0_7FC7
		nop
		nop
		nop
		inc	byte ptr [di+0Ch]
		and	byte ptr [di+0Ch], 3

loc_0_7FC7:				; CODE XREF: C_ROUGHWALK+77j
					; C_ROUGHWALK+DFj
		mov	bx, ds:0AD5h
		shl	bx, 1
		shl	bx, 1
		shl	bx, 1
		mov	ax, [di+25h]
		shl	ax, 1
		add	bx, ax
		add	bx, 9404h
		mov	cx, [bx]
		mov	bx, 9444h
		mov	al, [di+0Bh]
		mov	ah, 0
		shl	ax, 1
		add	bx, ax
		mov	bx, [bx]
		add	bx, cx
		mov	al, [di+0Ch]
		shl	ax, 1
		shl	ax, 1
		add	bx, ax
		mov	ax, [bx]
		mov	bx, [bx+2]
		mov	[di+15h], ax
		and	word ptr [di+19h], 0FF3Fh
		or	[di+19h], bx

loc_0_8007:				; CODE XREF: C_ROUGHWALK+1Cj
					; C_ROUGHWALK+2Ej ...
		and	word ptr [di], 0FFF7h
		pop	cx
		add	di, 7Bh	; '{'
		loop	loc_0_8012
		jmp	short loc_0_8015
;����������������������������������������������������������������������������

loc_0_8012:				; CODE XREF: C_ROUGHWALK+132j
		jmp	loc_0_7EE8
;����������������������������������������������������������������������������

loc_0_8015:				; CODE XREF: C_ROUGHWALK+134j
		pop	es
		retn
C_ROUGHWALK	endp

;����������������������������������������������������������������������������
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_8027	proc near		; CODE XREF: C_ROUGHWALK+ADp
		mov	word ptr ds:9A8Ch, 0
		push	ax
		push	bx
		push	dx
		mov	bp, dx
		cmp	word ptr ds:0D442h, 11h
		jnz	loc_0_8059
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 2
		jnz	loc_0_8059
		nop
		nop
		nop
		mov	word ptr [di+27h], 0FC18h
		cmp	word ptr ds:0D473h, 1
		jz	loc_0_8059
		nop
		nop
		nop
		mov	word ptr [di+27h], 1C4Bh

loc_0_8059:				; CODE XREF: sub_0_8027+10j
					; sub_0_8027+19j ...
		mov	ax, ds:0ADBh
		call	CELLSAPART
		mov	[di+8],	ax
		cmp	byte ptr ds:6868h, 1
		jnz	loc_0_806C
		jmp	loc_0_821E
;����������������������������������������������������������������������������

loc_0_806C:				; CODE XREF: sub_0_8027+40j
		cmp	ax, 1
		jle	loc_0_8074
		jmp	loc_0_821E
;����������������������������������������������������������������������������

loc_0_8074:				; CODE XREF: sub_0_8027+48j
		cmp	word ptr ds:0D442h, 12h
		jnz	loc_0_8099
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 2
		jnz	loc_0_8099
		nop
		nop
		nop
		cmp	word ptr ds:0D479h, 1
		jnz	loc_0_8099
		nop
		nop
		nop
		mov	word ptr [di+67h], 0Ah
		or	word ptr [di], 10h

loc_0_8099:				; CODE XREF: sub_0_8027+52j
					; sub_0_8027+5Bj ...
		cmp	byte ptr [di+0Bh], 2
		jnz	loc_0_80C3
		nop
		nop
		nop
		cmp	word ptr ds:0D442h, 11h
		jnz	loc_0_80C3
		nop
		nop
		nop
		cmp	word ptr ds:0D473h, 1
		jnz	loc_0_80C3
		nop
		nop
		nop
		or	word ptr [di], 10h
		mov	word ptr [di+65h], 3993h
		mov	word ptr [di+67h], 0Ch

loc_0_80C3:				; CODE XREF: sub_0_8027+76j
					; sub_0_8027+80j ...
		test	word ptr [di], 4000h
		jnz	loc_0_80CC
		jmp	loc_0_8149
;����������������������������������������������������������������������������

loc_0_80CC:				; CODE XREF: sub_0_8027+A0j
		test	word ptr [di], 8
		jnz	loc_0_813D
		nop
		nop
		nop
		push	bp
		push	di
		mov	ax, [di+2]
		sub	ax, ds:0ACDh
		mov	dx, [di+4]
		sub	dx, ds:0ACFh
		call	ARCTAN
		push	word ptr ds:0AD1h
		push	word ptr ds:0AD7h
		push	word ptr ds:0AD9h
		mov	ds:0AD1h, di
		mov	ax, di
		call	SINA
		mov	ds:0AD7h, ax
		mov	ax, ds:0AD1h
		call	COSA
		mov	ds:0AD9h, ax
		call	MAKEVIEW
		pop	word ptr ds:0AD9h
		pop	word ptr ds:0AD7h
		pop	word ptr ds:0AD1h
		pop	di
		pop	bp
		test	word ptr [di], 8
		jnz	loc_0_8131
		nop
		nop
		nop
		mov	byte ptr ds:6AB0h, 0
		mov	word ptr ds:0A2FFh, 0
		jmp	loc_0_821E
;����������������������������������������������������������������������������

loc_0_8131:				; CODE XREF: sub_0_8027+F7j
		mov	byte ptr ds:6AB0h, 4
		mov	ds:0A2FFh, di
		jmp	loc_0_821E
;����������������������������������������������������������������������������

loc_0_813D:				; CODE XREF: sub_0_8027+A9j
		mov	ds:0A2FFh, di
		mov	byte ptr ds:6AB0h, 3
		jmp	loc_0_821E
;����������������������������������������������������������������������������

loc_0_8149:				; CODE XREF: sub_0_8027+A2j
		test	word ptr [di], 10h
		jz	loc_0_81C8
		nop
		nop
		nop
		test	word ptr [di], 8
		jnz	loc_0_815B
		jmp	loc_0_821E
;����������������������������������������������������������������������������

loc_0_815B:				; CODE XREF: sub_0_8027+12Fj
		cmp	word ptr [di+67h], 0
		jz	loc_0_817B
		nop
		nop
		nop
		mov	word ptr ds:5ABBh, 3
		push	bp
		push	di
		call	NEARBASKET
		pop	di
		mov	ax, bp
		pop	bp
		cmp	ax, 1
		jnz	loc_0_817B
		jmp	loc_0_821E
;����������������������������������������������������������������������������

loc_0_817B:				; CODE XREF: sub_0_8027+138j
					; sub_0_8027+14Fj
		push	bp
		mov	ds:0A2FDh, di
		mov	word ptr ds:68A0h, 0FFFFh
		mov	di, 6DCEh
		mov	cx, 38h	; '8'

loc_0_818C:				; CODE XREF: sub_0_8027+16Bj
		and	word ptr [di], 0FFFDh
		add	di, 7Bh	; '{'
		loop	loc_0_818C
		call	DIALOG
		mov	di, ds:0A2FDh
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_81AE
		nop
		nop
		nop
		test	word ptr [di], 800h
		jz	loc_0_81B6
		nop
		nop
		nop

loc_0_81AE:				; CODE XREF: sub_0_8027+179j
		and	word ptr [di], 0FFEFh
		mov	word ptr [di+65h], 41E4h

loc_0_81B6:				; CODE XREF: sub_0_8027+182j
		add	word ptr [di+25h], 2
		and	word ptr [di+25h], 3
		neg	word ptr [di+1Dh]
		neg	word ptr [di+1Fh]
		pop	bp
		jmp	short loc_0_821E
;����������������������������������������������������������������������������
		nop

loc_0_81C8:				; CODE XREF: sub_0_8027+126j
		cmp	byte ptr [di+0Bh], 0Ch
		jnz	loc_0_81FA
		nop
		nop
		nop
		cmp	word ptr ds:0B1Fh, 0
		jz	loc_0_821E
		nop
		nop
		nop
		dec	word ptr ds:0B1Fh
		inc	word ptr [di+42h]
		mov	byte ptr ds:13Dh, 1
		push	es
		mov	ax, 16h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_821E
;����������������������������������������������������������������������������
		nop

loc_0_81FA:				; CODE XREF: sub_0_8027+1A5j
		cmp	byte ptr [di+0Bh], 11h
		jnz	loc_0_821E
		nop
		nop
		nop
		dec	word ptr ds:0CB3Eh
		push	di
		push	bp
		call	DISPLAYATTRIBS
		pop	bp
		pop	di
		push	es
		mov	ax, 17h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es

loc_0_821E:				; CODE XREF: sub_0_8027+42j
					; sub_0_8027+4Aj ...
		mov	word ptr ds:9AD2h, 0
		mov	ax, [di+27h]
		cmp	ax, 0FC18h
		jnz	loc_0_8238
		nop
		nop
		nop
		mov	ax, ds:0ADBh
		mov	word ptr ds:9AD2h, 1

loc_0_8238:				; CODE XREF: sub_0_8027+203j
		mov	ds:9A4Ch, ax
		cmp	bp, ds:9A4Ch
		jnz	loc_0_8244
		jmp	loc_0_84AC
;����������������������������������������������������������������������������

loc_0_8244:				; CODE XREF: sub_0_8027+218j
					; sub_0_8027+4E0j ...
		cmp	byte ptr [di+0Bh], 11h
		jnz	loc_0_8267
		nop
		nop
		nop
		call	RAND
		mov	ah, 0
		inc	ax
		cmp	ax, 34h	; '4'
		jg	loc_0_8264
		nop
		nop
		nop
		sar	ax, 1
		inc	ax
		mov	[di+4Ah], ax
		or	word ptr [di], 4

loc_0_8264:				; CODE XREF: sub_0_8027+22Fj
		jmp	short loc_0_827B
;����������������������������������������������������������������������������
		nop

loc_0_8267:				; CODE XREF: sub_0_8027+221j
		mov	ax, ds:0D744h
		cmp	ax, 800h
		ja	loc_0_827B
		nop
		nop
		nop
		mov	si, 0
		call	CHAR_DROPS
		call	sub_0_8990

loc_0_827B:				; CODE XREF: sub_0_8027+23Dj
					; sub_0_8027+246j
		cmp	word ptr [di+63h], 0
		jz	loc_0_828A
		nop
		nop
		nop
		dec	word ptr [di+63h]
		jmp	loc_0_83C4
;����������������������������������������������������������������������������

loc_0_828A:				; CODE XREF: sub_0_8027+258j
		test	word ptr [di+25h], 1
		jz	loc_0_82C3
		nop
		nop
		nop
		mov	ax, ds:9A4Ch
		cmp	ah, [di+7]
		jnz	loc_0_82F2
		nop
		nop
		nop
		cmp	al, [di+6]
		jl	loc_0_82B5
		nop
		nop
		nop
		mov	si, 0
		call	TESTFORWALL
		jb	loc_0_82F2
		nop
		nop
		nop
		jmp	loc_0_8374
;����������������������������������������������������������������������������

loc_0_82B5:				; CODE XREF: sub_0_8027+27Bj
		mov	si, 2
		call	TESTFORWALL
		jb	loc_0_82F2
		nop
		nop
		nop
		jmp	loc_0_8374
;����������������������������������������������������������������������������

loc_0_82C3:				; CODE XREF: sub_0_8027+268j
		mov	ax, ds:9A4Ch
		cmp	al, [di+6]
		jnz	loc_0_82F2
		nop
		nop
		nop
		cmp	ah, [di+7]
		ja	loc_0_82E4
		nop
		nop
		nop
		mov	si, 3
		call	TESTFORWALL
		jb	loc_0_82F2
		nop
		nop
		nop
		jmp	loc_0_8374
;����������������������������������������������������������������������������

loc_0_82E4:				; CODE XREF: sub_0_8027+2AAj
		mov	si, 1
		call	TESTFORWALL
		jb	loc_0_82F2
		nop
		nop
		nop
		jmp	loc_0_8374
;����������������������������������������������������������������������������

loc_0_82F2:				; CODE XREF: sub_0_8027+273j
					; sub_0_8027+286j ...
		mov	si, [di+25h]
		call	TESTFORWALL
		jb	loc_0_8308
		nop
		nop
		nop
		test	word ptr ds:0D744h, 1110h
		jz	loc_0_8308
		jmp	loc_0_854C
;����������������������������������������������������������������������������

loc_0_8308:				; CODE XREF: sub_0_8027+2D1j
					; sub_0_8027+2DCj
		test	word ptr ds:0D744h, 2220h
		jnz	loc_0_8313
		jmp	loc_0_83DA
;����������������������������������������������������������������������������

loc_0_8313:				; CODE XREF: sub_0_8027+2E7j
		mov	ax, ds:9A4Ch
		test	word ptr [di+25h], 1
		jz	loc_0_8344
		nop
		nop
		nop
		cmp	al, [di+6]
		jl	loc_0_8336
		nop
		nop
		nop
		mov	si, 0
		call	TESTFORWALL
		jb	loc_0_8368
		nop
		nop
		nop
		jmp	short loc_0_8374
;����������������������������������������������������������������������������
		nop

loc_0_8336:				; CODE XREF: sub_0_8027+2FCj
		mov	si, 2
		call	TESTFORWALL
		jb	loc_0_8368
		nop
		nop
		nop
		jmp	short loc_0_8374
;����������������������������������������������������������������������������
		nop

loc_0_8344:				; CODE XREF: sub_0_8027+2F4j
		cmp	ah, [di+7]
		ja	loc_0_835A
		nop
		nop
		nop
		mov	si, 3
		call	TESTFORWALL
		jb	loc_0_8368
		nop
		nop
		nop
		jmp	short loc_0_8374
;����������������������������������������������������������������������������
		nop

loc_0_835A:				; CODE XREF: sub_0_8027+320j
		mov	si, 1
		call	TESTFORWALL
		jb	loc_0_8368
		nop
		nop
		nop
		jmp	short loc_0_8374
;����������������������������������������������������������������������������
		nop

loc_0_8368:				; CODE XREF: sub_0_8027+307j
					; sub_0_8027+315j ...
		mov	ax, ds:0D744h
		and	ax, 1Fh
		mov	[di+63h], ax
		jmp	short loc_0_83DA
;����������������������������������������������������������������������������
		nop

loc_0_8374:				; CODE XREF: sub_0_8027+28Bj
					; sub_0_8027+299j ...
		mov	ax, si
		mov	bx, 8017h
		add	bx, ax
		add	bx, ax
		add	bx, ax
		add	bx, ax
		mov	ax, cs:[bx]
		cmp	ax, 0
		jz	loc_0_839C
		nop
		nop
		nop
		jg	loc_0_8399
		nop
		nop
		nop
		mov	ax, [di+1Bh]
		neg	ax
		jmp	short loc_0_839C
;����������������������������������������������������������������������������
		nop

loc_0_8399:				; CODE XREF: sub_0_8027+365j
		mov	ax, [di+1Bh]

loc_0_839C:				; CODE XREF: sub_0_8027+360j
					; sub_0_8027+36Fj
		mov	[di+1Dh], ax
		mov	ax, cs:[bx+2]
		cmp	ax, 0
		jz	loc_0_83BB
		nop
		nop
		nop
		jg	loc_0_83B8
		nop
		nop
		nop
		mov	ax, [di+1Bh]
		neg	ax
		jmp	short loc_0_83BB
;����������������������������������������������������������������������������
		nop

loc_0_83B8:				; CODE XREF: sub_0_8027+384j
		mov	ax, [di+1Bh]

loc_0_83BB:				; CODE XREF: sub_0_8027+37Fj
					; sub_0_8027+38Ej
		mov	[di+1Fh], ax
		mov	[di+25h], si
		jmp	loc_0_854C
;����������������������������������������������������������������������������

loc_0_83C4:				; CODE XREF: sub_0_8027+260j
		test	word ptr ds:0D744h, 3
		jz	loc_0_83DA
		nop
		nop
		nop

loc_0_83CF:				; CODE XREF: sub_0_8027+42Dj
					; sub_0_8027+482j
		mov	si, [di+25h]
		call	TESTFORWALL
		jb	loc_0_83DA
		jmp	loc_0_854C
;����������������������������������������������������������������������������

loc_0_83DA:				; CODE XREF: sub_0_8027+2E9j
					; sub_0_8027+34Aj ...
		inc	word ptr ds:9A8Ch
		cmp	word ptr ds:9A8Ch, 14h
		jl	loc_0_83F4
		nop
		nop
		nop
		or	word ptr [di], 1
		mov	ax, [di+6]
		mov	ds:6AAEh, ax
		jmp	loc_0_854C
;����������������������������������������������������������������������������

loc_0_83F4:				; CODE XREF: sub_0_8027+3BCj
		call	RAND
		mov	cx, ax
		test	cx, 200h
		jnz	loc_0_8457
		nop
		nop
		nop
		mov	ax, [di+25h]
		inc	ax
		and	ax, 3
		mov	[di+25h], ax
		mov	bx, 8017h
		add	bx, ax
		add	bx, ax
		add	bx, ax
		add	bx, ax
		mov	ax, cs:[bx]
		cmp	ax, 0
		jz	loc_0_8432
		nop
		nop
		nop
		jg	loc_0_842F
		nop
		nop
		nop
		mov	ax, [di+1Bh]
		neg	ax
		jmp	short loc_0_8432
;����������������������������������������������������������������������������
		nop

loc_0_842F:				; CODE XREF: sub_0_8027+3FBj
		mov	ax, [di+1Bh]

loc_0_8432:				; CODE XREF: sub_0_8027+3F6j
					; sub_0_8027+405j
		mov	[di+1Dh], ax
		mov	ax, cs:[bx+2]
		cmp	ax, 0
		jz	loc_0_8451
		nop
		nop
		nop
		jg	loc_0_844E
		nop
		nop
		nop
		mov	ax, [di+1Bh]
		neg	ax
		jmp	short loc_0_8451
;����������������������������������������������������������������������������
		nop

loc_0_844E:				; CODE XREF: sub_0_8027+41Aj
		mov	ax, [di+1Bh]

loc_0_8451:				; CODE XREF: sub_0_8027+415j
					; sub_0_8027+424j
		mov	[di+1Fh], ax
		jmp	loc_0_83CF
;����������������������������������������������������������������������������

loc_0_8457:				; CODE XREF: sub_0_8027+3D6j
		mov	ax, [di+25h]
		dec	ax
		and	ax, 3
		mov	[di+25h], ax
		mov	bx, 8017h
		add	bx, ax
		add	bx, ax
		add	bx, ax
		add	bx, ax
		mov	ax, cs:[bx]
		cmp	ax, 0
		jz	loc_0_8487
		nop
		nop
		nop
		jg	loc_0_8484
		nop
		nop
		nop
		mov	ax, [di+1Bh]
		neg	ax
		jmp	short loc_0_8487
;����������������������������������������������������������������������������
		nop

loc_0_8484:				; CODE XREF: sub_0_8027+450j
		mov	ax, [di+1Bh]

loc_0_8487:				; CODE XREF: sub_0_8027+44Bj
					; sub_0_8027+45Aj
		mov	[di+1Dh], ax
		mov	ax, cs:[bx+2]
		cmp	ax, 0
		jz	loc_0_84A6
		nop
		nop
		nop
		jg	loc_0_84A3
		nop
		nop
		nop
		mov	ax, [di+1Bh]
		neg	ax
		jmp	short loc_0_84A6
;����������������������������������������������������������������������������
		nop

loc_0_84A3:				; CODE XREF: sub_0_8027+46Fj
		mov	ax, [di+1Bh]

loc_0_84A6:				; CODE XREF: sub_0_8027+46Aj
					; sub_0_8027+479j
		mov	[di+1Fh], ax
		jmp	loc_0_83CF
;����������������������������������������������������������������������������

loc_0_84AC:				; CODE XREF: sub_0_8027+21Aj
		cmp	word ptr ds:9AD2h, 1
		jz	loc_0_84CA
		nop
		nop
		nop
		call	RAND
		mov	ah, 0
		inc	ax
		cmp	ax, 80h	; '�'
		jg	loc_0_84CA
		nop
		nop
		nop
		mov	[di+4Ah], ax
		or	word ptr [di], 4

loc_0_84CA:				; CODE XREF: sub_0_8027+48Aj
					; sub_0_8027+498j
		mov	al, [di+62h]
		xor	ah, ah
		cmp	ax, 8
		jl	loc_0_851F
		nop
		nop
		nop
		call	CHAR_DROPS
		call	sub_0_8990
		add	ax, 2
		cmp	ax, 10h
		jz	loc_0_850A
		nop
		nop
		nop
		mov	[di+62h], al
		mov	bx, ax
		add	bx, 52h	; 'R'
		add	bx, di
		mov	ax, [bx]
		cmp	ax, 0
		jz	loc_0_850A
		nop
		nop
		nop
		mov	[di+27h], ax
		mov	ds:9A4Ch, ax
		mov	word ptr [di+63h], 0
		jmp	loc_0_8244
;����������������������������������������������������������������������������

loc_0_850A:				; CODE XREF: sub_0_8027+4BCj
					; sub_0_8027+4D0j
		mov	byte ptr [di+62h], 0
		mov	ax, [di+52h]
		mov	[di+27h], ax
		mov	ds:9A4Ch, ax
		mov	word ptr [di+63h], 0
		jmp	loc_0_8244
;����������������������������������������������������������������������������

loc_0_851F:				; CODE XREF: sub_0_8027+4ABj
		add	ax, 2
		cmp	ax, 8
		jnz	loc_0_852D
		nop
		nop
		nop

loc_0_852A:				; CODE XREF: sub_0_8027+515j
		mov	ax, 0

loc_0_852D:				; CODE XREF: sub_0_8027+4FEj
		mov	[di+62h], al
		mov	bx, ax
		add	bx, 52h	; 'R'
		add	bx, di
		mov	ax, [bx]
		cmp	ax, 0
		jz	loc_0_852A
		mov	[di+27h], ax
		mov	ds:9A4Ch, ax
		mov	word ptr [di+63h], 0
		jmp	loc_0_8244
;����������������������������������������������������������������������������

loc_0_854C:				; CODE XREF: sub_0_8027+2DEj
					; sub_0_8027+39Aj ...
		pop	dx
		pop	bx
		pop	ax
		retn
sub_0_8027	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

TESTFORWALL	proc near		; CODE XREF: C_CREATE+4Bp C_CREATE+56p
					; ...
		push	si
		shl	si, 1
		shl	si, 1
		shl	si, 1
		add	si, 93E4h
		mov	bx, [si+4]
		mov	ax, [si+2]
		mov	si, [si]
		cmp	di, 84DEh
		jb	loc_0_8588
		nop
		nop
		nop
		push	bx
		mov	bx, [di+6]
		mov	dl, es:[bx]
		pop	bx
		add	bx, [di+6]
		mov	dh, es:[bx]
		sub	bx, [di+6]
		and	dx, 303h
		cmp	dh, dl
		jz	loc_0_8588
		jmp	loc_0_8649
;����������������������������������������������������������������������������

loc_0_8588:				; CODE XREF: TESTFORWALL+17j
					; TESTFORWALL+33j
		add	bx, [di+6]
		mov	dl, es:[bx]
		and	dl, 1Ch
		cmp	dl, 4
		jle	loc_0_8599
		jmp	loc_0_8649
;����������������������������������������������������������������������������

loc_0_8599:				; CODE XREF: TESTFORWALL+44j
		test	byte ptr es:[bx], 2
		jz	loc_0_85A2
		jmp	loc_0_8649
;����������������������������������������������������������������������������

loc_0_85A2:				; CODE XREF: TESTFORWALL+4Dj
		cmp	byte ptr [di+0Bh], 2
		jz	loc_0_85BE
		nop
		nop
		nop
		cmp	word ptr ds:9A8Ch, 8
		jge	loc_0_85BE
		nop
		nop
		nop
		cmp	bx, ds:0ADBh
		jnz	loc_0_85BE
		jmp	loc_0_8649
;����������������������������������������������������������������������������

loc_0_85BE:				; CODE XREF: TESTFORWALL+56j
					; TESTFORWALL+60j ...
		cmp	byte ptr [di+0Bh], 0Fh
		jnz	loc_0_85D0
		nop
		nop
		nop
		cmp	bx, ds:9A8Eh
		jz	loc_0_8649
		nop
		nop
		nop

loc_0_85D0:				; CODE XREF: TESTFORWALL+72j
		add	si, [di+6]
		test	es:[si], al
		jz	loc_0_864C
		nop
		nop
		nop
		mov	al, es:[si+55h]
		mov	si, [di+6]
		mov	bx, 0
		test	byte ptr es:[si], 3
		jnz	loc_0_85F9
		nop
		nop
		nop
		shr	al, 1
		shr	al, 1
		shr	al, 1
		shr	al, 1
		mov	bx, 10h

loc_0_85F9:				; CODE XREF: TESTFORWALL+99j
		and	al, 0Fh
		add	bx, ds:2716h
		xlat
		cmp	al, 0
		jz	loc_0_864C
		nop
		nop
		nop
		test	word ptr [di], 40h
		jz	loc_0_8649
		nop
		nop
		nop
		cmp	al, 2
		jnz	loc_0_8649
		nop
		nop
		nop
		mov	bx, 5EA5h
		mov	ax, ds:0ADDh

loc_0_861D:				; CODE XREF: TESTFORWALL+F4j
		cmp	word ptr [bx], 0FFFFh
		jz	loc_0_8646
		nop
		nop
		nop
		cmp	[bx], si
		jnz	loc_0_8641
		nop
		nop
		nop
		cmp	[bx+2],	al
		jnz	loc_0_8641
		nop
		nop
		nop
		cmp	byte ptr ds:0D744h, 40h	; '@'
		jb	loc_0_864C
		nop
		nop
		nop
		jmp	short loc_0_8649
;����������������������������������������������������������������������������
		nop

loc_0_8641:				; CODE XREF: TESTFORWALL+D7j
					; TESTFORWALL+DFj
		add	bx, 5
		jmp	short loc_0_861D
;����������������������������������������������������������������������������

loc_0_8646:				; CODE XREF: TESTFORWALL+D0j
		jmp	short loc_0_864C
;����������������������������������������������������������������������������
		nop

loc_0_8649:				; CODE XREF: TESTFORWALL+35j
					; TESTFORWALL+46j ...
		pop	si
		stc
		retn
;����������������������������������������������������������������������������

loc_0_864C:				; CODE XREF: TESTFORWALL+86j
					; TESTFORWALL+B2j ...
		pop	si
		clc
		retn
TESTFORWALL	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

P_PROCESS	proc near		; CODE XREF: CONTROLLER+91Fp
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	di, 88B6h
		mov	cx, 40h	; '@'
		mov	bx, 9A4Eh
		mov	bp, 0

loc_0_8661:				; CODE XREF: P_PROCESS+9Ej
		push	cx
		or	word ptr [di], 2
		test	word ptr [di], 1
		jz	loc_0_8674
		nop
		nop
		nop
		and	word ptr [di], 0FFFDh
		jmp	short loc_0_86E5
;����������������������������������������������������������������������������
		nop

loc_0_8674:				; CODE XREF: P_PROCESS+1Aj
		test	word ptr [di], 4
		jz	loc_0_8683
		nop
		nop
		nop
		and	word ptr [di], 0FFFDh
		jmp	short loc_0_86E5
;����������������������������������������������������������������������������
		nop

loc_0_8683:				; CODE XREF: P_PROCESS+29j
		mov	al, [di+0Ah]
		cmp	al, ds:0ADDh
		jz	loc_0_8695
		nop
		nop
		nop
		and	word ptr [di], 0FFFDh
		jmp	short loc_0_86D6
;����������������������������������������������������������������������������
		nop

loc_0_8695:				; CODE XREF: P_PROCESS+3Bj
		mov	dx, [di+6]
		mov	ax, ds:0ADBh
		sub	ah, dh
		sub	al, dl
		cmp	ah, 0
		jge	loc_0_86A9
		nop
		nop
		nop
		neg	ah

loc_0_86A9:				; CODE XREF: P_PROCESS+53j
		cmp	al, 0
		jge	loc_0_86B2
		nop
		nop
		nop
		neg	al

loc_0_86B2:				; CODE XREF: P_PROCESS+5Cj
		mov	dl, ah
		xor	ah, ah
		xor	dh, dh
		add	ax, dx
		mov	[di+8],	ax
		cmp	ax, 10h
		jl	loc_0_86C8
		nop
		nop
		nop
		and	word ptr [di], 0FFFDh

loc_0_86C8:				; CODE XREF: P_PROCESS+71j
		cmp	ax, 0
		jg	loc_0_86D6
		nop
		nop
		nop
		mov	[bx], di
		add	bx, 2
		inc	bp

loc_0_86D6:				; CODE XREF: P_PROCESS+43j
					; P_PROCESS+7Cj
		cmp	byte ptr [di+0Bh], 0Ah
		jnz	loc_0_86E5
		nop
		nop
		nop
		mov	ax, [di+6]
		mov	ds:9A8Eh, ax

loc_0_86E5:				; CODE XREF: P_PROCESS+22j
					; P_PROCESS+31j ...
		pop	cx
		add	di, 2Ch	; ','
		loop	loc_0_86ED
		jmp	short loc_0_86F0
;����������������������������������������������������������������������������

loc_0_86ED:				; CODE XREF: P_PROCESS+9Aj
		jmp	loc_0_8661
;����������������������������������������������������������������������������

loc_0_86F0:				; CODE XREF: P_PROCESS+9Cj
		mov	ax, ds:0ADBh
		mov	di, 0B17h
		mov	cx, 4

loc_0_86F9:				; CODE XREF: P_PROCESS+B4j
		cmp	ax, [di]
		jz	loc_0_8708
		nop
		nop
		nop

loc_0_8700:				; CODE XREF: P_PROCESS+C0j
		add	di, 2
		loop	loc_0_86F9
		jmp	short loc_0_8741
;����������������������������������������������������������������������������
		nop

loc_0_8708:				; CODE XREF: P_PROCESS+ACj
		mov	dx, ds:0ADDh
		cmp	[di-0Ah], dx
		jnz	loc_0_8700
		mov	word ptr [bx], 93B8h
		add	bx, 2
		inc	bp
		mov	cx, [di-0Ah]
		mov	dx, [di]
		mov	ax, dx
		mov	dl, 80h	; '�'
		mov	ah, al
		mov	al, 80h	; '�'
		mov	si, 93B8h
		mov	[si+2],	ax
		mov	[si+4],	dx
		mov	ax, [di]
		mov	[si+6],	ax
		mov	[si+0Ah], cl
		mov	word ptr [si+15h], 10Dh
		mov	word ptr [si+19h], 0C000h

loc_0_8741:				; CODE XREF: P_PROCESS+B6j
		cmp	bp, 1Eh
		jl	loc_0_874F
		nop
		nop
		nop
		mov	bx, 9A4Eh
		add	bx, 3Ah	; ':'

loc_0_874F:				; CODE XREF: P_PROCESS+F5j
		mov	bp, ds:9A8Ah
		mov	word ptr ds:9A8Ah, 0FFFFh
		cmp	bx, 9A4Eh
		jnz	loc_0_8762
		jmp	loc_0_87E1
;����������������������������������������������������������������������������

loc_0_8762:				; CODE XREF: P_PROCESS+10Ej
		mov	ax, ds:9A4Eh
		sub	bx, 9A4Eh
		sar	bx, 1
		cmp	bx, 1
		jz	loc_0_87C0
		nop
		nop
		nop
		push	bp
		mov	cx, bx
		mov	bx, 9A4Eh
		mov	bp, 800h

loc_0_877C:				; CODE XREF: P_PROCESS+16Bj
		mov	di, [bx]
		add	bx, 2
		mov	ax, [di+2]
		xor	ah, ah
		mov	dx, ds:0ACDh
		xor	dh, dh
		sub	ax, dx
		jge	loc_0_8795
		nop
		nop
		nop
		neg	ax

loc_0_8795:				; CODE XREF: P_PROCESS+13Fj
		mov	si, ax
		mov	ax, [di+4]
		xor	ah, ah
		mov	dx, ds:0ACFh
		xor	dh, dh
		sub	ax, dx
		jge	loc_0_87AB
		nop
		nop
		nop
		neg	ax

loc_0_87AB:				; CODE XREF: P_PROCESS+155j
		add	ax, si
		cmp	ax, bp
		jg	loc_0_87BA
		nop
		nop
		nop
		mov	bp, ax
		mov	ds:9A8Ah, di

loc_0_87BA:				; CODE XREF: P_PROCESS+160j
		loop	loc_0_877C
		mov	ax, ds:9A8Ah
		pop	bp

loc_0_87C0:				; CODE XREF: P_PROCESS+11Fj
		mov	ds:9A8Ah, ax
		cmp	bp, ax
		jz	loc_0_880D
		nop
		nop
		nop
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	bx, ds:9A8Ah
		mov	di, 0C808h
		call	BLITPICKUP
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jmp	short loc_0_880D
;����������������������������������������������������������������������������
		nop

loc_0_87E1:				; CODE XREF: P_PROCESS+110j
		cmp	bp, 0FFFFh
		jz	loc_0_880D
		nop
		nop
		nop
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, 0
		mov	dx, 10h
		mov	di, 0C808h

loc_0_87FC:				; CODE XREF: P_PROCESS+1B7j
		mov	cx, 8
		rep stosw
		add	di, 130h
		dec	dx
		jnz	loc_0_87FC
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_880D:				; CODE XREF: P_PROCESS+176j
					; P_PROCESS+18Fj ...
		pop	es
		assume es:nothing
		retn
P_PROCESS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SETUPPICKUP	proc near		; CODE XREF: CONTROLLER+861p
					; sub_0_681D+ABp ...
		push	cx
		mov	si, 88B6h
		mov	cx, 40h	; '@'

loc_0_8816:				; CODE XREF: SETUPPICKUP+13j
		test	word ptr [si], 1
		jz	loc_0_881F
		jmp	loc_0_88D3
;����������������������������������������������������������������������������

loc_0_881F:				; CODE XREF: SETUPPICKUP+Bj
		add	si, 2Ch	; ','
		loop	loc_0_8816
		cmp	word ptr ds:0CCD1h, 1
		jz	loc_0_8840
		nop
		nop
		nop
		cmp	bx, 6Dh	; 'm'
		jl	loc_0_8840
		nop
		nop
		nop
		cmp	bx, 7Ch	; '|'
		jg	loc_0_8840
		nop
		nop
		nop
		pop	cx
		retn
;����������������������������������������������������������������������������

loc_0_8840:				; CODE XREF: SETUPPICKUP+1Aj
					; SETUPPICKUP+22j ...
		mov	si, 88B6h
		mov	cx, 40h	; '@'

loc_0_8846:				; CODE XREF: SETUPPICKUP+BEj
		cmp	byte ptr [si+25h], 1
		jnz	loc_0_88C6
		nop
		nop
		nop
		cmp	ds:0BB6h, si
		jz	loc_0_88C6
		nop
		nop
		nop
		push	cx
		push	di
		mov	cx, 6
		mov	di, 0B65h

loc_0_8860:				; CODE XREF: SETUPPICKUP+5Bj
		cmp	[di], si
		jz	loc_0_88C4
		nop
		nop
		nop
		add	di, 0Ah
		loop	loc_0_8860
		mov	cx, 1Eh
		mov	di, 0B65h

loc_0_8872:				; CODE XREF: SETUPPICKUP+6Dj
		cmp	[di], si
		jz	loc_0_88BB
		nop
		nop
		nop
		add	di, 2
		loop	loc_0_8872
		mov	cx, 0Fh
		mov	di, 9C61h

loc_0_8884:				; CODE XREF: SETUPPICKUP+97j
		cmp	[di], si
		jz	loc_0_88B6
		nop
		nop
		nop
		cmp	[di+4],	si
		jz	loc_0_88B3
		nop
		nop
		nop
		cmp	[di+8],	si
		jz	loc_0_88B0
		nop
		nop
		nop
		cmp	[di+0Ch], si
		jz	loc_0_88AD
		nop
		nop
		nop
		add	di, 29h	; ')'
		loop	loc_0_8884
		pop	di
		pop	cx
		jmp	short loc_0_88D3
;����������������������������������������������������������������������������
		nop

loc_0_88AD:				; CODE XREF: SETUPPICKUP+8Fj
		add	di, 4

loc_0_88B0:				; CODE XREF: SETUPPICKUP+87j
		add	di, 4

loc_0_88B3:				; CODE XREF: SETUPPICKUP+7Fj
		add	di, 4

loc_0_88B6:				; CODE XREF: SETUPPICKUP+77j
		mov	word ptr [di+2], 0

loc_0_88BB:				; CODE XREF: SETUPPICKUP+65j
		mov	word ptr [di], 0
		pop	di
		pop	cx
		jmp	short loc_0_88D3
;����������������������������������������������������������������������������
		nop

loc_0_88C4:				; CODE XREF: SETUPPICKUP+53j
		pop	di
		pop	cx

loc_0_88C6:				; CODE XREF: SETUPPICKUP+3Bj
					; SETUPPICKUP+44j
		add	si, 2Ch	; ','
		loop	loc_0_88CD
		jmp	short loc_0_88D0
;����������������������������������������������������������������������������

loc_0_88CD:				; CODE XREF: SETUPPICKUP+BAj
		jmp	loc_0_8846
;����������������������������������������������������������������������������

loc_0_88D0:				; CODE XREF: SETUPPICKUP+BCj
		mov	si, 88B6h

loc_0_88D3:				; CODE XREF: SETUPPICKUP+Dj
					; SETUPPICKUP+9Bj ...
		pop	cx
		mov	word ptr [si], 0
		mov	[si+2],	ax
		mov	[si+4],	dx
		mov	[si+0Ah], cl
		mov	dl, ah
		mov	[si+6],	dx
		mov	word ptr [si+8], 64h ; 'd'
		push	si
		push	bp
		push	di
		mov	cx, 21h	; '!'
		mov	ax, cx
		mul	bx
		mov	bx, ax
		add	bx, 1056h
		mov	di, si
		add	di, 0Bh
		mov	si, bx
		push	es
		mov	ax, seg001
		mov	es, ax
		assume es:seg001
		rep movsb
		pop	es
		assume es:nothing
		pop	di
		pop	bp
		pop	si
		mov	[si+27h], bp
		mov	[si+2Ah], di
		mov	bp, 0
		mov	di, [si+6]
		push	es
		mov	ax, ds:0D70Ch
		mov	es, ax
		mov	al, es:[di]
		pop	es
		sar	al, 1
		sar	al, 1
		and	al, 7
		mov	ah, 5
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_8938
		nop
		nop
		nop
		mov	ah, 3

loc_0_8938:				; CODE XREF: SETUPPICKUP+122j
		cmp	al, ah
		jnz	loc_0_8942
		nop
		nop
		nop
		mov	bp, 1000h

loc_0_8942:				; CODE XREF: SETUPPICKUP+12Bj
		and	word ptr [si], 0EFFFh
		or	[si], bp
		mov	byte ptr [si+2], 80h ; '�'
		mov	byte ptr [si+4], 80h ; '�'
		cmp	byte ptr [si+0Bh], 7Ah ; 'z'
		jnz	locret_0_895D
		nop
		nop
		nop
		mov	byte ptr [si+0Bh], 1

locret_0_895D:				; CODE XREF: SETUPPICKUP+145j
		retn
SETUPPICKUP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CELLSAPART	proc near		; CODE XREF: NEARBASKET+Ap
					; NEARBASKET+1Dp ...
		sub	ah, dh
		sub	al, dl
		cmp	ah, 0
		jge	loc_0_896C
		nop
		nop
		nop
		neg	ah

loc_0_896C:				; CODE XREF: CELLSAPART+7j
		cmp	al, 0
		jge	loc_0_8975
		nop
		nop
		nop
		neg	al

loc_0_8975:				; CODE XREF: CELLSAPART+10j
		mov	dl, ah
		xor	ah, ah
		xor	dh, dh
		add	ax, dx
		retn
CELLSAPART	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MOVECHARS	proc near		; CODE XREF: CHANGELEVEL+7Ep
					; sub_0_550F+19Dp ...
		mov	byte ptr ds:6868h, 1
		push	cx
		call	C_ROUGHWALK
		pop	cx
		loop	MOVECHARS
		mov	byte ptr ds:6868h, 0
		retn
MOVECHARS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_8990	proc near		; CODE XREF: sub_0_8027+251p
					; sub_0_8027+4B3p
		cmp	word ptr [di+4Ch], 0
		jnz	locret_0_89D6
		nop
		nop
		nop
		mov	bx, 88B6h
		mov	cx, 40h	; '@'
		mov	dx, [di+6]

loc_0_89A2:				; CODE XREF: sub_0_8990+3Bj
		cmp	[bx+6],	dx
		jnz	loc_0_89C8
		nop
		nop
		nop
		test	word ptr [bx], 5
		jnz	loc_0_89C8
		nop
		nop
		nop
		test	word ptr [bx], 200h
		jnz	loc_0_89C8
		nop
		nop
		nop
		cmp	bx, si
		jz	loc_0_89C8
		nop
		nop
		nop
		mov	si, bx
		jmp	short loc_0_89D0
;����������������������������������������������������������������������������
		nop

loc_0_89C8:				; CODE XREF: sub_0_8990+15j
					; sub_0_8990+1Ej ...
		add	bx, 2Ch	; ','
		loop	loc_0_89A2
		jmp	short locret_0_89D6
;����������������������������������������������������������������������������
		nop

loc_0_89D0:				; CODE XREF: sub_0_8990+35j
		mov	[di+4Ch], si
		or	word ptr [si], 4

locret_0_89D6:				; CODE XREF: sub_0_8990+4j
					; sub_0_8990+3Dj
		retn
sub_0_8990	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CHAR_DROPS	proc near		; CODE XREF: sub_0_8027+24Ep
					; sub_0_8027+4B0p ...
		mov	si, [di+4Ch]
		mov	word ptr [di+4Ch], 0
		cmp	si, 0
		jz	locret_0_8A05
		nop
		nop
		nop
		push	dx
		push	bx
		and	word ptr [si], 0FFFBh
		mov	bx, [di+2]
		mov	[si+2],	bx
		mov	dx, [di+4]
		mov	[si+4],	dx
		mov	dl, bh
		mov	[si+6],	dx
		mov	dl, [di+0Ah]
		mov	[si+0Ah], dl
		pop	bx
		pop	dx

locret_0_8A05:				; CODE XREF: CHAR_DROPS+Bj
		retn
CHAR_DROPS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PUT_TRIVIA	proc near		; CODE XREF: CONTROLLER+Cp
					; CHANGELEVEL+FAp ...
		cmp	word ptr ds:0ADDh, 1
		jnz	loc_0_8A10
		jmp	locret_0_8AC6
;����������������������������������������������������������������������������

loc_0_8A10:				; CODE XREF: PUT_TRIVIA+5j
		call	sub_0_8AC7
		mov	cx, ax

loc_0_8A15:				; CODE XREF: PUT_TRIVIA+BDj
		push	cx

loc_0_8A16:				; CODE XREF: PUT_TRIVIA+30j
					; PUT_TRIVIA+3Bj
		call	GETRANDCELL
		mov	bx, ax
		push	es
		mov	dx, ds:0D70Ch
		mov	es, dx
		mov	dl, es:[bx]
		pop	es
		and	dl, 3
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_8A3E
		nop
		nop
		nop
		cmp	dl, 0
		jnz	loc_0_8A16
		mov	dx, 40h	; '@'
		jmp	short loc_0_8A4F
;����������������������������������������������������������������������������
		nop

loc_0_8A3E:				; CODE XREF: PUT_TRIVIA+28j
		cmp	dl, 1
		jg	loc_0_8A16
		shl	dl, 1
		shl	dl, 1
		shl	dl, 1
		shl	dl, 1
		shl	dl, 1
		mov	dh, 0

loc_0_8A4F:				; CODE XREF: PUT_TRIVIA+35j
		mov	bx, ds:0D744h
		and	bx, 1Fh
		add	bx, 9AD4h
		add	bx, dx
		mov	bl, [bx]
		mov	bh, 0
		mov	cx, ds:0ADDh
		mov	bp, 10h
		mov	di, ds:0D744h
		and	di, 7
		mov	dx, ax
		mov	ah, al
		mov	dl, 28h	; '('
		mov	al, 28h	; '('
		call	SETUPPICKUP
		mov	word ptr [si+8], 64h ; 'd'
		mov	ax, ds:0D744h
		and	ax, 7
		add	[si+1Bh], ax
		cmp	word ptr ds:0ADDh, 0
		jnz	loc_0_8ABE
		nop
		nop
		nop
		cmp	word ptr ds:0D744h, 7000h
		ja	loc_0_8ABE
		nop
		nop
		nop
		cmp	byte ptr [si+0Bh], 1
		jz	loc_0_8ABE
		nop
		nop
		nop
		call	sub_0_8B02
		cmp	bx, 0
		jz	loc_0_8ABE
		nop
		nop
		nop
		mov	[bx], si
		mov	ax, [si+1Bh]
		mov	[bx+2],	ax
		or	word ptr [si], 4
		and	word ptr [si], 0FFFEh

loc_0_8ABE:				; CODE XREF: PUT_TRIVIA+86j
					; PUT_TRIVIA+91j ...
		pop	cx
		loop	loc_0_8AC3
		jmp	short locret_0_8AC6
;����������������������������������������������������������������������������

loc_0_8AC3:				; CODE XREF: PUT_TRIVIA+B9j
		jmp	loc_0_8A15
;����������������������������������������������������������������������������

locret_0_8AC6:				; CODE XREF: PUT_TRIVIA+7j
					; PUT_TRIVIA+BBj
		retn
PUT_TRIVIA	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_8AC7	proc near		; CODE XREF: PUT_TRIVIA+Ap
		call	SHOPCLEAR
		mov	si, 88B6h
		mov	cx, 40h	; '@'
		mov	ax, 0

loc_0_8AD3:				; CODE XREF: sub_0_8AC7+38j
		cmp	byte ptr [si+25h], 0
		jz	loc_0_8AF2
		nop
		nop
		nop
		cmp	word ptr [si+8], 10h
		jl	loc_0_8AF2
		nop
		nop
		nop
		test	word ptr [si], 4
		jnz	loc_0_8AF2
		nop
		nop
		nop
		mov	word ptr [si], 1

loc_0_8AF2:				; CODE XREF: sub_0_8AC7+10j
					; sub_0_8AC7+19j ...
		test	word ptr [si], 1
		jz	loc_0_8AFC
		nop
		nop
		nop
		inc	ax

loc_0_8AFC:				; CODE XREF: sub_0_8AC7+2Fj
		add	si, 2Ch	; ','
		loop	loc_0_8AD3
		retn
sub_0_8AC7	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_8B02	proc near		; CODE XREF: PUT_TRIVIA+9Fp
		mov	bp, 3

loc_0_8B05:				; CODE XREF: sub_0_8B02+34j
		call	RAND
		and	ax, 0Fh
		cmp	ax, 0Fh
		jnz	loc_0_8B16
		nop
		nop
		nop
		mov	ax, 4

loc_0_8B16:				; CODE XREF: sub_0_8B02+Cj
		mov	dx, 29h	; ')'
		mul	dx
		mov	bx, ax
		add	bx, 9C48h
		add	bx, 19h
		mov	dx, ds:0D744h
		and	dx, 0Ch
		add	bx, dx
		cmp	word ptr [bx], 0
		jz	locret_0_8B3B
		nop
		nop
		nop
		dec	bp
		jnz	loc_0_8B05
		mov	bx, 0

locret_0_8B3B:				; CODE XREF: sub_0_8B02+2Ej
		retn
sub_0_8B02	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SHOP		proc near		; CODE XREF: seg000:4F62p
		mov	word ptr ds:2120h, 42h ; 'B'
		mov	word ptr ds:2122h, 12h
		mov	word ptr ds:2124h, 60h ; '`'
		mov	word ptr ds:2126h, 0BCh	; '�'
		mov	cs:PAGECOLOUR, 18h
		mov	ax, ds
		mov	ds:217Ah, ax
		mov	byte ptr ds:0AECh, 0
		mov	bx, 9B4Eh
		mov	dx, ds:0ADBh

loc_0_8B6B:				; CODE XREF: SHOP+41j
		cmp	word ptr [bx], 0FFFFh
		jz	loc_0_8B7F
		nop
		nop
		nop
		cmp	[bx], dx
		jz	loc_0_8B82
		nop
		nop
		nop
		add	bx, 4
		jmp	short loc_0_8B6B
;����������������������������������������������������������������������������

loc_0_8B7F:				; CODE XREF: SHOP+32j SHOP+4Cj
					; ...
		jmp	loc_0_9596
;����������������������������������������������������������������������������

loc_0_8B82:				; CODE XREF: SHOP+39j
		mov	ax, [bx+2]
		cmp	ax, 0FFFFh
		jz	loc_0_8B7F
		cmp	ax, 9
		jge	loc_0_8B92
		jmp	loc_0_9517
;����������������������������������������������������������������������������

loc_0_8B92:				; CODE XREF: SHOP+51j
		cmp	ax, 11h
		jge	loc_0_8B9A
		jmp	loc_0_911A
;����������������������������������������������������������������������������

loc_0_8B9A:				; CODE XREF: SHOP+59j
		cmp	ax, 19h
		jge	loc_0_8BA2
		jmp	loc_0_9203
;����������������������������������������������������������������������������

loc_0_8BA2:				; CODE XREF: SHOP+61j
		cmp	ax, 28h	; '('
		jl	loc_0_8BAC
		nop
		nop
		nop
		jmp	short loc_0_8B7F
;����������������������������������������������������������������������������

loc_0_8BAC:				; CODE XREF: SHOP+69j
		mov	byte ptr ds:218Fh, 1
		mov	ds:0A2F9h, ax
		sub	ax, 11h
		shl	ax, 1
		shl	ax, 1
		add	ax, 0A713h
		add	ax, 3
		mov	bx, ax
		mov	byte ptr [bx], 2
		call	WHICHPANELS
		cmp	bp, 0
		jz	loc_0_8BDE
		nop
		nop
		nop
		cmp	byte ptr ds:0F5Fh, 0
		jz	loc_0_8BDE
		nop
		nop
		nop
		jmp	short loc_0_8BE4
;����������������������������������������������������������������������������
		nop

loc_0_8BDE:				; CODE XREF: SHOP+90j SHOP+9Aj
					; ...
		call	PRINTCLOSED
		jmp	locret_0_962D
;����������������������������������������������������������������������������

loc_0_8BE4:				; CODE XREF: SHOP+9Fj
		mov	bx, 9C48h
		mov	ax, ds:0A2F9h
		sub	ax, 19h
		mov	dx, 29h	; ')'
		mul	dx
		add	bx, ax
		mov	ds:0A2FBh, bx
		mov	dx, 4A5h
		call	sub_0_AD2E
		call	JOBDONECHECK
		cmp	ax, 0
		jz	loc_0_8C0C
		nop
		nop
		nop
		jmp	loc_0_90CF
;����������������������������������������������������������������������������

loc_0_8C0C:				; CODE XREF: SHOP+C8j
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	cx, ds:0A2F9h
		sub	cx, 19h
		mov	bx, 1A2Bh
		call	sub_0_A12F
		mov	si, bx
		mov	ax, 0A363h
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT

loc_0_8C29:				; CODE XREF: SHOP+5BDj
		cmp	ax, 3
		jnz	loc_0_8C31
		jmp	loc_0_9596
;����������������������������������������������������������������������������

loc_0_8C31:				; CODE XREF: SHOP+F0j
		cmp	ax, 2
		jnz	loc_0_8C39
		jmp	loc_0_90FC
;����������������������������������������������������������������������������

loc_0_8C39:				; CODE XREF: SHOP+F8j SHOP+234j
					; ...
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		call	sub_0_A09F
		mov	ax, 7
		mov	cx, 0F0h ; '�'
		mov	dx, 218h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 4
		mov	dx, 80h	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 50h	; 'P'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_8C67:				; CODE XREF: SHOP+138j	SHOP+149j
		mov	si, 0A5FFh
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_8C67
		test	bx, 2
		jz	loc_0_8C7F
		jmp	loc_0_90CF
;����������������������������������������������������������������������������

loc_0_8C7F:				; CODE XREF: SHOP+13Ej
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_8C67
		cmp	ax, 7
		jl	loc_0_8C8F
		jmp	loc_0_8E69
;����������������������������������������������������������������������������

loc_0_8C8F:				; CODE XREF: SHOP+14Ej
		mov	word ptr ds:9C44h, 0
		mov	word ptr ds:9C46h, 0
		dec	ax
		mov	ds:0AA5Eh, ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, 1818h
		call	CLEARSHOPBOX
		mov	si, ds:0A2FBh
		mov	bx, 13h
		add	bx, ds:0AA5Eh
		mov	ah, 0
		mov	al, [bx+si]
		mov	ds:0AA50h, ax
		call	HEXTOBCD2
		mov	ds:0AA4Eh, ax
		mov	bx, 1
		add	bx, ds:0AA5Eh
		mov	ah, 0
		mov	al, [bx+si]
		mov	ds:0AA54h, ax
		push	bx
		call	HEXTOBCD2
		pop	bx
		mov	ds:0AA52h, ax
		mov	ah, 0
		mov	al, [bx+si+6]
		mov	ds:0AA58h, ax
		call	HEXTOBCD2
		mov	ds:0AA56h, ax
		mov	ax, ds:0AA5Eh
		mov	dx, 0Ah
		mul	dx
		mov	bx, 0B29h
		add	bx, ax
		mov	ax, [bx]
		mov	ds:0AA5Ch, ax
		mov	ds:0AA62h, ax
		call	HEXTOBCD2
		mov	ds:0AA5Ah, ax
		mov	si, 0AFDh
		add	si, ds:0AA5Eh
		mov	cl, [si]
		mov	ch, 0
		sub	cx, ds:0AA5Ch
		mov	ax, ds:0B1Fh
		mov	dx, 0
		mov	bx, ds:0AA58h
		div	bx
		cmp	ax, ds:0AA50h
		jle	loc_0_8D28
		nop
		nop
		nop
		mov	ax, ds:0AA50h

loc_0_8D28:				; CODE XREF: SHOP+1E4j
		cmp	ax, cx
		jle	loc_0_8D31
		nop
		nop
		nop
		mov	ax, cx

loc_0_8D31:				; CODE XREF: SHOP+1EEj
		mov	ds:0AA60h, ax
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		mov	cs:PAGECOLOUR, 18h
		mov	si, 22BAh
		add	si, ds:0AA5Eh
		add	si, ds:0AA5Eh
		mov	si, [si]
		call	SSTOVIDTEXT
		call	sub_0_A092
		call	sub_0_9101
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_8D5B:				; CODE XREF: SHOP+22Cj	SHOP+23Dj
					; ...
		mov	si, 0A671h
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_8D5B
		test	bx, 2
		jz	loc_0_8D73
		jmp	loc_0_8C39
;����������������������������������������������������������������������������

loc_0_8D73:				; CODE XREF: SHOP+232j
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_8D5B
		cmp	ax, 1
		jnz	loc_0_8D83
		jmp	loc_0_8E09
;����������������������������������������������������������������������������

loc_0_8D83:				; CODE XREF: SHOP+242j
		cmp	ax, 2
		jnz	loc_0_8D8B
		jmp	loc_0_8E39
;����������������������������������������������������������������������������

loc_0_8D8B:				; CODE XREF: SHOP+24Aj
		cmp	word ptr ds:9C44h, 0
		jnz	loc_0_8DD4
		nop
		nop
		nop
		cmp	word ptr ds:9C46h, 0
		jnz	loc_0_8D9F
		jmp	loc_0_90CF
;����������������������������������������������������������������������������

loc_0_8D9F:				; CODE XREF: SHOP+25Ej
		mov	ax, ds:0AA54h
		mov	bx, ds:9C46h
		mul	bx
		add	ds:0B1Fh, ax
		mov	ax, ds:0AA5Eh
		mov	dx, 0Ah
		mul	dx
		mov	bx, 0B29h
		add	bx, ax
		mov	ax, ds:9C46h
		sub	[bx], ax
		mov	si, ds:0A2FBh
		mov	bx, 13h
		add	bx, ds:0AA5Eh
		mov	ax, ds:9C46h
		add	[bx+si], al
		call	PRINTCASH
		jmp	loc_0_8C39
;����������������������������������������������������������������������������

loc_0_8DD4:				; CODE XREF: SHOP+254j
		mov	ax, ds:0AA58h
		mov	bx, ds:9C44h
		mul	bx
		sub	ds:0B1Fh, ax
		mov	ax, ds:0AA5Eh
		mov	dx, 0Ah
		mul	dx
		mov	bx, 0B29h
		add	bx, ax
		mov	ax, ds:9C44h
		add	[bx], ax
		mov	si, ds:0A2FBh
		mov	bx, 13h
		add	bx, ds:0AA5Eh
		mov	ax, ds:9C44h
		sub	[bx+si], al
		call	PRINTCASH
		jmp	loc_0_8C39
;����������������������������������������������������������������������������

loc_0_8E09:				; CODE XREF: SHOP+244j
		cmp	word ptr ds:9C46h, 0
		jz	loc_0_8E1A
		nop
		nop
		nop
		dec	word ptr ds:9C46h
		jmp	short loc_0_8E2D
;����������������������������������������������������������������������������
		nop

loc_0_8E1A:				; CODE XREF: SHOP+2D2j
		mov	ax, ds:0AA60h
		cmp	ax, ds:9C44h
		jz	loc_0_8E2D
		nop
		nop
		nop
		inc	word ptr ds:9C44h
		jmp	short loc_0_8E2D
;����������������������������������������������������������������������������
		nop

loc_0_8E2D:				; CODE XREF: SHOP+2DBj	SHOP+2E5j
					; ...
		mov	cx, 5
		call	PAUSE
		call	sub_0_9101
		jmp	loc_0_8D5B
;����������������������������������������������������������������������������

loc_0_8E39:				; CODE XREF: SHOP+24Cj
		cmp	word ptr ds:9C44h, 0
		jz	loc_0_8E4A
		nop
		nop
		nop
		dec	word ptr ds:9C44h
		jmp	short loc_0_8E5D
;����������������������������������������������������������������������������
		nop

loc_0_8E4A:				; CODE XREF: SHOP+302j
		mov	ax, ds:0AA62h
		cmp	ax, ds:9C46h
		jz	loc_0_8E5D
		nop
		nop
		nop
		inc	word ptr ds:9C46h
		jmp	short loc_0_8E5D
;����������������������������������������������������������������������������
		nop

loc_0_8E5D:				; CODE XREF: SHOP+30Bj	SHOP+315j
					; ...
		mov	cx, 5
		call	PAUSE
		call	sub_0_9101
		jmp	loc_0_8D5B
;����������������������������������������������������������������������������

loc_0_8E69:				; CODE XREF: SHOP+150j
		push	ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, 1818h
		call	CLEARSHOPBOX
		pop	ax
		sub	ax, 7
		mov	si, ds:0A2FBh
		add	si, 19h
		add	si, ax
		add	si, ax
		add	si, ax
		add	si, ax
		cmp	word ptr [si], 0
		jnz	loc_0_8E90
		jmp	loc_0_8F47
;����������������������������������������������������������������������������

loc_0_8E90:				; CODE XREF: SHOP+34Fj
		mov	di, [si]
		mov	ds:0AA68h, si
		mov	ax, [si+2]
		mov	ds:0AA66h, ax
		call	HEXTOBCD2
		mov	ds:0AA64h, ax
		mov	al, [di+0Bh]
		push	es
		mov	cx, ds:0D716h
		mov	es, cx
		mov	es:44E1h, al
		pop	es
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		mov	cs:PAGECOLOUR, 18h
		mov	si, 44DAh
		call	SSTOVIDTEXT
		mov	bx, ds:0AA68h
		mov	bx, [bx]
		mov	di, 0F84h
		mov	ax, 1Ah
		call	BLITPUBORD
		call	WAITMRELEASE
		mov	bx, 0E8h ; '�'
		mov	ax, 6Ch	; 'l'
		call	YNPAD
		cmp	ax, 0
		jnz	loc_0_8EE6
		jmp	loc_0_8C39
;����������������������������������������������������������������������������

loc_0_8EE6:				; CODE XREF: SHOP+3A5j
		mov	ax, ds:0AA66h
		cmp	ax, ds:0B1Fh
		jle	loc_0_8EFB
		nop
		nop
		nop
		mov	si, 2DD2h
		call	PRINTANDOK
		jmp	loc_0_8C39
;����������������������������������������������������������������������������

loc_0_8EFB:				; CODE XREF: SHOP+3B1j
		cmp	word ptr ds:0BB6h, 0
		jz	loc_0_8F24
		nop
		nop
		nop
		mov	bx, 0B65h
		add	bx, 0
		mov	cx, 6

loc_0_8F0E:				; CODE XREF: SHOP+3DDj
		cmp	word ptr [bx], 0
		jz	loc_0_8F27
		nop
		nop
		nop
		add	bx, 0Ah
		loop	loc_0_8F0E
		mov	si, 2E04h
		call	PRINTANDOK
		jmp	loc_0_8C39
;����������������������������������������������������������������������������

loc_0_8F24:				; CODE XREF: SHOP+3C4j
		mov	bx, 0BB6h

loc_0_8F27:				; CODE XREF: SHOP+3D5j
		sub	ds:0B1Fh, ax
		mov	si, ds:0AA68h
		mov	ax, [si]
		mov	word ptr [si], 0
		mov	word ptr [si+2], 0
		mov	[bx], ax
		mov	byte ptr ds:13Dh, 1
		call	INVENTORY
		jmp	loc_0_8C39
;����������������������������������������������������������������������������

loc_0_8F47:				; CODE XREF: SHOP+351j
		mov	ds:0AA68h, si

loc_0_8F4B:				; CODE XREF: SHOP+4C6j	SHOP+53Bj
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		mov	cs:PAGECOLOUR, 18h
		mov	si, 4500h
		call	SSTOVIDTEXT
		call	WAITMRELEASE
		mov	bx, 0E8h ; '�'
		mov	ax, 6Ch	; 'l'
		call	YNPAD
		cmp	ax, 0
		jnz	loc_0_8F71
		jmp	loc_0_8C39
;����������������������������������������������������������������������������

loc_0_8F71:				; CODE XREF: SHOP+430j
		mov	cx, 0
		mov	di, 0AA72h
		cmp	word ptr ds:0BB6h, 0
		jz	loc_0_8F8A
		nop
		nop
		nop
		mov	ax, 0BB6h
		mov	[di], ax
		inc	cx
		add	di, 2

loc_0_8F8A:				; CODE XREF: SHOP+440j
		mov	si, 0B65h
		mov	dx, 6

loc_0_8F90:				; CODE XREF: SHOP+468j
		cmp	word ptr [si], 0
		jz	loc_0_8FA0
		nop
		nop
		nop
		mov	ax, si
		mov	[di], ax
		inc	cx
		add	di, 2

loc_0_8FA0:				; CODE XREF: SHOP+457j
		add	si, 0Ah
		dec	dx
		jnz	loc_0_8F90
		cmp	cx, 0
		jnz	loc_0_8FAE
		jmp	loc_0_90C0
;����������������������������������������������������������������������������

loc_0_8FAE:				; CODE XREF: SHOP+46Dj
		cmp	cx, 1
		jnz	loc_0_8FB6
		jmp	loc_0_90C9
;����������������������������������������������������������������������������

loc_0_8FB6:				; CODE XREF: SHOP+475j
		push	cx
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		mov	si, 451Ah
		call	SSTOVIDTEXT
		pop	cx
		push	cx
		mov	si, 0AA72h
		mov	di, 647Eh

loc_0_8FCB:				; CODE XREF: SHOP+4A5j
		push	si
		push	di
		push	cx
		mov	si, [si]
		mov	bx, [si]
		mov	ax, 1Ah
		call	BLITPUBORD
		pop	cx
		pop	di
		pop	si
		add	di, 13h
		add	si, 2
		loop	loc_0_8FCB
		pop	cx
		mov	ds:0AA70h, cx
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_8FED:				; CODE XREF: SHOP+4BEj	SHOP+4CFj
					; ...
		mov	si, 0A691h
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_8FED
		test	bx, 2
		jz	loc_0_9005
		jmp	loc_0_8F4B
;����������������������������������������������������������������������������

loc_0_9005:				; CODE XREF: SHOP+4C4j
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_8FED
		cmp	ax, ds:0AA70h
		jg	loc_0_8FED
		push	ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		pop	ax
		dec	ax

loc_0_901B:				; CODE XREF: SHOP+590j
		shl	ax, 1
		mov	si, 0AA72h
		add	si, ax
		mov	si, [si]
		mov	ds:0AA6Ah, si
		mov	si, [si]
		mov	al, [si+0Bh]
		push	es
		mov	cx, ds:0D716h
		mov	es, cx
		mov	es:4567h, al
		pop	es
		mov	ax, [si+1Bh]
		mov	ds:0AA6Eh, ax
		call	HEXTOBCD2
		mov	ds:0AA6Ch, ax
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		mov	cs:PAGECOLOUR, 18h
		mov	si, 454Ch
		call	SSTOVIDTEXT
		mov	bx, ds:0AA6Ah
		mov	bx, [bx]
		mov	di, 0F84h
		mov	ax, 1Ah
		call	BLITPUBORD
		call	WAITMRELEASE
		mov	bx, 0E8h ; '�'
		mov	ax, 6Ch	; 'l'
		call	YNPAD
		cmp	ax, 0
		jnz	loc_0_907A
		jmp	loc_0_8F4B
;����������������������������������������������������������������������������

loc_0_907A:				; CODE XREF: SHOP+539j
		mov	ax, ds:0AA6Eh
		add	ds:0B1Fh, ax
		mov	di, ds:0AA6Ah
		mov	ax, [di]
		mov	bp, ax
		mov	word ptr [di], 0
		mov	si, ds:0AA68h
		mov	[si], ax
		mov	ax, ds:0AA6Ch
		mov	[si+2],	ax
		push	bp
		mov	byte ptr ds:13Dh, 1
		call	INVENTORY
		pop	bp
		mov	bx, bp
		cmp	byte ptr [bx+0Bh], 11h
		jl	loc_0_90BD
		nop
		nop
		nop
		cmp	byte ptr [bx+0Bh], 18h
		jg	loc_0_90BD
		nop
		nop
		nop
		mov	bp, 8
		call	MAKE_ARRESTER

loc_0_90BD:				; CODE XREF: SHOP+56Dj	SHOP+576j
		jmp	loc_0_8C39
;����������������������������������������������������������������������������

loc_0_90C0:				; CODE XREF: SHOP+46Fj
		mov	si, 4528h
		call	PRINTANDOK
		jmp	loc_0_8C39
;����������������������������������������������������������������������������

loc_0_90C9:				; CODE XREF: SHOP+477j
		mov	ax, 0
		jmp	loc_0_901B
;����������������������������������������������������������������������������

loc_0_90CF:				; CODE XREF: SHOP+CDj SHOP+140j
					; ...
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	sub_0_A016
		mov	ax, 18h
		call	CLEARTWIN
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_90E2:				; CODE XREF: SHOP+5B0j	SHOP+5BBj
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_90E2
		mov	si, 0A363h
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_90E2
		jmp	loc_0_8C29
;����������������������������������������������������������������������������

loc_0_90FC:				; CODE XREF: SHOP+FAj
		call	NOTICEBOARD
		jmp	short loc_0_90CF
SHOP		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_9101	proc near		; CODE XREF: SHOP+217p	SHOP+2F7p
					; ...
		mov	ax, ds:9C44h
		call	HEXTOBCD2
		mov	dx, 0C11h
		call	FASTHEX
		mov	ax, ds:9C46h
		call	HEXTOBCD2
		mov	dx, 0C17h
		call	FASTHEX
		retn
sub_0_9101	endp

;����������������������������������������������������������������������������

loc_0_911A:				; CODE XREF: SHOP+5Bj
		mov	byte ptr ds:218Fh, 1
		mov	ds:0A2F9h, ax
		mov	ax, 10h
		sar	ax, 1
		cmp	ax, ds:0AF0h
		jle	loc_0_9130
		jmp	loc_0_8BDE
;����������������������������������������������������������������������������

loc_0_9130:				; CODE XREF: seg000:912Bj
		mov	ax, ds:0A2F9h
		sub	ax, 9
		shl	ax, 1
		shl	ax, 1
		add	ax, 0A6F3h
		add	ax, 3
		mov	bx, ax
		mov	byte ptr [bx], 2
		mov	bx, 9EB0h
		mov	ax, ds:0A2F9h
		sub	ax, 9
		mov	dx, 14h
		mul	dx
		add	bx, ax
		mov	ds:0A2FBh, bx
		mov	dx, 4ACh
		call	sub_0_AD2E
		call	JOBDONECHECK
		cmp	ax, 0
		jz	loc_0_916D
		nop
		nop
		nop
		jmp	short loc_0_91D9
;����������������������������������������������������������������������������
		nop

loc_0_916D:				; CODE XREF: seg000:9165j
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	cx, ds:0A2F9h
		sub	cx, 9
		mov	bx, 2136h
		call	sub_0_A12F
		cmp	word ptr ds:0A2F9h, 10h
		jnz	loc_0_91A7
		nop
		nop
		nop
		cmp	byte ptr ds:0BBCh, 0
		jz	loc_0_91A7
		nop
		nop
		nop
		mov	al, ds:0BBCh
		dec	al
		push	es
		mov	dx, ds:0D716h
		mov	es, dx
		mov	es:2607h, al
		pop	es
		mov	bx, 25FAh

loc_0_91A7:				; CODE XREF: seg000:9184j seg000:918Ej
		mov	si, bx
		mov	ax, 0A383h
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT

loc_0_91B2:				; CODE XREF: seg000:9201j
		cmp	ax, 4
		jnz	loc_0_91BA
		jmp	loc_0_9596
;����������������������������������������������������������������������������

loc_0_91BA:				; CODE XREF: seg000:91B5j
		cmp	ax, 3
		jz	loc_0_91D0
		nop
		nop
		nop
		cmp	ax, 2
		jz	loc_0_91D6
		nop
		nop
		nop
		call	GAMES
		jmp	short loc_0_91D9
;����������������������������������������������������������������������������
		nop

loc_0_91D0:				; CODE XREF: seg000:91BDj
		call	NOTICEBOARD
		jmp	short loc_0_91D9
;����������������������������������������������������������������������������
		nop

loc_0_91D6:				; CODE XREF: seg000:91C5j
		call	DINE

loc_0_91D9:				; CODE XREF: seg000:916Aj seg000:91CDj
					; ...
		call	CLEARBORDER
		call	sub_0_A016
		mov	ax, 18h
		call	CLEARTWIN
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_91EA:				; CODE XREF: seg000:91F4j seg000:91FFj
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_91EA
		mov	si, 0A383h
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_91EA
		jmp	short loc_0_91B2
;����������������������������������������������������������������������������

loc_0_9203:				; CODE XREF: SHOP+63j
		mov	byte ptr ds:218Fh, 1
		mov	ds:0A2F9h, ax
		sub	ax, 11h
		shl	ax, 1
		shl	ax, 1
		add	ax, 0A713h
		add	ax, 3
		mov	bx, ax
		mov	byte ptr [bx], 2
		mov	bx, 9F51h
		mov	ax, ds:0A2F9h
		sub	ax, 11h
		mov	dx, 38h	; '8'
		mul	dx
		add	bx, ax
		mov	ds:0A2FBh, bx
		mov	dx, 4B4h
		call	sub_0_AD2E
		call	JOBDONECHECK
		cmp	ax, 0
		jz	loc_0_9245
		nop
		nop
		nop
		jmp	loc_0_94E7
;����������������������������������������������������������������������������

loc_0_9245:				; CODE XREF: seg000:923Dj
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	cx, ds:0A2F9h
		sub	cx, 11h
		mov	bx, 2675h
		call	sub_0_A12F
		mov	si, bx
		mov	ax, 0A363h
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT

loc_0_9262:				; CODE XREF: seg000:9514j
		cmp	ax, 3
		jnz	loc_0_926A
		jmp	loc_0_9596
;����������������������������������������������������������������������������

loc_0_926A:				; CODE XREF: seg000:9265j
		cmp	ax, 2
		jz	loc_0_9278
		nop
		nop
		nop
		call	DINE
		jmp	loc_0_94E7
;����������������������������������������������������������������������������

loc_0_9278:				; CODE XREF: seg000:926Dj
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		call	sub_0_A114
		mov	bx, 0E8h ; '�'
		mov	ax, 6Ch	; 'l'
		call	sub_0_ABA6
		mov	word ptr ds:0A112h, 0FFFFh
		mov	ax, 7
		mov	cx, 0F0h ; '�'
		mov	dx, 218h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 4
		mov	dx, 80h	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 50h	; 'P'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_92B5:				; CODE XREF: seg000:92E7j seg000:9304j
					; ...
		mov	si, ds:0A2FBh
		add	si, 14h
		mov	si, [si]

loc_0_92BE:				; CODE XREF: seg000:92C8j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_92BE
		test	bx, 2
		jz	loc_0_92D3
		jmp	loc_0_94E7
;����������������������������������������������������������������������������

loc_0_92D3:				; CODE XREF: seg000:92CEj
		call	CHECKBOXES
		cmp	ax, 0
		jnz	loc_0_9306
		nop
		nop
		nop
		mov	si, 0A5E9h
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_92B5
		cmp	ax, 2
		jz	loc_0_92F1
		jmp	loc_0_94E7
;����������������������������������������������������������������������������

loc_0_92F1:				; CODE XREF: seg000:92ECj
		cmp	word ptr ds:0A112h, 0FFFFh
		jnz	loc_0_9362
		nop
		nop
		nop
		mov	di, 877Ch
		mov	si, 2D95h
		call	TPPANDP
		jmp	short loc_0_92B5
;����������������������������������������������������������������������������

loc_0_9306:				; CODE XREF: seg000:92D9j
		dec	ax
		mov	ds:0A112h, ax
		call	WAITMRELEASE
		cmp	byte ptr ds:0BB5h, 4
		jnz	loc_0_9317
		jmp	loc_0_94DB
;����������������������������������������������������������������������������

loc_0_9317:				; CODE XREF: seg000:9312j
		mov	si, ds:0A2FBh
		add	si, 1Fh
		add	si, ds:0A112h
		mov	al, [si]
		cmp	al, 0
		jz	loc_0_932B
		jmp	loc_0_9407
;����������������������������������������������������������������������������

loc_0_932B:				; CODE XREF: seg000:9326j
		call	CLEARUNDERMAP
		mov	bx, ds:0A2FBh
		add	bx, 16h
		add	bx, ds:0A112h
		mov	al, [bx]
		mov	ds:0A114h, al
		call	HEXTOBCD
		mov	di, 877Ch
		push	es
		mov	bx, 0A000h
		mov	es, bx
		assume es:nothing
		call	PRINTBCDWORD
		mov	si, 2DC8h
		mov	cx, ds:0D716h
		mov	ds:217Ah, cx
		mov	cx, 0FFFFh
		call	PRINTSTRING
		pop	es
		assume es:nothing
		jmp	loc_0_92B5
;����������������������������������������������������������������������������

loc_0_9362:				; CODE XREF: seg000:92F6j
		mov	al, ds:0A114h
		mov	ah, 0
		cmp	ax, ds:0B1Fh
		jle	loc_0_9376
		nop
		nop
		nop
		mov	si, 2DD2h
		jmp	loc_0_94DE
;����������������������������������������������������������������������������

loc_0_9376:				; CODE XREF: seg000:936Bj
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, 18h
		call	CLEARUNDERMAP
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	al, ds:0A114h
		mov	ah, 0
		sub	ds:0B1Fh, ax
		call	PRINTCASH
		mov	di, 0B17h
		mov	cx, 4

loc_0_9398:				; CODE XREF: seg000:93A3j
		cmp	word ptr [di], 0
		jz	loc_0_93A8
		nop
		nop
		nop
		add	di, 2
		loop	loc_0_9398
		sub	di, 8

loc_0_93A8:				; CODE XREF: seg000:939Bj
		mov	si, ds:0A2FBh
		add	si, 27h	; '''
		add	si, ds:0A112h
		add	si, ds:0A112h
		mov	ax, [si]
		mov	[di], ax
		inc	byte ptr ds:0BB5h
		mov	si, ds:0A2FBh
		add	si, 37h	; '7'
		mov	al, [si]
		mov	cx, ds:0A112h
		shr	al, cl
		and	al, 1
		mov	ah, 0
		mov	[di-0Ah], ax
		mov	si, ds:0A2FBh
		add	si, 1Fh
		add	si, ds:0A112h
		mov	byte ptr [si], 9
		mov	al, 7
		call	HEXTOBCD
		mov	ds:0F64h, ax
		mov	si, 2E2Ch
		jmp	loc_0_94DE
;����������������������������������������������������������������������������
		db 0E8h	; �
		db  88h	; �
		db  74h	; t
		db 0B8h	; �
		db    2	;
		db    0	;
		db 0CDh	; �
		db  33h	; 3
		db 0B8h	; �
		db  18h	;
		db    0	;
		db 0E8h	; �
		db 0C4h	; �
		db  84h	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db 0CDh	; �
		db  33h	; 3
		db 0E9h	; �
		db 0A9h	; �
		db 0FEh	; �
;����������������������������������������������������������������������������

loc_0_9407:				; CODE XREF: seg000:9328j
		mov	bx, ds:0A2FBh
		add	bx, 16h
		add	bx, ds:0A112h
		mov	al, [bx]
		mov	ds:0A114h, al
		call	HEXTOBCD
		mov	ds:0A115h, ax
		mov	si, ds:0A2FBh
		add	si, 1Fh
		add	si, ds:0A112h
		mov	al, [si]
		sub	al, 2
		cmp	al, 0
		jl	loc_0_9444
		nop
		nop
		nop
		jz	loc_0_9452
		nop
		nop
		nop
		call	HEXTOBCD
		mov	ds:0F64h, ax
		mov	si, 2E49h
		jmp	short loc_0_945B
;����������������������������������������������������������������������������
		nop

loc_0_9444:				; CODE XREF: seg000:942Ej
		neg	al
		call	HEXTOBCD
		mov	ds:0F64h, ax
		mov	si, 2E8Ch
		jmp	short loc_0_945B
;����������������������������������������������������������������������������
		nop

loc_0_9452:				; CODE XREF: seg000:9433j
		call	HEXTOBCD
		mov	ds:0F64h, ax
		mov	si, 2ED5h

loc_0_945B:				; CODE XREF: seg000:9441j seg000:944Fj
		push	si
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, 18h
		call	CLEARSHOPBOX
		pop	si
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	bx, 0B4h ; '�'
		mov	ax, 64h	; 'd'
		call	YNPAD
		cmp	ax, 0
		jz	loc_0_94E7
		nop
		nop
		nop
		mov	al, ds:0A114h
		mov	ah, 0
		cmp	ax, ds:0B1Fh
		jle	loc_0_949B
		nop
		nop
		nop
		mov	si, 2DD2h
		jmp	short loc_0_94DE
;����������������������������������������������������������������������������
		nop

loc_0_949B:				; CODE XREF: seg000:9490j
		call	WAITMRELEASE
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, 18h
		call	CLEARSHOPBOX
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	al, ds:0A114h
		mov	ah, 0
		sub	ds:0B1Fh, ax
		call	PRINTCASH
		mov	si, ds:0A2FBh
		add	si, 1Fh
		add	si, ds:0A112h
		add	byte ptr [si], 7
		mov	al, [si]
		sub	al, 2
		call	HEXTOBCD
		mov	ds:0F64h, ax
		mov	si, 2E2Ch
		jmp	short loc_0_94DE
;����������������������������������������������������������������������������
		nop
		jmp	loc_0_9596
;����������������������������������������������������������������������������

loc_0_94DB:				; CODE XREF: seg000:9314j
		mov	si, 2DA3h

loc_0_94DE:				; CODE XREF: seg000:9373j seg000:93EEj
					; ...
		call	PRINTANDOK
		call	WAITMRELEASE
		jmp	short loc_0_94E7
;����������������������������������������������������������������������������
		nop

loc_0_94E7:				; CODE XREF: seg000:9242j seg000:9275j
					; ...
		call	CLEARBORDER
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	sub_0_A016
		mov	ax, 18h
		call	CLEARTWIN
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_94FD:				; CODE XREF: seg000:9507j seg000:9512j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_94FD
		mov	si, 0A363h
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_94FD
		jmp	loc_0_9262
;����������������������������������������������������������������������������

loc_0_9517:				; CODE XREF: SHOP+53j
		mov	byte ptr ds:218Fh, 1
		mov	ds:0A2F9h, ax
		mov	bx, 0A117h
		mov	ax, ds:0A2F9h
		mov	dx, 35h	; '5'
		mul	dx
		add	bx, ax
		mov	ds:0A2FBh, bx
		mov	dx, 4BCh
		call	sub_0_AD2E
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	cx, ds:0A2F9h
		mov	bx, 2976h
		call	sub_0_A12F
		mov	si, bx
		mov	ax, 0A363h
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT

loc_0_9550:				; CODE XREF: seg000:9594j
		cmp	ax, 3
		jz	loc_0_9596
		nop
		nop
		nop
		cmp	ax, 1
		jz	loc_0_9566
		nop
		nop
		nop
		call	GUILDSERVICE
		jmp	short loc_0_956C
;����������������������������������������������������������������������������
		nop

loc_0_9566:				; CODE XREF: seg000:955Bj
		call	GUILDBUSINESS
		jmp	short loc_0_956C
;����������������������������������������������������������������������������
		nop

loc_0_956C:				; CODE XREF: seg000:9563j seg000:9569j
		call	CLEARBORDER
		call	sub_0_A016
		mov	ax, 18h
		call	CLEARTWIN
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_957D:				; CODE XREF: seg000:9587j seg000:9592j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_957D
		mov	si, 0A363h
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_957D
		jmp	short loc_0_9550
;����������������������������������������������������������������������������

loc_0_9596:				; CODE XREF: SHOP+43j SHOP+F2j
					; ...
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		call	GETBORDER
		call	MOUSEFORGAME
		mov	byte ptr ds:0AECh, 1
		mov	byte ptr ds:218Fh, 0
		retn

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MOUSEFORGAME	proc near		; CODE XREF: PRINTMAP+14Fp
					; CONTROLLER+354p ...
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		cmp	word ptr ds:68A2h, 1
		jz	loc_0_95FD
		nop
		nop
		nop
		cmp	word ptr ds:68A2h, 0FFFFh
		jz	loc_0_95D9
		nop
		nop
		nop
		cmp	word ptr ds:68A4h, 1
		jz	loc_0_95FD
		nop
		nop
		nop
		cmp	word ptr ds:68A4h, 0FFFFh
		jz	loc_0_95D9
		nop
		nop
		nop

loc_0_95D9:				; CODE XREF: MOUSEFORGAME+14j
					; MOUSEFORGAME+28j
		mov	ax, 7
		mov	cx, 220h
		mov	dx, 270h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 10h
		mov	dx, 8Ah	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 12Ch
		mov	dx, 64h	; 'd'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		jmp	short loc_0_961E
;����������������������������������������������������������������������������
		nop

loc_0_95FD:				; CODE XREF: MOUSEFORGAME+Aj
					; MOUSEFORGAME+1Ej
		mov	ax, 7
		mov	cx, 0
		mov	dx, 270h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 88h	; '�'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 96h	; '�'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row

loc_0_961E:				; CODE XREF: MOUSEFORGAME+4Ej
		cmp	word ptr ds:68A2h, 0
		jz	locret_0_962D
		nop
		nop
		nop
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

locret_0_962D:				; CODE XREF: SHOP+A5j MOUSEFORGAME+77j
		retn
MOUSEFORGAME	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTOI		proc near		; CODE XREF: sub_0_681D+E6p
					; sub_0_681D+118p ...
		call	RAND
		mov	ah, 54h	; 'T'
		call	RAND_RANGE
		cmp	al, 22h	; '"'
		jb	PRINTOI
		mov	ah, 0
		mov	di, 140h
		mul	di
		mov	di, ax

loc_0_9643:				; CODE XREF: PRINTOI+1Fj
		call	RAND
		mov	ah, 0C9h ; '�'
		call	RAND_RANGE
		cmp	al, 62h	; 'b'
		jb	loc_0_9643
		mov	ah, 0
		add	di, ax
		mov	bp, 16h
		mov	dx, 0Eh
		push	es
		push	ds
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, ds:0D708h
		mov	ds, ax
		mov	al, 0
		call	COPY_BLOCK_LONIBM
		pop	ds
		pop	es
		assume es:nothing
		retn
PRINTOI		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

HAILCHAR	proc near		; CODE XREF: sub_0_7A19p
		mov	si, 0AA00h
		call	PRINTOI
		mov	cx, 32h	; '2'
		call	PAUSE
		mov	di, 6DCEh
		mov	cx, 38h	; '8'
		mov	bp, 7FFFh
		mov	si, 0
		mov	dx, 0

loc_0_9688:				; CODE XREF: HAILCHAR+4Cj
		push	cx
		mov	ax, [di+8]
		cmp	ax, 3
		jg	loc_0_96B5
		nop
		nop
		nop
		test	word ptr [di], 8
		jz	loc_0_96B5
		nop
		nop
		nop
		test	word ptr [di], 800h
		jz	loc_0_96B5
		nop
		nop
		nop
		inc	dx
		call	FINDEVIATION
		cmp	bp, cx
		jl	loc_0_96B5
		nop
		nop
		nop
		mov	si, di
		mov	bp, cx

loc_0_96B5:				; CODE XREF: HAILCHAR+22j HAILCHAR+2Bj
					; ...
		add	di, 7Bh	; '{'
		pop	cx
		loop	loc_0_9688
		mov	ds:0A301h, dx
		cmp	si, 0
		jnz	loc_0_96C7
		jmp	loc_0_9F67
;����������������������������������������������������������������������������

loc_0_96C7:				; CODE XREF: HAILCHAR+55j
		mov	di, 6DCEh
		mov	cx, 38h	; '8'

loc_0_96CD:				; CODE XREF: HAILCHAR+66j
		and	word ptr [di], 0FFFDh
		add	di, 7Bh	; '{'
		loop	loc_0_96CD
		or	word ptr [si], 2
		mov	ds:0A2FDh, si
		mov	di, 98FCh
		mov	al, [si+0Bh]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		add	di, ax
		mov	ax, [di]
		mov	bx, [di+2]
		mov	[si+15h], ax
		and	word ptr [si+19h], 0FF3Fh
		or	[si+19h], bx
		call	DRAWVIEW
		cmp	word ptr ds:0A301h, 1
		jz	loc_0_9781
		nop
		nop
		nop
		call	sub_0_A1A9
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 190h
		mov	dx, 1D0h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 64h	; 'd'
		mov	dx, 74h	; 't'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0D8h ; '�'
		mov	dx, 6Ch	; 'l'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	bx, 0C8h ; '�'
		mov	ax, 64h	; 'd'
		call	YNPAD
		push	ax
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0
		mov	dx, 270h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 88h	; '�'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 96h	; '�'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		pop	ax
		cmp	ax, 1
		jz	loc_0_9781
		nop
		nop
		nop
		cmp	word ptr ds:68A2h, 0
		jnz	loc_0_9773
		jmp	loc_0_9F67
;����������������������������������������������������������������������������

loc_0_9773:				; CODE XREF: HAILCHAR+101j
		mov	word ptr ds:68A2h, 1
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jmp	loc_0_9F67
;����������������������������������������������������������������������������

loc_0_9781:				; CODE XREF: HAILCHAR+95j HAILCHAR+F7j
		mov	cx, 4Bh	; 'K'
		call	PAUSE
		cmp	word ptr ds:2650h, 0
		jz	loc_0_9794
		nop
		nop
		nop
		call	GETBORDER

loc_0_9794:				; CODE XREF: HAILCHAR+11Fj
		call	CLEARLOCWIN
		call	WAITRELEASE
HAILCHAR	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DIALOG		proc near		; CODE XREF: sub_0_8027+16Dp
		mov	word ptr ds:0A303h, 0
		mov	di, ds:0A2FDh
		cmp	byte ptr [di+0Bh], 9
		jnz	loc_0_97BB
		nop
		nop
		nop
		add	word ptr ds:0CAF4h, 20h	; ' '
		mov	word ptr ds:0A303h, 1
		jmp	short loc_0_97D2
;����������������������������������������������������������������������������
		nop

loc_0_97BB:				; CODE XREF: DIALOG+Ej
		cmp	byte ptr [di+0Bh], 8
		jnz	loc_0_97D2
		nop
		nop
		nop
		add	word ptr ds:0CAE4h, 20h	; ' '
		mov	word ptr ds:0A303h, 0FFFFh
		jmp	short loc_0_97D2
;����������������������������������������������������������������������������
		nop

loc_0_97D2:				; CODE XREF: DIALOG+1Ej DIALOG+25j
					; ...
		mov	byte ptr ds:0AECh, 0
		mov	di, ds:0A2FDh
		and	word ptr [di], 0FFFDh
		call	MAKEVIEW
		mov	bx, 996Ch
		call	PLOTCLOSEUP

loc_0_97E7:				; CODE XREF: DIALOG+710j
		mov	di, ds:0A2FDh
		mov	ax, [di+67h]
		cmp	ax, 0
		jnz	loc_0_97F6
		jmp	loc_0_987A
;����������������������������������������������������������������������������

loc_0_97F6:				; CODE XREF: DIALOG+57j
		cmp	word ptr ds:5ABDh, 1
		jnz	loc_0_9800
		jmp	loc_0_9EE0
;����������������������������������������������������������������������������

loc_0_9800:				; CODE XREF: DIALOG+61j
		cmp	word ptr ds:0D442h, 12h
		jnz	loc_0_9827
		nop
		nop
		nop
		cmp	word ptr ds:0D479h, 1
		jnz	loc_0_9827
		nop
		nop
		nop
		mov	byte ptr ds:6AB0h, 2
		mov	byte ptr ds:0F58h, 6
		mov	ax, ds:0A2FDh
		mov	ds:0A2FFh, ax
		jmp	loc_0_9C55
;����������������������������������������������������������������������������

loc_0_9827:				; CODE XREF: DIALOG+6Bj DIALOG+75j
		cmp	ax, 9
		jnz	loc_0_985B
		nop
		nop
		nop
		mov	si, 6DCEh
		mov	cx, 2Bh	; '+'

loc_0_9835:				; CODE XREF: DIALOG+BFj
		cmp	byte ptr [si+0Bh], 2
		jnz	loc_0_9856
		nop
		nop
		nop
		cmp	word ptr [si+67h], 0
		jz	loc_0_9856
		nop
		nop
		nop
		cmp	word ptr [si+67h], 9
		jz	loc_0_9856
		nop
		nop
		nop
		mov	ax, [si+67h]
		jmp	short loc_0_985B
;����������������������������������������������������������������������������
		nop

loc_0_9856:				; CODE XREF: DIALOG+9Fj DIALOG+A8j
					; ...
		add	si, 7Bh	; '{'
		loop	loc_0_9835

loc_0_985B:				; CODE XREF: DIALOG+90j DIALOG+B9j
		mov	ds:0F66h, ax
		push	es
		mov	dx, ds:0D716h
		mov	es, dx
		dec	al
		mov	es:39ACh, al
		pop	es
		mov	word ptr [di+67h], 0
		mov	si, [di+65h]
		call	SCROLLTEXT
		jmp	loc_0_9F67
;����������������������������������������������������������������������������

loc_0_987A:				; CODE XREF: DIALOG+59j
		mov	di, ds:0A2FDh
		test	word ptr [di], 10h
		jnz	loc_0_9887
		jmp	loc_0_9C48
;����������������������������������������������������������������������������

loc_0_9887:				; CODE XREF: DIALOG+E8j
		mov	si, [di+65h]
		cmp	si, 0FFFFh
		jnz	loc_0_98E1
		nop
		nop
		nop
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_98AB
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 0Ch
		jz	loc_0_98AB
		nop
		nop
		nop
		mov	si, 5CCEh
		jmp	short loc_0_98CE
;����������������������������������������������������������������������������
		nop

loc_0_98AB:				; CODE XREF: DIALOG+FDj DIALOG+106j
		call	sub_0_AC24
		mov	si, 6286h
		cmp	word ptr ds:0A303h, 1
		jnz	loc_0_98CE
		nop
		nop
		nop
		push	es
		mov	ax, 19h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	si, 5CCEh

loc_0_98CE:				; CODE XREF: DIALOG+10Ej DIALOG+11Cj
		mov	byte ptr ds:6AB0h, 2
		mov	byte ptr ds:0F58h, 6
		mov	ax, ds:0A2FDh
		mov	ds:0A2FFh, ax
		jmp	loc_0_9C42
;����������������������������������������������������������������������������

loc_0_98E1:				; CODE XREF: DIALOG+F3j
		cmp	si, 611Ah
		jz	loc_0_98EA
		jmp	loc_0_9996
;����������������������������������������������������������������������������

loc_0_98EA:				; CODE XREF: DIALOG+14Bj
		call	SCROLLTEXT
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 190h
		mov	dx, 1D0h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 64h	; 'd'
		mov	dx, 74h	; 't'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0D8h ; '�'
		mov	dx, 6Ch	; 'l'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	bx, 0C8h ; '�'
		mov	ax, 64h	; 'd'
		call	YNPAD
		push	ax
		cmp	word ptr ds:2650h, 0
		jz	loc_0_9933
		nop
		nop
		nop
		call	GETBORDER
		call	MAKEVIEW
		mov	bx, 996Ch
		call	PLOTCLOSEUP

loc_0_9933:				; CODE XREF: DIALOG+188j
		call	COPYVIEW
		pop	ax
		cmp	ax, 1
		jz	loc_0_993F
		jmp	loc_0_9C48
;����������������������������������������������������������������������������

loc_0_993F:				; CODE XREF: DIALOG+1A0j
		call	RAND
		and	ah, 3
		push	es
		mov	dx, ds:0D716h
		mov	es, dx
		mov	es:615Ah, ah
		pop	es
		mov	al, ah
		mov	ah, 0
		mov	bx, 9B36h
		xlat
		mov	ah, 0
		mov	ds:9B3Ah, ax
		mov	si, 613Ah
		call	sub_0_AC3D
		cmp	ax, 1
		jz	loc_0_996D
		jmp	loc_0_9C48
;����������������������������������������������������������������������������

loc_0_996D:				; CODE XREF: DIALOG+1CEj
		mov	ax, ds:9B3Ah
		cmp	ds:0B1Fh, ax
		jl	loc_0_9987
		nop
		nop
		nop
		sub	ds:0B1Fh, ax
		call	PRINTCASH
		inc	word ptr ds:9B34h
		jmp	loc_0_9C48
;����������������������������������������������������������������������������

loc_0_9987:				; CODE XREF: DIALOG+1DAj DIALOG+438j
		mov	si, 2DD2h
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		call	SCROLLRESPONSE
		jmp	loc_0_9C48
;����������������������������������������������������������������������������

loc_0_9996:				; CODE XREF: DIALOG+14Dj
		cmp	si, 9D17h
		jz	loc_0_999F
		jmp	loc_0_9A22
;����������������������������������������������������������������������������

loc_0_999F:				; CODE XREF: DIALOG+200j
		cmp	word ptr ds:0D442h, 25h	; '%'
		jnz	loc_0_9A1F
		nop
		nop
		nop
		cmp	word ptr ds:0D49Bh, 0
		jnz	loc_0_9A1F
		nop
		nop
		nop
		mov	ax, 0
		mov	bx, 9B40h
		mov	si, 0BB6h
		call	sub_0_AC74
		mov	si, 0B65h
		call	sub_0_AC74
		mov	si, 0B6Fh
		call	sub_0_AC74
		mov	si, 0B79h
		call	sub_0_AC74
		mov	si, 0B83h
		call	sub_0_AC74
		mov	si, 0B8Dh
		call	sub_0_AC74
		mov	si, 0B97h
		call	sub_0_AC74
		cmp	ax, 4
		jnz	loc_0_9A19
		nop
		nop
		nop
		mov	cx, 4
		mov	bx, 9B40h

loc_0_99F1:				; CODE XREF: DIALOG+268j
		mov	si, [bx]
		mov	si, [si]
		mov	word ptr [si], 1
		mov	si, [bx]
		mov	word ptr [si], 0
		add	bx, 2
		loop	loc_0_99F1
		mov	byte ptr ds:13Dh, 1
		call	INVENTORY
		mov	di, ds:0D44Bh
		and	word ptr [di], 0FFFBh
		mov	si, 9D17h
		jmp	short loc_0_9A22
;����������������������������������������������������������������������������
		nop

loc_0_9A19:				; CODE XREF: DIALOG+24Cj
		mov	si, 9D89h
		jmp	short loc_0_9A22
;����������������������������������������������������������������������������
		nop

loc_0_9A1F:				; CODE XREF: DIALOG+20Aj DIALOG+214j
		mov	si, 9D71h

loc_0_9A22:				; CODE XREF: DIALOG+202j DIALOG+27Cj
					; ...
		cmp	si, 9C7Ah
		jnz	loc_0_9A30
		nop
		nop
		nop
		mov	byte ptr ds:0A7A6h, 1

loc_0_9A30:				; CODE XREF: DIALOG+28Cj
		cmp	si, 0A3AEh
		jnz	loc_0_9A7F
		nop
		nop
		nop
		cmp	word ptr ds:0D483h, 0
		jz	loc_0_9A79
		nop
		nop
		nop
		cmp	word ptr ds:0D483h, 1
		jz	loc_0_9AA6
		nop
		nop
		nop
		cmp	word ptr ds:0CB04h, 0
		jz	loc_0_9AA6
		nop
		nop
		nop
		mov	word ptr ds:0CB04h, 0
		mov	bx, 10h
		mov	ax, 4F80h
		mov	dx, 4C80h
		mov	cx, 0
		mov	bp, 10h
		call	SETUPPICKUP
		mov	byte ptr [si+21h], 0Ch
		mov	si, 0A4C9h
		jmp	short loc_0_9AA9
;����������������������������������������������������������������������������
		nop

loc_0_9A79:				; CODE XREF: DIALOG+2A4j
		mov	ax, 54h	; 'T'
		jmp	short loc_0_9A8B
;����������������������������������������������������������������������������
		nop

loc_0_9A7F:				; CODE XREF: DIALOG+29Aj
		cmp	si, 9F14h
		jnz	loc_0_9AA9
		nop
		nop
		nop
		mov	ax, 36h	; '6'

loc_0_9A8B:				; CODE XREF: DIALOG+2E2j
		call	GOTAX
		cmp	ax, 1
		jnz	loc_0_9AA6
		nop
		nop
		nop
		mov	word ptr ds:0D483h, 1
		mov	di, ds:0D44Bh
		and	word ptr [di], 0FFFBh
		jmp	short loc_0_9AA9
;����������������������������������������������������������������������������
		nop

loc_0_9AA6:				; CODE XREF: DIALOG+2AEj DIALOG+2B8j
					; ...
		mov	si, 41E4h

loc_0_9AA9:				; CODE XREF: DIALOG+2DCj DIALOG+2E9j
					; ...
		cmp	si, 9FEFh
		jnz	loc_0_9AB7
		nop
		nop
		nop
		mov	byte ptr ds:0A7CEh, 1

loc_0_9AB7:				; CODE XREF: DIALOG+313j
		cmp	si, 9E32h
		jnz	loc_0_9ACD
		nop
		nop
		nop
		call	TFP
		cmp	al, 0
		jz	loc_0_9ACD
		nop
		nop
		nop
		mov	si, 41E4h

loc_0_9ACD:				; CODE XREF: DIALOG+321j DIALOG+32Bj
		cmp	si, 0A149h
		jnz	loc_0_9AFB
		nop
		nop
		nop
		mov	word ptr ds:0D477h, 1
		mov	bx, 0Fh
		mov	ax, 980h
		mov	dx, 1280h
		mov	cx, 0
		mov	bp, 10h
		call	SETUPPICKUP
		mov	word ptr [si+1Dh], 16h
		mov	si, 0A149h
		mov	byte ptr ds:0A6FAh, 1

loc_0_9AFB:				; CODE XREF: DIALOG+337j
		cmp	si, 0A24Ch
		jnz	loc_0_9B2E
		nop
		nop
		nop
		cmp	word ptr ds:0D47Fh, 0
		jnz	loc_0_9B2E
		nop
		nop
		nop
		mov	word ptr ds:0D47Fh, 1
		mov	bx, 52h	; 'R'
		mov	ax, 4780h
		mov	dx, 7980h
		mov	cx, 0
		mov	bp, 40h	; '@'
		call	SETUPPICKUP
		mov	si, 0A24Ch
		mov	byte ptr ds:0A70Eh, 1

loc_0_9B2E:				; CODE XREF: DIALOG+365j DIALOG+36Fj
		cmp	si, 0A90Bh
		jnz	loc_0_9B41
		nop
		nop
		nop
		mov	byte ptr ds:0A816h, 1
		mov	byte ptr ds:0A882h, 1

loc_0_9B41:				; CODE XREF: DIALOG+398j
		cmp	si, 9F7Ah
		jnz	loc_0_9B54
		nop
		nop
		nop
		cmp	word ptr ds:0D49Bh, 1
		jz	loc_0_9B6B
		nop
		nop
		nop

loc_0_9B54:				; CODE XREF: DIALOG+3ABj
		cmp	si, 9D17h
		jnz	loc_0_9B76
		nop
		nop
		nop
		inc	word ptr ds:0D49Bh
		cmp	word ptr ds:0D49Bh, 1
		jz	loc_0_9B76
		nop
		nop
		nop

loc_0_9B6B:				; CODE XREF: DIALOG+3B5j
		mov	si, 41E4h
		mov	di, ds:0A2FDh
		and	word ptr [di], 0DFFFh

loc_0_9B76:				; CODE XREF: DIALOG+3BEj DIALOG+3CCj
		call	SCROLLTEXT
		mov	di, ds:0A2FDh
		test	word ptr [di], 2000h
		jnz	loc_0_9B86
		jmp	loc_0_9C29
;����������������������������������������������������������������������������

loc_0_9B86:				; CODE XREF: DIALOG+3E7j
		mov	al, [di+50h]
		mov	ah, [di+51h]
		mov	ds:0AA87h, ah
		mov	ds:0AA86h, al
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 190h
		mov	dx, 1D0h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 64h	; 'd'
		mov	dx, 74h	; 't'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0D8h ; '�'
		mov	dx, 6Ch	; 'l'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	si, 6263h
		call	sub_0_AC3D
		cmp	ax, 1
		jz	loc_0_9BC7
		jmp	loc_0_9C48
;����������������������������������������������������������������������������

loc_0_9BC7:				; CODE XREF: DIALOG+428j
		mov	ah, 0
		mov	al, ds:0AA86h
		cmp	ds:0B1Fh, ax
		jge	loc_0_9BD5
		jmp	loc_0_9987
;����������������������������������������������������������������������������

loc_0_9BD5:				; CODE XREF: DIALOG+436j
		sub	ds:0B1Fh, ax
		call	PRINTCASH
		mov	di, ds:0A2FDh
		mov	si, [di+70h]
		cmp	si, 9FAEh
		jnz	loc_0_9BF2
		nop
		nop
		nop
		mov	word ptr ds:0D49Bh, 1

loc_0_9BF2:				; CODE XREF: DIALOG+44Dj
		call	SCROLLTEXT
		cmp	word ptr ds:0D442h, 10h
		jnz	loc_0_9C0B
		nop
		nop
		nop
		mov	bp, 0A6E3h
		mov	ax, 313Eh
		mov	dx, 1
		call	SETQT

loc_0_9C0B:				; CODE XREF: DIALOG+460j
		cmp	word ptr ds:0D442h, 16h
		jnz	loc_0_9C29
		nop
		nop
		nop
		mov	bx, 3Ah	; ':'
		mov	ax, ds:0ACDh
		mov	dx, ds:0ACFh
		mov	cx, ds:0ADDh
		mov	bp, 2
		call	SETUPPICKUP

loc_0_9C29:				; CODE XREF: DIALOG+3E9j DIALOG+476j
		cmp	word ptr ds:0D442h, 0Bh
		jnz	loc_0_9C3F
		nop
		nop
		nop
		mov	bp, 0A6E3h
		mov	ax, 327Bh
		mov	dx, 1
		call	SETQT

loc_0_9C3F:				; CODE XREF: DIALOG+494j
		jmp	short loc_0_9C48
;����������������������������������������������������������������������������
		nop

loc_0_9C42:				; CODE XREF: DIALOG+144j
		call	SCROLLTEXT
		jmp	short loc_0_9C55
;����������������������������������������������������������������������������
		nop

loc_0_9C48:				; CODE XREF: DIALOG+EAj DIALOG+1A2j
					; ...
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		call	sub_0_A157
		mov	byte ptr ds:0F58h, 0

loc_0_9C55:				; CODE XREF: DIALOG+8Aj DIALOG+4ABj
					; ...
		cmp	byte ptr ds:0F58h, 6
		jnz	loc_0_9C5F
		jmp	loc_0_9F32
;����������������������������������������������������������������������������

loc_0_9C5F:				; CODE XREF: DIALOG+4C0j
		mov	ax, ds:0AF6h
		add	ax, 14h
		mov	ds:0A97Bh, ax
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 40h	; '@'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 88h	; '�'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 50h	; 'P'
		mov	dx, 0A0h ; '�'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	word ptr ds:2120h, 66h ; 'f'
		mov	word ptr ds:2122h, 8Eh ; '�'
		mov	word ptr ds:2124h, 34h ; '4'
		mov	word ptr ds:2126h, 0B4h	; '�'
		mov	word ptr ds:212Ah, 0B1E6h
		mov	cs:PAGECOLOUR, 0
		mov	ax, ds
		mov	ds:217Ah, ax

loc_0_9CBC:				; CODE XREF: DIALOG+538j DIALOG+54Cj
		mov	ax, ds:0AF6h
		cmp	ax, ds:0A97Bh
		jbe	loc_0_9CC8
		jmp	loc_0_9F32
;����������������������������������������������������������������������������

loc_0_9CC8:				; CODE XREF: DIALOG+529j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_9CBC
		test	bx, 2
		jz	loc_0_9CDD
		jmp	loc_0_9F32
;����������������������������������������������������������������������������

loc_0_9CDD:				; CODE XREF: DIALOG+53Ej
		mov	si, 0A3ADh
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_9CBC
		cmp	ax, 1
		jz	loc_0_9D13
		nop
		nop
		nop
		cmp	ax, 2
		jz	loc_0_9D1C
		nop
		nop
		nop
		cmp	ax, 3
		jz	loc_0_9D25
		nop
		nop
		nop
		cmp	ax, 4
		jnz	loc_0_9D08
		jmp	loc_0_9EC1
;����������������������������������������������������������������������������

loc_0_9D08:				; CODE XREF: DIALOG+569j
		cmp	ax, 5
		jnz	loc_0_9D10
		jmp	loc_0_9EE0
;����������������������������������������������������������������������������

loc_0_9D10:				; CODE XREF: DIALOG+571j
		jmp	loc_0_9F32
;����������������������������������������������������������������������������

loc_0_9D13:				; CODE XREF: DIALOG+551j
		mov	bx, 0A6E3h
		call	sub_0_A1D5
		jmp	loc_0_9C55
;����������������������������������������������������������������������������

loc_0_9D1C:				; CODE XREF: DIALOG+559j
		mov	bx, 0A83Fh
		call	sub_0_A1D5
		jmp	loc_0_9C55
;����������������������������������������������������������������������������

loc_0_9D25:				; CODE XREF: DIALOG+561j
		mov	byte ptr ds:218Fh, 0
		mov	al, 0
		call	CLEARTWIN
		cmp	word ptr ds:0D442h, 18h
		jnz	loc_0_9D7E
		nop
		nop
		nop
		cmp	word ptr ds:0D48Dh, 1
		jz	loc_0_9D7E
		nop
		nop
		nop
		mov	word ptr ds:0D48Dh, 1
		mov	di, ds:0A2FDh
		cmp	word ptr [di+2Ch], 117h
		jnz	loc_0_9D7E
		nop
		nop
		nop
		mov	bx, 63h	; 'c'
		mov	ax, 5280h
		mov	dx, 3C80h
		mov	cx, 0
		mov	bp, 1
		call	SETUPPICKUP
		or	word ptr [si], 4
		call	DROP
		mov	ds:0BB6h, si
		mov	byte ptr ds:13Dh, 1
		mov	bp, 63h	; 'c'
		jmp	loc_0_9E14
;����������������������������������������������������������������������������

loc_0_9D7E:				; CODE XREF: DIALOG+59Aj DIALOG+5A4j
					; ...
		mov	al, ds:0BBCh
		cmp	al, 0
		jnz	loc_0_9D88
		jmp	loc_0_9E3A
;����������������������������������������������������������������������������

loc_0_9D88:				; CODE XREF: DIALOG+5E9j
		mov	ah, 32h	; '2'
		mul	ah
		mov	bx, ax
		call	RAND
		cmp	al, bl
		jbe	loc_0_9D98
		jmp	loc_0_9E3A
;����������������������������������������������������������������������������

loc_0_9D98:				; CODE XREF: DIALOG+5F9j
		mov	di, ds:0A2FDh
		mov	ax, [di+42h]
		cmp	ax, 0
		jnz	loc_0_9DCB
		nop
		nop
		nop
		mov	bx, 44h	; 'D'
		mov	cx, 1

loc_0_9DAD:				; CODE XREF: DIALOG+620j
		cmp	byte ptr [bx+di], 0
		jnz	loc_0_9DDD
		nop
		nop
		nop
		inc	bx
		inc	cx
		cmp	cx, 7
		jnz	loc_0_9DAD

loc_0_9DBC:				; CODE XREF: DIALOG+662j
		mov	si, 6524h
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT
		jmp	loc_0_9EBE
;����������������������������������������������������������������������������

loc_0_9DCB:				; CODE XREF: DIALOG+608j
		add	ds:0B1Fh, ax
		mov	word ptr [di+42h], 0
		call	PRINTCASH
		mov	bp, 1
		jmp	short loc_0_9E14
;����������������������������������������������������������������������������
		nop

loc_0_9DDD:				; CODE XREF: DIALOG+616j
		mov	al, [bx+di]
		mov	ah, 0
		mov	byte ptr [bx+di], 0
		dec	cx
		mov	bp, ax
		mov	ax, cx
		mov	dx, 0Ah
		mul	dx
		mov	bx, 0B29h
		add	bx, ax
		mov	ax, [bx]
		mov	si, 0AFDh
		add	si, cx
		cmp	al, [si]
		jz	loc_0_9DBC
		mov	ax, bp
		add	[bx], ax
		mov	ax, [bx]
		cmp	[si], al
		jg	loc_0_9E0F
		nop
		nop
		nop
		mov	al, [si]
		mov	[bx], ax

loc_0_9E0F:				; CODE XREF: DIALOG+66Cj
		mov	bp, cx
		add	bp, 2

loc_0_9E14:				; CODE XREF: DIALOG+5E1j DIALOG+640j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		push	es
		mov	ax, ds:0D716h
		mov	es, ax
		mov	ax, bp
		mov	es:6522h, al
		pop	es
		mov	si, 6512h
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jmp	loc_0_9EBE
;����������������������������������������������������������������������������

loc_0_9E3A:				; CODE XREF: DIALOG+5EBj DIALOG+5FBj
		call	RAND
		cmp	al, 0
		jl	loc_0_9E57
		nop
		nop
		nop
		mov	byte ptr ds:6AB0h, 2
		mov	byte ptr ds:0F58h, 6
		mov	ax, ds:0A2FDh
		mov	ds:0A2FFh, ax
		jmp	short loc_0_9EBE
;����������������������������������������������������������������������������
		nop

loc_0_9E57:				; CODE XREF: DIALOG+6A5j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	di, ds:0A2FDh
		cmp	byte ptr [di+0Bh], 2
		jnz	loc_0_9EAD
		nop
		nop
		nop
		or	word ptr [di], 10h
		mov	word ptr [di+65h], 3993h
		mov	word ptr [di+67h], 0Ah
		mov	word ptr [di+27h], 0FC18h
		call	BUILDPADS
		call	sub_0_A195
		call	DISPLAYATTRIBS
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0
		mov	dx, 270h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 88h	; '�'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 96h	; '�'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		jmp	loc_0_97E7
;����������������������������������������������������������������������������

loc_0_9EAD:				; CODE XREF: DIALOG+6CAj
		mov	bp, 0Ah
		call	MAKE_ARRESTER
		mov	byte ptr ds:0F58h, 6
		mov	si, 60FAh
		jmp	short loc_0_9F03
;����������������������������������������������������������������������������
		nop

loc_0_9EBE:				; CODE XREF: DIALOG+62Ej DIALOG+69Dj
					; ...
		jmp	loc_0_9C55
;����������������������������������������������������������������������������

loc_0_9EC1:				; CODE XREF: DIALOG+56Bj
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	sub_0_AC07
		mov	cx, 12Ch
		call	PAUSEKEY
		call	RAND
		cmp	al, 55h	; 'U'
		jbe	loc_0_9F2B
		nop
		nop
		nop
		cmp	al, 0AAh ; '�'
		jbe	loc_0_9EF3
		nop
		nop
		nop

loc_0_9EE0:				; CODE XREF: DIALOG+63j DIALOG+573j
		mov	byte ptr ds:6AB0h, 2
		mov	byte ptr ds:0F58h, 6
		mov	ax, ds:0A2FDh
		mov	ds:0A2FFh, ax
		jmp	loc_0_9C55
;����������������������������������������������������������������������������

loc_0_9EF3:				; CODE XREF: DIALOG+741j DIALOG+796j
		mov	byte ptr ds:218Fh, 0
		mov	al, 0
		call	CLEARTWIN
		call	sub_0_AC24
		mov	si, 6280h

loc_0_9F03:				; CODE XREF: DIALOG+721j
		cmp	word ptr ds:0A303h, 1
		jnz	loc_0_9F20
		nop
		nop
		nop
		push	es
		mov	ax, 19h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	si, 5CCEh

loc_0_9F20:				; CODE XREF: DIALOG+76Ej
		call	SCROLLTEXT
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jmp	loc_0_9C55
;����������������������������������������������������������������������������

loc_0_9F2B:				; CODE XREF: DIALOG+73Aj
		mov	byte ptr ds:0F58h, 6
		jmp	short loc_0_9EF3
;����������������������������������������������������������������������������

loc_0_9F32:				; CODE XREF: DIALOG+4C2j DIALOG+52Bj
					; ...
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0
		mov	dx, 270h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 88h	; '�'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 96h	; '�'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		call	WAITRELEASE
		call	BUILDPADS
		call	sub_0_A195
		call	DISPLAYATTRIBS
		call	MOUSEFORGAME

loc_0_9F67:				; CODE XREF: HAILCHAR+57j HAILCHAR+103j
					; ...
		cmp	word ptr ds:2650h, 0
		jz	loc_0_9F74
		nop
		nop
		nop
		call	GETBORDER

loc_0_9F74:				; CODE XREF: DIALOG+7D2j
		call	CLEARLOCWIN
		mov	byte ptr ds:0AECh, 1
		call	DISPLAYATTRIBS
		retn
DIALOG		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PLOTCLOSEUP	proc near		; CODE XREF: DIALOG+4Ap DIALOG+196p
					; ...
		call	PLOTCU
		call	COPYVIEW
		retn
PLOTCLOSEUP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PLOTCU		proc near		; CODE XREF: PLOTCLOSEUPp sub_0_DF0D+3Fp
		mov	si, 0A307h
		cmp	word ptr ds:2650h, 0
		jz	loc_0_9FA4
		nop
		nop
		nop
		add	si, 2
		cmp	word ptr ds:2650h, 6
		jz	loc_0_9FA4
		nop
		nop
		nop
		add	si, 2

loc_0_9FA4:				; CODE XREF: PLOTCU+8j	PLOTCU+15j
		mov	si, [si]
		mov	di, ds:0A2FDh
		mov	al, [di+51h]
		mov	ds:0A97Dh, al
		mov	al, [di+0Bh]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	bx, ax
		mov	ax, [bx]
		mov	cx, [di+15h]
		push	cx
		push	di
		mov	[di+15h], ax
		mov	ds:0A35Dh, ax
		mov	ax, [bx+2]
		mov	ds:0A359h, ax
		mov	ax, [bx+4]
		mov	ds:0A35Bh, ax
		mov	ax, [bx+6]
		mov	cx, [di+19h]
		and	cx, 0FF3Fh
		or	cx, ax
		mov	ds:0A361h, cx
		mov	ax, [di+17h]
		mov	ds:0A35Fh, ax
		call	SPRITER
		pop	di
		pop	cx
		mov	[di+15h], cx
		retn
PLOTCU		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

FINDEVIATION	proc near		; CODE XREF: HAILCHAR+3Ap COMBAT+5Ap
		mov	ax, [di+2]
		mov	cx, [di+4]
		push	bp
		push	si
		push	di
		push	dx
		sub	ax, ds:0ACDh
		sub	cx, ds:0ACFh
		mov	ds:3756h, ax
		mov	ds:3758h, cx
		call	CALC1
		pop	dx
		pop	di
		pop	si
		pop	bp
		retn
FINDEVIATION	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A016	proc near		; CODE XREF: SHOP+598p	seg000:91DCp
					; ...
		mov	word ptr ds:2120h, 7Ch ; '|'
		mov	word ptr ds:2122h, 8
		mov	word ptr ds:2124h, 74h ; 't'
		mov	word ptr ds:2126h, 8Ch ; '�'
		mov	cs:PAGECOLOUR, 18h
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 68h	; 'h'
		mov	dx, 0D4h ; '�'
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 40h	; '@'
		mov	dx, 80h	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 50h	; 'P'
		mov	dx, 5Ah	; 'Z'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		retn
sub_0_A016	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADPAD		proc near		; CODE XREF: START+CAp	DRAWSCREEN+9p
					; ...
		push	di
		push	ax
		mov	bp, 4650h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		pop	ax
		pop	di
		push	es
		mov	es, ax
		call	near ptr EXP_IFF
		pop	es
		retn
LOADPAD		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A07A	proc near		; CODE XREF: sub_0_AD2E+Ap
		mov	dx, 665h
		mov	ax, ds:0A2F9h
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	dx, ax
		mov	di, 534h
		mov	ax, ds:0D704h
		call	LOADPAD
		retn
sub_0_A07A	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A092	proc near		; CODE XREF: SHOP+214p
		mov	dx, 7E5h
		mov	di, 7747h
		mov	ax, 0A000h
		call	LOADPAD
		retn
sub_0_A092	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A09F	proc near		; CODE XREF: SHOP+102p
		mov	ax, 1818h
		call	CLEARSHOPBOX
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		mov	cs:PAGECOLOUR, 18h
		mov	si, 4569h
		call	SSTOVIDTEXT
		mov	si, 0A665h
		mov	di, 6BFh
		mov	cx, 6

loc_0_A0C0:				; CODE XREF: sub_0_A09F+4Ej
		push	cx
		push	di
		push	si
		mov	si, [si]
		push	es
		push	ds
		mov	ax, 0A000h
		mov	ds, ax
		assume ds:nothing
		mov	es, ax
		assume es:nothing
		mov	dx, 0Eh

loc_0_A0D1:				; CODE XREF: sub_0_A09F+40j
		mov	cx, 0Fh
		rep movsb
		add	si, 131h
		add	di, 131h
		dec	dx
		jnz	loc_0_A0D1
		pop	ds
		assume ds:nothing
		pop	es
		assume es:nothing
		pop	si
		add	si, 2
		pop	di
		add	di, 1680h
		pop	cx
		loop	loc_0_A0C0
		mov	si, ds:0A2FBh
		add	si, 19h
		mov	di, 3CF4h
		mov	cx, 4

loc_0_A0FC:				; CODE XREF: sub_0_A09F+72j
		push	si
		push	di
		push	cx
		mov	bx, [si]
		mov	ax, 1Ah
		call	BLITPUBORD
		pop	cx
		pop	di
		pop	si
		add	di, 1900h
		add	si, 4
		loop	loc_0_A0FC
		retn
sub_0_A09F	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A114	proc near		; CODE XREF: seg000:927Dp
		mov	dx, 7A5h
		mov	ax, ds:0A2F9h
		sub	ax, 11h
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	dx, ax
		mov	di, 578h
		mov	ax, 0A000h
		call	LOADPAD
		retn
sub_0_A114	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A12F	proc near		; CODE XREF: SHOP+DFp seg000:917Cp
					; ...
		mov	bp, bx
		push	ds
		mov	ax, ds:0D716h
		mov	ds, ax
		mov	dx, 0

loc_0_A13A:				; CODE XREF: sub_0_A12F+22j
		cmp	cx, dx
		jz	loc_0_A155
		nop
		nop
		nop

loc_0_A141:				; CODE XREF: sub_0_A12F+1Ej
		inc	bx
		cmp	byte ptr [bx], 0
		jz	loc_0_A153
		nop
		nop
		nop
		cmp	byte ptr [bx], 0FFh
		jnz	loc_0_A141
		inc	bx
		inc	dx
		jmp	short loc_0_A13A
;����������������������������������������������������������������������������

loc_0_A153:				; CODE XREF: sub_0_A12F+16j
		mov	bx, bp

loc_0_A155:				; CODE XREF: sub_0_A12F+Dj
		pop	ds
		retn
sub_0_A12F	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A157	proc near		; CODE XREF: DIALOG+4B3p
		mov	dx, 497h
		mov	bp, 2EE0h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		mov	di, 0AA20h
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		call	near ptr EXP_IFF
		pop	es
		mov	dx, 49Eh
		mov	bp, 2EE0h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		mov	di, 0AA60h
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		call	near ptr EXP_IFF
		pop	es
		call	sub_0_A195
		retn
sub_0_A157	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A195	proc near		; CODE XREF: DIALOG+6E4p DIALOG+7C4p
					; ...
		mov	si, 0AA20h
		mov	di, si
		mov	bp, 100h
		mov	dx, 40h	; '@'
		call	COPY_BLOCK_2V
		mov	byte ptr ds:5E21h, 0FFh
		retn
sub_0_A195	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A1A9	proc near		; CODE XREF: HAILCHAR+9Ap
		call	CLEARLOCWIN
		mov	si, 0
		mov	di, 9640h
		call	TPPANDP
		retn
sub_0_A1A9	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

TPPANDP		proc near		; CODE XREF: SIZEOK+1Ep sub_0_5AF3+66p
					; ...
		mov	cx, ds:0D716h
TPPANDP		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

TPPANDPD	proc near		; CODE XREF: SAVE_FILE+31p
		mov	ds:217Ah, cx
		push	di
		call	TEXT_PREPROCESS
		pop	di
		call	PTOV
		retn
TPPANDPD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PTOV		proc near		; CODE XREF: TEXT_ROLL?+2Ep
					; PRINTINLOCWIN2+19p
					; ...
		push	es
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	cx, 0FFFFh
		call	PRINTSTRING
		pop	es
		assume es:nothing
		retn
PTOV		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A1D5	proc near		; CODE XREF: DIALOG+57Cp DIALOG+585p
		push	bx
		call	WAITMRELEASE
		pop	bx
		cmp	bx, 0A83Fh
		jnz	loc_0_A1F9
		nop
		nop
		nop
		push	di
		mov	di, ds:0A2FDh
		mov	al, [di+3Dh]
		pop	di
		cmp	al, 2
		jnz	loc_0_A1F9
		nop
		nop
		nop
		sub	bx, 4
		jmp	short loc_0_A21C
;����������������������������������������������������������������������������
		nop

loc_0_A1F9:				; CODE XREF: sub_0_A1D5+9j
					; sub_0_A1D5+19j
		mov	di, ds:0A2FDh
		cmp	byte ptr [di+4Eh], 0Eh
		jnz	loc_0_A21C
		nop
		nop
		nop
		cmp	word ptr ds:0D442h, 6
		jnz	loc_0_A21C
		nop
		nop
		nop
		mov	bp, 0A6E3h
		mov	ax, 88F2h
		mov	dx, 1
		call	SETQT

loc_0_A21C:				; CODE XREF: sub_0_A1D5+21j
					; sub_0_A1D5+2Cj ...
		cmp	byte ptr [di+0Bh], 8
		jnz	loc_0_A23B
		nop
		nop
		nop
		cmp	word ptr ds:0D442h, 0Ch
		jnz	loc_0_A23B
		nop
		nop
		nop
		mov	bp, 0A6E3h
		mov	ax, 8D11h
		mov	dx, 1
		call	SETQT

loc_0_A23B:				; CODE XREF: sub_0_A1D5+4Bj
					; sub_0_A1D5+55j
		push	es
		mov	ax, seg001
		mov	es, ax
		assume es:seg001
		mov	si, bx
		mov	di, 0A88Bh

loc_0_A246:				; CODE XREF: sub_0_A1D5+84j
					; sub_0_A1D5+89j
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_A260
		nop
		nop
		nop
		cmp	byte ptr [si+3], 0
		jz	loc_0_A25B
		nop
		nop
		nop
		movsw
		movsw
		jmp	short loc_0_A246
;����������������������������������������������������������������������������

loc_0_A25B:				; CODE XREF: sub_0_A1D5+7Dj
		add	si, 4
		jmp	short loc_0_A246
;����������������������������������������������������������������������������

loc_0_A260:				; CODE XREF: sub_0_A1D5+74j
		mov	ax, 0FFFFh
		stosw
		mov	bx, 0A88Bh
		pop	es
		assume es:nothing
		mov	ds:0A6D9h, bx
		mov	word ptr ds:0A6DBh, 0
		mov	word ptr ds:0A6DFh, 0
		mov	word ptr ds:0A6DDh, 0

loc_0_A27E:				; CODE XREF: sub_0_A1D5+B8j
		cmp	word ptr [bx], 0FFFFh
		jz	loc_0_A28F
		nop
		nop
		nop
		inc	word ptr ds:0A6DFh
		add	bx, 4
		jmp	short loc_0_A27E
;����������������������������������������������������������������������������

loc_0_A28F:				; CODE XREF: sub_0_A1D5+ACj
		cmp	word ptr ds:0A6DFh, 0
		jnz	loc_0_A299
		jmp	loc_0_A979
;����������������������������������������������������������������������������

loc_0_A299:				; CODE XREF: sub_0_A1D5+BFj
		cmp	word ptr ds:0A6DFh, 5
		jle	loc_0_A2AC
		nop
		nop
		nop
		mov	ax, ds:0A6DFh
		sub	ax, 5
		mov	ds:0A6DDh, ax

loc_0_A2AC:				; CODE XREF: sub_0_A1D5+C9j
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0CCh ; '�'
		mov	dx, 234h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 8Eh	; '�'
		mov	dx, 0C0h ; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0B4h ; '�'
		mov	dx, 6Eh	; 'n'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	word ptr ds:0A6E1h, 0
		call	sub_0_A9AA
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_A2E0:				; CODE XREF: sub_0_A1D5+123j
					; sub_0_A1D5+13Cj ...
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	loc_0_A366
		nop
		nop
		nop
		mov	si, 0A3EBh
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_A2E0
		cmp	ax, 1
		jz	loc_0_A331
		nop
		nop
		nop
		cmp	ax, 7
		jz	loc_0_A34A
		nop
		nop
		nop
		sub	ax, 2
		cmp	ax, ds:0A6E1h
		jz	loc_0_A2E0
		mov	dx, ds:0A6DBh
		add	dx, ax
		cmp	dx, ds:0A6DFh
		jge	loc_0_A2E0
		mov	ds:0A6E1h, ax

loc_0_A322:				; CODE XREF: sub_0_A1D5+173j
					; sub_0_A1D5+18Fj
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	sub_0_A9AA
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		jmp	short loc_0_A2E0
;����������������������������������������������������������������������������

loc_0_A331:				; CODE XREF: sub_0_A1D5+128j
		cmp	word ptr ds:0A6DBh, 0
		jz	loc_0_A2E0
		dec	word ptr ds:0A6DBh
		mov	word ptr ds:0A6E1h, 0
		mov	cx, 0Ch
		call	PAUSE
		jmp	short loc_0_A322
;����������������������������������������������������������������������������

loc_0_A34A:				; CODE XREF: sub_0_A1D5+130j
		mov	dx, ds:0A6DDh
		cmp	ds:0A6DBh, dx
		jz	loc_0_A2E0
		inc	word ptr ds:0A6DBh
		mov	word ptr ds:0A6E1h, 4
		mov	cx, 0Ch
		call	PAUSE
		jmp	short loc_0_A322
;����������������������������������������������������������������������������

loc_0_A366:				; CODE XREF: sub_0_A1D5+115j
		test	bx, 2
		jz	loc_0_A384
		nop
		nop
		nop
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	byte ptr ds:218Fh, 0
		mov	al, 0
		call	CLEARTWIN
		call	WAITMRELEASE
		jmp	loc_0_A979
;����������������������������������������������������������������������������

loc_0_A384:				; CODE XREF: sub_0_A1D5+195j
		mov	ax, ds:0A6DBh
		add	ax, ds:0A6E1h
		cmp	word ptr ds:0A303h, 0FFFFh
		jnz	loc_0_A3B0
		nop
		nop
		nop
		cmp	word ptr ds:0D442h, 0Ch
		jz	loc_0_A3B0
		nop
		nop
		nop
		call	RAND
		mov	ax, ds:0D744h
		mov	dx, ds:0A6DFh
		mov	ah, dl
		call	RAND_RANGE
		mov	ah, 0

loc_0_A3B0:				; CODE XREF: sub_0_A1D5+1BBj
					; sub_0_A1D5+1C5j
		shl	ax, 1
		shl	ax, 1
		mov	bx, ds:0A6D9h
		add	bx, ax
		mov	si, [bx]
		mov	dx, ds:0D716h
		mov	es, dx
		mov	word ptr ds:0A97Eh, 0
		cmp	word ptr es:[si+6], 0
		jz	loc_0_A3D9
		nop
		nop
		nop
		mov	ax, es:[si+6]
		mov	ds:0A97Eh, ax

loc_0_A3D9:				; CODE XREF: sub_0_A1D5+1F8j
		cmp	byte ptr es:[si+5], 2
		jnz	loc_0_A3E3
		jmp	loc_0_A6C4
;����������������������������������������������������������������������������

loc_0_A3E3:				; CODE XREF: sub_0_A1D5+209j
		cmp	byte ptr es:[si+5], 3
		jnz	loc_0_A3ED
		jmp	loc_0_A6E1
;����������������������������������������������������������������������������

loc_0_A3ED:				; CODE XREF: sub_0_A1D5+213j
		cmp	byte ptr es:[si+5], 4
		jnz	loc_0_A3F7
		jmp	loc_0_A6F6
;����������������������������������������������������������������������������

loc_0_A3F7:				; CODE XREF: sub_0_A1D5+21Dj
		cmp	byte ptr es:[si+5], 5
		jnz	loc_0_A401
		jmp	loc_0_A713
;����������������������������������������������������������������������������

loc_0_A401:				; CODE XREF: sub_0_A1D5+227j
		cmp	byte ptr es:[si+5], 6
		jnz	loc_0_A40B
		jmp	loc_0_A74D
;����������������������������������������������������������������������������

loc_0_A40B:				; CODE XREF: sub_0_A1D5+231j
		cmp	byte ptr es:[si+5], 7
		jnz	loc_0_A415
		jmp	loc_0_A75C
;����������������������������������������������������������������������������

loc_0_A415:				; CODE XREF: sub_0_A1D5+23Bj
		cmp	byte ptr es:[si+5], 8
		jnz	loc_0_A41F
		jmp	loc_0_A8D1
;����������������������������������������������������������������������������

loc_0_A41F:				; CODE XREF: sub_0_A1D5+245j
		cmp	byte ptr es:[si+5], 9
		jnz	loc_0_A429
		jmp	loc_0_A869
;����������������������������������������������������������������������������

loc_0_A429:				; CODE XREF: sub_0_A1D5+24Fj
		cmp	byte ptr es:[si+4], 1
		jnz	loc_0_A433
		jmp	loc_0_A5F7
;����������������������������������������������������������������������������

loc_0_A433:				; CODE XREF: sub_0_A1D5+259j
					; seg000:A632j	...
		cmp	si, 8BC3h
		jnz	loc_0_A463
		nop
		nop
		nop
		mov	di, ds:0A2FDh
		cmp	word ptr [di+4Eh], 17h
		jz	loc_0_A458
		nop
		nop
		nop
		cmp	byte ptr [di+4Eh], 1Ah
		jnz	loc_0_A463
		nop
		nop
		nop
		mov	si, 67F1h
		jmp	short loc_0_A4C1
;����������������������������������������������������������������������������
		nop

loc_0_A458:				; CODE XREF: sub_0_A1D5+26Fj
		mov	byte ptr ds:0A702h, 1
		mov	si, 6811h
		jmp	short loc_0_A4C1
;����������������������������������������������������������������������������
		nop

loc_0_A463:				; CODE XREF: sub_0_A1D5+262j
					; sub_0_A1D5+278j
		cmp	si, 9025h
		jnz	loc_0_A47F
		nop
		nop
		nop
		mov	bx, ds:0A2FDh
		cmp	byte ptr [bx+35h], 2
		jnz	loc_0_A47F
		nop
		nop
		nop
		mov	si, 3D0Eh
		jmp	short loc_0_A4C1
;����������������������������������������������������������������������������
		nop

loc_0_A47F:				; CODE XREF: sub_0_A1D5+292j
					; sub_0_A1D5+29Fj
		cmp	si, 0A95Eh
		jnz	loc_0_A48E
		nop
		nop
		nop
		mov	word ptr ds:9B3Ch, 1

loc_0_A48E:				; CODE XREF: sub_0_A1D5+2AEj
		mov	al, ds:0A97Dh
		mov	ah, es:[si+2]
		cmp	ah, 0
		jnz	loc_0_A49D
		jmp	loc_0_A95E
;����������������������������������������������������������������������������

loc_0_A49D:				; CODE XREF: sub_0_A1D5+2C3j
		dec	ah
		call	RAND_RANGE
		mov	di, si
		add	di, 8
		call	sub_0_A9A3
		inc	di
		mov	cl, al
		inc	cl

loc_0_A4AF:				; CODE XREF: sub_0_A1D5+2E8j
		cmp	cl, 1
		jz	loc_0_A4BF
		nop
		nop
		nop
		call	sub_0_A9A3
		inc	di
		dec	cl
		jmp	short loc_0_A4AF
;����������������������������������������������������������������������������

loc_0_A4BF:				; CODE XREF: sub_0_A1D5+2DDj
		mov	si, di

loc_0_A4C1:				; CODE XREF: sub_0_A1D5+280j
					; sub_0_A1D5+28Bj ...
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax

loc_0_A4C7:				; CODE XREF: sub_0_A1D5+348j
					; seg000:A684j	...
		cmp	word ptr ds:0A303h, 1
		jnz	loc_0_A4EA
		nop
		nop
		nop
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		push	es
		mov	ax, 19h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	si, 5CCEh

loc_0_A4EA:				; CODE XREF: sub_0_A1D5+2F7j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, 0
		mov	byte ptr ds:218Fh, 0
		call	CLEARTWIN
		call	SCROLLRESPONSE
		cmp	byte ptr ds:0F58h, 4
		jnz	loc_0_A51F
		nop
		nop
		nop
		inc	byte ptr ds:0F58h
		call	RAND
		and	ah, 3
		mov	ds:0F56h, ah
		mov	si, 0F54h
		mov	ax, ds
		mov	ds:217Ah, ax
		jmp	short loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A51F:				; CODE XREF: sub_0_A1D5+32Dj
		cmp	word ptr ds:0A305h, 0
		jz	loc_0_A54B
		nop
		nop
		nop
		mov	word ptr ds:0A305h, 0
		call	DO_CURE
		cmp	word ptr ds:2650h, 0
		jz	loc_0_A548
		nop
		nop
		nop
		call	GETBORDER
		call	MAKEVIEW
		mov	bx, 996Ch
		call	PLOTCLOSEUP

loc_0_A548:				; CODE XREF: sub_0_A1D5+362j
		call	COPYVIEW

loc_0_A54B:				; CODE XREF: sub_0_A1D5+34Fj
					; DO_CURE+A2j
		jmp	loc_0_A979
sub_0_A1D5	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DO_CURE		proc near		; CODE XREF: sub_0_A1D5+35Ap
					; GUILDSERVICE+DEp
		call	CLEARLOCWIN
		mov	si, 5CDFh
		mov	di, 9640h
		call	TPPANDP
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 190h
		mov	dx, 1D0h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 64h	; 'd'
		mov	dx, 74h	; 't'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0D8h ; '�'
		mov	dx, 6Ch	; 'l'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	bx, 0C8h ; '�'
		mov	ax, 64h	; 'd'
		call	YNPAD
		cmp	ax, 1
		jnz	loc_0_A5F3
		nop
		nop
		nop
		mov	ax, ds:0AA84h
		cmp	ds:0B1Fh, ax
		jl	loc_0_A5DE
		nop
		nop
		nop
		sub	ds:0B1Fh, ax
		call	PRINTCASH
		mov	si, 0CA3Ch

loc_0_A5A7:				; CODE XREF: DO_CURE+69j
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_A5B9
		nop
		nop
		nop
		mov	word ptr [si+8], 0
		add	si, 10h
		jmp	short loc_0_A5A7
;����������������������������������������������������������������������������

loc_0_A5B9:				; CODE XREF: DO_CURE+5Cj
		cmp	word ptr ds:0CA1Ah, 9Fh	; '�'
		jl	loc_0_A5CA
		nop
		nop
		nop
		mov	word ptr ds:0CA1Ah, 9Fh	; '�'

loc_0_A5CA:				; CODE XREF: DO_CURE+71j
		cmp	word ptr ds:0CA18h, 13Fh
		jl	loc_0_A5DB
		nop
		nop
		nop
		mov	word ptr ds:0CA18h, 13Fh

loc_0_A5DB:				; CODE XREF: DO_CURE+82j
		jmp	short loc_0_A5F3
;����������������������������������������������������������������������������
		nop

loc_0_A5DE:				; CODE XREF: DO_CURE+4Aj
		call	COPYVIEW
		call	CLEARLOCWIN
		mov	si, 2DD2h
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		call	SCROLLRESPONSE
		jmp	loc_0_A54B
;����������������������������������������������������������������������������

loc_0_A5F3:				; CODE XREF: DO_CURE+3Ej DO_CURE+8Dj
		call	CLEARLOCWIN
		retn
DO_CURE		endp

;����������������������������������������������������������������������������

loc_0_A5F7:				; CODE XREF: sub_0_A1D5+25Bj
		mov	di, ds:0A2FDh
		cmp	byte ptr [di+4Eh], 0
		jnz	loc_0_A635
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 8
		jz	loc_0_A635
		nop
		nop
		nop
		mov	al, ds:0A97Dh
		and	al, 0Ch
		cmp	al, 0Ch
		jnz	loc_0_A619
		jmp	loc_0_A95E
;����������������������������������������������������������������������������

loc_0_A619:				; CODE XREF: seg000:A614j
		cmp	word ptr ds:0ADDh, 0FFFFh
		jnz	loc_0_A623
		jmp	loc_0_A94C
;����������������������������������������������������������������������������

loc_0_A623:				; CODE XREF: seg000:A61Ej
		mov	al, ds:0A97Dh
		rol	al, 1
		rol	al, 1
		rol	al, 1
		and	al, es:[si+3]
		jnz	loc_0_A635
		jmp	loc_0_A433
;����������������������������������������������������������������������������

loc_0_A635:				; CODE XREF: seg000:A5FFj seg000:A608j
					; ...
		cmp	word ptr es:[si], 0
		jnz	loc_0_A63E
		jmp	loc_0_A433
;����������������������������������������������������������������������������

loc_0_A63E:				; CODE XREF: seg000:A639j
		mov	ax, es:[si]
		mov	bx, ds:0ADBh
		mov	cl, ah
		mov	ch, 0
		mov	ah, 0
		mov	dl, bh
		mov	bh, 0
		mov	dh, 0
		sub	ax, bx
		sub	cx, dx
		mov	bx, ax
		mov	dx, cx
		cmp	cx, 0
		jge	loc_0_A663
		nop
		nop
		nop
		neg	cx

loc_0_A663:				; CODE XREF: seg000:A65Cj
		cmp	bx, 0
		jge	loc_0_A66D
		nop
		nop
		nop
		neg	bx

loc_0_A66D:				; CODE XREF: seg000:A666j
		add	bx, cx
		mov	ds:0F3Fh, bx
		cmp	bx, 5
		jge	loc_0_A687
		nop
		nop
		nop
		mov	si, 2F35h
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A687:				; CODE XREF: seg000:A676j
		push	ax
		push	dx
		mov	ax, bx
		call	HEXTOBCD
		mov	ds:0F3Fh, ax
		pop	dx
		pop	ax
		call	ARCTAN
		mov	ax, di
		add	ax, 5Ah	; 'Z'
		xor	dx, dx
		mov	cx, 0B4h ; '�'
		idiv	cx
		and	ax, 7
		mov	dx, ax
		call	RAND
		mov	ds:0F4Eh, dl
		mov	si, 0F4Ch
		test	ah, 2
		jz	loc_0_A6BC
		nop
		nop
		nop
		mov	si, 0F41h

loc_0_A6BC:				; CODE XREF: seg000:A6B4j
		mov	ax, ds
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A6C4:				; CODE XREF: sub_0_A1D5+20Bj
		test	byte ptr ds:0A97Dh, 18h
		jnz	loc_0_A6CE
		jmp	loc_0_A95E
;����������������������������������������������������������������������������

loc_0_A6CE:				; CODE XREF: seg000:A6C9j
		mov	ax, ds:0AF0h
		sar	ax, 1
		mov	ds:0F5Bh, al
		mov	si, 0F59h
		mov	ax, ds
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A6E1:				; CODE XREF: sub_0_A1D5+215j
		test	byte ptr ds:0A97Dh, 12h
		jnz	loc_0_A6EB
		jmp	loc_0_A95E
;����������������������������������������������������������������������������

loc_0_A6EB:				; CODE XREF: seg000:A6E6j
		mov	si, 0F5Dh
		mov	ax, ds
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A6F6:				; CODE XREF: sub_0_A1D5+21Fj
		mov	si, ds:0A2FDh
		cmp	byte ptr [si+4Eh], 26h ; '&'
		jnz	loc_0_A708
		nop
		nop
		nop
		mov	byte ptr ds:0A7FEh, 2

loc_0_A708:				; CODE XREF: seg000:A6FEj
		add	si, 2Bh	; '+'
		mov	ax, ds
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A713:				; CODE XREF: sub_0_A1D5+229j
		mov	si, ds:0A2FDh
		add	si, 37h	; '7'
		cmp	word ptr ds:0D47Fh, 1
		jnz	loc_0_A745
		nop
		nop
		nop
		cmp	word ptr [si+5], 0E18h
		jnz	loc_0_A736
		nop
		nop
		nop
		mov	byte ptr ds:0A80Eh, 2
		jmp	short loc_0_A745
;����������������������������������������������������������������������������
		nop

loc_0_A736:				; CODE XREF: seg000:A729j
		cmp	word ptr [si+5], 0E18h
		jnz	loc_0_A745
		nop
		nop
		nop
		mov	byte ptr ds:0A812h, 2

loc_0_A745:				; CODE XREF: seg000:A71Fj seg000:A733j
					; ...
		mov	ax, ds
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A74D:				; CODE XREF: sub_0_A1D5+233j
		mov	si, ds:0A2FDh
		add	si, 33h	; '3'
		mov	ax, ds
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A75C:				; CODE XREF: sub_0_A1D5+23Dj
		mov	word ptr ds:0D467h, 0
		call	GIVEDIAG
		jmp	loc_0_A4C7

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GIVEDIAG	proc near		; CODE XREF: seg000:A762p GUILDSERVICE+C8p
		mov	word ptr ds:0A305h, 0
		mov	di, 3E8h
		push	es
		mov	ax, ds:0D702h
		mov	es, ax
		push	ds
		mov	ax, ds:0D716h
		mov	ds, ax
		mov	si, 47E6h
		call	sub_0_A996
		pop	ds
		mov	si, 0CA3Ch
		mov	bp, 0
		mov	dx, 0
		mov	cx, 0

loc_0_A790:				; CODE XREF: GIVEDIAG+7Dj
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_A7E7
		nop
		nop
		nop
		cmp	word ptr [si+8], 0
		jz	loc_0_A7E2
		nop
		nop
		nop
		mov	ax, [si]
		push	ds
		push	es
		pop	ds
		mov	byte ptr [di], 7Bh ; '{'
		mov	byte ptr [di+1], 14h
		mov	[di+2],	al
		mov	byte ptr [di+3], 20h ; ' '
		mov	byte ptr [di+4], 61h ; 'a'
		mov	byte ptr [di+5], 6Eh ; 'n'
		mov	byte ptr [di+6], 64h ; 'd'
		mov	byte ptr [di+4], 20h ; ' '
		mov	byte ptr [di+5], 79h ; 'y'
		mov	byte ptr [di+6], 20h ; ' '
		mov	byte ptr [di+7], 20h ; ' '
		add	di, 8
		pop	ds
		inc	bp
		cmp	si, 0CA7Ch
		jb	loc_0_A7DF
		nop
		nop
		nop
		inc	cx

loc_0_A7DF:				; CODE XREF: GIVEDIAG+71j
		add	dx, [si+0Ah]

loc_0_A7E2:				; CODE XREF: GIVEDIAG+34j
		add	si, 10h
		jmp	short loc_0_A790
;����������������������������������������������������������������������������

loc_0_A7E7:				; CODE XREF: GIVEDIAG+2Bj
		add	dx, ds:0D467h
		cmp	dx, 1
		jge	loc_0_A7F6
		nop
		nop
		nop
		mov	dx, 1

loc_0_A7F6:				; CODE XREF: GIVEDIAG+86j
		mov	ds:0AA84h, dx
		mov	ax, dx
		push	di
		push	bp
		push	cx
		call	HEXTOBCD2
		mov	ds:0AA82h, ax
		pop	cx
		pop	bp
		pop	di
		cmp	bp, 0
		jz	loc_0_A81E
		nop
		nop
		nop
		cmp	bp, 5
		jge	loc_0_A830
		nop
		nop
		nop
		sub	di, 5
		jmp	short loc_0_A83F
;����������������������������������������������������������������������������
		nop

loc_0_A81E:				; CODE XREF: GIVEDIAG+A3j
		push	ds
		mov	ax, ds:0D716h
		mov	ds, ax
		mov	si, 47EEh
		push	cx
		call	sub_0_A996
		pop	cx
		pop	ds
		jmp	short loc_0_A85A
;����������������������������������������������������������������������������
		nop

loc_0_A830:				; CODE XREF: GIVEDIAG+ABj
		push	ds
		mov	ax, ds:0D716h
		mov	ds, ax
		mov	si, 4801h
		push	cx
		call	sub_0_A996
		pop	cx
		pop	ds

loc_0_A83F:				; CODE XREF: GIVEDIAG+B3j
		cmp	cx, 0
		jz	loc_0_A85A
		nop
		nop
		nop
		push	ds
		mov	ax, ds:0D716h
		mov	ds, ax
		mov	si, 482Bh
		call	sub_0_A996
		pop	ds
		mov	word ptr ds:0A305h, 1

loc_0_A85A:				; CODE XREF: GIVEDIAG+C5j GIVEDIAG+DAj
		mov	byte ptr es:[di], 0FFh
		pop	es
		mov	si, 3E8h
		mov	ax, ds:0D702h
		mov	ds:217Ah, ax
		retn
GIVEDIAG	endp

;����������������������������������������������������������������������������

loc_0_A869:				; CODE XREF: sub_0_A1D5+251j
		mov	si, 2C7Ah
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	loc_0_A8A9
		nop
		nop
		nop
		mov	ax, ds:0ADBh
		mov	cl, al
		mov	dl, ah
		mov	si, 0A980h
		call	CHECKBOXES_B
		dec	ax
		cmp	ax, 0FFFFh
		jnz	loc_0_A8B2
		nop
		nop
		nop

loc_0_A88C:				; CODE XREF: seg000:A8B7j
		cmp	byte ptr ds:3784h, 0
		jnz	loc_0_A8A6
		nop
		nop
		nop
		cmp	word ptr ds:5B01h, 0
		jnz	loc_0_A8A6
		nop
		nop
		nop
		mov	si, 11h
		jmp	short loc_0_A8A9
;����������������������������������������������������������������������������
		nop

loc_0_A8A6:				; CODE XREF: seg000:A891j seg000:A89Bj
		mov	si, 2C8Eh

loc_0_A8A9:				; CODE XREF: seg000:A871j seg000:A8A3j
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A8B2:				; CODE XREF: seg000:A887j
		cmp	byte ptr ds:3784h, 0
		jz	loc_0_A88C
		push	es
		mov	dx, ds:0D716h
		mov	es, dx
		mov	es:2F33h, al
		pop	es
		mov	si, 2F31h
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A8D1:				; CODE XREF: sub_0_A1D5+247j
		cmp	word ptr ds:0ADDh, 0FFFFh
		jz	loc_0_A8FA
		nop
		nop
		nop
		mov	di, ds:0A2FDh
		mov	ax, [di+27h]
		mov	si, 9A90h
		mov	cx, 20h	; ' '
		mov	dx, 0

loc_0_A8EB:				; CODE XREF: seg000:A8F8j
		cmp	ax, [si]
		jz	loc_0_A906
		nop
		nop
		nop
		add	dx, 1
		add	si, 2
		loop	loc_0_A8EB

loc_0_A8FA:				; CODE XREF: seg000:A8D6j
		mov	si, 5C79h
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A906:				; CODE XREF: seg000:A8EDj
		mov	di, 3E8h
		push	es
		push	dx
		mov	ax, ds:0D702h
		mov	es, ax
		mov	si, 22AAh
		call	RAND
		and	ax, 7
		shl	ax, 1
		add	si, ax
		mov	si, [si]
		push	ds
		mov	ax, ds:0D716h
		mov	ds, ax
		call	sub_0_A996
		pop	ds
		pop	dx
		push	ds
		push	es
		pop	ds
		mov	byte ptr [di], 7Bh ; '{'
		mov	byte ptr [di+1], 19h
		mov	[di+2],	dl
		mov	byte ptr [di+3], 0FFh
		add	di, 4
		pop	ds
		pop	es
		mov	si, 3E8h
		mov	ax, ds:0D702h
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A94C:				; CODE XREF: seg000:A620j
		mov	word ptr ds:0A97Eh, 0
		mov	si, 2C69h
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A95E:				; CODE XREF: sub_0_A1D5+2C5j
					; seg000:A616j	...
		mov	word ptr ds:0A97Eh, 0
		call	RAND
		and	ah, 3
		mov	ds:0F52h, ah
		mov	si, 0F50h
		mov	ax, ds
		mov	ds:217Ah, ax
		jmp	loc_0_A4C7
;����������������������������������������������������������������������������

loc_0_A979:				; CODE XREF: sub_0_A1D5+C1j
					; sub_0_A1D5+1ACj ...
		cmp	word ptr ds:0A97Eh, 0
		jz	locret_0_A995
		nop
		nop
		nop
		mov	ax, ds:0A97Eh
		mov	bp, 0A6E3h
		mov	dx, 1
		call	SETQT
		mov	bp, 0A83Fh
		call	SETQT

locret_0_A995:				; CODE XREF: seg000:A97Ej
		retn

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A996	proc near		; CODE XREF: GIVEDIAG+18p GIVEDIAG+C0p
					; ...
		cmp	byte ptr [si], 0FFh
		jz	locret_0_A9A1
		nop
		nop
		nop
		movsb
		jmp	short sub_0_A996
;����������������������������������������������������������������������������

locret_0_A9A1:				; CODE XREF: sub_0_A996+3j
		retn
sub_0_A996	endp

;����������������������������������������������������������������������������

loc_0_A9A2:				; CODE XREF: sub_0_A9A3+4j
		inc	di

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A9A3	proc near		; CODE XREF: sub_0_A1D5+2D2p
					; sub_0_A1D5+2E2p
		cmp	byte ptr es:[di], 0FFh
		jnz	loc_0_A9A2
		retn
sub_0_A9A3	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_A9AA	proc near		; CODE XREF: sub_0_A1D5+103p
					; sub_0_A1D5+152p
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	byte ptr ds:218Fh, 0
		mov	al, cs:PAGECOLOUR
		call	CLEARTWIN
		mov	bx, ds:0A6D9h
		add	bx, ds:0A6DBh
		add	bx, ds:0A6DBh
		add	bx, ds:0A6DBh
		add	bx, ds:0A6DBh
		mov	di, 0B5A6h
		mov	cx, 0

loc_0_A9D5:				; CODE XREF: sub_0_A9AA+86j
		mov	si, [bx]
		cmp	si, 0FFFFh
		jz	loc_0_AA32
		nop
		nop
		nop
		add	si, 8
		push	di
		push	cx
		push	bx
		mov	al, 0Fh
		cmp	cx, ds:0A6E1h
		jnz	loc_0_AA1F
		nop
		nop
		nop
		mov	ds:9B3Eh, di
		push	es
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, 5
		mov	cx, 59h	; 'Y'
		push	di
		rep stosw
		pop	di
		mov	cx, 8

loc_0_AA07:				; CODE XREF: sub_0_A9AA+69j
		add	di, 140h
		mov	es:[di], al
		mov	es:[di+0B0h], al
		loop	loc_0_AA07
		mov	cx, 59h	; 'Y'
		rep stosw
		pop	es
		assume es:nothing
		mov	di, ds:9B3Eh

loc_0_AA1F:				; CODE XREF: sub_0_A9AA+41j
		call	TPPANDP
		pop	bx
		pop	cx
		pop	di
		add	di, 0B40h
		add	bx, 4
		inc	cx
		cmp	cx, 5
		jnz	loc_0_A9D5

loc_0_AA32:				; CODE XREF: sub_0_A9AA+30j
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		retn
sub_0_A9AA	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_AA38	proc near		; CODE XREF: SCROLLRESP+17p
					; SCTEXT2+Bp
		push	ds
		mov	ax, ds:217Ah
		mov	ds, ax
		lodsb
		pop	ds
		cmp	al, 0FFh
		jz	locret_0_AA5E
		nop
		nop
		nop
		push	si
		mov	di, 9700h
		push	ax
		call	PRINTCHAR
		pop	ax
		mov	bx, 20A4h
		sub	al, 20h	; ' '
		xlat
		add	al, 1
		call	sub_0_AAD1
		pop	si
		mov	al, 0

locret_0_AA5E:				; CODE XREF: sub_0_AA38+Aj
		retn
sub_0_AA38	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SCROLLRESPONSE	proc near		; CODE XREF: DIALOG+1F6p sub_0_A1D5+325p
					; ...
		call	TEXT_PREPROCESS
SCROLLRESPONSE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SCROLLRESP	proc near		; CODE XREF: CONTROLLER+831p
					; SCROLLRESP+Aj
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	SCROLLRESP
		push	es
		push	si
		call	CLEARLOCWIN
		pop	si
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing

loc_0_AA79:				; CODE XREF: SCROLLRESP+3Aj
		call	sub_0_AA38
		cmp	al, 0FFh
		jz	loc_0_AAA5
		nop
		nop
		nop
		cmp	word ptr ds:0F8h, 0
		jnz	loc_0_AA9E
		nop
		nop
		nop
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	loc_0_AA9E
		nop
		nop
		nop
		jmp	short loc_0_AA79
;����������������������������������������������������������������������������

loc_0_AA9E:				; CODE XREF: SCROLLRESP+26j
					; SCROLLRESP+35j
		inc	byte ptr ds:0F58h
		jmp	short loc_0_AACC
;����������������������������������������������������������������������������
		nop

loc_0_AAA5:				; CODE XREF: SCROLLRESP+1Cj
		mov	cx, 1Bh

loc_0_AAA8:				; CODE XREF: SCROLLRESP+68j
		push	cx
		mov	al, 8
		call	sub_0_AAD1
		pop	cx
		cmp	word ptr ds:0F8h, 0
		jnz	loc_0_AACC
		nop
		nop
		nop
		push	cx
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		pop	cx
		and	bx, 3
		jnz	loc_0_AACC
		nop
		nop
		nop
		loop	loc_0_AAA8

loc_0_AACC:				; CODE XREF: SCROLLRESP+40j
					; SCROLLRESP+52j ...
		pop	es
		assume es:nothing
		call	CLEARLOCWIN
		retn
SCROLLRESP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_AAD1	proc near		; CODE XREF: sub_0_AA38+20p
					; SCROLLRESP+49p ...
		push	ds
		mov	dx, 0A000h
		mov	ds, dx
		assume ds:nothing
		mov	ah, 0
		mov	bx, ax

loc_0_AADB:				; CODE XREF: sub_0_AAD1+2Fj
		mov	di, 9638h
		mov	si, di
		add	si, 1
		mov	dx, 8
		mov	bp, 0CFh ; '�'

loc_0_AAE9:				; CODE XREF: sub_0_AAD1+29j
		mov	cx, bp
		rep movsb
		mov	ax, 0
		stosb
		add	di, 70h	; 'p'
		mov	si, di
		add	si, 1
		dec	dx
		jnz	loc_0_AAE9
		call	WAITFLY
		dec	bx
		jnz	loc_0_AADB
		pop	ds
		assume ds:nothing
		retn
sub_0_AAD1	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SCROLLTEXT	proc near		; CODE XREF: CONTROLLER+479p
					; CONTROLLER+BC4p ...
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax

loc_0_AB0A:				; CODE XREF: DISPLAY_ISSUE+2Ap
					; DISPLAY_ISSUE+44p
		call	TEXT_PREPROCESS
SCROLLTEXT	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SCTEXT2		proc near		; CODE XREF: sub_0_7053+4B7p
					; sub_0_79AD+Ep
		push	es
		push	si
		call	CLEARLOCWIN
		pop	si
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing

loc_0_AB18:				; CODE XREF: SCTEXT2+10j
		call	sub_0_AA38
		cmp	al, 0FFh
		jnz	loc_0_AB18
		mov	cx, 1Bh

loc_0_AB22:				; CODE XREF: SCTEXT2+1Cj
		push	cx
		mov	al, 8
		call	sub_0_AAD1
		pop	cx
		loop	loc_0_AB22
		pop	es
		assume es:nothing
		call	CLEARLOCWIN
		retn
SCTEXT2		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

OKPAD		proc near		; CODE XREF: sub_0_6F5B+35p
					; PRINTANDOK+24p ...
		mov	ds:0A5DDh, bx
		mov	ds:0A5DFh, ax
		mov	dx, 140h
		mul	dx
		add	ax, bx
		mov	di, ax
		mov	bp, 10h
		mov	dx, 10h
		mov	si, 68F0h
		push	es
		push	ds
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, ds:0D708h
		mov	ds, ax
		mov	al, 10h
		call	COPY_BLOCK_LONIB
		pop	ds
		pop	es
		assume es:nothing
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_AB61:				; CODE XREF: OKPAD+3Bj	OKPAD+46j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_AB61
		mov	si, 0A5DDh
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_AB61
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		retn
OKPAD		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

YNPAD		proc near		; CODE XREF: sub_0_6C64+253p
					; sub_0_7604+78p ...
		call	sub_0_ABA6
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_AB86:				; CODE XREF: YNPAD+12j	YNPAD+1Dj
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_AB86
		mov	si, 0A5E9h
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_AB86
		dec	ax
		push	ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		pop	ax
		retn
YNPAD		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_ABA6	proc near		; CODE XREF: seg000:9286p YNPADp
		mov	ds:0A5E9h, bx
		mov	ds:0A5EBh, ax
		mov	ds:0A5F3h, bx
		mov	ds:0A5F5h, ax
		add	word ptr ds:0A5F3h, 10h
		mov	dx, 140h
		mul	dx
		add	ax, bx
		mov	di, ax
		mov	bp, 20h	; ' '
		mov	dx, 10h
		mov	si, 54E0h
		push	es
		push	ds
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ax, ds:0D708h
		mov	ds, ax
		mov	al, 10h
		call	COPY_BLOCK_LONIB
		pop	ds
		pop	es
		assume es:nothing
		retn
sub_0_ABA6	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PRINTANDOK	proc near		; CODE XREF: SHOP+3B9p	SHOP+3E2p
					; ...
		push	si
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, 18h
		call	CLEARSHOPBOX
		pop	si
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		call	WAITMRELEASE
		mov	bx, 0BAh ; '�'
		mov	ax, 64h	; 'd'
		call	OKPAD
		retn
PRINTANDOK	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_AC07	proc near		; CODE XREF: DIALOG+72Cp
		call	sub_0_AC24
		mov	al, 0
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		mov	byte ptr ds:218Fh, 0
		mov	cs:PAGECOLOUR, 0
		mov	si, 6286h
		call	SSTOVIDTEXT
		retn
sub_0_AC07	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_AC24	proc near		; CODE XREF: DIALOG+111p DIALOG+763p
					; ...
		call	RAND
		call	RAND
		and	ax, 0F0Fh
		push	ds
		mov	dx, ds:0D716h
		mov	ds, dx
		mov	ds:6288h, ah
		mov	ds:628Ch, al
		pop	ds
		retn
sub_0_AC24	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_AC3D	proc near		; CODE XREF: DIALOG+1C8p DIALOG+422p
		call	SCROLLTEXT
		call	CLEARLOCWIN
		mov	si, 615Ch
		mov	di, 9640h
		call	TPPANDP
		mov	bx, 0C8h ; '�'
		mov	ax, 64h	; 'd'
		call	YNPAD
		push	ax
		cmp	word ptr ds:2650h, 0
		jz	loc_0_AC6C
		nop
		nop
		nop
		call	GETBORDER
		call	MAKEVIEW
		mov	bx, 996Ch
		call	PLOTCLOSEUP

loc_0_AC6C:				; CODE XREF: sub_0_AC3D+1Ej
		call	COPYVIEW
		call	CLEARLOCWIN
		pop	ax
		retn
sub_0_AC3D	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_AC74	proc near		; CODE XREF: DIALOG+222p DIALOG+228p
					; ...
		mov	dx, si
		mov	si, [si]
		cmp	si, 0
		jz	locret_0_AC98
		nop
		nop
		nop
		cmp	byte ptr [si+1Dh], 9
		jl	locret_0_AC98
		nop
		nop
		nop
		cmp	byte ptr [si+1Dh], 0Ch
		ja	locret_0_AC98
		nop
		nop
		nop
		mov	[bx], dx
		inc	ax
		add	bx, 2

locret_0_AC98:				; CODE XREF: sub_0_AC74+7j
					; sub_0_AC74+10j ...
		retn
sub_0_AC74	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GOTAX		proc near		; CODE XREF: DIALOG+2F1p
		mov	bx, 0BB6h
		mov	di, ds:0BB6h
		cmp	di, 0
		jz	loc_0_ACB0
		nop
		nop
		nop
		cmp	[di+0Bh], al
		jz	loc_0_ACD1
		nop
		nop
		nop

loc_0_ACB0:				; CODE XREF: GOTAX+Aj
		mov	cx, 6
		mov	bx, 0B65h

loc_0_ACB6:				; CODE XREF: GOTAX+32j
		cmp	word ptr [bx], 0
		jz	loc_0_ACC8
		nop
		nop
		nop
		mov	di, [bx]
		cmp	[di+0Bh], al
		jz	loc_0_ACD1
		nop
		nop
		nop

loc_0_ACC8:				; CODE XREF: GOTAX+20j
		add	bx, 0Ah
		loop	loc_0_ACB6
		mov	ax, 0
		retn
;����������������������������������������������������������������������������

loc_0_ACD1:				; CODE XREF: GOTAX+12j	GOTAX+2Aj
		mov	word ptr [bx], 0
		mov	word ptr [di], 1
		mov	byte ptr ds:13Dh, 1
		mov	ax, 1
		retn
GOTAX		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SSTOVIDTEXT	proc near		; CODE XREF: sub_0_6C64+247p
					; sub_0_6F5B+29p ...
		mov	ax, ds:0D716h
		mov	ds:217Ah, ax
		push	es
		mov	cx, 0A000h
		mov	es, cx
		assume es:nothing
		call	loc_0_FA0
		pop	es
		assume es:nothing
		retn
SSTOVIDTEXT	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CALC1		proc near		; CODE XREF: sub_0_6676+4Dp
					; FINDEVIATION+19p
		mov	ax, ds:3756h
		mov	dx, ds:3758h
		call	ARCTAN
		mov	ax, di
		mov	cx, ds:0AD1h
		mov	dx, cx
		sub	dx, ax
		cmp	dx, 2D0h
		jl	loc_0_AD14
		nop
		nop
		nop
		sub	dx, 5A0h

loc_0_AD14:				; CODE XREF: CALC1+18j
		cmp	dx, 0FD30h
		jg	loc_0_AD21
		nop
		nop
		nop
		add	dx, 5A0h

loc_0_AD21:				; CODE XREF: CALC1+25j
		mov	cx, dx
		cmp	cx, 0
		jg	locret_0_AD2D
		nop
		nop
		nop
		neg	cx

locret_0_AD2D:				; CODE XREF: CALC1+33j
		retn
CALC1		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_AD2E	proc near		; CODE XREF: SHOP+BFp seg000:915Cp
					; ...
		push	dx
		mov	ax, 18h
		call	CLEARBORDER
		call	sub_0_A016
		call	sub_0_A07A
		pop	dx
		mov	di, 5034h
		mov	ax, ds:0D704h
		call	LOADPAD
		call	COPYVIEWBORDER
		retn
sub_0_AD2E	endp

;����������������������������������������������������������������������������
		db    0	;

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SPRITER		proc near		; CODE XREF: STRETCHER+48p
					; MAKEVIEW+D80p ...
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		cmp	word ptr [si+4], 0
		jge	loc_0_AD59
		jmp	loc_0_B06A
;����������������������������������������������������������������������������

loc_0_AD59:				; CODE XREF: SPRITER+Aj
		mov	ax, ds:2630h
		cmp	[si+2],	ax
		jle	loc_0_AD64
		jmp	loc_0_B06A
;����������������������������������������������������������������������������

loc_0_AD64:				; CODE XREF: SPRITER+15j
		mov	ax, ds:262Eh
		cmp	[si+6],	ax
		jle	loc_0_AD6F
		jmp	loc_0_B06A
;����������������������������������������������������������������������������

loc_0_AD6F:				; CODE XREF: SPRITER+20j
		cmp	word ptr [si+8], 0
		jge	loc_0_AD78
		jmp	loc_0_B06A
;����������������������������������������������������������������������������

loc_0_AD78:				; CODE XREF: SPRITER+29j
		mov	bx, [si+0Ah]
		cmp	byte ptr [si+18h], 0
		jz	loc_0_AD8A
		nop
		nop
		nop
		mov	al, [si+18h]
		mov	[bx+0Dh], al

loc_0_AD8A:				; CODE XREF: SPRITER+35j
		mov	ax, [bx+4]
		mov	cx, [si+10h]
		xor	dx, dx
		div	cx
		mov	ds:4EFAh, ax
		mov	ax, [bx+6]
		mov	cx, [si+12h]
		cmp	cx, 0
		jg	loc_0_ADA8
		nop
		nop
		nop
		mov	cx, 1

loc_0_ADA8:				; CODE XREF: SPRITER+56j
		xor	dx, dx
		div	cx
		mov	ds:4F04h, ax
		mov	word ptr ds:3762h, 0
		mov	ax, [si+6]
		cmp	ax, 0
		jge	loc_0_ADC3
		nop
		nop
		nop
		mov	ds:3762h, ax

loc_0_ADC3:				; CODE XREF: SPRITER+71j
		dec	word ptr ds:3762h
		mov	ax, [si+8]
		sub	ax, ds:262Eh
		cmp	ax, 0
		jl	loc_0_ADD9
		nop
		nop
		nop
		sub	[si+10h], ax

loc_0_ADD9:				; CODE XREF: SPRITER+87j
		mov	word ptr ds:3764h, 0
		mov	bp, 0
		mov	ax, [si+2]
		cmp	ax, 0
		jge	loc_0_AE01
		nop
		nop
		nop
		neg	ax
		mov	bp, ax
		sub	[si+12h], ax
		xor	dx, dx
		mul	word ptr ds:4F04h
		mov	al, ah
		mov	ah, dl
		mov	ds:3764h, ax

loc_0_AE01:				; CODE XREF: SPRITER+9Ej
		mov	ax, [si+4]
		sub	ax, ds:2630h
		cmp	ax, 0
		jl	loc_0_AE13
		nop
		nop
		nop
		sub	[si+12h], ax

loc_0_AE13:				; CODE XREF: SPRITER+C1j
		mov	ax, [si+6]
		mov	dx, 140h
		mul	dx
		add	ax, [si+2]
		add	ax, bp
		mov	di, ax
		mov	cx, [si+12h]
		cmp	cx, 0
		jg	loc_0_AE30
		nop
		nop
		nop
		mov	cx, 1

loc_0_AE30:				; CODE XREF: SPRITER+DEj
		mov	dx, [si+10h]
		cmp	dx, 0
		jg	loc_0_AE3E
		nop
		nop
		nop
		mov	dx, 1

loc_0_AE3E:				; CODE XREF: SPRITER+ECj
		mov	ds:4EEEh, dx
		mov	si, [bx+8]
		mov	bp, [bx+0Ah]
		mov	bp, ds:[bp+0]
		mov	ds:3766h, bp
		mov	dx, [bx+0Ch]
		mov	ds:0AA88h, dh
		test	dl, 80h
		jz	loc_0_AE5F
		jmp	loc_0_AF5E
;����������������������������������������������������������������������������

loc_0_AE5F:				; CODE XREF: SPRITER+110j
		test	dl, 40h
		jnz	loc_0_AEE0
		nop
		nop
		nop
		mov	bx, cx
		add	si, ds:3764h
		mov	word ptr ds:4EF6h, 0

loc_0_AE73:				; CODE XREF: SPRITER+191j
		inc	word ptr ds:3762h
		jl	loc_0_AEB2
		nop
		nop
		nop
		mov	ax, ds:4F04h
		xor	dh, dh
		mov	dl, ah
		xor	ah, ah
		mov	bp, dx
		mov	dh, ds:0AA88h
		mov	cx, ds:3766h
		mov	ds, cx
		push	di
		push	si
		mov	cx, bx

loc_0_AE95:				; CODE XREF: SPRITER+15Fj
		mov	dl, [si]
		and	dl, 0Fh
		jz	loc_0_AEA4
		nop
		nop
		nop
		add	dl, dh
		mov	es:[di], dl

loc_0_AEA4:				; CODE XREF: SPRITER+150j
		inc	di
		add	ah, al
		adc	si, bp
		loop	loc_0_AE95
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		pop	si
		pop	di

loc_0_AEB2:				; CODE XREF: SPRITER+12Dj
		add	di, 140h
		mov	dx, COLHTINC
		add	COLHT, dx
		mov	cl, byte ptr COLHT+1
		xor	ch, ch
		cmp	cx, 0
		jz	loc_0_AED2
		nop
		nop
		nop

loc_0_AECC:				; CODE XREF: SPRITER+186j
		add	si, 140h
		loop	loc_0_AECC

loc_0_AED2:				; CODE XREF: SPRITER+17Dj
		mov	byte ptr COLHT+1, 0
		dec	COLDI
		jnz	loc_0_AE73
		jmp	loc_0_B06A
;����������������������������������������������������������������������������

loc_0_AEE0:				; CODE XREF: SPRITER+118j
		mov	bx, cx
		add	si, ROWMISSES
		mov	COLHT, 0

loc_0_AEEC:				; CODE XREF: SPRITER+20Fj
		inc	COLMISSES
		jl	loc_0_AF30
		nop
		nop
		nop
		mov	ax, WWIDTHINC
		xor	dh, dh
		mov	dl, ah
		xor	ah, ah
		mov	bp, dx
		mov	dh, byte_FFD_AA88
		mov	cx, SPRSEG
		mov	ds, cx
		assume ds:nothing
		push	di
		push	si
		mov	cx, bx

loc_0_AF0E:				; CODE XREF: SPRITER+1DDj
		mov	dl, [si]
		shr	dl, 1
		shr	dl, 1
		shr	dl, 1
		shr	dl, 1
		jz	loc_0_AF22
		nop
		nop
		nop
		add	dl, dh
		mov	es:[di], dl

loc_0_AF22:				; CODE XREF: SPRITER+1CEj
		inc	di
		add	ah, al
		adc	si, bp
		loop	loc_0_AF0E
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		pop	si
		pop	di

loc_0_AF30:				; CODE XREF: SPRITER+1A6j
		add	di, 140h
		mov	dx, COLHTINC
		add	COLHT, dx
		mov	cl, byte ptr COLHT+1
		xor	ch, ch
		cmp	cx, 0
		jz	loc_0_AF50
		nop
		nop
		nop

loc_0_AF4A:				; CODE XREF: SPRITER+204j
		add	si, 140h
		loop	loc_0_AF4A

loc_0_AF50:				; CODE XREF: SPRITER+1FBj
		mov	byte ptr COLHT+1, 0
		dec	COLDI
		jnz	loc_0_AEEC
		jmp	loc_0_B06A
;����������������������������������������������������������������������������

loc_0_AF5E:				; CODE XREF: SPRITER+112j
		test	dl, 40h
		jz	loc_0_AF66
		jmp	loc_0_AFE7
;����������������������������������������������������������������������������

loc_0_AF66:				; CODE XREF: SPRITER+217j
		mov	bx, [bx+6]
		xchg	bh, bl
		dec	bx
		add	si, bx
		sub	si, ROWMISSES
		mov	bx, cx
		mov	COLHT, 0

loc_0_AF7A:				; CODE XREF: SPRITER+298j
		inc	COLMISSES
		jl	loc_0_AFB9
		nop
		nop
		nop
		mov	ax, WWIDTHINC
		xor	dh, dh
		mov	dl, ah
		xor	ah, ah
		mov	bp, dx
		mov	dh, byte_FFD_AA88
		mov	cx, SPRSEG
		mov	ds, cx
		assume ds:nothing
		push	di
		push	si
		mov	cx, bx

loc_0_AF9C:				; CODE XREF: SPRITER+266j
		mov	dl, [si]
		and	dl, 0Fh
		jz	loc_0_AFAB
		nop
		nop
		nop
		add	dl, dh
		mov	es:[di], dl

loc_0_AFAB:				; CODE XREF: SPRITER+257j
		inc	di
		add	ah, al
		sbb	si, bp
		loop	loc_0_AF9C
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		pop	si
		pop	di

loc_0_AFB9:				; CODE XREF: SPRITER+234j
		add	di, 140h
		mov	dx, COLHTINC
		add	COLHT, dx
		mov	cl, byte ptr COLHT+1
		xor	ch, ch
		cmp	cx, 0
		jz	loc_0_AFD9
		nop
		nop
		nop

loc_0_AFD3:				; CODE XREF: SPRITER+28Dj
		add	si, 140h
		loop	loc_0_AFD3

loc_0_AFD9:				; CODE XREF: SPRITER+284j
		mov	byte ptr COLHT+1, 0
		dec	COLDI
		jnz	loc_0_AF7A
		jmp	loc_0_B06A
;����������������������������������������������������������������������������

loc_0_AFE7:				; CODE XREF: SPRITER+219j
		mov	bx, [bx+6]
		xchg	bh, bl
		dec	bx
		add	si, bx
		sub	si, ROWMISSES
		mov	bx, cx
		mov	COLHT, 0

loc_0_AFFB:				; CODE XREF: SPRITER+31Ej
		inc	COLMISSES
		jl	loc_0_B03F
		nop
		nop
		nop
		mov	ax, WWIDTHINC
		xor	dh, dh
		mov	dl, ah
		xor	ah, ah
		mov	bp, dx
		mov	dh, byte_FFD_AA88
		mov	cx, SPRSEG
		mov	ds, cx
		assume ds:nothing
		push	di
		push	si
		mov	cx, bx

loc_0_B01D:				; CODE XREF: SPRITER+2ECj
		mov	dl, [si]
		shr	dl, 1
		shr	dl, 1
		shr	dl, 1
		shr	dl, 1
		jz	loc_0_B031
		nop
		nop
		nop
		add	dl, dh
		mov	es:[di], dl

loc_0_B031:				; CODE XREF: SPRITER+2DDj
		inc	di
		add	ah, al
		sbb	si, bp
		loop	loc_0_B01D
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		pop	si
		pop	di

loc_0_B03F:				; CODE XREF: SPRITER+2B5j
		add	di, 140h
		mov	dx, COLHTINC
		add	COLHT, dx
		mov	cl, byte ptr COLHT+1
		xor	ch, ch
		cmp	cx, 0
		jz	loc_0_B05F
		nop
		nop
		nop

loc_0_B059:				; CODE XREF: SPRITER+313j
		add	si, 140h
		loop	loc_0_B059

loc_0_B05F:				; CODE XREF: SPRITER+30Aj
		mov	byte ptr COLHT+1, 0
		dec	COLDI
		jnz	loc_0_AFFB

loc_0_B06A:				; CODE XREF: SPRITER+Cj SPRITER+17j
					; ...
		pop	es
		retn
SPRITER		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MAKEVEL		proc near		; CODE XREF: SETRATES+B1p MAKEVEL+9j
					; ...
		call	RAND
		and	ax, 7
		cmp	ax, 4
		jg	MAKEVEL
		sub	ax, 3
		add	ax, CHARVEL
		cmp	byte ptr [di+0Bh], 0Ah
		jz	loc_0_B0A5
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 19h
		jz	loc_0_B0A5
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 14h
		jz	loc_0_B0A5
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 1Bh
		jz	loc_0_B0A5
		nop
		nop
		nop
		jmp	short loc_0_B0AF
;����������������������������������������������������������������������������
		nop

loc_0_B0A5:				; CODE XREF: MAKEVEL+16j MAKEVEL+1Fj
					; ...
		mov	dx, ax
		sar	dx, 1
		sar	dx, 1
		sar	ax, 1
		add	ax, dx

loc_0_B0AF:				; CODE XREF: MAKEVEL+36j
		cmp	ax, 0
		jg	locret_0_B0BA
		nop
		nop
		nop
		mov	ax, 1

locret_0_B0BA:				; CODE XREF: MAKEVEL+46j
		retn
MAKEVEL		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MAKECHAR	proc near		; CODE XREF: sub_0_6676+190p
					; sub_0_6B1E+E4p ...
		push	cx
		push	si
		push	di
		mov	bx, 6DCEh
		mov	cx, 38h	; '8'

loc_0_B0C4:				; CODE XREF: MAKECHAR+18j
		test	word ptr [di], 1
		jz	loc_0_B0D0
		nop
		nop
		nop
		call	CHAR_DROPS

loc_0_B0D0:				; CODE XREF: MAKECHAR+Dj
		add	bx, 7Bh	; '{'
		loop	loc_0_B0C4
		pop	di
		pop	si
		pop	cx
		mov	word ptr [di+65h], 0
		mov	word ptr [di+67h], 0
		cmp	dl, 1
		jnz	loc_0_B0F6
		nop
		nop
		nop
		cmp	byte_FFD_979, 1
		jz	loc_0_B0F6
		nop
		nop
		nop
		mov	dl, 3

loc_0_B0F6:				; CODE XREF: MAKECHAR+2Aj MAKECHAR+34j
		cmp	dl, 3
		jnz	loc_0_B10A
		nop
		nop
		nop
		cmp	byte_FFD_979, 3
		jz	loc_0_B10A
		nop
		nop
		nop
		mov	dl, 1

loc_0_B10A:				; CODE XREF: MAKECHAR+3Ej MAKECHAR+48j
		mov	word ptr [di+69h], 0C8h	; '�'
		mov	word ptr [di+4Ch], 0
		mov	word ptr [di], 0
		or	word ptr [di], 800h
		mov	dh, 0
		mov	word_FFD_AA90, dx
		mov	[di+0Bh], dl
		mov	ax, si
		mov	bh, al
		mov	al, 80h	; '�'
		mov	bl, 80h	; '�'
		mov	[di+2],	bx
		mov	[di+4],	ax
		mov	[di+6],	si
		mov	[di+0Ah], cl
		mov	byte ptr [di+23h], 1
		call	MAKEVEL
		mov	[di+1Bh], ax
		mov	[di+1Dh], ax
		mov	word ptr [di+1Fh], 0
		mov	word ptr [di+25h], 0
		mov	bx, ax
		mov	ax, 100h
		cwd
		div	bx
		mov	[di+24h], al
		mov	ax, [di+1Bh]
		mov	dx, 0Ah
		mul	dx
		mov	[di+29h], al
		mov	byte ptr [di+2Ah], 0
		mov	bx, 7
		mov	dh, 0Eh
		mov	dl, 50h	; 'P'
		cmp	LEVEL, 0FFFFh
		jnz	loc_0_B180
		nop
		nop
		nop
		mov	bx, 3
		mov	dl, 6Ch	; 'l'

loc_0_B180:				; CODE XREF: MAKECHAR+BBj
		call	RAND
		and	ax, bx
		mov	ah, dh
		mul	ah
		add	al, dl
		mov	[di+22h], al
		call	RAND
		and	ax, bx
		mov	ah, dh
		mul	ah
		add	al, dl
		mov	[di+21h], al

loc_0_B19C:				; CODE XREF: MAKECHAR+EDj
		call	RAND
		shr	ax, 1
		shr	ax, 1
		shr	ax, 1
		and	ax, 6
		jz	loc_0_B19C
		sub	ax, 2
		mov	bx, ax
		add	bx, 0AA8Ah
		mov	ax, [bx]
		mov	[di+19h], ax
		mov	word ptr [di+0Dh], 78h ; 'x'
		mov	word ptr [di+0Fh], 1Eh
		call	RAND
		and	ax, 1Fh
		add	[di+0Dh], ax
		call	RAND
		and	ax, 1Fh
		add	[di+0Fh], ax
		mov	bx, word_FFD_AA90
		shl	bx, 1
		add	bx, 0AA9Ch
		jmp	word ptr [bx]
MAKECHAR	endp

;����������������������������������������������������������������������������
		mov	word ptr [di+11h], 3200h
		mov	word ptr [di+13h], 1500h
		mov	bx, 0D010h
		call	RAND_SOMETHING
		jmp	loc_0_B451
;����������������������������������������������������������������������������

loc_0_B1F3:				; CODE XREF: seg000:B268j seg000:B26Aj
		mov	bx, 0D034h
		call	RAND_SOMETHING

loc_0_B1F9:				; CODE XREF: seg000:B27Aj
		mov	word ptr [di+11h], 3200h
		mov	word ptr [di+13h], 1500h
		sub	word ptr [di+0Dh], 8
		sub	word ptr [di+0Fh], 8
		jmp	loc_0_B451
;����������������������������������������������������������������������������
		mov	word ptr [di+19h], 6000h
		mov	bx, 0D007h
		call	RAND_SOMETHING

loc_0_B219:				; CODE XREF: seg000:B28Fj
		mov	word ptr [di+11h], 3200h
		mov	word ptr [di+13h], 1900h
		add	word ptr [di+0Dh], 8
		add	word ptr [di+0Fh], 8
		jmp	loc_0_B451
;����������������������������������������������������������������������������
		mov	word ptr [di+11h], 3200h
		mov	word ptr [di+13h], 1500h
		mov	bx, 0D02Bh
		call	RAND_SOMETHING
		jmp	loc_0_B451
;����������������������������������������������������������������������������
		mov	word ptr [di+11h], 3200h
		mov	word ptr [di+13h], 1900h
		mov	ax, [di+0Dh]
		sar	ax, 1
		sar	ax, 1
		sub	[di+0Dh], ax
		mov	ax, [di+0Fh]
		sar	ax, 1
		sar	ax, 1
		sub	[di+0Fh], ax
		mov	bx, 0D022h
		call	RAND_SOMETHING
		jmp	loc_0_B451
;����������������������������������������������������������������������������
		jmp	short loc_0_B1F3
;����������������������������������������������������������������������������
		jmp	short loc_0_B1F3
;����������������������������������������������������������������������������
		add	word ptr [di+0Dh], 20h ; ' '
		add	word ptr [di+0Fh], 10h
		mov	bx, 0D019h
		call	RAND_SOMETHING
		jmp	loc_0_B1F9
;����������������������������������������������������������������������������
		add	word ptr [di+0Dh], 20h ; ' '
		add	word ptr [di+0Fh], 10h
		mov	byte ptr [di+0Bh], 9
		mov	bx, 0D03Dh
		call	RAND_SOMETHING
		jmp	short loc_0_B219
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D046h
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		add	word ptr [di+0Fh], 20h ; ' '
		add	word ptr [di+0Dh], 18h
		or	word ptr [di], 4000h
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D04Fh
		and	word ptr [di], 0F7FFh
		mov	word ptr [di+19h], 0B000h
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 2800h
		mov	bx, 0D058h
		mov	word ptr [di+19h], 0B000h
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D061h
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		add	word ptr [di+0Dh], 19h
		add	word ptr [di+0Fh], 0Ah
		or	word ptr [di], 4000h
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D06Ah
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		add	word ptr [di+0Dh], 18h
		add	word ptr [di+0Fh], 14h
		or	word ptr [di], 4000h
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 2800h
		mov	bx, 0D073h
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		or	word ptr [di], 4000h
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D07Ch
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D085h
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		add	word ptr [di+0Dh], 20h ; ' '
		add	word ptr [di+0Fh], 10h
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D08Eh
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		or	word ptr [di], 4000h
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D097h
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		add	word ptr [di+0Dh], 10h
		add	word ptr [di+0Fh], 10h
		or	word ptr [di], 4000h
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 2800h
		mov	bx, 0D0A0h
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		mov	word ptr [di+0Dh], 0FAh	; '�'
		mov	word ptr [di+0Fh], 64h ; 'd'
		jmp	loc_0_B446
;����������������������������������������������������������������������������
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D0A9h
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		or	word ptr [di], 4000h
		jmp	short loc_0_B446
;����������������������������������������������������������������������������
		nop
		mov	word ptr [di+13h], 2800h
		mov	bx, 0D0B2h
		mov	word ptr [di+19h], 0B000h
		add	word ptr [di+0Dh], 8
		add	word ptr [di+0Fh], 8
		jmp	short loc_0_B446
;����������������������������������������������������������������������������
		nop
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D0BBh
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		mov	word ptr [di+8], 5
		mov	word ptr [di+25h], 3
		mov	word ptr [di+0Dh], 0FAh	; '�'
		mov	word ptr [di+0Fh], 64h ; 'd'
		or	word ptr [di], 4000h
		jmp	short loc_0_B446
;����������������������������������������������������������������������������
		nop
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D0C4h
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		add	word ptr [di+0Dh], 18h
		or	word ptr [di], 4000h
		jmp	short loc_0_B446
;����������������������������������������������������������������������������
		nop
		jmp	short loc_0_B446
;����������������������������������������������������������������������������
		nop
		mov	word ptr [di+13h], 3500h
		mov	bx, 0D0D6h
		mov	word ptr [di+19h], 0B000h
		and	word ptr [di], 0F7FFh
		or	word ptr [di], 4000h
		jmp	short loc_0_B446
;����������������������������������������������������������������������������
		nop

loc_0_B446:				; CODE XREF: seg000:B2AEj seg000:B2C2j
					; ...
		mov	word ptr [di+11h], 6400h
		call	RAND_SOMETHING
		jmp	short loc_0_B451
;����������������������������������������������������������������������������
		nop

loc_0_B451:				; CODE XREF: seg000:B1F0j seg000:B20Bj
					; ...
		mov	ax, 0D706h
		mov	[di+17h], ax
		mov	bx, word_FFD_AD5
		shl	bx, 1
		shl	bx, 1
		shl	bx, 1
		mov	ax, [di+25h]
		shl	ax, 1
		add	bx, ax
		add	bx, 9404h
		mov	cx, [bx]
		mov	bx, 9444h
		mov	al, [di+0Bh]
		mov	ah, 0
		shl	ax, 1
		add	bx, ax
		mov	bx, [bx]
		add	bx, cx
		mov	al, [di+0Ch]
		shl	ax, 1
		shl	ax, 1
		add	bx, ax
		mov	ax, [bx]
		mov	bx, [bx+2]
		mov	[di+15h], ax
		and	word ptr [di+19h], 0FF3Fh
		or	[di+19h], bx
		call	RAND
		mov	[di+51h], al
		mov	byte ptr [di+2Bh], 7Bh ; '{'
		mov	byte ptr [di+2Ch], 8
		cmp	word_FFD_AA90, 1
		jnz	loc_0_B4B2
		nop
		nop
		nop
		dec	byte ptr [di+2Ch]

loc_0_B4B2:				; CODE XREF: seg000:B4AAj
		cmp	word_FFD_AA90, 5
		jnz	loc_0_B4BF
		nop
		nop
		nop
		dec	byte ptr [di+2Ch]

loc_0_B4BF:				; CODE XREF: seg000:B4B7j
		cmp	word_FFD_AA90, 7
		jnz	loc_0_B4CD
		nop
		nop
		nop
		mov	byte ptr [di+2Ch], 1Bh

loc_0_B4CD:				; CODE XREF: seg000:B4C4j
		call	RAND
		mov	ah, NO_FORENAMES
		dec	ah
		call	RAND_RANGE
		mov	[di+2Dh], al
		mov	byte ptr [di+2Eh], 20h ; ' '
		mov	byte ptr [di+2Fh], 7Bh ; '{'
		mov	byte ptr [di+30h], 9
		call	RAND
		call	RAND
		call	RAND
		xchg	ah, al
		mov	ah, NO_SURNAMES
		dec	ah
		call	RAND_RANGE
		mov	[di+31h], al
		mov	byte ptr [di+32h], 0FFh
		mov	byte ptr [di+33h], 7Bh ; '{'
		mov	byte ptr [di+34h], 0Ch
		call	RAND
		and	ah, 7
		mov	[di+35h], ah
		mov	byte ptr [di+36h], 0FFh
		cmp	word_FFD_AA90, 5
		jnz	loc_0_B526
		nop
		nop
		nop
		mov	byte ptr [di+35h], 3

loc_0_B526:				; CODE XREF: seg000:B51Dj
		mov	byte ptr [di+37h], 7Bh ; '{'
		mov	byte ptr [di+38h], 0Bh
		call	RAND
		mov	ah, 7
		call	RAND_RANGE
		mov	[di+39h], al
		mov	byte ptr [di+3Ah], 20h ; ' '
		mov	byte ptr [di+3Bh], 7Bh ; '{'
		mov	byte ptr [di+3Ch], 0Ah
		call	RAND
		mov	ah, NO_TRADES
		dec	ah
		call	RAND_RANGE
		mov	[di+3Dh], al
		mov	byte ptr [di+3Eh], 0FFh
		cmp	word_FFD_AA90, 2
		jnz	loc_0_B579
		nop
		nop
		nop
		and	ah, 3
		mov	byte ptr [di+38h], 0Eh
		mov	[di+39h], ah
		mov	byte ptr [di+3Ch], 0Dh
		call	RAND
		and	ah, 3
		mov	[di+3Dh], ah

loc_0_B579:				; CODE XREF: seg000:B55Dj
		cmp	word_FFD_AA90, 3
		jnz	loc_0_B59B
		nop
		nop
		nop
		and	ah, 3
		mov	byte ptr [di+38h], 0Bh
		mov	byte ptr [di+39h], 6
		mov	byte ptr [di+3Ch], 1Ah
		call	RAND
		and	ah, 0Fh
		mov	[di+3Dh], ah

loc_0_B59B:				; CODE XREF: seg000:B57Ej
		cmp	word_FFD_AA90, 5
		jnz	loc_0_B5BA
		nop
		nop
		nop
		mov	byte ptr [di+38h], 0Bh
		mov	byte ptr [di+39h], 6
		mov	byte ptr [di+3Ch], 1Ch
		call	RAND
		and	ah, 3
		mov	[di+3Dh], ah

loc_0_B5BA:				; CODE XREF: seg000:B5A0j
		cmp	word_FFD_AA90, 9
		jnz	loc_0_B5C8
		nop
		nop
		nop
		mov	byte ptr [di+3Dh], 5

loc_0_B5C8:				; CODE XREF: seg000:B5BFj
		mov	word ptr [di+42h], 0
		mov	word ptr [di+44h], 0
		mov	word ptr [di+46h], 0
		mov	word ptr [di+48h], 0
		cmp	byte ptr [di+0Bh], 0Ch
		jz	loc_0_B649
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 19h
		jz	loc_0_B649
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 12h
		jz	loc_0_B649
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 14h
		jz	loc_0_B649
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 2
		jz	loc_0_B649
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 18h
		jz	loc_0_B649
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 10h
		jz	loc_0_B649
		nop
		nop
		nop
		call	RAND
		test	ah, 0Ch
		jnz	loc_0_B630
		nop
		nop
		nop
		and	ax, 7
		inc	ax
		mov	[di+42h], ax
		jmp	short loc_0_B649
;����������������������������������������������������������������������������
		nop

loc_0_B630:				; CODE XREF: seg000:B621j
		call	RAND
		and	ax, 7
		cmp	ax, 5
		jg	loc_0_B649
		nop
		nop
		nop
		mov	bx, ax
		call	RAND
		and	ax, 3
		mov	[bx+di+44h], al

loc_0_B649:				; CODE XREF: seg000:B5E0j seg000:B5E9j
					; ...
		mov	cx, 4
		mov	bx, 0

loc_0_B64F:				; CODE XREF: seg000:B669j
		call	RAND
		and	ah, 1Fh
		mov	al, ah
		mov	ah, 0
		shl	ax, 1
		mov	si, ax
		add	si, 9A90h
		mov	ax, [si]
		mov	[bx+di+52h], ax
		add	bx, 2
		loop	loc_0_B64F
		mov	ax, [di+52h]
		mov	[di+27h], ax
		mov	byte ptr [di+62h], 0
		cmp	ACTITETASK, 9
		jnz	loc_0_B6A2
		nop
		nop
		nop
		cmp	HOURS, 8
		jl	loc_0_B6A2
		nop
		nop
		nop
		mov	word ptr [di+52h], 6B44h
		mov	word ptr [di+27h], 6B44h
		mov	word ptr [di+54h], 6B42h
		mov	word ptr [di+56h], 6D44h
		mov	word ptr [di+58h], 6B46h

loc_0_B6A2:				; CODE XREF: seg000:B67Aj seg000:B684j
		cmp	word_FFD_AA90, 17h
		jz	loc_0_B70A
		nop
		nop
		nop
		mov	cl, 12h
		cmp	word_FFD_AA90, 3
		jnz	loc_0_B6BA
		nop
		nop
		nop
		mov	cl, 20h	; ' '

loc_0_B6BA:				; CODE XREF: seg000:B6B3j
		call	RAND
		cmp	al, cl
		ja	loc_0_B70A
		nop
		nop
		nop
		cmp	word_FFD_AA90, 2
		jz	loc_0_B6F8
		nop
		nop
		nop
		cmp	word_FFD_AA90, 3
		jz	loc_0_B6E8
		nop
		nop
		nop
		mov	word ptr [di+27h], 0FC18h
		or	word ptr [di], 10h
		mov	word ptr [di+65h], 0FFFFh
		jmp	short loc_0_B70A
;����������������������������������������������������������������������������
		nop

loc_0_B6E8:				; CODE XREF: seg000:B6D3j
		mov	word ptr [di+27h], 0FC18h
		or	word ptr [di], 10h
		mov	word ptr [di+65h], 611Ah
		jmp	short loc_0_B70A
;����������������������������������������������������������������������������
		nop

loc_0_B6F8:				; CODE XREF: seg000:B6C9j
		or	word ptr [di], 10h
		mov	word ptr [di+65h], 3993h
		mov	word ptr [di+67h], 9
		mov	word ptr [di+27h], 0FC18h

loc_0_B70A:				; CODE XREF: seg000:B6A7j seg000:B6BFj
					; ...
		or	word ptr [di], 40h
		mov	byte ptr [di+4Eh], 0
		test	word ptr [di], 4000h
		jz	locret_0_B733
		nop
		nop
		nop
		mov	word ptr [di+27h], 0FC18h
		mov	word ptr [di+52h], 0FC18h
		mov	word ptr [di+54h], 0FC18h
		mov	word ptr [di+56h], 0FC18h
		mov	word ptr [di+58h], 0FC18h

locret_0_B733:				; CODE XREF: seg000:B715j
		retn

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

RAND_SOMETHING	proc near		; CODE XREF: seg000:B1EDp seg000:B1F6p
					; ...
		mov	ax, RAN
		and	ax, [bx+2]	; Copiamos el valor RAN	a AX
		add	ax, [bx]
		mov	[di+69h], ax	; Mueve	todo el	valor aleatorio	a [di+69h]
		mov	al, [bx+4]
		mov	[di+6Bh], al
		mov	al, [bx+5]
		mov	[di+6Ch], al
		mov	al, [bx+6]
		mov	[di+6Dh], al
		mov	al, [bx+7]
		mov	[di+6Eh], al
		mov	al, [bx+8]
		mov	[di+6Fh], al
		retn
RAND_SOMETHING	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MAKEREGULARS	proc near		; CODE XREF: CONTROLLER+18p
					; sub_0_49FD+37Dp ...
		mov	ax, HEROADD
		mov	bx, 0AAD9h

loc_0_B764:				; CODE XREF: MAKEREGULARS+18j
		cmp	word ptr [bx], 0FFFFh
		jnz	loc_0_B76C
		jmp	loc_0_B9D4
;����������������������������������������������������������������������������

loc_0_B76C:				; CODE XREF: MAKEREGULARS+9j
		cmp	[bx], ax
		jz	loc_0_B778
		nop
		nop
		nop
		add	bx, 6
		jmp	short loc_0_B764
;����������������������������������������������������������������������������

loc_0_B778:				; CODE XREF: MAKEREGULARS+10j
		mov	si, [bx+2]
		mov	word_FFD_AAD4, si
		cmp	byte ptr [bx+4], 1
		jnz	loc_0_B78E
		nop
		nop
		nop
		call	sub_0_BA48
		jmp	locret_0_BA47
;����������������������������������������������������������������������������

loc_0_B78E:				; CODE XREF: MAKEREGULARS+25j
		cmp	si, 0C456h
		jnz	loc_0_B7A1
		nop
		nop
		nop
		mov	byte_FFD_A826, 0
		mov	byte_FFD_A82A, 0

loc_0_B7A1:				; CODE XREF: MAKEREGULARS+34j
		cmp	si, 0C239h
		jnz	loc_0_B7BE
		nop
		nop
		nop
		cmp	HOURS, 8
		jge	loc_0_B7B4
		jmp	locret_0_BA47
;����������������������������������������������������������������������������

loc_0_B7B4:				; CODE XREF: MAKEREGULARS+51j
		cmp	WITCHDONE, 1
		jnz	loc_0_B7BE
		jmp	locret_0_BA47
;����������������������������������������������������������������������������

loc_0_B7BE:				; CODE XREF: MAKEREGULARS+47j
					; MAKEREGULARS+5Bj
		cmp	byte ptr [si], 0
		jnz	loc_0_B7C6
		jmp	loc_0_B9D4
;����������������������������������������������������������������������������

loc_0_B7C6:				; CODE XREF: MAKEREGULARS+63j
		mov	cl, [si]
		mov	ch, 0
		inc	si
		mov	di, 8277h

loc_0_B7CE:				; CODE XREF: MAKEREGULARS+270j
		push	cx
		test	word ptr [di], 1
		jnz	loc_0_B7D8
		jmp	loc_0_B9B6
;����������������������������������������������������������������������������

loc_0_B7D8:				; CODE XREF: MAKEREGULARS+75j
		mov	cl, [si+2]
		mov	dl, [si+3]
		cmp	dl, 7
		jnz	loc_0_B7F2
		nop
		nop
		nop
		cmp	byte_FFD_97A, 8
		jnz	loc_0_B7F2
		nop
		nop
		nop
		mov	dl, 2

loc_0_B7F2:				; CODE XREF: MAKEREGULARS+83j
					; MAKEREGULARS+8Dj
		cmp	dl, 1
		jnz	loc_0_B803
		nop
		nop
		nop
		cmp	byte_FFD_979, dl
		jz	loc_0_B803
		jmp	loc_0_B9B6
;����������������������������������������������������������������������������

loc_0_B803:				; CODE XREF: MAKEREGULARS+97j
					; MAKEREGULARS+A0j
		cmp	dl, 3
		jnz	loc_0_B814
		nop
		nop
		nop
		cmp	byte_FFD_979, dl
		jz	loc_0_B814
		jmp	loc_0_B9B6
;����������������������������������������������������������������������������

loc_0_B814:				; CODE XREF: MAKEREGULARS+A8j
					; MAKEREGULARS+B1j
		push	si
		mov	si, [si]
		call	MAKECHAR
		pop	si
		and	word ptr [di], 0FFEFh
		mov	word ptr [di+65h], 0
		mov	word ptr [di+67h], 0
		mov	ax, [si+4]
		mov	[di+0Dh], ax
		mov	ax, [si+6]
		mov	[di+0Fh], ax
		mov	ax, [si+8]
		mov	[di+1Ah], ah
		push	es
		mov	ax, ds
		mov	es, ax
		assume es:seg001
		push	si
		push	di
		add	si, 0Ch
		add	di, 2Bh	; '+'
		mov	cx, 3Ah	; ':'
		rep movsb
		pop	di
		pop	si
		pop	es
		assume es:nothing
		mov	bx, 0
		mov	bl, [di+4Eh]
		add	bx, 0AED1h
		cmp	byte ptr [bx], 0
		jz	loc_0_B867
		nop
		nop
		nop
		or	word ptr [di], 1
		jmp	loc_0_B9B6
;����������������������������������������������������������������������������

loc_0_B867:				; CODE XREF: MAKEREGULARS+FEj
		mov	al, [di+4Fh]
		mov	ah, 0
		cmp	ax, 0
		jz	loc_0_B883
		nop
		nop
		nop
		cmp	ACTITETASK, ax
		jz	loc_0_B883
		nop
		nop
		nop
		or	word ptr [di], 1
		jmp	loc_0_B9B6
;����������������������������������������������������������������������������

loc_0_B883:				; CODE XREF: MAKEREGULARS+111j
					; MAKEREGULARS+11Aj
		mov	ax, [si+0Ah]
		or	[di], ax
		mov	ax, [di+52h]
		mov	[di+27h], ax
		mov	byte ptr [di+62h], 0
		mov	word ptr [di+63h], 14h
		mov	word ptr [di+8], 1
		or	word ptr [di], 400h
		cmp	word ptr [di+4Ah], 0
		jz	loc_0_B8AC
		nop
		nop
		nop
		or	word ptr [di], 4

loc_0_B8AC:				; CODE XREF: MAKEREGULARS+146j
		cmp	word ptr [di+44h], 0
		jz	loc_0_B8DB
		nop
		nop
		nop
		mov	ax, [di+44h]
		mov	word ptr [di+44h], 0
		mov	[di+65h], ax
		or	word ptr [di], 10h
		cmp	word ptr [di+46h], 0
		jz	loc_0_B8DB
		nop
		nop
		nop
		mov	ax, [di+46h]
		mov	word ptr [di+46h], 0
		mov	[di+70h], ax
		or	word ptr [di], 2000h

loc_0_B8DB:				; CODE XREF: MAKEREGULARS+152j
					; MAKEREGULARS+169j
		cmp	byte ptr [di+4Eh], 10h
		jnz	loc_0_B8F8
		nop
		nop
		nop
		cmp	PICKUPFLAG, 0
		jnz	loc_0_B8F8
		nop
		nop
		nop
		mov	bx, TASKOBJECTBLOCK
		mov	[di+4Ch], bx
		or	word ptr [bx], 4

loc_0_B8F8:				; CODE XREF: MAKEREGULARS+181j
					; MAKEREGULARS+18Bj
		cmp	byte ptr [di+4Eh], 11h
		jnz	loc_0_B90E
		nop
		nop
		nop
		cmp	PICKUPFLAG, 0
		jz	loc_0_B90E
		nop
		nop
		nop
		and	word ptr [di], 0FFEFh

loc_0_B90E:				; CODE XREF: MAKEREGULARS+19Ej
					; MAKEREGULARS+1A8j
		cmp	byte ptr [di+0Bh], 0Ch
		jnz	loc_0_B924
		nop
		nop
		nop
		cmp	byte ptr [di+1Ah], 60h ; '`'
		jz	loc_0_B924
		nop
		nop
		nop
		or	word ptr [di], 800h

loc_0_B924:				; CODE XREF: MAKEREGULARS+1B4j
					; MAKEREGULARS+1BDj
		cmp	byte ptr [di+4Eh], 16h
		jnz	loc_0_B930
		nop
		nop
		nop
		and	word ptr [di], 0FFBFh

loc_0_B930:				; CODE XREF: MAKEREGULARS+1CAj
		cmp	byte ptr [di+4Eh], 22h ; '"'
		jnz	loc_0_B957
		nop
		nop
		nop
		cmp	TASK43FLAG, 0
		jnz	loc_0_B953
		nop
		nop
		nop
		and	word ptr [di], 0FFBFh
		mov	ax, HOURS
		sar	ax, 1
		cmp	ax, 7
		jz	loc_0_B957
		nop
		nop
		nop

loc_0_B953:				; CODE XREF: MAKEREGULARS+1E0j
		mov	word ptr [di], 1

loc_0_B957:				; CODE XREF: MAKEREGULARS+1D6j
					; MAKEREGULARS+1F0j
		cmp	byte ptr [di+4Eh], 32h ; '2'
		jnz	loc_0_B96E
		nop
		nop
		nop
		cmp	TASK74FLAG, 1
		jnz	loc_0_B96E
		nop
		nop
		nop
		mov	word ptr [di], 1

loc_0_B96E:				; CODE XREF: MAKEREGULARS+1FDj
					; MAKEREGULARS+207j
		cmp	byte ptr [di+4Eh], 33h ; '3'
		jnz	loc_0_B986
		nop
		nop
		nop
		mov	word ptr [di+25h], 2
		mov	word ptr [di+2], 46D0h
		mov	word ptr [di+4], 6D40h

loc_0_B986:				; CODE XREF: MAKEREGULARS+214j
		cmp	byte ptr [di+4Eh], 34h ; '4'
		jnz	loc_0_B99E
		nop
		nop
		nop
		mov	word ptr [di+25h], 2
		mov	word ptr [di+2], 46D0h
		mov	word ptr [di+4], 6DB0h

loc_0_B99E:				; CODE XREF: MAKEREGULARS+22Cj
		cmp	byte ptr [di+4Eh], 35h ; '5'
		jnz	loc_0_B9B6
		nop
		nop
		nop
		mov	word ptr [di+25h], 3
		mov	word ptr [di+2], 4680h
		mov	word ptr [di+4], 6DD0h

loc_0_B9B6:				; CODE XREF: MAKEREGULARS+77j
					; MAKEREGULARS+A2j ...
		cmp	LEVEL, 0FFFFh
		jnz	loc_0_B9C3
		nop
		nop
		nop
		and	word ptr [di], 0FFBFh

loc_0_B9C3:				; CODE XREF: MAKEREGULARS+25Dj
		add	si, 46h	; 'F'
		add	di, 7Bh	; '{'
		pop	cx
		loop	loc_0_B9CE
		jmp	short loc_0_B9D1
;����������������������������������������������������������������������������

loc_0_B9CE:				; CODE XREF: MAKEREGULARS+26Cj
		jmp	loc_0_B7CE
;����������������������������������������������������������������������������

loc_0_B9D1:				; CODE XREF: MAKEREGULARS+26Ej
		jmp	short locret_0_BA47
;����������������������������������������������������������������������������
		nop

loc_0_B9D4:				; CODE XREF: MAKEREGULARS+Bj
					; MAKEREGULARS+65j
		cmp	word_FFD_CCAE, 0
		jnz	locret_0_BA47
		nop
		nop
		nop
		mov	dx, HEROADD
		test	dx, 3
		jnz	locret_0_BA47
		nop
		nop
		nop
		cmp	LEVEL, 0FFFFh
		jz	locret_0_BA47
		nop
		nop
		nop
		cmp	FLOORATT, 0
		jnz	locret_0_BA47
		nop
		nop
		nop
		cmp	DORS, 1
		jz	locret_0_BA47
		nop
		nop
		nop
		mov	HOWCLOSE, 7
		call	NEARBASKET
		cmp	bp, 1
		jz	locret_0_BA47
		nop
		nop
		nop
		mov	ax, RAN
		push	ax
		mov	si, HEROADD
		add	dx, LEVEL
		add	dx, PLAYERSEED
		mov	RAN, dx
		mov	di, 6DCEh
		mov	cx, LEVEL
		call	RAND
		and	ah, 1
		mov	dl, ah
		call	MAKECHAR
		and	word ptr [di], 0FFBFh
		pop	ax
		mov	RAN, ax

locret_0_BA47:				; CODE XREF: MAKEREGULARS+2Dj
					; MAKEREGULARS+53j ...
		retn
MAKEREGULARS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_BA48	proc near		; CODE XREF: MAKEREGULARS+2Ap
		cmp	si, 0B8AEh
		jnz	loc_0_BA5B
		nop
		nop
		nop
		cmp	TASK12DONE, 1
		jz	loc_0_BA5B
		jmp	locret_0_BBC4
;����������������������������������������������������������������������������

loc_0_BA5B:				; CODE XREF: sub_0_BA48+4j
					; sub_0_BA48+Ej
		cmp	si, 0C419h
		jnz	loc_0_BA6B
		nop
		nop
		nop
		cmp	GORGONDEAD, 1
		jz	locret_0_BA47

loc_0_BA6B:				; CODE XREF: sub_0_BA48+17j
		cmp	byte ptr [si], 0
		jnz	loc_0_BA73
		jmp	locret_0_BBC4
;����������������������������������������������������������������������������

loc_0_BA73:				; CODE XREF: sub_0_BA48+26j
		mov	cl, [si]
		mov	ch, 0
		inc	si
		mov	di, 84DEh

loc_0_BA7B:				; CODE XREF: sub_0_BA48+179j
		push	cx
		mov	cl, [si+2]
		mov	dl, [si+3]
		cmp	word_FFD_AAD4, 0BC9Ah
		jnz	loc_0_BABD
		nop
		nop
		nop
		cmp	dl, 1Bh
		jnz	loc_0_BABD
		nop
		nop
		nop
		cmp	DAYPOINTER, 3
		jz	loc_0_BAB6
		nop
		nop
		nop
		cmp	DAYPOINTER, 5
		jz	loc_0_BABB
		nop
		nop
		nop
		cmp	DAYPOINTER, 1
		jz	loc_0_BABD
		nop
		nop
		nop
		jmp	loc_0_BBB6
;����������������������������������������������������������������������������

loc_0_BAB6:				; CODE XREF: sub_0_BA48+52j
		mov	dl, 0Ah
		jmp	short loc_0_BABD
;����������������������������������������������������������������������������
		nop

loc_0_BABB:				; CODE XREF: sub_0_BA48+5Cj
		mov	dl, 0Fh

loc_0_BABD:				; CODE XREF: sub_0_BA48+40j
					; sub_0_BA48+48j ...
		push	si
		mov	si, [si]
		call	MAKECHAR
		pop	si
		cmp	word_FFD_AAD4, 0B88Dh
		jnz	loc_0_BAD3
		nop
		nop
		nop
		and	word ptr [di], 0F7FFh

loc_0_BAD3:				; CODE XREF: sub_0_BA48+82j
		mov	ax, [si+4]
		mov	[di+1Ah], ah
		mov	al, [si+9]
		cmp	al, 0
		jz	loc_0_BAE6
		nop
		nop
		nop
		mov	[di+6Ch], al

loc_0_BAE6:				; CODE XREF: sub_0_BA48+96j
		mov	ax, [si+6]
		mov	[di+4Ch], ax
		mov	al, [si+8]
		mov	ah, 0
		cmp	al, 0FFh
		jnz	loc_0_BB22
		nop
		nop
		nop
		mov	word ptr [di+2], 3D10h
		mov	word ptr [di+4], 5FF0h
		mov	word ptr [di+6], 5F3Dh
		mov	word ptr [di+25h], 0
		mov	word ptr [di+8], 5
		cmp	DRAGONDEAD, 1	; �Est�	muerto el drag�n?
		jnz	loc_0_BB39
		nop
		nop
		nop
		mov	word ptr [di], 1
		jmp	short loc_0_BB39
;����������������������������������������������������������������������������
		nop

loc_0_BB22:				; CODE XREF: sub_0_BA48+ABj
		cmp	ax, 0
		jz	loc_0_BB39
		nop
		nop
		nop
		cmp	ACTITETASK, ax
		jz	loc_0_BB39
		nop
		nop
		nop
		or	word ptr [di], 1
		jmp	short loc_0_BBB3
;����������������������������������������������������������������������������
		nop

loc_0_BB39:				; CODE XREF: sub_0_BA48+CEj
					; sub_0_BA48+D7j ...
		cmp	byte ptr [di+0Bh], 0Ch
		jnz	loc_0_BB4F	; La misi�n activa es la 17?
		nop
		nop
		nop
		cmp	byte ptr [di+1Ah], 60h ; '`'
		jz	loc_0_BB4F	; La misi�n activa es la 17?
		nop
		nop
		nop
		or	word ptr [di], 800h

loc_0_BB4F:				; CODE XREF: sub_0_BA48+F5j
					; sub_0_BA48+FEj
		cmp	ACTITETASK, 11h	; La misi�n activa es la 17?
		jnz	loc_0_BB7D
		nop
		nop
		nop
		cmp	word_FFD_AAD4, 0BA8Bh
		jnz	loc_0_BB7D
		nop
		nop
		nop
		mov	word ptr [di+52h], 0FC18h
		mov	word ptr [di+52h], 0FC18h
		mov	word ptr [di+27h], 0FC18h
		or	word ptr [di], 4000h
		mov	bx, 0D0DFh
		call	RAND_SOMETHING

loc_0_BB7D:				; CODE XREF: sub_0_BA48+10Cj
					; sub_0_BA48+117j
		cmp	word_FFD_AAD4, 0C594h
		jnz	loc_0_BB8D
		nop
		nop
		nop
		mov	word ptr [di+0Dh], 0FFh

loc_0_BB8D:				; CODE XREF: sub_0_BA48+13Bj
		cmp	word_FFD_AAD4, 0C206h
		jnz	loc_0_BB9D
		nop
		nop
		nop
		mov	word ptr [di+0Dh], 0FFh

loc_0_BB9D:				; CODE XREF: sub_0_BA48+14Bj
		cmp	byte ptr [di+0Bh], 12h
		jnz	loc_0_BBB3
		nop
		nop
		nop
		cmp	byte ptr [di+1Ah], 0B0h	; '�'
		jnz	loc_0_BBB3
		nop
		nop
		nop
		or	word ptr [di], 4000h

loc_0_BBB3:				; CODE XREF: sub_0_BA48+EEj
					; sub_0_BA48+159j ...
		and	word ptr [di], 0FFBFh

loc_0_BBB6:				; CODE XREF: sub_0_BA48+6Bj
		add	si, 0Ah
		add	di, 7Bh	; '{'
		pop	cx
		loop	loc_0_BBC1
		jmp	short locret_0_BBC4
;����������������������������������������������������������������������������

loc_0_BBC1:				; CODE XREF: sub_0_BA48+175j
		jmp	loc_0_BA7B
;����������������������������������������������������������������������������

locret_0_BBC4:				; CODE XREF: sub_0_BA48+10j
					; sub_0_BA48+28j ...
		retn
sub_0_BA48	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MIDNIGHT	proc near		; CODE XREF: sub_0_5740+123p
		mov	WITCHDONE, 0
		mov	NO_OF_GAMES, 0
		mov	si, 9F51h

loc_0_BBD3:				; CODE XREF: MIDNIGHT+54j
		mov	bx, si
		add	bx, 13h
		mov	cl, [bx]
		mov	ch, 0
		mov	bp, 0
		mov	bx, si
		add	bx, 1Fh

loc_0_BBE4:				; CODE XREF: MIDNIGHT+46j
		mov	al, [bx]
		cmp	al, 0
		jz	loc_0_BC09
		nop
		nop
		nop
		cmp	GUILDS_MASTERED, 0
		jnz	loc_0_BC09
		nop
		nop
		nop
		dec	al
		mov	[bx], al
		cmp	al, 2
		jz	loc_0_BC1B
		nop
		nop
		nop
		cmp	al, 0
		jz	loc_0_BC25
		nop
		nop
		nop

loc_0_BC09:				; CODE XREF: MIDNIGHT+23j MIDNIGHT+2Dj
					; ...
		inc	bx
		inc	bp
		loop	loc_0_BBE4
		cmp	si, 0A0D9h
		jnz	loc_0_BC16
		jmp	loc_0_BCD2
;����������������������������������������������������������������������������

loc_0_BC16:				; CODE XREF: MIDNIGHT+4Cj
		add	si, 38h	; '8'
		jmp	short loc_0_BBD3
;����������������������������������������������������������������������������

loc_0_BC1B:				; CODE XREF: MIDNIGHT+38j
		push	si
		push	bx
		push	cx
		push	bp
		pop	bp
		pop	cx
		pop	bx
		pop	si
		jmp	short loc_0_BC09
;����������������������������������������������������������������������������

loc_0_BC25:				; CODE XREF: MIDNIGHT+3Fj
		push	si
		push	bx
		push	cx
		push	bp
		mov	di, 0B17h
		mov	cx, 4
		mov	bx, si
		add	bx, 27h	; '''
		add	bx, bp
		add	bx, bp
		mov	ax, [bx]
		mov	dx, 2

loc_0_BC3D:				; CODE XREF: MIDNIGHT+85j
		cmp	[di], ax
		jz	loc_0_BC4F
		nop
		nop
		nop
		add	di, 2
		add	dx, 2
		loop	loc_0_BC3D
		sub	di, 8

loc_0_BC4F:				; CODE XREF: MIDNIGHT+7Aj
		mov	word ptr [di], 0
		mov	ACTIVEBASKET, dx
		mov	word_FFD_AA94, ax
		dec	ROOMSBOOKED
		cmp	ROOMSBOOKED, 0
		jge	loc_0_BC6D
		nop
		nop
		nop
		mov	ROOMSBOOKED, 0

loc_0_BC6D:				; CODE XREF: MIDNIGHT+9Ej
		push	es
		mov	ax, MAPSEG
		mov	es, ax
		assume es:nothing
		mov	si, 0B65h
		add	si, ACTIVEBASKET
		mov	cx, 4

loc_0_BC7D:				; CODE XREF: MIDNIGHT+CCj
		cmp	word ptr [si], 0
		jz	loc_0_BC8E
		nop
		nop
		nop
		mov	di, [si]
		mov	word ptr [si], 0
		call	REPOSITIONOBJ

loc_0_BC8E:				; CODE XREF: MIDNIGHT+BBj
		add	si, 0Ah
		loop	loc_0_BC7D
		pop	es
		assume es:nothing
		mov	si, 0B1Fh
		add	si, ACTIVEBASKET
		mov	cx, 7

loc_0_BC9E:				; CODE XREF: MIDNIGHT+E0j
		mov	word ptr [si], 0
		add	si, 0Ah
		loop	loc_0_BC9E
		mov	ax, HEROADD
		mov	dx, word_FFD_AA94
		call	CELLSAPART
		cmp	ax, 2
		jg	loc_0_BCBF
		nop
		nop
		nop
		mov	bp, 2
		call	MAKE_ARRESTER

loc_0_BCBF:				; CODE XREF: MIDNIGHT+EFj
		mov	bp, 2
		call	MAKE_ARRESTER
		mov	bp, 2
		call	MAKE_ARRESTER
		pop	bp
		pop	cx
		pop	bx
		pop	si
		jmp	loc_0_BC09
;����������������������������������������������������������������������������

loc_0_BCD2:				; CODE XREF: MIDNIGHT+4Ej
		mov	cx, 0Fh
		mov	si, 9C48h
		add	si, 0Dh

loc_0_BCDB:				; CODE XREF: MIDNIGHT+12Ej
		push	cx
		mov	cx, 6
		mov	di, si

loc_0_BCE1:				; CODE XREF: MIDNIGHT+128j
		call	RAND
		mov	ah, [di]
		call	RAND_RANGE
		mov	[di+6],	al
		inc	di
		loop	loc_0_BCE1
		pop	cx
		add	si, 29h	; ')'
		loop	loc_0_BCDB
		mov	si, 0A6E3h

loc_0_BCF8:				; CODE XREF: MIDNIGHT+15Cj
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_BD23
		nop
		nop
		nop
		cmp	byte ptr [si+2], 0
		jnz	loc_0_BD1E
		nop
		nop
		nop
		cmp	byte ptr [si+3], 0
		jz	loc_0_BD1E
		nop
		nop
		nop
		cmp	byte ptr [si+3], 0FFh
		jz	loc_0_BD1E
		nop
		nop
		nop
		dec	byte ptr [si+3]

loc_0_BD1E:				; CODE XREF: MIDNIGHT+13Fj
					; MIDNIGHT+148j ...
		add	si, 4
		jmp	short loc_0_BCF8
;����������������������������������������������������������������������������

loc_0_BD23:				; CODE XREF: MIDNIGHT+136j
		mov	si, 0D1B8h

loc_0_BD26:				; CODE XREF: MIDNIGHT+181j
		cmp	byte ptr [si], 0FFh
		jz	loc_0_BD48
		nop
		nop
		nop
		cmp	byte ptr [si+1], 0
		jz	loc_0_BD43
		nop
		nop
		nop
		cmp	byte ptr [si+1], 0FFh
		jz	loc_0_BD43
		nop
		nop
		nop
		dec	byte ptr [si+1]

loc_0_BD43:				; CODE XREF: MIDNIGHT+16Dj
					; MIDNIGHT+176j
		add	si, 10h
		jmp	short loc_0_BD26
;����������������������������������������������������������������������������

loc_0_BD48:				; CODE XREF: MIDNIGHT+164j
		mov	di, 6DCEh
		mov	cx, 2Bh	; '+'
		mov	bp, 0

loc_0_BD51:				; CODE XREF: MIDNIGHT+1A2j
		cmp	byte ptr [di+0Bh], 2
		jnz	loc_0_BD64
		nop
		nop
		nop
		cmp	word ptr [di+67h], 0
		jz	loc_0_BD64
		nop
		nop
		nop
		inc	bp

loc_0_BD64:				; CODE XREF: MIDNIGHT+190j
					; MIDNIGHT+199j
		add	di, 7Bh	; '{'
		loop	loc_0_BD51
		cmp	bp, 0
		jnz	loc_0_BD79
		nop
		nop
		nop
		mov	al, 0
		mov	si, 0D1D8h
		call	SET_NOTICE

loc_0_BD79:				; CODE XREF: MIDNIGHT+1A7j
		call	SET_TODAYS_JOB
		cmp	ACTITETASK, 0FFFFh
		jz	loc_0_BDA8
		nop
		nop
		nop
		dec	TASKTIMER
		cmp	TASKTIMER, 0
		jnz	loc_0_BDA8
		nop
		nop
		nop
		mov	ax, ACTITETASK
		mov	TASKFAILED, ax
		mov	ACTITETASK, 0FFFFh
		call	UNSETTASK
		mov	byte_FFD_D2A9, 2

loc_0_BDA8:				; CODE XREF: MIDNIGHT+1BCj
					; MIDNIGHT+1CAj
		mov	si, 0BC1h
		mov	cx, 9

loc_0_BDAE:				; CODE XREF: MIDNIGHT+1F3j
		cmp	byte ptr [si], 0
		jz	loc_0_BDB8
		nop
		nop
		nop
		dec	byte ptr [si]

loc_0_BDB8:				; CODE XREF: MIDNIGHT+1ECj
		loop	loc_0_BDAE
		mov	bx, 0AED1h
		mov	cx, 3Ch	; '<'

loc_0_BDC0:				; CODE XREF: MIDNIGHT+206j
		cmp	byte ptr [bx], 0
		jz	loc_0_BDCA
		nop
		nop
		nop
		dec	byte ptr [bx]

loc_0_BDCA:				; CODE XREF: MIDNIGHT+1FEj
		inc	bx
		loop	loc_0_BDC0
		call	PUT_TRIVIA
		mov	cx, 9
		mov	si, 0BB8h
		mov	di, 0BCAh

loc_0_BDD9:				; CODE XREF: MIDNIGHT+22Ej
		mov	al, [si]
		cmp	al, 5
		jnz	loc_0_BDE4
		nop
		nop
		nop
		mov	al, 0

loc_0_BDE4:				; CODE XREF: MIDNIGHT+218j
		add	[di], al
		cmp	byte ptr [di], 0C8h ; '�'
		jb	loc_0_BDF1
		nop
		nop
		nop
		mov	byte ptr [di], 0C8h ; '�'

loc_0_BDF1:				; CODE XREF: MIDNIGHT+224j
		inc	si
		inc	di
		loop	loc_0_BDD9
		cmp	TASK02FLAG, 1
		jnz	loc_0_BE29
		nop
		nop
		nop
		mov	TASK02FLAG, 2
		mov	bx, 35h	; '5'
		mov	ax, 3680h
		mov	dx, 6936h
		mov	cx, 0
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	bx, 35h	; '5'
		mov	ax, 3680h
		mov	dx, 6936h
		mov	cx, 0
		mov	bp, 20h	; ' '
		call	SETUPPICKUP

loc_0_BE29:				; CODE XREF: MIDNIGHT+235j
		cmp	DAYPOINTER, 2
		jnz	locret_0_BE38
		nop
		nop
		nop
		mov	byte_FFD_D2F9, 1

locret_0_BE38:				; CODE XREF: MIDNIGHT+269j
		retn
MIDNIGHT	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

REPOSITIONOBJ	proc near		; CODE XREF: MIDNIGHT+C6p ROBBEDOBJ+21p
					; ...
		push	es
		mov	ax, MAPSEG
		mov	es, ax
		assume es:nothing

loc_0_BE3F:				; CODE XREF: REPOSITIONOBJ+11j
		call	GETRANDCELL
		mov	bx, ax
		mov	dl, es:[bx]
		test	dl, 1Ch
		jz	loc_0_BE3F
		mov	SCATTERCELL, bx
		mov	bx, ax
		mov	dh, al
		mov	dl, 40h	; '@'
		mov	al, 40h	; '@'
		mov	[di+2],	dx
		mov	[di+4],	ax
		and	word ptr [di], 0FFFBh
		mov	[di+6],	bx
		mov	ax, LEVEL
		mov	[di+0Ah], al
		pop	es
		assume es:nothing
		retn
REPOSITIONOBJ	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

JUSTICE		proc near		; CODE XREF: CONTROLLER+90Dp
		call	EFF_TO_MUS
		cmp	INPUTMODE, 0
		jz	loc_0_BE7E
		nop
		nop
		nop
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh

loc_0_BE7E:				; CODE XREF: JUSTICE+8j
		call	PICFADE2
		push	es
		mov	ax, 2
		push	ax
		mov	es, SOUNDSEG
		assume es:nothing
		call	SENDSND
		inc	sp
		inc	sp
		pop	es
		assume es:nothing
		call	sub_0_C066
		dec	ARRESTED
		mov	ax, SCRIPTSEG
		push	es
		mov	es, ax
		assume es:nothing
		mov	ax, ARRESTED
		mov	es:39D0h, al
		pop	es
		assume es:nothing
		mov	si, 39AEh
		call	SCROLLTEXT
		mov	bx, ARRESTED
		shl	bx, 1
		shl	bx, 1
		add	bx, 0F68h
		mov	ax, [bx]
		push	ax
		push	bx
		call	HEXTOBCD2
		pop	bx
		mov	FINE, ax
		pop	ax
		cmp	ax, CASH
		jg	loc_0_BF1B
		nop
		nop
		nop
		test	RAN, 0D0h
		jz	loc_0_BF1B
		nop
		nop
		nop
		cmp	ACTITETASK, 29h	; ')'
		jz	loc_0_BF1B
		nop
		nop
		nop
		sub	CASH, ax
		call	ROBBEDCOMM
		mov	si, 22C6h
		call	RAND
		and	ah, 3
		shl	ah, 1
		mov	al, ah
		mov	ah, 0
		add	si, ax
		mov	si, [si]
		call	SCROLLTEXT
		mov	ax, COURTRMFCS
		mov	HEROADD, ax
		mov	bh, al
		mov	al, 80h	; '�'
		mov	bl, 80h	; '�'
		mov	HEROX, bx
		mov	HEROY, ax
		mov	LEVEL, 0
		jmp	loc_0_BFD4
;����������������������������������������������������������������������������

loc_0_BF1B:				; CODE XREF: JUSTICE+5Cj JUSTICE+67j
					; ...
		sar	CASH, 1
		mov	si, 0B29h
		mov	cx, 6

loc_0_BF25:				; CODE XREF: JUSTICE+BEj
		sar	word ptr [si], 1
		add	si, 0Ah
		loop	loc_0_BF25

loc_0_BF2C:				; CODE XREF: JUSTICE+ECj
		call	RAND
		sar	ax, 1
		and	ah, 0Fh
		mov	al, ah
		mov	ah, 0
		cmp	ax, 4
		jl	loc_0_BF5A
		nop
		nop
		nop
		cmp	ax, 6
		jg	loc_0_BF5A
		nop
		nop
		nop
		mov	si, 0BB8h
		mov	cx, 9

loc_0_BF4E:				; CODE XREF: JUSTICE+EAj
		cmp	byte ptr [si], 2
		jg	loc_0_BF5A
		nop
		nop
		nop
		loop	loc_0_BF4E
		jmp	short loc_0_BF2C
;����������������������������������������������������������������������������

loc_0_BF5A:				; CODE XREF: JUSTICE+CFj JUSTICE+D7j
					; ...
		cmp	ACTITETASK, 29h	; ')'
		jnz	loc_0_BF6A
		nop
		nop
		nop
		mov	ax, 0Dh
		mov	bx, 0AA98h

loc_0_BF6A:				; CODE XREF: JUSTICE+F3j
		mov	si, 0F98h
		add	si, ax
		add	si, ax
		add	si, ax
		add	si, ax
		add	si, ax
		add	si, ax
		mov	dx, ax
		mov	ax, [si]
		mov	PRISONDOOR, ax
		mov	ax, [bx+2]
		mov	PRISONTERM, ax
		mov	ax, [si+4]
		mov	LEVEL, ax
		mov	ax, [si+2]
		mov	HEROADD, ax
		mov	bh, al
		mov	al, 80h	; '�'
		mov	bl, 80h	; '�'
		mov	HEROX, bx
		mov	HEROY, ax
		mov	si, 0FF8h
		add	si, dx
		mov	al, [si]
		push	es
		mov	cx, SCRIPTSEG
		mov	es, cx
		assume es:nothing
		mov	es:3C03h, al
		mov	byte_FFD_AAD8, al
		pop	es
		assume es:nothing
		mov	si, 3BC1h
		call	SCROLLTEXT
		mov	bx, 10h
		sub	bx, HOURS
		mov	ax, 10h
		mov	dx, PRISONTERM
		dec	dx
		mul	dx
		add	ax, bx
		add	ax, 8
		mov	PRISONTERM, ax

loc_0_BFD4:				; CODE XREF: JUSTICE+ACj
		call	BLANK_AND_SETPAL
		call	MUS_TO_EFF
		call	LOADMAP
		call	MAKEHCELLMAP
		cmp	byte_FFD_AAD8, 3
		jnz	loc_0_BFEF
		nop
		nop
		nop
		mov	ACTIVEPANS, 4

loc_0_BFEF:				; CODE XREF: JUSTICE+179j
		call	LOADPANELS
		call	BACKTOGAME
		mov	EIVAKDEADFLAG, 0
		mov	ax, ARRESTED
		inc	ax
		mov	di, 6DCEh
		mov	cx, 2Bh	; '+'
		mov	bp, 0

loc_0_C008:				; CODE XREF: JUSTICE+1CDj
		cmp	byte ptr [di+0Bh], 2
		jnz	loc_0_C036
		nop
		nop
		nop
		cmp	[di+67h], ax
		jnz	loc_0_C02C
		nop
		nop
		nop
		and	word ptr [di], 0FFEFh
		mov	word ptr [di+65h], 41E4h
		mov	word ptr [di+67h], 0
		mov	dx, [di+52h]
		mov	[di+27h], dx

loc_0_C02C:				; CODE XREF: JUSTICE+1A8j
		cmp	word ptr [di+67h], 0
		jz	loc_0_C036
		nop
		nop
		nop
		inc	bp

loc_0_C036:				; CODE XREF: JUSTICE+1A0j JUSTICE+1C4j
		add	di, 7Bh	; '{'
		loop	loc_0_C008
		cmp	bp, 0
		jnz	loc_0_C04B
		nop
		nop
		nop
		mov	al, 0
		mov	si, 0D1D8h
		call	SET_NOTICE

loc_0_C04B:				; CODE XREF: JUSTICE+1D2j
		mov	ARRESTED, 0
		mov	INVENTORYFLAG, 1
		cmp	INPUTMODE, 0
		jz	locret_0_C065
		nop
		nop
		nop
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

locret_0_C065:				; CODE XREF: JUSTICE+1EFj
		retn
JUSTICE		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_C066	proc near		; CODE XREF: JUSTICE+25p
		call	LOADCOURT
sub_0_C066	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SWOPAL		proc near		; CODE XREF: CONTROLLER+822p
					; CONTROLLER+BC0p ...
		call	SWOPAL1
		call	PICRAISE2
		retn
SWOPAL		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SWOPAL1		proc near		; CODE XREF: sub_0_7053+461p
					; SWOPALp
		call	GET_PAL
		call	COPYPAL
		mov	bx, 20h	; ' '
		mov	cx, 0E0h ; '�'
		mov	dx, 60h	; '`'
		call	SETPALBIT
		retn
SWOPAL1		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BACKTOGAME	proc near		; CODE XREF: PRINTMAP+14Cp
					; CONTROLLER+4Ep ...
		cmp	VIEWSPTR, 0
		jnz	loc_0_C096
		nop
		nop
		nop
		call	MAKEVIEW
		call	PICRAISE2
		jmp	short locret_0_C09C
;����������������������������������������������������������������������������
		nop

loc_0_C096:				; CODE XREF: BACKTOGAME+5j
		call	GETBORDER
		call	DRAWVIEW

locret_0_C09C:				; CODE XREF: BACKTOGAME+10j
		retn
BACKTOGAME	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

ROBBEDCOMM	proc near		; CODE XREF: JUSTICE+7Ap ROBBEDCOMM+9j
					; ...
		call	RAND
		and	ah, 7
		cmp	ah, 5
		jg	ROBBEDCOMM
		mov	al, ah
		mov	ah, 0Ah
		mul	ah
		add	ax, 0B29h
		mov	si, ax
		mov	word ptr [si], 0
		retn
ROBBEDCOMM	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

ROBBEDOBJ	proc near		; CODE XREF: MUGGED+46p
		call	RAND
		and	ah, 7
		mov	al, ah
		cmp	al, 6
		jl	loc_0_C0DF
		nop
		nop
		nop
		mov	di, RIGHTHAND
		cmp	di, 0
		jz	locret_0_C0F9
		nop
		nop
		nop
		mov	RIGHTHAND, 0
		call	REPOSITIONOBJ
		jmp	short locret_0_C0F9
;����������������������������������������������������������������������������
		nop

loc_0_C0DF:				; CODE XREF: ROBBEDOBJ+Aj
		mov	ah, 0Ah
		mul	ah
		add	ax, 0B65h
		mov	si, ax
		mov	di, [si]
		cmp	di, 0
		jz	locret_0_C0F9
		nop
		nop
		nop
		mov	word ptr [si], 0
		call	REPOSITIONOBJ

locret_0_C0F9:				; CODE XREF: ROBBEDOBJ+16j
					; ROBBEDOBJ+24j ...
		retn
ROBBEDOBJ	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MUGGED		proc near		; CODE XREF: sub_0_550F+1A1p
		cmp	SLEEPLACE, 3
		jz	locret_0_C14E
		nop
		nop
		nop
		mov	cx, ax

loc_0_C106:				; CODE XREF: MUGGED+52j
		push	cx
		call	RAND
		mov	al, ah
		mov	dx, 1Fh
		cmp	SLEEPLACE, 0
		jnz	loc_0_C11C
		nop
		nop
		nop
		mov	dx, 0Fh

loc_0_C11C:				; CODE XREF: MUGGED+1Aj
		and	al, dl
		jnz	loc_0_C14B
		nop
		nop
		nop
		call	RAND
		test	al, 2
		jnz	loc_0_C133
		nop
		nop
		nop
		mov	CASH, 0

loc_0_C133:				; CODE XREF: MUGGED+2Ej
		test	al, 20h
		jz	loc_0_C140
		nop
		nop
		nop
		call	ROBBEDCOMM
		jmp	short loc_0_C143
;����������������������������������������������������������������������������
		nop

loc_0_C140:				; CODE XREF: MUGGED+3Bj
		call	ROBBEDOBJ

loc_0_C143:				; CODE XREF: MUGGED+43j
		mov	INVENTORYFLAG, 1
		call	INVENTORY

loc_0_C14B:				; CODE XREF: MUGGED+24j
		pop	cx
		loop	loc_0_C106

locret_0_C14E:				; CODE XREF: MUGGED+5j
		retn
MUGGED		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SECOND_CHARSTUFF proc near		; CODE XREF: CONTROLLER+94Dp
		push	es
		mov	ax, MAPSEG
		mov	es, ax
		assume es:nothing
		cmp	LEVEL, 0FFFFh
		jnz	loc_0_C15F
		jmp	loc_0_C208
;����������������������������������������������������������������������������

loc_0_C15F:				; CODE XREF: SECOND_CHARSTUFF+Bj
		mov	cx, 1

loc_0_C162:				; CODE XREF: SECOND_CHARSTUFF+47j
		push	cx
		call	FINDFURTHEST
		cmp	bx, 20h	; ' '
		jle	loc_0_C195
		nop
		nop
		nop
		call	sub_0_C20A
		cmp	bx, 0FFFFh
		jz	loc_0_C195
		nop
		nop
		nop
		mov	ax, bx
		mov	dx, bx
		mov	bh, bl
		mov	al, 80h	; '�'
		mov	bl, 80h	; '�'
		mov	[di+2],	bx
		mov	[di+4],	ax
		mov	[di+6],	dx
		mov	byte ptr [di+23h], 1
		mov	word ptr [di+8], 5

loc_0_C195:				; CODE XREF: SECOND_CHARSTUFF+1Aj
					; SECOND_CHARSTUFF+25j
		pop	cx
		loop	loc_0_C162
		call	FINDFURTHEST
		cmp	bx, 20h	; ' '
		jle	loc_0_C205
		nop
		nop
		nop
		mov	ax, [di]
		test	ax, 1
		jnz	loc_0_C1E0
		nop
		nop
		nop
		test	ax, 300h
		jnz	loc_0_C205
		nop
		nop
		nop
		cmp	word ptr [di+4Ch], 0
		jz	loc_0_C1E0
		nop
		nop
		nop
		mov	si, [di+4Ch]
		mov	word ptr [di+4Ch], 0
		and	word ptr [si], 0FFFBh
		mov	bx, [di+2]
		mov	[si+2],	bx
		mov	dx, [di+4]
		mov	[si+4],	dx
		mov	dl, bh
		mov	[si+6],	dx
		mov	dl, [di+0Ah]
		mov	[si+0Ah], dl

loc_0_C1E0:				; CODE XREF: SECOND_CHARSTUFF+59j
					; SECOND_CHARSTUFF+6Aj
		call	sub_0_C20A
		cmp	bx, 0FFFFh
		jz	loc_0_C205
		nop
		nop
		nop
		mov	si, bx
		call	RAND
		and	ax, 3
		dec	ax
		jge	loc_0_C1FC
		nop
		nop
		nop
		mov	ax, 0

loc_0_C1FC:				; CODE XREF: SECOND_CHARSTUFF+A5j
		mov	dh, 0
		mov	dl, al
		mov	cl, 0
		call	MAKECHAR

loc_0_C205:				; CODE XREF: SECOND_CHARSTUFF+4Fj
					; SECOND_CHARSTUFF+61j
					; ...
		call	C_CREATE

loc_0_C208:				; CODE XREF: SECOND_CHARSTUFF+Dj
		pop	es
		assume es:nothing
		retn
SECOND_CHARSTUFF endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_C20A	proc near		; CODE XREF: SECOND_CHARSTUFF+1Fp
					; SECOND_CHARSTUFF+91p
		mov	cx, 8

loc_0_C20D:				; CODE XREF: sub_0_C20A+3Fj
		push	cx
		call	RAND
		and	ah, 3
		add	ah, 6
		test	al, 10h
		jz	loc_0_C220
		nop
		nop
		nop
		neg	ah

loc_0_C220:				; CODE XREF: sub_0_C20A+Fj
		mov	dx, ax
		call	RAND
		and	ah, 3
		add	ah, 6
		test	al, 8
		jz	loc_0_C234
		nop
		nop
		nop
		neg	ah

loc_0_C234:				; CODE XREF: sub_0_C20A+23j
		mov	al, dh
		add	ax, HEROADD
		and	ax, 7F3Fh
		call	sub_0_C2BD
		pop	cx
		cmp	bp, 1
		jz	loc_0_C24F
		nop
		nop
		nop
		loop	loc_0_C20D
		mov	bx, 0FFFFh
		retn
;����������������������������������������������������������������������������

loc_0_C24F:				; CODE XREF: sub_0_C20A+3Aj
		mov	bx, ax
		retn
sub_0_C20A	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

FINDFURTHEST	proc near		; CODE XREF: SECOND_CHARSTUFF+14p
					; SECOND_CHARSTUFF+49p
		mov	di, 6DCEh
		mov	cx, 2Bh	; '+'
		mov	bp, 0
		mov	bx, 0

loc_0_C25E:				; CODE XREF: FINDFURTHEST+25j
		test	word ptr [di], 1
		jnz	loc_0_C274
		nop
		nop
		nop
		cmp	[di+8],	bx
		jl	loc_0_C274
		nop
		nop
		nop
		mov	bp, di
		mov	bx, [di+8]

loc_0_C274:				; CODE XREF: FINDFURTHEST+10j
					; FINDFURTHEST+18j
		add	di, 7Bh	; '{'
		loop	loc_0_C25E
		mov	di, bp
		retn
FINDFURTHEST	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

FINDNEAREST	proc near		; CODE XREF: COMBAT+3Dp
		mov	di, 6DCEh
		mov	cx, 38h	; '8'
		mov	bp, 0
		mov	bx, 3000h
		mov	ax, LEVEL

loc_0_C28B:				; CODE XREF: FINDNEAREST+39j
		test	word ptr [di], 1
		jnz	loc_0_C2B2
		nop
		nop
		nop
		test	word ptr [di], 8
		jz	loc_0_C2B2
		nop
		nop
		nop
		cmp	[di+0Ah], al
		jnz	loc_0_C2B2
		nop
		nop
		nop
		cmp	[di+8],	bx
		jg	loc_0_C2B2
		nop
		nop
		nop
		mov	bp, di
		mov	bx, [di+8]

loc_0_C2B2:				; CODE XREF: FINDNEAREST+13j
					; FINDNEAREST+1Cj ...
		add	di, 7Bh	; '{'
		loop	loc_0_C28B
		mov	di, bp
		retn
FINDNEAREST	endp

;����������������������������������������������������������������������������
		db  25h	; %
		db  3Fh	; ?
		db  7Fh	; 

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_C2BD	proc near		; CODE XREF: sub_0_C20A+33p
		cmp	ah, 1
		jb	loc_0_C33A
		nop
		nop
		nop
		cmp	ah, 7Eh	; '~'
		ja	loc_0_C33A
		nop
		nop
		nop
		cmp	al, 1
		jb	loc_0_C33A
		nop
		nop
		nop
		cmp	al, 54h	; 'T'
		ja	loc_0_C33A
		nop
		nop
		nop
sub_0_C2BD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

ACCELL2		proc near		; CODE XREF: sub_0_58DE+9Fp
		mov	si, ax
		mov	dl, es:[si]
		mov	dh, dl
		and	dl, 3
		cmp	dl, 1
		jnz	loc_0_C33A
		nop
		nop
		nop
		test	dh, 1Ch
		jnz	loc_0_C33A
		nop
		nop
		nop
		mov	[di+6],	si
		push	si
		push	es
		mov	ax, MAPSEG
		mov	es, ax
		assume es:nothing
		mov	si, 0
		call	TESTFORWALL
		jnb	loc_0_C332
		nop
		nop
		nop
		mov	si, 1
		call	TESTFORWALL
		jnb	loc_0_C332
		nop
		nop
		nop
		mov	si, 2
		call	TESTFORWALL
		jnb	loc_0_C332
		nop
		nop
		nop
		mov	si, 3
		call	TESTFORWALL
		jnb	loc_0_C332
		nop
		nop
		nop
		pop	es
		assume es:nothing
		pop	si
		mov	ax, si
		jmp	short loc_0_C33A
;����������������������������������������������������������������������������
		nop

loc_0_C332:				; CODE XREF: ACCELL2+2Aj ACCELL2+35j
					; ...
		pop	es
		pop	si
		mov	ax, si
		mov	bp, 1
		retn
;����������������������������������������������������������������������������

loc_0_C33A:				; CODE XREF: sub_0_C2BD+3j
					; sub_0_C2BD+Bj ...
		mov	bp, 0
		retn
ACCELL2		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

MAKE_ARRESTER	proc near		; CODE XREF: sub_0_49FD+118p
					; sub_0_550F+1B1p ...
		cmp	bp, 0Ch
		jl	loc_0_C349
		nop
		nop
		nop
		mov	bp, 9

loc_0_C349:				; CODE XREF: MAKE_ARRESTER+3j
		push	bp
		mov	di, 6DCEh
		mov	cx, 2Bh	; '+'
		mov	bx, 0
		mov	dx, 0

loc_0_C356:				; CODE XREF: MAKE_ARRESTER+46j
		test	word ptr [di], 1
		jnz	loc_0_C397
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 2
		jnz	loc_0_C381
		nop
		nop
		nop
		cmp	word ptr [di+67h], 0
		jnz	loc_0_C374
		nop
		nop
		nop
		jmp	short loc_0_C3A3
;����������������������������������������������������������������������������
		nop

loc_0_C374:				; CODE XREF: MAKE_ARRESTER+2Ej
		cmp	[di+8],	dx
		jl	loc_0_C381
		nop
		nop
		nop
		mov	bx, di
		mov	dx, [di+8]

loc_0_C381:				; CODE XREF: MAKE_ARRESTER+25j
					; MAKE_ARRESTER+39j
		add	di, 7Bh	; '{'
		loop	loc_0_C356
		mov	di, bx
		cmp	bx, 0
		jnz	loc_0_C3A3
		nop
		nop
		nop
		pop	bp
		mov	di, 0FFFFh
		jmp	short locret_0_C3C0
;����������������������������������������������������������������������������
		nop

loc_0_C397:				; CODE XREF: MAKE_ARRESTER+1Cj
		push	di
		mov	si, 7202h
		mov	cl, 0
		mov	dl, 2
		call	MAKECHAR
		pop	di

loc_0_C3A3:				; CODE XREF: MAKE_ARRESTER+33j
					; MAKE_ARRESTER+4Dj
		pop	bp
		mov	ax, bp
		or	word ptr [di], 10h
		mov	word ptr [di+65h], 3993h
		mov	[di+67h], ax
		mov	word ptr [di+27h], 0FC18h
		push	di
		mov	al, 2
		mov	si, 0D1D8h
		call	SET_NOTICE
		pop	di

locret_0_C3C0:				; CODE XREF: MAKE_ARRESTER+56j
		retn
MAKE_ARRESTER	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

INIT_VAMPIRES	proc near		; CODE XREF: LOADSPRITES+13Cp
		mov	word_FFD_AA96, 8
		jmp	short loc_0_C3D9
INIT_VAMPIRES	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

INIT_WOLFMAN	proc near		; CODE XREF: LOADSPRITES+149p
		mov	word_FFD_AA96, 9
		jmp	short loc_0_C3D9
INIT_WOLFMAN	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

INIT_DWARVES	proc near		; CODE XREF: LOADSPRITES+12Fp
		mov	word_FFD_AA96, 7

loc_0_C3D9:				; CODE XREF: INIT_VAMPIRES+6j
					; INIT_WOLFMAN+6j
		push	es
		mov	ax, MAPSEG
		mov	es, ax
		assume es:nothing
		mov	di, 84DEh
		mov	cx, 8

loc_0_C3E5:				; CODE XREF: INIT_DWARVES+85j
		push	cx

loc_0_C3E6:				; CODE XREF: INIT_DWARVES+1Cj
					; INIT_DWARVES+21j ...
		call	RAND
		and	ax, 7F3Fh
		cmp	ah, 8
		jb	loc_0_C3E6
		cmp	ah, 4Eh	; 'N'
		ja	loc_0_C3E6
		cmp	al, 8
		jb	loc_0_C3E6
		mov	si, ax
		mov	dl, es:[si]
		mov	dh, dl
		and	dl, 3
		cmp	dl, 1
		jnz	loc_0_C3E6
		test	dh, 1Ch
		jnz	loc_0_C3E6
		mov	[di+6],	si
		push	si
		push	es
		mov	ax, MAPSEG
		mov	es, ax
		mov	si, 0
		call	TESTFORWALL
		jnb	loc_0_C448
		nop
		nop
		nop
		mov	si, 1
		call	TESTFORWALL
		jnb	loc_0_C448
		nop
		nop
		nop
		mov	si, 2
		call	TESTFORWALL
		jnb	loc_0_C448
		nop
		nop
		nop
		mov	si, 3
		call	TESTFORWALL
		jnb	loc_0_C448
		nop
		nop
		nop
		pop	es
		assume es:nothing
		pop	si
		jmp	short loc_0_C3E6
;����������������������������������������������������������������������������

loc_0_C448:				; CODE XREF: INIT_DWARVES+4Bj
					; INIT_DWARVES+56j ...
		pop	es
		pop	si
		mov	dx, word_FFD_AA96
		mov	cx, 0
		call	MAKECHAR
		pop	cx
		add	di, 7Bh	; '{'
		loop	loc_0_C3E5
		pop	es
		retn
INIT_DWARVES	endp

;����������������������������������������������������������������������������
		db 0C3h	; �

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BLANK_AND_SETPAL proc near		; CODE XREF: CONTROLLER+834p
					; CONTROLLER+BD7p ...
		call	PICFADE2
		mov	ax, 0
		mov	di, 1440h
		mov	dx, 64h	; 'd'
		mov	bp, 0C0h ; '�'
		push	es
		mov	bx, 0A000h
		mov	es, bx
		assume es:nothing
		call	BOX
		pop	es
		assume es:nothing
		push	es
		mov	ah, 10h
		mov	al, 12h
		mov	bx, 20h	; ' '
		mov	cx, 0E0h ; '�'
		mov	dx, BUFFERSEG
		mov	es, dx
		assume es:nothing
		mov	dx, 60h	; '`'
		int	10h		; - VIDEO - SET	BLOCK OF DAC REGISTERS (EGA, VGA/MCGA)
					; BX = starting	color register,	CX = number of registers to set
					; ES:DX	-> table of 3*CX bytes where each 3 byte group represents one
					; byte each of red, green and blue (0-63)
		pop	es
		assume es:nothing
		call	LOADPALFILE
		retn
BLANK_AND_SETPAL endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GETRANDCELL	proc near		; CODE XREF: PUT_TRIVIA+10p
					; REPOSITIONOBJ+6p ...
		call	RAND
		and	ax, 7F3Fh
		cmp	ah, 8
		jb	GETRANDCELL
		cmp	ah, 4Eh	; 'N'
		ja	GETRANDCELL
		cmp	al, 8
		jb	GETRANDCELL
		retn
GETRANDCELL	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SHOPCLEAR	proc near		; CODE XREF: sub_0_8AC7p
		mov	cx, 0Fh
		mov	si, 9C48h
		add	si, 19h

loc_0_C4AF:				; CODE XREF: SHOPCLEAR+52j
		push	cx
		mov	cx, 4
		mov	di, si

loc_0_C4B5:				; CODE XREF: SHOPCLEAR+4Cj
		mov	bx, [di]
		cmp	bx, 0
		jz	loc_0_C4D9
		nop
		nop
		nop
		mov	al, [bx+0Bh]
		cmp	al, 0Fh
		jnz	loc_0_C4D9
		nop
		nop
		nop

loc_0_C4C9:				; CODE XREF: SHOPCLEAR+37j
					; SHOPCLEAR+47j
		mov	word ptr [bx], 1
		mov	word ptr [di], 0
		mov	word ptr [di+2], 0
		jmp	short loc_0_C4EF
;����������������������������������������������������������������������������
		nop

loc_0_C4D9:				; CODE XREF: SHOPCLEAR+14j
					; SHOPCLEAR+1Ej
		cmp	byte ptr [bx+25h], 0
		jnz	loc_0_C4C9
		cmp	ACTITETASK, 0FFFFh
		jnz	loc_0_C4EF
		nop
		nop
		nop
		cmp	byte ptr [bx+26h], 1
		jz	loc_0_C4C9

loc_0_C4EF:				; CODE XREF: SHOPCLEAR+30j
					; SHOPCLEAR+3Ej
		add	di, 4
		loop	loc_0_C4B5
		pop	cx
		add	si, 29h	; ')'
		loop	loc_0_C4AF
		retn
SHOPCLEAR	endp

;����������������������������������������������������������������������������
		db    0	;

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DINE		proc near		; CODE XREF: seg000:91D6p seg000:9272p
					; ...
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		call	sub_0_C6DE
		mov	ax, 7
		mov	cx, 0F0h ; '�'
		mov	dx, 218h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 4
		mov	dx, 80h	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 50h	; 'P'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		jmp	short loc_0_C52D
;����������������������������������������������������������������������������
		nop

loc_0_C528:				; CODE XREF: DINE+84j DINE+98j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh

loc_0_C52D:				; CODE XREF: DINE+29j
		mov	si, SHOPDATS
		add	si, 1
		mov	bx, 0C838h
		mov	cx, 6
		inc	word_FFD_C844
		cmp	word_FFD_C844, 3
		jnz	loc_0_C54E
		nop
		nop
		nop
		mov	word_FFD_C844, 0

loc_0_C54E:				; CODE XREF: DINE+47j DINE+65j
		push	bx
		push	cx
		push	si
		mov	al, [si]
		mov	ah, 0
		call	sub_0_C72F
		pop	si
		pop	cx
		pop	bx
		add	bx, 2
		add	si, 3
		loop	loc_0_C54E
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	bp, 0Ah

loc_0_C56B:				; CODE XREF: DINE+82j
		call	WAITFLY
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	loc_0_C582
		nop
		nop
		nop
		dec	bp
		jnz	loc_0_C56B
		jmp	short loc_0_C528
;����������������������������������������������������������������������������

loc_0_C582:				; CODE XREF: DINE+7Cj
		test	bx, 2
		jz	loc_0_C58B
		jmp	locret_0_C6DD
;����������������������������������������������������������������������������

loc_0_C58B:				; CODE XREF: DINE+8Aj
		mov	si, 0C846h
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_C528
		push	ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		pop	ax
		dec	ax
		mov	dx, ax
		shl	ax, 1
		add	ax, dx
		mov	bx, SHOPDATS
		add	bx, 1
		add	bx, ax
		mov	al, [bx+1]
		mov	ah, 0
		cmp	SHOPNO,	11h
		jl	loc_0_C5E5
		nop
		nop
		nop
		push	di
		push	cx
		push	dx
		mov	di, SHOPDATS
		add	di, 1Fh
		mov	cx, 8
		mov	dl, 0

loc_0_C5CB:				; CODE XREF: DINE+D2j
		add	dl, [di]
		inc	di
		loop	loc_0_C5CB
		cmp	dl, 0
		jz	loc_0_C5E2
		nop
		nop
		nop
		sar	ax, 1
		jg	loc_0_C5E2
		nop
		nop
		nop
		mov	ax, 1

loc_0_C5E2:				; CODE XREF: DINE+D7j DINE+DEj
		pop	dx
		pop	cx
		pop	di

loc_0_C5E5:				; CODE XREF: DINE+BBj
		mov	word_FFD_C884, ax
		push	bx
		call	HEXTOBCD2
		pop	bx
		mov	MEALPRICE, ax
		mov	al, [bx+2]
		mov	ah, 0
		mov	word_FFD_C886, ax
		mov	al, [bx]
		mov	ah, 0
		mov	word_FFD_C888, ax
		push	es
		mov	cx, SCRIPTSEG
		mov	es, cx
		assume es:nothing
		mov	es:45BEh, al
		pop	es
		assume es:nothing
		mov	word_FFD_C88A, dx
		mov	CLSFLAG, 2
		mov	ax, 18h
		call	CLEARTWIN
		mov	ax, 0FFFFh
		mov	TEXTBOXES, ax
		mov	cs:PAGECOLOUR, 18h
		mov	si, 45B7h
		call	SSTOVIDTEXT
		mov	CLSFLAG, 1
		mov	bx, 0C838h
		mov	ax, word_FFD_C888
		call	sub_0_C72F
		call	WAITMRELEASE
		mov	bx, 0E8h ; '�'
		mov	ax, 6Ch	; 'l'
		call	YNPAD
		cmp	ax, 0
		jnz	loc_0_C64E
		jmp	DINE
;����������������������������������������������������������������������������

loc_0_C64E:				; CODE XREF: DINE+14Dj
		mov	ax, CASH
		cmp	ax, word_FFD_C884
		jge	loc_0_C666
		nop
		nop
		nop
		call	CLEARBORDER
		mov	si, 2DD2h
		call	PRINTANDOK
		jmp	DINE
;����������������������������������������������������������������������������

loc_0_C666:				; CODE XREF: DINE+159j
		mov	ax, word_FFD_C884
		sub	CASH, ax
		call	PRINTCASH
		cmp	word_FFD_C888, 0Ah
		jnz	loc_0_C68E
		nop
		nop
		nop
		cmp	SHOPNO,	0Eh
		jnz	loc_0_C68E
		nop
		nop
		nop
		inc	word_FFD_CB04
		mov	bp, 7
		call	MAKE_ARRESTER

loc_0_C68E:				; CODE XREF: DINE+179j	DINE+183j
		cmp	word_FFD_CAE4, 0
		jz	loc_0_C6B4
		nop
		nop
		nop
		cmp	word_FFD_C888, 0Bh
		jz	loc_0_C6A2
		jmp	DINE
;����������������������������������������������������������������������������

loc_0_C6A2:				; CODE XREF: DINE+1A1j
		mov	ax, word_FFD_C886
		call	TAKEDRINK
		mov	ax, word_FFD_C886
		call	TAKEFOOD
		call	DISPLAYATTRIBS
		jmp	DINE
;����������������������������������������������������������������������������

loc_0_C6B4:				; CODE XREF: DINE+197j
		mov	ax, word_FFD_C886
		cmp	word_FFD_C888, 0Bh
		jz	loc_0_C6D4
		nop
		nop
		nop
		cmp	word_FFD_C888, 7
		jle	loc_0_C6D4
		nop
		nop
		nop
		call	TAKEDRINK
		call	DISPLAYATTRIBS
		jmp	DINE
;����������������������������������������������������������������������������

loc_0_C6D4:				; CODE XREF: DINE+1C0j	DINE+1CAj
		call	TAKEFOOD
		call	DISPLAYATTRIBS
		jmp	DINE
;����������������������������������������������������������������������������

locret_0_C6DD:				; CODE XREF: DINE+8Cj
		retn
DINE		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_C6DE	proc near		; CODE XREF: DINE+5p
		mov	dx, 64Eh
sub_0_C6DE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADTABLE	proc near		; CODE XREF: GAMES+40p
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, BUFFERSEG
		call	LOAD
		call	EXP_DP
LOADTABLE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GETTABLE	proc near		; CODE XREF: sub_0_C7F5+6p
					; sub_0_CA6E+6p ...
		mov	si, 0
		mov	di, 578h
		mov	bp, 94h	; '�'
		mov	dx, 7Ch	; '|'
		call	COPY_BLOCK_2V
		retn
GETTABLE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_C701	proc near		; CODE XREF: sub_0_C72F+1Fp
		push	ds
		push	es
		mov	ax, SCREEN2
		mov	ds, ax
		assume ds:nothing
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	bx, 140h
		sub	bx, bp

loc_0_C712:				; CODE XREF: sub_0_C701+29j
		mov	cx, bp

loc_0_C714:				; CODE XREF: sub_0_C701+22j
		lodsb
		mov	ah, [di-578h]
		cmp	al, 0
		jnz	loc_0_C722
		nop
		nop
		nop
		mov	al, ah

loc_0_C722:				; CODE XREF: sub_0_C701+1Aj
		stosb
		loop	loc_0_C714
		add	si, bx
		add	di, bx
		dec	dx
		jnz	loc_0_C712
		pop	es
		assume es:nothing
		pop	ds
		assume ds:nothing
		retn
sub_0_C701	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_C72F	proc near		; CODE XREF: DINE+59p DINE+13Bp
		mov	dx, 0Ah
		mul	dx
		mov	di, 0C7C0h
		add	di, ax
		mov	ax, ds:0C844h
		shl	ax, 1
		add	di, ax
		mov	si, [di]
		sub	di, ax
		add	di, 6
		mov	bp, [di]
		mov	dx, [di+2]
		mov	di, [bx]
		call	sub_0_C701
		retn
sub_0_C72F	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GAMES		proc near		; CODE XREF: seg000:91CAp
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0F0h ; '�'
		mov	dx, 218h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 4
		mov	dx, 80h	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 50h	; 'P'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		inc	byte ptr ds:0C9FBh
		cmp	byte ptr ds:0C9FBh, 12h
		jl	loc_0_C78F
		nop
		nop
		nop
		mov	si, 5B2Ch
		call	PRINTANDOK
		jmp	short locret_0_C7F4
;����������������������������������������������������������������������������
		nop

loc_0_C78F:				; CODE XREF: GAMES+2Fj
		mov	dx, 658h
		call	LOADTABLE
		mov	si, ds:0A2FBh
		add	si, 13h
		mov	al, [si]
		mov	byte ptr ds:0C9FAh, 0
		cmp	word ptr ds:0A2F9h, 0Dh
		jnz	loc_0_C7BD
		nop
		nop
		nop
		mov	byte ptr ds:0C9FAh, 1
		mov	al, 1
		mov	cl, ds:0F5Fh
		and	cl, 3
		shl	al, cl

loc_0_C7BD:				; CODE XREF: GAMES+56j
		test	al, 1
		jnz	loc_0_C7E8
		nop
		nop
		nop
		test	al, 2
		jnz	loc_0_C7DC
		nop
		nop
		nop
		test	al, 4
		jnz	loc_0_C7E2
		nop
		nop
		nop
		test	al, 8
		jnz	loc_0_C7EE
		nop
		nop
		nop
		jmp	short locret_0_C7F4
;����������������������������������������������������������������������������
		nop

loc_0_C7DC:				; CODE XREF: GAMES+74j
		call	sub_0_C7F5
		jmp	short locret_0_C7F4
;����������������������������������������������������������������������������
		nop

loc_0_C7E2:				; CODE XREF: GAMES+7Bj
		call	sub_0_CA6E
		jmp	short locret_0_C7F4
;����������������������������������������������������������������������������
		nop

loc_0_C7E8:				; CODE XREF: GAMES+6Dj
		call	sub_0_CDC9
		jmp	short locret_0_C7F4
;����������������������������������������������������������������������������
		nop

loc_0_C7EE:				; CODE XREF: GAMES+82j
		call	sub_0_CC1D
		jmp	short locret_0_C7F4
;����������������������������������������������������������������������������
		nop

locret_0_C7F4:				; CODE XREF: GAMES+3Aj	GAMES+87j
					; ...
		retn
GAMES		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_C7F5	proc near		; CODE XREF: GAMES+8Ap
		mov	word ptr ds:0CA16h, 64A6h
		call	GETTABLE
		push	ds
		mov	ax, ds:0D704h
		mov	ds, ax
		mov	si, 13Eh
		mov	di, 0Ch
		mov	bx, 8Ch	; '�'
		mov	cx, 58h	; 'X'

loc_0_C810:				; CODE XREF: sub_0_C7F5+30j
		mov	al, [si]
		mov	[di], al
		mov	al, [si+1]
		mov	[bx], al
		add	bx, 140h
		add	si, 140h
		add	di, 140h
		loop	loc_0_C810
		pop	ds
		mov	cx, 4
		mov	bx, 0C93Eh
		mov	si, 0C946h
		mov	di, 0C94Eh
		mov	bp, 0C956h

loc_0_C837:				; CODE XREF: sub_0_C7F5+6Ej
		mov	word ptr [bx], 0C8CEh
		mov	word ptr ds:[bp+0], 0
		call	RAND
		xchg	ah, al
		and	ax, 3Fh
		mov	[si], ax
		call	RAND
		xchg	ah, al
		and	ax, 3
		shl	ax, 1
		mov	[di], ax
		add	si, 2
		add	di, 2
		add	bx, 2
		add	bp, 2
		loop	loc_0_C837
		call	RAND
		add	ah, al
		and	ah, 1Fh
		mov	bx, 0
		cmp	ah, 10h
		jle	loc_0_C891
		nop
		nop
		nop
		mov	bx, 2
		cmp	ah, 18h
		jle	loc_0_C891
		nop
		nop
		nop
		mov	bx, 4
		cmp	ah, 1Ch
		jle	loc_0_C891
		nop
		nop
		nop
		mov	bx, 6

loc_0_C891:				; CODE XREF: sub_0_C7F5+7Ej
					; sub_0_C7F5+89j ...
		add	bx, 0C93Eh
		mov	word ptr [bx], 0C88Eh
		mov	word ptr ds:0C936h, 0A500h
		mov	word ptr ds:0C938h, 0B900h
		mov	word ptr ds:0C93Ah, 0CD00h
		mov	word ptr ds:0C93Ch, 0E100h
		mov	word ptr ds:0C94Eh, 8
		mov	word ptr ds:0C950h, 8
		mov	word ptr ds:0C952h, 8
		mov	word ptr ds:0C954h, 8
		call	sub_0_CA08
		mov	word ptr ds:0C94Eh, 0
		mov	word ptr ds:0C950h, 2
		mov	word ptr ds:0C952h, 4
		mov	word ptr ds:0C954h, 6
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_C8E9:				; CODE XREF: sub_0_C7F5+101j
					; sub_0_C7F5+112j
		mov	si, 0C95Eh
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_C8E9
		test	bx, 2
		jz	loc_0_C901
		jmp	loc_0_C9E2
;����������������������������������������������������������������������������

loc_0_C901:				; CODE XREF: sub_0_C7F5+107j
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_C8E9
		dec	ax
		mov	ds:0C988h, ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	cx, 32h	; '2'
		call	PAUSE

loc_0_C918:				; CODE XREF: sub_0_C7F5+18Fj
		mov	cx, 4
		mov	dx, 0

loc_0_C91E:				; CODE XREF: sub_0_C7F5+184j
		mov	bx, 0C93Eh
		add	bx, dx
		add	bx, dx
		mov	bx, [bx]
		mov	si, 0C946h
		add	si, dx
		add	si, dx
		mov	ax, [si]
		inc	ax
		and	ax, 3Fh
		mov	[si], ax
		add	bx, ax
		mov	al, [bx]
		mov	si, 0C956h
		add	si, dx
		add	si, dx
		mov	di, 0C936h
		add	di, dx
		add	di, dx
		mov	ah, 0
		add	[si], ax
		add	[di], ax
		cmp	ax, 0
		jz	loc_0_C96F
		nop
		nop
		nop
		mov	bx, 0C94Eh
		add	bx, dx
		add	bx, dx
		mov	ax, [bx]
		add	ax, 2
		cmp	ax, 8
		jnz	loc_0_C96D
		nop
		nop
		nop
		mov	ax, 0

loc_0_C96D:				; CODE XREF: sub_0_C7F5+170j
		mov	[bx], ax

loc_0_C96F:				; CODE XREF: sub_0_C7F5+15Cj
		cmp	word ptr [si], 80h ; '�'
		jge	loc_0_C986
		nop
		nop
		nop
		inc	dx
		loop	loc_0_C91E
		mov	cx, 7
		call	PAUSE
		call	sub_0_CA08
		jmp	short loc_0_C918
;����������������������������������������������������������������������������

loc_0_C986:				; CODE XREF: sub_0_C7F5+17Ej
		push	dx
		call	sub_0_CA08
		mov	cx, 32h	; '2'
		call	PAUSE
		pop	dx
		cmp	dx, ds:0C988h
		jnz	loc_0_C9AD
		nop
		nop
		nop
		mov	si, 0C98Ah
		add	si, dx
		add	si, dx
		mov	ax, [si]
		add	ds:0B1Fh, ax
		mov	si, [si+8]
		jmp	short loc_0_C9BE
;����������������������������������������������������������������������������
		nop

loc_0_C9AD:				; CODE XREF: sub_0_C7F5+1A0j
					; sub_0_CA6E+E4j ...
		cmp	word ptr ds:0B1Fh, 0
		jz	loc_0_C9DB
		nop
		nop
		nop
		dec	word ptr ds:0B1Fh
		mov	si, 5C8Bh

loc_0_C9BE:				; CODE XREF: sub_0_C7F5+1B5j
					; sub_0_CA6E+108j ...
		mov	byte ptr ds:13Dh, 1
		push	si
		call	INVENTORY
		pop	si
		mov	di, ds:0CA16h
		call	TPPANDP
		mov	bx, 0BAh ; '�'
		mov	ax, 64h	; 'd'
		call	OKPAD
		jmp	short locret_0_C9E7
;����������������������������������������������������������������������������
		nop

loc_0_C9DB:				; CODE XREF: sub_0_C7F5+1BDj
		mov	bp, 3
		call	MAKE_ARRESTER
		retn
;����������������������������������������������������������������������������

loc_0_C9E2:				; CODE XREF: sub_0_C7F5+109j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh

locret_0_C9E7:				; CODE XREF: sub_0_C7F5+1E3j
		retn
sub_0_C7F5	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_C9E8	proc near		; CODE XREF: sub_0_CA08p sub_0_CB7Fp
		mov	si, 0
		mov	di, 9B00h
		mov	bp, 90h	; '�'
		mov	dx, 4Ch	; 'L'
		call	COPY_BLOCK_22
		retn
sub_0_C9E8	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_C9F8	proc near		; CODE XREF: sub_0_CA08+62p
					; sub_0_CB7F+31p
		mov	si, 9B00h
		mov	di, 578h
		mov	bp, 90h	; '�'
		mov	dx, 4Ch	; 'L'
		call	COPY_BLOCK_2V
		retn
sub_0_C9F8	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CA08	proc near		; CODE XREF: sub_0_C7F5+D4p
					; sub_0_C7F5+18Cp ...
		call	sub_0_C9E8
		mov	cx, 4
		mov	dx, 0

loc_0_CA11:				; CODE XREF: sub_0_CA08+60j
		mov	di, 0C936h
		add	di, dx
		add	di, dx
		mov	di, [di]
		mov	si, 0C90Eh
		mov	bx, dx
		shl	bx, 1
		shl	bx, 1
		shl	bx, 1
		add	bx, dx
		add	bx, dx
		add	si, bx
		mov	bx, 0C94Eh
		add	bx, dx
		add	bx, dx
		mov	bx, [bx]
		add	si, bx
		mov	si, [si]
		push	cx
		push	dx
		push	ds
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ds, ax
		mov	bx, 0Bh

loc_0_CA46:				; CODE XREF: sub_0_CA08+57j
		mov	cx, 10h

loc_0_CA49:				; CODE XREF: sub_0_CA08+4Cj
		lodsb
		cmp	al, 0
		jz	loc_0_CA53
		nop
		nop
		nop
		mov	[di], al

loc_0_CA53:				; CODE XREF: sub_0_CA08+44j
		inc	di
		loop	loc_0_CA49
		add	si, 130h
		add	di, 130h
		dec	bx
		jnz	loc_0_CA46
		pop	es
		pop	ds
		pop	dx
		pop	cx
		add	dx, 1
		loop	loc_0_CA11
		call	sub_0_C9F8
		retn
sub_0_CA08	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CA6E	proc near		; CODE XREF: GAMES+90p
		mov	word ptr ds:0CA16h, 64A6h
		call	GETTABLE

loc_0_CA77:				; CODE XREF: sub_0_CA6E+12j
		call	RAND
		and	ax, 3
		cmp	ax, 3
		jz	loc_0_CA77
		mov	bx, 0C9AEh
		mov	si, 0
		mov	cx, 3

loc_0_CA8B:				; CODE XREF: sub_0_CA6E+2Bj
		mov	byte ptr [bx+si], 0
		cmp	ax, si
		jnz	loc_0_CA98
		nop
		nop
		nop
		mov	byte ptr [bx+si], 1

loc_0_CA98:				; CODE XREF: sub_0_CA6E+22j
		inc	si
		loop	loc_0_CA8B
		mov	byte ptr ds:0C9B1h, 0
		mov	byte ptr ds:0C9B2h, 0
		mov	byte ptr ds:0C9B3h, 0
		call	sub_0_CB7F
		mov	si, 5CC3h
		mov	di, 7390h
		call	TPPANDP
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_CABB:				; CODE XREF: sub_0_CA6E+5Aj
					; sub_0_CA6E+6Bj
		mov	si, 0C9B4h
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_CABB
		test	bx, 2
		jz	loc_0_CAD3
		jmp	loc_0_CB79
;����������������������������������������������������������������������������

loc_0_CAD3:				; CODE XREF: sub_0_CA6E+60j
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_CABB
		dec	ax
		mov	ds:0C988h, ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	cx, 5
		call	PAUSE
		mov	dx, 30h	; '0'
		mov	bp, 94h	; '�'
		mov	si, 5F00h
		mov	di, 6478h
		call	COPY_BLOCK_2V
		mov	cx, 32h	; '2'
		call	PAUSE
		mov	bx, 0C9B1h
		add	bx, ds:0C988h
		mov	byte ptr [bx], 1
		push	bx
		call	sub_0_CB7F
		mov	cx, 0Ah
		call	PAUSE
		pop	bx
		mov	byte ptr [bx], 2
		call	sub_0_CB7F
		mov	ax, ds:0C988h
		mov	bx, 0C9AEh
		add	bx, ax
		cmp	byte ptr [bx], 1
		jz	loc_0_CB55
		nop
		nop
		nop
		mov	cx, 28h	; '('
		call	PAUSE
		or	word ptr ds:0C9B1h, 101h
		or	byte ptr ds:0C9B3h, 1
		call	sub_0_CB7F
		mov	cx, 0Ah
		call	PAUSE
		mov	word ptr ds:0C9B1h, 202h
		mov	byte ptr ds:0C9B3h, 2
		call	sub_0_CB7F
		jmp	loc_0_C9AD
;����������������������������������������������������������������������������

loc_0_CB55:				; CODE XREF: sub_0_CA6E+B7j
		cmp	word ptr ds:0D442h, 10h
		jnz	loc_0_CB6C
		nop
		nop
		nop
		mov	di, ds:0D44Bh
		and	word ptr [di], 0FFFBh
		mov	word ptr ds:0C9ACh, 1

loc_0_CB6C:				; CODE XREF: sub_0_CA6E+ECj
		mov	ax, 2
		add	ds:0B1Fh, ax
		mov	si, 5C9Eh
		jmp	loc_0_C9BE
;����������������������������������������������������������������������������

loc_0_CB79:				; CODE XREF: sub_0_CA6E+62j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		retn
sub_0_CA6E	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CB7F	proc near		; CODE XREF: sub_0_CA6E+3Cp
					; sub_0_CA6E+9Cp ...
		call	sub_0_C9E8
		mov	bx, 0
		mov	cx, 3
		mov	di, 0C9A6h

loc_0_CB8B:				; CODE XREF: sub_0_CB7F+2Fj
		push	di
		mov	di, [di]
		mov	al, [bx-364Fh]
		mov	ah, 0
		mov	dx, 2Dh	; '-'
		mul	dx
		mov	si, 4554h
		add	si, ax
		mov	al, [bx-3652h]
		push	cx
		push	bx
		call	sub_0_CBB4
		pop	bx
		pop	cx
		pop	di
		inc	bx
		add	di, 2
		loop	loc_0_CB8B
		call	sub_0_C9F8
		retn
sub_0_CB7F	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CBB4	proc near		; CODE XREF: sub_0_CB7F+25p
		cmp	si, 4554h
		jnz	loc_0_CBBF
		nop
		nop
		nop
		mov	al, 0

loc_0_CBBF:				; CODE XREF: sub_0_CBB4+4j
		cmp	si, 45B0h
		jbe	loc_0_CBCB
		nop
		nop
		nop
		sub	si, 2Eh	; '.'

loc_0_CBCB:				; CODE XREF: sub_0_CBB4+Fj
		push	di
		push	ax
		mov	dx, 49h	; 'I'
		mov	bp, 2Dh	; '-'
		call	COPY_BLOCKM_22
		pop	ax
		pop	di
		cmp	al, 0
		jz	locret_0_CC1C
		nop
		nop
		nop
		mov	si, ds:0C99Ah
		mov	dx, ds:0C9A0h
		mov	bp, ds:0C99Eh
		cmp	word ptr ds:0A2F9h, 0Ch
		jnz	loc_0_CC15
		nop
		nop
		nop
		cmp	word ptr ds:0D442h, 10h
		jnz	loc_0_CC15
		nop
		nop
		nop
		cmp	word ptr ds:0C9ACh, 1
		jz	loc_0_CC15
		nop
		nop
		nop
		mov	si, ds:0C99Ch
		mov	dx, ds:0C9A4h
		mov	bp, ds:0C9A2h

loc_0_CC15:				; CODE XREF: sub_0_CBB4+3Cj
					; sub_0_CBB4+46j ...
		add	di, 3C0Eh
		call	COPY_BLOCKM_22

locret_0_CC1C:				; CODE XREF: sub_0_CBB4+26j
		retn
sub_0_CBB4	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CC1D	proc near		; CODE XREF: GAMES+9Cp
		mov	word ptr ds:0CA16h, 64A6h
		call	GETTABLE

loc_0_CC26:				; CODE XREF: sub_0_CC1D+12j
		call	RAND
		and	ax, 3
		cmp	ax, 3
		jz	loc_0_CC26
		mov	bx, 0C9AEh
		mov	si, 0
		mov	cx, 3

loc_0_CC3A:				; CODE XREF: sub_0_CC1D+2Bj
		mov	byte ptr [bx+si], 0
		cmp	ax, si
		jnz	loc_0_CC47
		nop
		nop
		nop
		mov	byte ptr [bx+si], 1

loc_0_CC47:				; CODE XREF: sub_0_CC1D+22j
		inc	si
		loop	loc_0_CC3A
		mov	byte ptr ds:0C9B1h, 0
		mov	byte ptr ds:0C9B2h, 0
		mov	byte ptr ds:0C9B3h, 0
		call	sub_0_CD47
		mov	si, 5CC3h
		mov	di, 7390h
		call	TPPANDP
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_CC6A:				; CODE XREF: sub_0_CC1D+5Aj
					; sub_0_CC1D+6Bj
		mov	si, 0C9D4h
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_CC6A
		test	bx, 2
		jz	loc_0_CC82
		jmp	loc_0_CD41
;����������������������������������������������������������������������������

loc_0_CC82:				; CODE XREF: sub_0_CC1D+60j
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_CC6A
		dec	ax
		mov	ds:0C988h, ax
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	cx, 5
		call	PAUSE
		mov	dx, 30h	; '0'
		mov	bp, 94h	; '�'
		mov	si, 5F00h
		mov	di, 6478h
		call	COPY_BLOCK_2V
		mov	cx, 32h	; '2'
		call	PAUSE
		mov	bx, 0C9B1h
		add	bx, ds:0C988h
		mov	byte ptr [bx], 1
		push	bx
		call	sub_0_CD47
		mov	cx, 0Ah
		call	PAUSE
		pop	bx
		mov	byte ptr [bx], 2
		push	bx
		call	sub_0_CD47
		pop	bx
		mov	cx, 0Ah
		call	PAUSE
		mov	byte ptr [bx], 3
		call	sub_0_CD47
		mov	ax, ds:0C988h
		mov	bx, 0C9AEh
		add	bx, ax
		cmp	byte ptr [bx], 1
		jz	loc_0_CD23
		nop
		nop
		nop
		mov	cx, 28h	; '('
		call	PAUSE
		add	word ptr ds:0C9B1h, 101h
		inc	byte ptr ds:0C9B3h
		call	sub_0_CD47
		mov	cx, 0Ah
		call	PAUSE
		add	word ptr ds:0C9B1h, 101h
		inc	byte ptr ds:0C9B3h
		call	sub_0_CD47
		mov	cx, 0Ah
		call	PAUSE
		add	word ptr ds:0C9B1h, 101h
		inc	byte ptr ds:0C9B3h
		call	sub_0_CD47
		jmp	loc_0_C9AD
;����������������������������������������������������������������������������

loc_0_CD23:				; CODE XREF: sub_0_CC1D+C5j
		mov	ax, 2
		sub	al, ds:0C9FAh
		add	ds:0B1Fh, ax
		mov	si, 5C9Eh
		cmp	byte ptr ds:0C9FAh, 1
		jnz	loc_0_CD3E
		nop
		nop
		nop
		mov	si, 5C95h

loc_0_CD3E:				; CODE XREF: sub_0_CC1D+119j
		jmp	loc_0_C9BE
;����������������������������������������������������������������������������

loc_0_CD41:				; CODE XREF: sub_0_CC1D+62j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		retn
sub_0_CC1D	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CD47	proc near		; CODE XREF: sub_0_CC1D+3Cp
					; sub_0_CC1D+9Cp ...
		mov	si, 0
		mov	di, 90h	; '�'
		mov	bp, 90h	; '�'
		mov	dx, 4Ch	; 'L'
		call	COPY_BLOCK_22
		mov	cx, 3
		mov	bx, 0
		mov	di, 0C9F4h

loc_0_CD5F:				; CODE XREF: sub_0_CD47+44j
		push	di
		mov	di, [di]
		mov	al, [bx-364Fh]
		cmp	al, 3
		jle	loc_0_CD6F
		nop
		nop
		nop
		mov	al, 3

loc_0_CD6F:				; CODE XREF: sub_0_CD47+21j
		mov	ah, 0
		mov	dx, 20h	; ' '
		mul	dx
		mov	si, 0A000h
		add	si, ax
		mov	al, [bx-3652h]
		push	bx
		push	cx
		call	sub_0_CD9D
		pop	cx
		pop	bx
		pop	di
		add	di, 2
		inc	bx
		loop	loc_0_CD5F
		mov	si, 90h	; '�'
		mov	di, 578h
		mov	bp, 90h	; '�'
		mov	dx, 4Ch	; 'L'
		call	COPY_BLOCK_2V
		retn
sub_0_CD47	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CD9D	proc near		; CODE XREF: sub_0_CD47+3Ap
		cmp	al, 1
		jnz	loc_0_CDBF
		nop
		nop
		nop
		add	si, 80h	; '�'
		cmp	si, 0A080h
		jnz	loc_0_CDBF
		nop
		nop
		nop
		cmp	byte ptr ds:0C9FAh, 1
		jz	loc_0_CDBF
		nop
		nop
		nop
		sub	si, 80h	; '�'

loc_0_CDBF:				; CODE XREF: sub_0_CD9D+2j
					; sub_0_CD9D+Fj ...
		mov	dx, 2Ch	; ','
		mov	bp, 20h	; ' '
		call	COPY_BLOCKM_22
		retn
sub_0_CD9D	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CDC9	proc near		; CODE XREF: GAMES+96p
		mov	word ptr ds:0CA16h, 19A6h
		call	GETTABLE
		mov	word ptr ds:0CA14h, 0
		mov	cx, 3

loc_0_CDDB:				; CODE XREF: sub_0_CDC9+1Bj
		call	RAND
		ror	ah, 1
		rcl	word ptr ds:0CA14h, 1
		loop	loc_0_CDDB
		mov	word ptr ds:0CA08h, 9Ch	; '�'
		mov	word ptr ds:0CA12h, 0FFFFh
		call	sub_0_CE95
		push	es
		mov	ax, ds:0D704h
		push	ds
		mov	ds, ax
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	dx, 10h
		mov	bp, 10h
		mov	di, 64BAh
		mov	si, 0A130h
		call	COPY_BLOCKM
		pop	ds
		pop	es
		assume es:nothing
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_CE17:				; CODE XREF: sub_0_CDC9+5Bj
					; sub_0_CDC9+6Cj
		mov	si, 0C9FCh
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_CE17
		test	bx, 2
		jnz	loc_0_CE8F
		nop
		nop
		nop
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_CE17
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	word ptr ds:0CA08h, 9Ch	; '�'
		mov	cx, 3Ch	; '<'

loc_0_CE45:				; CODE XREF: sub_0_CDC9+9Bj
		cmp	cx, 5
		jg	loc_0_CE53
		nop
		nop
		nop
		mov	ax, ds:0CA14h
		mov	ds:0CA12h, ax

loc_0_CE53:				; CODE XREF: sub_0_CDC9+7Fj
		push	cx
		call	sub_0_CE95
		call	WAITFLY
		call	WAITFLY
		add	word ptr ds:0CA08h, 140h
		pop	cx
		loop	loc_0_CE45
		mov	ax, ds:0CA14h
		and	ax, 7
		cmp	ax, 0
		jz	loc_0_CE7F
		nop
		nop
		nop
		cmp	ax, 7
		jz	loc_0_CE7F
		nop
		nop
		nop
		jmp	loc_0_C9AD
;����������������������������������������������������������������������������

loc_0_CE7F:				; CODE XREF: sub_0_CDC9+A6j
					; sub_0_CDC9+AEj
		mov	ax, 3
		add	ds:0B1Fh, ax
		mov	si, 5CA7h
		jmp	loc_0_C9BE
;����������������������������������������������������������������������������
		db 0E8h	; �
		db  1Eh	;
		db 0FBh	; �
;����������������������������������������������������������������������������

loc_0_CE8F:				; CODE XREF: sub_0_CDC9+61j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		retn
sub_0_CDC9	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CE95	proc near		; CODE XREF: sub_0_CDC9+29p
					; sub_0_CDC9+8Bp
		mov	si, 0
		mov	di, 90h	; '�'
		mov	bp, 88h	; '�'
		mov	dx, 60h	; '`'
		call	COPY_BLOCK_22
		mov	di, ds:0CA08h
		mov	cx, 3

loc_0_CEAB:				; CODE XREF: sub_0_CE95+4Cj
		push	cx
		push	di
		cmp	word ptr ds:0CA12h, 0FFFFh
		jz	loc_0_CECA
		nop
		nop
		nop
		mov	si, 11Ch
		ror	word ptr ds:0CA12h, 1
		jnb	loc_0_CED9
		nop
		nop
		nop
		add	si, 2800h
		jmp	short loc_0_CED9
;����������������������������������������������������������������������������
		nop

loc_0_CECA:				; CODE XREF: sub_0_CE95+1Dj
		mov	bx, 0CA0Ah
		call	RAND
		and	ax, 3
		shl	ax, 1
		add	bx, ax
		mov	si, [bx]

loc_0_CED9:				; CODE XREF: sub_0_CE95+29j
					; sub_0_CE95+32j
		call	sub_0_CEE7
		pop	di
		pop	cx
		add	di, 2Ch	; ','
		loop	loc_0_CEAB
		call	sub_0_CEF1
		retn
sub_0_CE95	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CEE7	proc near		; CODE XREF: sub_0_CE95+44p
		mov	bp, 20h	; ' '
		mov	dx, 20h	; ' '
		call	COPY_BLOCKM_22
		retn
sub_0_CEE7	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_CEF1	proc near		; CODE XREF: sub_0_CE95+4Ep
		mov	si, 90h	; '�'
		mov	di, 578h
		mov	bp, 88h	; '�'
		mov	dx, 60h	; '`'
		call	COPY_BLOCK_2V
		retn
sub_0_CEF1	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPY_BLOCK_22	proc near		; CODE XREF: COPYUNDER+15p
					; sub_0_7604+3Cp ...
		push	ds
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ds, ax
		call	COPY_BLOCK

loc_0_CF0D:				; CODE XREF: COPY_BLOCKM_22+Cj
		pop	es
		pop	ds
		retn
COPY_BLOCK_22	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPY_BLOCKM_22	proc near		; CODE XREF: sub_0_CBB4+1Fp
					; sub_0_CBB4+65p ...
		push	ds
		push	es
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ds, ax
		call	COPY_BLOCKM
		jmp	short loc_0_CF0D
COPY_BLOCKM_22	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PROCESS_ILLNESS	proc near		; CODE XREF: START+276p sub_0_5740+103p
					; ...
		mov	word ptr ds:261Ch, 8Ch ; '�'
		call	CALCVIEWPARMS
		cmp	word ptr ds:100Ah, 0
		jz	loc_0_CF31
		jmp	locret_0_D078
;����������������������������������������������������������������������������

loc_0_CF31:				; CODE XREF: PROCESS_ILLNESS+Ej
		mov	ax, ds:0CA18h
		add	ax, 0Ah
		cmp	ax, 140h
		jl	loc_0_CF47
		nop
		nop
		nop
		push	ax
		mov	si, 0
		call	STARTILLNESS
		pop	ax

loc_0_CF47:				; CODE XREF: PROCESS_ILLNESS+1Cj
		cmp	ax, 190h
		jle	loc_0_CF52
		nop
		nop
		nop
		mov	ax, 190h

loc_0_CF52:				; CODE XREF: PROCESS_ILLNESS+2Cj
		mov	ds:0CA18h, ax
		mov	ax, ds:0CA1Ah
		add	ax, 0Ah
		cmp	ax, 0A0h ; '�'
		jl	loc_0_CF6B
		nop
		nop
		nop
		push	ax
		mov	si, 20h	; ' '
		call	STARTILLNESS
		pop	ax

loc_0_CF6B:				; CODE XREF: PROCESS_ILLNESS+40j
		cmp	ax, 0F0h ; '�'
		jle	loc_0_CF76
		nop
		nop
		nop
		mov	ax, 0F0h ; '�'

loc_0_CF76:				; CODE XREF: PROCESS_ILLNESS+50j
		mov	ds:0CA1Ah, ax
		mov	ax, ds:0CA1Ch
		add	ax, 0Ah
		cmp	ax, 140h
		jl	loc_0_CF8F
		nop
		nop
		nop
		push	ax
		mov	si, 30h	; '0'
		call	STARTILLNESS
		pop	ax

loc_0_CF8F:				; CODE XREF: PROCESS_ILLNESS+64j
		cmp	ax, 168h
		jle	loc_0_CF9A
		nop
		nop
		nop
		mov	ax, 168h

loc_0_CF9A:				; CODE XREF: PROCESS_ILLNESS+74j
		mov	ds:0CA1Ch, ax
		mov	si, 0CA3Ch
		mov	dx, 0
		mov	bx, 0
		mov	bp, 0
		mov	cx, 0

loc_0_CFAC:				; CODE XREF: PROCESS_ILLNESS+B2j
		cmp	word ptr [si+8], 0
		jz	loc_0_CFCA
		nop
		nop
		nop
		cmp	word ptr [si], 5
		jl	loc_0_CFBE
		nop
		nop
		nop
		inc	cx

loc_0_CFBE:				; CODE XREF: PROCESS_ILLNESS+9Aj
		dec	word ptr [si+8]
		add	dx, [si+4]
		add	bx, [si+2]
		add	bp, [si+0Eh]

loc_0_CFCA:				; CODE XREF: PROCESS_ILLNESS+92j
		add	si, 10h
		cmp	word ptr [si], 0FFFFh
		jnz	loc_0_CFAC
		mov	ds:0CB42h, cx
		mov	ax, 0
		mov	cx, 0
		mov	si, 0CA3Ch
		cmp	word ptr [si+8], 0
		jnz	loc_0_CFEA
		nop
		nop
		nop
		inc	ax
		inc	cx

loc_0_CFEA:				; CODE XREF: PROCESS_ILLNESS+C5j
		add	si, 20h	; ' '
		cmp	word ptr [si+8], 0
		jnz	loc_0_CFF7
		nop
		nop
		nop
		inc	ax

loc_0_CFF7:				; CODE XREF: PROCESS_ILLNESS+D3j
		add	dx, ax
		add	bx, cx
		call	UPDATEHEALTH
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		sar	ax, 1
		add	ax, ds:0ADFh
		add	ax, bp
		cmp	ax, 0
		jge	loc_0_D017
		nop
		nop
		nop
		mov	ax, 0

loc_0_D017:				; CODE XREF: PROCESS_ILLNESS+F1j
		mov	bx, ds:0D455h
		sar	bx, 1
		add	ax, bx
		mov	ds:0CB44h, ax
		cmp	word ptr ds:0CB42h, 5
		jg	loc_0_D075
		nop
		nop
		nop
		call	RAND
		and	ah, 1Fh
		cmp	ah, 2
		jnz	loc_0_D075
		nop
		nop
		nop

loc_0_D03A:				; CODE XREF: PROCESS_ILLNESS+125j
					; PROCESS_ILLNESS+12Aj
					; ...
		call	RAND
		and	ah, 0Fh
		cmp	ah, 5
		jl	loc_0_D03A
		cmp	ah, 0Ch
		jz	loc_0_D03A
		cmp	ah, 0Bh
		jz	loc_0_D03A
		cmp	ah, 0Ah
		jz	loc_0_D03A
		mov	al, ah
		mov	ah, 0
		mov	dx, 10h
		mul	dx
		mov	si, ax
		call	RAND
		mov	ah, 64h	; 'd'
		call	RAND_RANGE
		mov	ah, 0
		cmp	ax, ds:0CB3Eh
		jge	loc_0_D075
		nop
		nop
		nop
		call	STARTILLNESS

loc_0_D075:				; CODE XREF: PROCESS_ILLNESS+109j
					; PROCESS_ILLNESS+117j
					; ...
		call	DISPLAYATTRIBS

locret_0_D078:				; CODE XREF: PROCESS_ILLNESS+10j
		retn
PROCESS_ILLNESS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

UPDATEHEALTH	proc near		; CODE XREF: sub_0_5740+FAp
					; PROCESS_ILLNESS+DDp
					; ...
		mov	ax, ds:0CB3Eh
		add	ax, dx
		mov	cx, ds:0CB40h
		add	cx, bx
		cmp	ax, cx
		jle	loc_0_D099
		nop
		nop
		nop
		mov	dx, ax
		shl	dx, 1
		add	ax, dx
		add	ax, cx
		sar	ax, 1
		sar	ax, 1
		mov	cx, ax

loc_0_D099:				; CODE XREF: UPDATEHEALTH+Dj
		cmp	ax, 0
		jge	loc_0_D0A4
		nop
		nop
		nop
		mov	ax, 0

loc_0_D0A4:				; CODE XREF: UPDATEHEALTH+23j
		cmp	cx, 0
		jge	loc_0_D0AF
		nop
		nop
		nop
		mov	cx, 0

loc_0_D0AF:				; CODE XREF: UPDATEHEALTH+2Ej
		cmp	ax, 64h	; 'd'
		jle	loc_0_D0BA
		nop
		nop
		nop
		mov	ax, 64h	; 'd'

loc_0_D0BA:				; CODE XREF: UPDATEHEALTH+39j
		cmp	cx, 0C8h ; '�'
		jle	loc_0_D0C6
		nop
		nop
		nop
		mov	cx, 0C8h ; '�'

loc_0_D0C6:				; CODE XREF: UPDATEHEALTH+45j
		mov	ds:0CB3Eh, ax
		mov	ds:0CB40h, cx
		retn
UPDATEHEALTH	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

STARTILLNESS	proc near		; CODE XREF: PROCESS_ILLNESS+25p
					; PROCESS_ILLNESS+49p
					; ...
		push	dx
		add	si, 0CA3Ch
		cmp	word ptr [si+0Ch], 1
		jz	loc_0_D0E2
		nop
		nop
		nop
		mov	dx, [si+6]
		mov	[si+8],	dx

loc_0_D0E2:				; CODE XREF: STARTILLNESS+9j
		pop	dx
		retn
STARTILLNESS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D0E4	proc near		; CODE XREF: TAKEFOOD+34p TAKEDRINK+21p
					; ...
		add	si, 0CA3Ch
		mov	word ptr [si+8], 0
		retn
sub_0_D0E4	endp

;����������������������������������������������������������������������������
		db 0BEh	; �
		db  3Ch	; <
		db 0CAh	; �
		db  83h	; �
		db 0C6h	; �
		db  50h	; P
		db    1	;
		db  44h	; D
		db    8	;
		db 0C3h	; �

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

TAKEFOOD	proc near		; CODE XREF: sub_0_7053+1Dp
					; DINE+1AFp ...
		cmp	word ptr ds:0CA18h, 0
		jnz	loc_0_D10B
		nop
		nop
		nop
		mov	si, 10h
		call	STARTILLNESS
		jmp	short locret_0_D12F
;����������������������������������������������������������������������������
		nop

loc_0_D10B:				; CODE XREF: TAKEFOOD+5j
		sub	ds:0CA18h, ax
		cmp	word ptr ds:0CA18h, 0
		jge	loc_0_D11F
		nop
		nop
		nop
		mov	word ptr ds:0CA18h, 0

loc_0_D11F:				; CODE XREF: TAKEFOOD+1Cj
		cmp	word ptr ds:0CA18h, 64h	; 'd'
		jge	locret_0_D12F
		nop
		nop
		nop
		mov	si, 0
		call	sub_0_D0E4

locret_0_D12F:				; CODE XREF: TAKEFOOD+10j TAKEFOOD+2Cj
		retn
TAKEFOOD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

TAKEDRINK	proc near		; CODE XREF: sub_0_49FD+67p
					; sub_0_7053+67p ...
		sub	ds:0CA1Ah, ax
		cmp	word ptr ds:0CA1Ah, 0
		jge	loc_0_D144
		nop
		nop
		nop
		mov	word ptr ds:0CA1Ah, 0

loc_0_D144:				; CODE XREF: TAKEDRINK+9j
		cmp	word ptr ds:0CA1Ah, 32h	; '2'
		jge	locret_0_D154
		nop
		nop
		nop
		mov	si, 20h	; ' '
		call	sub_0_D0E4

locret_0_D154:				; CODE XREF: TAKEDRINK+19j
		retn
TAKEDRINK	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

TAKESLEEP	proc near		; CODE XREF: sub_0_550F+179p
		mov	si, 0CA1Eh
		mov	ax, ds:0CB46h
		mov	bx, 2
		cmp	ax, 0
		jnz	loc_0_D177
		nop
		nop
		nop
		cmp	word ptr ds:5E5Ch, 5E7Eh
		jnz	loc_0_D190
		nop
		nop
		nop
		mov	bx, 0
		jmp	short loc_0_D190
;����������������������������������������������������������������������������
		nop

loc_0_D177:				; CODE XREF: TAKESLEEP+Cj
		mov	bx, 4
		cmp	ax, 2
		jz	loc_0_D190
		nop
		nop
		nop
		mov	bx, 6
		cmp	ax, 1
		jz	loc_0_D190
		nop
		nop
		nop
		mov	bx, 8

loc_0_D190:				; CODE XREF: TAKESLEEP+17j
					; TAKESLEEP+1Fj ...
		mov	ax, [bx+si]
		mov	di, si
		sub	ds:0CA1Ch, ax
		cmp	word ptr ds:0CA1Ch, 0
		jge	loc_0_D1A8
		nop
		nop
		nop
		mov	word ptr ds:0CA1Ch, 0

loc_0_D1A8:				; CODE XREF: TAKESLEEP+48j
		cmp	word ptr ds:0CA1Ch, 104h
		jge	loc_0_D1B9
		nop
		nop
		nop
		mov	si, 30h	; '0'
		call	sub_0_D0E4

loc_0_D1B9:				; CODE XREF: TAKESLEEP+59j
		mov	si, di
		mov	dx, [bx+si+0Ah]
		mov	bx, [bx+si+14h]
		call	UPDATEHEALTH
		retn
TAKESLEEP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DISPLAYATTRIBS	proc near		; CODE XREF: LOADPLAYSCREEN+30p
					; CONTROLLER+AE5p ...
		cmp	word ptr ds:68A2h, 0
		jz	loc_0_D1D4
		nop
		nop
		nop
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh

loc_0_D1D4:				; CODE XREF: DISPLAYATTRIBS+5j
		mov	si, 6A92h
		mov	cx, 4

loc_0_D1DA:				; CODE XREF: DISPLAYATTRIBS+31j
		cmp	byte ptr [si], 4
		jnz	loc_0_D1F5
		nop
		nop
		nop
		push	cx
		push	si
		mov	di, 6A76h
		add	di, 8
		sub	di, cx
		sub	di, cx
		mov	di, [di]
		call	sub_0_D256
		pop	si
		pop	cx

loc_0_D1F5:				; CODE XREF: DISPLAYATTRIBS+18j
		inc	si
		loop	loc_0_D1DA
		cmp	word ptr ds:68A2h, 0
		jz	loc_0_D207
		nop
		nop
		nop
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_D207:				; CODE XREF: DISPLAYATTRIBS+38j
		mov	si, 0CA3Ch
		mov	cx, 0

loc_0_D20D:				; CODE XREF: DISPLAYATTRIBS+58j
		cmp	word ptr [si+8], 0
		jz	loc_0_D217
		nop
		nop
		nop
		inc	cx

loc_0_D217:				; CODE XREF: DISPLAYATTRIBS+4Cj
		add	si, 10h
		cmp	word ptr [si], 0FFFFh
		jnz	loc_0_D20D
		mov	ax, 0D0Dh
		cmp	cx, 0
		jz	loc_0_D22D
		nop
		nop
		nop
		mov	ax, 505h

loc_0_D22D:				; CODE XREF: DISPLAYATTRIBS+60j
		mov	dx, 0A000h
		mov	ds, dx
		assume ds:nothing
		mov	ds:0DC26h, ax
		mov	ds:0DD66h, ax
		mov	ds:0DEA6h, ax
		mov	ds:0DFE6h, ax
		mov	ds:0E126h, ax
		mov	ds:0E266h, ax
		mov	ds:0DEA4h, ax
		mov	ds:0DFE4h, ax
		mov	ds:0DEA8h, ax
		mov	ds:0DFE8h, ax
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		retn
DISPLAYATTRIBS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D256	proc near		; CODE XREF: DISPLAYATTRIBS+2Bp
		push	di
		add	di, 645h
		mov	ax, HEALTH
		mov	bx, 64h	; 'd'
		mov	bp, 0
		call	ATTRIBAR
		pop	di
		push	di
		add	di, 655h
		mov	ax, word_FFD_CA84
		mov	bx, 32h	; '2'
		mov	bp, 1
		call	ATTRIBAR
		pop	di
		push	di
		add	di, 64Dh
		mov	ax, ENERGY
		mov	bx, 0C8h ; '�'
		mov	bp, 0
		call	ATTRIBAR
		pop	di
		push	di
		add	di, 65Dh
		mov	ax, APPEAL
		mov	bx, 18h
		mov	bp, 0
		call	ATTRIBAR
		pop	di
		push	di
		add	di, 667h
		mov	ax, HUNGER
		mov	bx, 190h
		mov	bp, 1
		call	ATTRIBAR
		pop	di
		push	di
		add	di, 66Fh
		mov	ax, THIRST
		mov	bx, 0F0h ; '�'
		mov	bp, 1
		call	ATTRIBAR
		pop	di
		push	di
		add	di, 677h
		mov	ax, TIREDNESS
		mov	bx, 168h
		mov	bp, 1
		call	ATTRIBAR
		pop	di
		retn
sub_0_D256	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

ATTRIBAR	proc near		; CODE XREF: sub_0_D256+Ep
					; sub_0_D256+20p ...
		push	es
		mov	dx, 0A000h
		mov	es, dx
		assume es:nothing
		mov	dx, 20h	; ' '
		mul	dx
		div	bx
		cmp	bp, 1
		jnz	loc_0_D2EF
		nop
		nop
		nop
		neg	ax
		add	ax, 20h	; ' '

loc_0_D2EF:				; CODE XREF: ATTRIBAR+10j
		mov	bx, ax
		mov	dx, bp
		mov	dh, dl
		mov	ax, BARBGRND
		mov	cx, 20h	; ' '

loc_0_D2FB:				; CODE XREF: ATTRIBAR+41j
		cmp	cx, bx
		jg	loc_0_D30D
		nop
		nop
		nop
		mov	ax, 707h
		stosw
		mov	ax, 506h
		stosw
		jmp	short loc_0_D312
;����������������������������������������������������������������������������
		nop

loc_0_D30D:				; CODE XREF: ATTRIBAR+28j
		mov	ax, BARBGRND
		stosw
		stosw

loc_0_D312:				; CODE XREF: ATTRIBAR+35j
		add	di, 13Ch
		loop	loc_0_D2FB
		pop	es
		assume es:nothing
		retn
ATTRIBAR	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PROCESS_TRIG	proc near		; CODE XREF: CONTROLLER+922p
		mov	bx, HEROADD
		push	es
		mov	ax, MAPSEG
		mov	es, ax
		assume es:nothing
		mov	al, es:[bx]
		pop	es
		assume es:nothing
		and	al, 1Ch
		cmp	al, 4
		jnz	locret_0_D368
		nop
		nop
		nop
		mov	ax, bx
		mov	bx, 0CB4Ah

loc_0_D336:				; CODE XREF: PROCESS_TRIG+2Ej
		cmp	word ptr [bx], 0FFFFh
		jz	locret_0_D368
		nop
		nop
		nop
		cmp	ax, [bx]
		jz	loc_0_D34A
		nop
		nop
		nop
		add	bx, 8
		jmp	short loc_0_D336
;����������������������������������������������������������������������������

loc_0_D34A:				; CODE XREF: PROCESS_TRIG+26j
		mov	dx, LEVEL
		cmp	[bx+2],	dl
		jnz	locret_0_D368
		nop
		nop
		nop
		test	byte ptr [bx+3], 1
		jnz	locret_0_D368
		nop
		nop
		nop
		or	byte ptr [bx+3], 1
		mov	ax, [bx+6]
		call	ax

locret_0_D368:				; CODE XREF: PROCESS_TRIG+12j
					; PROCESS_TRIG+1Fj ...
		retn
PROCESS_TRIG	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

RESETTRIGS	proc near		; CODE XREF: LOADGMAP+25p
		mov	bx, 0CB4Ah

loc_0_D36C:				; CODE XREF: RESETTRIGS+12j
		cmp	word ptr [bx], 0FFFFh
		jz	locret_0_D37D
		nop
		nop
		nop
		and	byte ptr [bx+3], 0FEh
		add	bx, 8
		jmp	short loc_0_D36C
;����������������������������������������������������������������������������

locret_0_D37D:				; CODE XREF: RESETTRIGS+6j
		retn
RESETTRIGS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D37E	proc near
		and	byte ptr [bx+3], 0FEh
		cmp	ACTITETASK, 0
		jnz	loc_0_D3A7
		nop
		nop
		nop
		mov	di, RIGHTHAND
		cmp	di, 0FFFFh
		jnz	loc_0_D3A1
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 1Bh
		jz	locret_0_D3A6
		nop
		nop
		nop

loc_0_D3A1:				; CODE XREF: sub_0_D37E+15j
		mov	byte_FFD_5EBC, 80h ; '�'

locret_0_D3A6:				; CODE XREF: sub_0_D37E+1Ej
		retn
;����������������������������������������������������������������������������

loc_0_D3A7:				; CODE XREF: sub_0_D37E+9j
		and	byte ptr [bx+3], 0FEh
		mov	byte_FFD_5EBC, 0
		retn
sub_0_D37E	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D3B1	proc near
		mov	bp, 0Ah
		call	MAKE_ARRESTER
		cmp	di, 0FFFFh
		jz	locret_0_D3D0
		nop
		nop
		nop
		mov	word ptr [di+6], 4843h
		mov	byte ptr [di+3], 43h ; 'C'
		mov	byte ptr [di+5], 48h ; 'H'
		mov	byte ptr [di+0Ah], 0

locret_0_D3D0:				; CODE XREF: sub_0_D3B1+9j
		retn
sub_0_D3B1	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D3D1	proc near
		cmp	ACTITETASK, 1
		jnz	locret_0_D3EC
		nop
		nop
		nop
		mov	di, TASKOBJECTBLOCK
		cmp	word ptr [di+6], 1645h
		jnz	locret_0_D3EC
		nop
		nop
		nop
		and	word ptr [di], 0FFFBh

locret_0_D3EC:				; CODE XREF: sub_0_D3D1+5j
					; sub_0_D3D1+13j
		retn
sub_0_D3D1	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D3ED	proc near
		cmp	ACTITETASK, 6
		jnz	loc_0_D41A
		nop
		nop
		nop
		cmp	word_FFD_CC8A, 0
		jnz	locret_0_D420
		nop
		nop
		nop
		inc	word_FFD_CC8A
		mov	bx, 0Ch
		mov	ax, 3280h
		mov	dx, 3C80h
		mov	cx, 0FFFFh
		mov	bp, 10h
		call	SETUPPICKUP
		jmp	short locret_0_D420
;����������������������������������������������������������������������������
		nop

loc_0_D41A:				; CODE XREF: sub_0_D3ED+5j
		mov	word_FFD_CC8A, 0

locret_0_D420:				; CODE XREF: sub_0_D3ED+Fj
					; sub_0_D3ED+2Aj
		retn
sub_0_D3ED	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D421	proc near
		cmp	ACTITETASK, 1Ah
		jnz	loc_0_D46C
		nop
		nop
		nop
		cmp	T6S, 0
		jnz	locret_0_D472
		nop
		nop
		nop
		inc	T6S
		mov	bx, 10h
		mov	ax, 0A80h
		mov	dx, 6E80h
		mov	cx, 0
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	byte ptr [si+21h], 1
		mov	bx, 0Fh
		mov	ax, 480h
		mov	dx, 6C80h
		mov	cx, 0
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	byte ptr [si+1Dh], 2
		mov	byte ptr [si+1Bh], 1
		jmp	short locret_0_D472
;����������������������������������������������������������������������������
		nop

loc_0_D46C:				; CODE XREF: sub_0_D421+5j
		mov	T6S, 0

locret_0_D472:				; CODE XREF: sub_0_D421+Fj
					; sub_0_D421+48j ...
		retn
sub_0_D421	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D473	proc near
		and	byte ptr [bx+3], 0FEh
		mov	di, 88B6h
		mov	cx, 40h	; '@'

loc_0_D47D:				; CODE XREF: sub_0_D473+2Cj
		cmp	word ptr [di+6], 301Ah
		jnz	loc_0_D49C
		nop
		nop
		nop
		test	word ptr [di], 1
		jnz	loc_0_D49C
		nop
		nop
		nop
		test	word ptr [di], 4
		jnz	loc_0_D49C
		nop
		nop
		nop
		jmp	short loc_0_D4A6
;����������������������������������������������������������������������������
		nop

loc_0_D49C:				; CODE XREF: sub_0_D473+Fj
					; sub_0_D473+18j ...
		add	di, 2Ch	; ','
		loop	loc_0_D47D
		mov	al, 0
		jmp	short loc_0_D4A8
;����������������������������������������������������������������������������
		nop

loc_0_D4A6:				; CODE XREF: sub_0_D473+26j
		mov	al, 1

loc_0_D4A8:				; CODE XREF: sub_0_D473+30j
		mov	di, 6005h
		mov	[di], al
		retn
sub_0_D473	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D4AE	proc near
		cmp	ACTITETASK, 24h	; '$'
		jnz	locret_0_D4DB
		nop
		nop
		nop
		mov	byte_FFD_D279, 2
		mov	bx, 0Fh
		mov	ax, 480h
		mov	dx, 3480h
		mov	cx, 0
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	byte ptr [si+1Dh], 6
		mov	byte ptr [si+1Bh], 1
		mov	byte ptr [si+22h], 1

locret_0_D4DB:				; CODE XREF: sub_0_D4AE+5j
		retn
sub_0_D4AE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D4DC	proc near
		cmp	ACTITETASK, 25h	; '%'
		jnz	locret_0_D55C
		nop
		nop
		nop
		cmp	T6S, 0
		jnz	locret_0_D55C
		nop
		nop
		nop
		inc	T6S
		mov	bx, 0Fh
		mov	ax, 1380h
		mov	dx, 5D80h
		mov	cx, 0FFFFh
		mov	bp, 50h	; 'P'
		call	SETUPPICKUP
		mov	byte ptr [si+1Dh], 9
		mov	byte ptr [si+1Bh], 1
		mov	bx, 0Fh
		mov	ax, 1880h
		mov	dx, 6880h
		mov	cx, 0FFFFh
		mov	bp, 50h	; 'P'
		call	SETUPPICKUP
		mov	byte ptr [si+1Dh], 0Ah
		mov	byte ptr [si+1Bh], 1
		mov	bx, 0Fh
		mov	ax, 2780h
		mov	dx, 6580h
		mov	cx, 0FFFFh
		mov	bp, 50h	; 'P'
		call	SETUPPICKUP
		mov	byte ptr [si+1Dh], 0Bh
		mov	byte ptr [si+1Bh], 1
		mov	bx, 0Fh
		mov	ax, 3880h
		mov	dx, 5380h
		mov	cx, 0FFFFh
		mov	bp, 50h	; 'P'
		call	SETUPPICKUP
		mov	byte ptr [si+1Dh], 0Ch
		mov	byte ptr [si+1Bh], 1

locret_0_D55C:				; CODE XREF: sub_0_D4DC+5j
					; sub_0_D4DC+Fj
		retn
sub_0_D4DC	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D55D	proc near
		cmp	ACTITETASK, 8
		jnz	locret_0_D5C5
		nop
		nop
		nop
		and	byte ptr [bx+3], 0FEh
		mov	byte ptr HEROX,	80h ; '�'
		mov	byte ptr HEROY,	80h ; '�'
		jmp	short loc_0_D594
;����������������������������������������������������������������������������
		nop
		and	byte ptr [bx+3], 0FEh
		mov	ax, HEROX
		sub	al, 50h	; 'P'
		cmp	al, 60h	; '`'
		ja	locret_0_D5C5
		nop
		nop
		nop
		mov	ax, HEROY
		sub	al, 50h	; 'P'
		cmp	al, 60h	; '`'
		ja	locret_0_D5C5
		nop
		nop
		nop

loc_0_D594:				; CODE XREF: sub_0_D55D+18j
		or	byte ptr [bx+3], 1
		mov	bp, 0FFFFh
		mov	STAIRDIRN, bp
		call	BLACK_UNDER_IMAGE
		call	SCROLL_VIEW_UP
		mov	ax, 0
		call	CLEARVIEW
		mov	bp, STAIRDIRN
		mov	REGDEADTIMER, 1
		push	es
		mov	ax, MAPSEG
		mov	es, ax
		assume es:nothing
		call	CHANGELEVEL
		pop	es
		assume es:nothing
		mov	REGDEADTIMER, 0

locret_0_D5C5:				; CODE XREF: sub_0_D55D+5j
					; sub_0_D55D+26j ...
		retn
sub_0_D55D	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D5C6	proc near
		and	byte ptr [bx+3], 0FEh
		call	TFP
		mov	di, 6009h
		mov	[di], al
		retn
sub_0_D5C6	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

TFP		proc near		; CODE XREF: DIALOG+326p sub_0_D5C6+4p
		mov	bp, 0
		mov	dx, 3746h

loc_0_D5D9:				; CODE XREF: TFP+48j
		mov	di, 88B6h
		mov	cx, 40h	; '@'

loc_0_D5DF:				; CODE XREF: TFP+35j
		cmp	[di+6],	dx
		jnz	loc_0_D605
		nop
		nop
		nop
		test	word ptr [di], 1
		jnz	loc_0_D605
		nop
		nop
		nop
		test	word ptr [di], 4
		jnz	loc_0_D605
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 35h ; '5'
		jnz	loc_0_D605
		nop
		nop
		nop
		jmp	short loc_0_D60F
;����������������������������������������������������������������������������
		nop

loc_0_D605:				; CODE XREF: TFP+Fj TFP+18j ...
		add	di, 2Ch	; ','
		loop	loc_0_D5DF
		mov	al, 0
		jmp	short locret_0_D61F
;����������������������������������������������������������������������������
		nop

loc_0_D60F:				; CODE XREF: TFP+2Fj
		cmp	bp, 1
		jz	loc_0_D61D
		nop
		nop
		nop
		inc	bp
		mov	dx, 3946h
		jmp	short loc_0_D5D9
;����������������������������������������������������������������������������

loc_0_D61D:				; CODE XREF: TFP+3Fj
		mov	al, 1

locret_0_D61F:				; CODE XREF: TFP+39j
		retn
TFP		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D620	proc near
		mov	cx, 5
		mov	bx, 0CC9Ah

loc_0_D626:				; CODE XREF: sub_0_D620+23j
		cmp	ACTITETASK, 12h
		jnz	locret_0_D681
		nop
		nop
		nop
		cmp	FEATHERFLAG, 1
		jnz	locret_0_D681
		nop
		nop
		nop
		jmp	short loc_0_D65B
;����������������������������������������������������������������������������
		nop
		mov	cx, 5
		mov	bx, 0CCA4h
		jmp	short loc_0_D626
;����������������������������������������������������������������������������
		push	es
		mov	ax, 0Dh
		push	ax
		mov	es, SOUNDSEG
		assume es:nothing
		call	SENDSND
		inc	sp
		inc	sp
		pop	es
		assume es:nothing
		mov	cx, 5
		mov	bx, 0CC90h

loc_0_D65B:				; CODE XREF: sub_0_D620+1Aj
					; sub_0_D620+5Fj
		push	bx
		push	cx
		mov	bp, 0Ah
		call	MAKE_ARRESTER
		pop	cx
		pop	bx
		cmp	di, 0FFFFh
		jz	loc_0_D67C
		nop
		nop
		nop
		mov	ax, [bx]
		mov	[di+6],	ax
		mov	[di+3],	al
		mov	[di+5],	ah
		mov	byte ptr [di+0Ah], 0

loc_0_D67C:				; CODE XREF: sub_0_D620+48j
		add	bx, 2
		loop	loc_0_D65B

locret_0_D681:				; CODE XREF: sub_0_D620+Bj
					; sub_0_D620+15j
		retn
sub_0_D620	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D682	proc near
		cmp	ACTITETASK, 1Ch
		jnz	loc_0_D6B7
		nop
		nop
		nop
		cmp	T6S, 0
		jnz	locret_0_D6BD
		nop
		nop
		nop
		inc	T6S
		mov	bx, 0Fh
		mov	ax, 2080h
		mov	dx, 2A80h
		mov	cx, 0FFFFh
		mov	bp, 10h
		call	SETUPPICKUP
		mov	byte ptr [si+1Dh], 11h
		mov	byte ptr [si+1Bh], 1
		jmp	short locret_0_D6BD
;����������������������������������������������������������������������������
		nop

loc_0_D6B7:				; CODE XREF: sub_0_D682+5j
		mov	T6S, 0

locret_0_D6BD:				; CODE XREF: sub_0_D682+Fj
					; sub_0_D682+32j
		retn
sub_0_D682	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D6BE	proc near
		mov	al, 1
		mov	di, 0Bh
		jmp	short loc_0_D6DD
;����������������������������������������������������������������������������
		nop
		cmp	ACTITETASK, 17h
		jnz	locret_0_D6E5
		nop
		nop
		nop
		mov	al, 0
		mov	di, 0Bh
		jmp	short loc_0_D6DD
;����������������������������������������������������������������������������
		nop
		mov	al, 1
		mov	di, 9

loc_0_D6DD:				; CODE XREF: sub_0_D6BE+5j
					; sub_0_D6BE+17j ...
		and	byte ptr [bx+3], 0FEh
		mov	[di+6003h], al

locret_0_D6E5:				; CODE XREF: sub_0_D6BE+Dj
		retn
sub_0_D6BE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D6E6	proc near
		mov	al, 0
		mov	di, 9
		jmp	short loc_0_D6DD
sub_0_D6E6	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D6ED	proc near
		mov	byte_FFD_6016, 0
		retn
sub_0_D6ED	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D6F3	proc near
		cmp	ACTITETASK, 18h
		jnz	locret_0_D702
		nop
		nop
		nop
		mov	byte_FFD_6017, 0

locret_0_D702:				; CODE XREF: sub_0_D6F3+5j
		retn
sub_0_D6F3	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D703	proc near		; DATA XREF: DRAWSOMETHING?+5r
					; DRAWSOMETHING2?+5r
		cmp	ACTITETASK, 26h	; '&'
		jnz	loc_0_D738
		nop
		nop
		nop
		cmp	T6S, 0
		jnz	locret_0_D73E
		nop
		nop
		nop
		inc	T6S
		mov	bx, 0Fh
		mov	ax, 2680h
		mov	dx, 6F80h
		mov	cx, 0FFFFh
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	byte ptr [si+1Dh], 13h
		mov	byte ptr [si+1Bh], 1
		jmp	short locret_0_D73E
;����������������������������������������������������������������������������
		nop

loc_0_D738:				; CODE XREF: sub_0_D703+5j
		mov	T6S, 0

locret_0_D73E:				; CODE XREF: sub_0_D703+Fj
					; sub_0_D703+32j
		retn
sub_0_D703	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D73F	proc near
		cmp	ACTITETASK, 17h
		jnz	loc_0_D787
		nop
		nop
		nop
		cmp	T6S, 0
		jnz	locret_0_D78D
		nop
		nop
		nop
		inc	T6S
		mov	bx, 10h
		mov	ax, 3180h
		mov	dx, 580h
		mov	cx, 1
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	byte ptr [si+21h], 0Bh
		mov	word ptr [si+1Dh], 17h
		mov	bx, 46h	; 'F'
		mov	ax, 2E80h
		mov	dx, 980h
		mov	cx, 0
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		jmp	locret_0_D472
;����������������������������������������������������������������������������

loc_0_D787:				; CODE XREF: sub_0_D73F+5j
		mov	T6S, 0

locret_0_D78D:				; CODE XREF: sub_0_D73F+Fj
		retn
sub_0_D73F	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D78E	proc near
		cmp	ACTITETASK, 9
		jnz	locret_0_D79F
		nop
		nop
		nop
		and	byte ptr [bx+3], 0FEh
		call	KILLREGS

locret_0_D79F:				; CODE XREF: sub_0_D78E+5j
		retn
sub_0_D78E	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D7A0	proc near
		mov	bx, 78h	; 'x'
		mov	ax, 2980h
		mov	dx, 5880h
		mov	cx, 0FFFFh
		mov	bp, 4
		push	di
		mov	CREATEFLAG, 1
		call	SETUPPICKUP
		mov	word ptr [si+1Bh], 5
		mov	CREATEFLAG, 0
		pop	di
		retn
sub_0_D7A0	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_D7C6	proc near
		and	[bx+si-1], cx
		add	[bx+si], al
		add	bl, dh
		setalc
sub_0_D7C6	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

ATTACK		proc near		; CODE XREF: COMBAT+1A2p COMBAT+373p
		mov	ax, PLAYER_ATTVAL
		add	ax, PLAYER_DEFVAL
		add	ax, AMULETFLAG	; sumamos la flag del amuleto
		neg	ax		; negamos
		mov	di, CHARACTER	; puntero al personaje?
		mov	dl, [di+6Bh]	; �obtenemos su	valor de salud?
		mov	dh, 0		; nos quedamos solo con	0xFF
		add	ax, dx		; sumamos ax y dx
		retn
ATTACK		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

FINDRADIUS	proc near		; CODE XREF: COMBAT+4Ep
		sub	ax, HEROX
		sub	cx, HEROY
		mov	XP, ax
		mov	YP, cx
		mov	ax, COSTHETA
		imul	XP
		push	dx
		push	ax
		mov	ax, SINTHETA
		imul	YP
		pop	si
		pop	cx
		add	ax, si
		adc	dx, cx
		rol	ax, 1
		rcl	dx, 1
		rol	ax, 1
		rcl	dx, 1
		retn
FINDRADIUS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COMBAT		proc near		; CODE XREF: CONTROLLER+B91p
					; sub_0_7A1C+25p
		mov	TIMEON,	0
		call	DROPNW
		mov	di, CHARACTERPASS
		cmp	PUNCHFLAG, 2
		jz	loc_0_D87A
		nop
		nop
		nop
		cmp	PUNCHFLAG, 3
		jz	loc_0_D87A
		nop
		nop
		nop
		cmp	PUNCHFLAG, 4
		jnz	loc_0_D849
		nop
		nop
		nop
		call	sub_0_DEF1
		mov	di, CHARACTERPASS
		jmp	short loc_0_D87A
;����������������������������������������������������������������������������
		nop

loc_0_D849:				; CODE XREF: COMBAT+25j
		mov	FIST_FRAME, 0FFFFh
		call	DRAWVIEW
		call	FINDNEAREST
		cmp	di, 0
		jnz	loc_0_D85D
		jmp	loc_0_DC21
;����������������������������������������������������������������������������

loc_0_D85D:				; CODE XREF: COMBAT+43j
		mov	ax, [di+2]
		mov	cx, [di+4]
		call	FINDRADIUS
		cmp	dx, 100h
		jle	loc_0_D86F
		jmp	loc_0_DC4D
;����������������������������������������������������������������������������

loc_0_D86F:				; CODE XREF: COMBAT+55j
		call	FINDEVIATION
		cmp	cx, 50h	; 'P'
		jle	loc_0_D87A
		jmp	loc_0_DC4D
;����������������������������������������������������������������������������

loc_0_D87A:				; CODE XREF: COMBAT+11j COMBAT+1Bj
					; ...
		cmp	byte ptr [di+0Bh], 0Fh
		jnz	loc_0_D88F
		nop
		nop
		nop
		mov	ax, HEROADD
		cmp	ax, TORCHADD
		jnz	loc_0_D88F
		jmp	loc_0_DC4D
;����������������������������������������������������������������������������

loc_0_D88F:				; CODE XREF: COMBAT+69j COMBAT+75j
		cmp	byte ptr [di+0Bh], 2
		jnz	loc_0_D8BE
		nop
		nop
		nop
		cmp	PUNCHFLAG, 2
		jz	loc_0_D8BE
		nop
		nop
		nop
		mov	ax, RAN
		and	ax, 1
		add	ax, 4
		or	word ptr [di], 10h
		mov	word ptr [di+65h], 3993h
		mov	[di+67h], ax
		mov	word ptr [di+27h], 0FC18h
		jmp	loc_0_DC4D
;����������������������������������������������������������������������������

loc_0_D8BE:				; CODE XREF: COMBAT+7Ej COMBAT+88j
		mov	CHARACTER, di
		mov	al, [di+0Bh]
		mov	ah, 0
		shl	ax, 1
		mov	bx, 0CD49h
		add	bx, ax
		mov	dx, [bx]
		mov	word_FFD_CD45, dx
		mov	bx, 0CD81h
		add	bx, ax
		mov	dx, [bx]
		mov	word_FFD_CD47, dx
		mov	di, 6DCEh
		mov	cx, 38h	; '8'

loc_0_D8E5:				; CODE XREF: COMBAT+D6j
		and	word ptr [di], 0FFFDh
		add	di, 7Bh	; '{'
		loop	loc_0_D8E5
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 140h
		mov	dx, 1C0h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 8Eh	; '�'
		mov	dx, 9Eh	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 180h
		mov	dx, 98h	; '�'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	si, 263Ch
		mov	bx, VIEWSPTR
		mov	word_FFD_CCC7, bx
		mov	bx, 0
		mov	VIEWSPTR, bx
		mov	ax, [bx+si]
		mov	VIEWPORTH, ax
		mov	ax, [bx+si+2]
		mov	VIEWPORTW, ax
		mov	ax, [bx+si+4]
		mov	VIEWPORTADD, ax
		call	CALCVIEWPARMS
		call	MAKEVIEW
		push	ds
		push	es
		mov	si, 0
		mov	di, 0
		mov	bp, VIEWPORTW
		mov	dx, VIEWPORTH
		mov	bx, SCREEN2
		mov	ax, BUFFERSEG
		mov	es, ax
		assume es:nothing
		mov	ds, bx
		assume ds:nothing
		call	COPY_BLOCK
		pop	es
		assume es:nothing
		pop	ds
		assume ds:nothing
		mov	word ptr ds:0CCB0h, 0
		call	sub_0_DF0D
		call	COPYVIEW
		mov	cx, 5
		call	PAUSE
		call	sub_0_E4E9
		mov	word ptr ds:0CDB9h, 0
		mov	word ptr ds:134h, 0
		mov	word ptr ds:0CCBEh, 4
		mov	word ptr ds:0CCC0h, 8
		mov	byte ptr ds:0CCC4h, 0
		mov	word ptr ds:0CCB4h, 0
		mov	di, ds:0A2FDh
		mov	dx, [di+69h]
		mov	ds:0CCB8h, dx
		mov	ax, ds:134h
		mov	ds:0CCBCh, ax
		cmp	byte ptr ds:6AB0h, 2
		jle	loc_0_D9CC
		nop
		nop
		nop
		add	ax, dx
		push	ax
		call	ATTACK
		cmp	ax, 0
		jle	loc_0_D9CB
		nop
		nop
		nop
		add	ds:0CA84h, ax
		push	di
		call	DISPLAYATTRIBS
		pop	di

loc_0_D9CB:				; CODE XREF: COMBAT+1A8j
		pop	ax

loc_0_D9CC:				; CODE XREF: COMBAT+19Aj
		mov	ds:0CCBAh, ax
		mov	ax, [di+6Ch]
		mov	ds:0CCC2h, ax
		mov	word ptr ds:0CCB6h, 0
		mov	word ptr ds:0CCCBh, 0

loc_0_D9E1:				; CODE XREF: COMBAT+403j
		cmp	word ptr ds:0F8h, 0
		jz	loc_0_D9EB
		jmp	loc_0_DC1B
;����������������������������������������������������������������������������

loc_0_D9EB:				; CODE XREF: COMBAT+1D1j
		mov	ax, ds:0CCBCh
		cmp	ax, ds:134h
		jbe	loc_0_D9F7
		jmp	loc_0_DABD
;����������������������������������������������������������������������������

loc_0_D9F7:				; CODE XREF: COMBAT+1DDj
		cmp	byte ptr ds:5E26h, 1
		jnz	loc_0_DA1A
		nop
		nop
		nop
		call	RAND
		and	ax, 3
		cmp	ax, 1
		jz	loc_0_DA62
		nop
		nop
		nop
		cmp	ax, 2
		jnz	loc_0_DA17
		jmp	loc_0_DAA4
;����������������������������������������������������������������������������

loc_0_DA17:				; CODE XREF: COMBAT+1FDj
		jmp	short loc_0_DA83
;����������������������������������������������������������������������������
		nop

loc_0_DA1A:				; CODE XREF: COMBAT+1E7j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jnz	loc_0_DA29
		jmp	loc_0_DAD0
;����������������������������������������������������������������������������

loc_0_DA29:				; CODE XREF: COMBAT+20Fj
		cmp	byte ptr ds:0CCC4h, 1
		jnz	loc_0_DA33
		jmp	loc_0_DAD5
;����������������������������������������������������������������������������

loc_0_DA33:				; CODE XREF: COMBAT+219j
		mov	byte ptr ds:0CCC4h, 1
		test	bx, 2
		jz	loc_0_DA41
		jmp	loc_0_DC1B
;����������������������������������������������������������������������������

loc_0_DA41:				; CODE XREF: COMBAT+227j
		mov	si, 68AAh
		call	CHECKBOXES
		sub	cx, [si]
		sub	dx, [si+2]
		mov	si, 68E8h
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_DAD5
		nop
		nop
		nop
		cmp	ax, 1
		jnz	loc_0_DA7B
		nop
		nop
		nop

loc_0_DA62:				; CODE XREF: COMBAT+1F5j
		cmp	word ptr ds:0CDB9h, 0
		jnz	loc_0_DAD5
		nop
		nop
		nop
		mov	bp, 1
		call	sub_0_DFC6
		mov	word ptr ds:0CDB9h, 0FFFDh
		jmp	short loc_0_DAD5
;����������������������������������������������������������������������������
		nop

loc_0_DA7B:				; CODE XREF: COMBAT+248j
		cmp	ax, 2
		jnz	loc_0_DA9C
		nop
		nop
		nop

loc_0_DA83:				; CODE XREF: COMBAT+202j
		cmp	word ptr ds:0CDB9h, 0
		jnz	loc_0_DAD5
		nop
		nop
		nop
		mov	bp, 2
		call	sub_0_DFC6
		mov	word ptr ds:0CDB9h, 0FFFFh
		jmp	short loc_0_DAD5
;����������������������������������������������������������������������������
		nop

loc_0_DA9C:				; CODE XREF: COMBAT+269j
		cmp	ax, 3
		jnz	loc_0_DAD5
		nop
		nop
		nop

loc_0_DAA4:				; CODE XREF: COMBAT+1FFj
		cmp	word ptr ds:0CDB9h, 0
		jnz	loc_0_DAD5
		nop
		nop
		nop
		mov	bp, 0
		call	sub_0_DFC6
		mov	word ptr ds:0CDB9h, 0FFFEh
		jmp	short loc_0_DAD5
;����������������������������������������������������������������������������
		nop

loc_0_DABD:				; CODE XREF: COMBAT+1DFj
		push	es
		mov	ax, 0Fh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_DAD5
;����������������������������������������������������������������������������
		nop

loc_0_DAD0:				; CODE XREF: COMBAT+211j
		mov	byte ptr ds:0CCC4h, 0

loc_0_DAD5:				; CODE XREF: COMBAT+21Bj COMBAT+240j
					; ...
		cmp	word ptr ds:0CCCBh, 1
		jnz	loc_0_DAEF
		nop
		nop
		nop
		call	sub_0_E186
		mov	di, ds:0A2FDh
		call	TERMINATECHAR
		call	sub_0_E4E9
		jmp	loc_0_DC1E
;����������������������������������������������������������������������������

loc_0_DAEF:				; CODE XREF: COMBAT+2C5j
		mov	bx, ds:0CD45h
		cmp	word ptr ds:0CCB4h, 1
		jz	loc_0_DB3F
		nop
		nop
		nop
		mov	ax, [bx]
		mov	ah, 0
		mov	ds:0CCB0h, ax
		mov	word ptr ds:0CCB2h, 0
		mov	ax, ds:0CCBAh
		cmp	ax, ds:134h
		jbe	loc_0_DB16
		jmp	loc_0_DBEC
;����������������������������������������������������������������������������

loc_0_DB16:				; CODE XREF: COMBAT+2FCj
		call	RAND
		and	ax, 1Fh
		add	ax, ds:134h
		add	ax, ds:0CCB8h
		mov	ds:0CCBAh, ax
		mov	word ptr ds:0CCB4h, 1
		push	bx
		push	es
		mov	ax, 1Eh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		pop	bx

loc_0_DB3F:				; CODE XREF: COMBAT+2E3j
		mov	dx, ds:0CCC0h
		cmp	dx, ds:134h
		jbe	loc_0_DB4C
		jmp	loc_0_DBEC
;����������������������������������������������������������������������������

loc_0_DB4C:				; CODE XREF: COMBAT+332j
		mov	ax, ds:134h
		add	ax, 8
		mov	ds:0CCC0h, ax
		mov	si, ds:0CCB2h
		add	si, 2
		mov	ds:0CCB2h, si
		mov	ax, [bx+si]
		cmp	al, 0FFh
		jz	loc_0_DBC9
		nop
		nop
		nop
		cmp	ah, 1
		jnz	loc_0_DBE7
		nop
		nop
		nop
		mov	ah, 0
		mov	ds:0CCB0h, ax
		mov	dx, ds:0D744h
		mov	ds:0CCC5h, dx
		cmp	word ptr ds:0CDB9h, 0
		jnz	loc_0_DBDB
		nop
		nop
		nop
		call	ATTACK
		cmp	ax, 0
		jle	loc_0_DBEC
		nop
		nop
		nop
		add	ds:0CA84h, ax
		cmp	word ptr ds:0CA84h, 32h	; '2'
		jle	loc_0_DBA1
		jmp	loc_0_DC1E
;����������������������������������������������������������������������������

loc_0_DBA1:				; CODE XREF: COMBAT+387j
		cwd
		mov	cx, 4
		div	cx
		inc	ax
		dec	word ptr ds:0CB3Eh
		dec	word ptr ds:0CB40h
		call	DISPLAYATTRIBS
		cmp	word ptr ds:0CB3Eh, 0
		jz	loc_0_DC1E
		nop
		nop
		nop
		mov	word ptr ds:0CB48h, 0A0Ah
		call	DISPLAYATTRIBS
		jmp	short loc_0_DBEC
;����������������������������������������������������������������������������
		nop

loc_0_DBC9:				; CODE XREF: COMBAT+34Fj
		mov	word ptr ds:0CCB4h, 0
		mov	word ptr ds:0CB48h, 0
		call	DISPLAYATTRIBS
		jmp	short loc_0_DBEC
;����������������������������������������������������������������������������
		nop

loc_0_DBDB:				; CODE XREF: COMBAT+36Ej
		mov	bx, 0FFFFh
		mov	dx, 0FFFFh
		call	UPDATEHEALTH
		jmp	short loc_0_DBEC
;����������������������������������������������������������������������������
		nop

loc_0_DBE7:				; CODE XREF: COMBAT+357j
		mov	ah, 0
		mov	ds:0CCB0h, ax

loc_0_DBEC:				; CODE XREF: COMBAT+2FEj COMBAT+334j
					; ...
		push	ds
		push	es
		mov	si, 0
		mov	di, 0
		mov	bp, ds:2630h
		mov	dx, ds:262Eh
		mov	bx, ds:0D702h
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ds, bx
		call	COPY_BLOCK
		pop	es
		pop	ds
		call	sub_0_DF0D
		call	sub_0_DF54
		call	sub_0_E05A
		call	COPYVIEW
		jmp	loc_0_D9E1
;����������������������������������������������������������������������������

loc_0_DC1B:				; CODE XREF: COMBAT+1D3j COMBAT+229j
		call	sub_0_DEF1

loc_0_DC1E:				; CODE XREF: COMBAT+2D7j COMBAT+389j
					; ...
		call	MOUSEFORGAME

loc_0_DC21:				; CODE XREF: COMBAT+45j
		mov	si, 263Ch
		mov	bx, ds:0CCC7h
		mov	ds:2650h, bx
		mov	ax, [bx+si]
		mov	ds:262Eh, ax
		mov	ax, [bx+si+2]
		mov	ds:2630h, ax
		mov	ax, [bx+si+4]
		mov	ds:2632h, ax
		call	CALCVIEWPARMS
		cmp	word ptr ds:2650h, 0
		jz	loc_0_DC4D
		nop
		nop
		nop
		call	GETBORDER

loc_0_DC4D:				; CODE XREF: COMBAT+57j COMBAT+62j
					; ...
		mov	word ptr ds:0CB48h, 0
		call	DISPLAYATTRIBS
		call	sub_0_E4E3
		mov	byte ptr ds:0AECh, 1
		retn
COMBAT		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

TERMINATECHAR	proc near		; CODE XREF: sub_0_681D+10Ep
					; COMBAT+2D1p
		cmp	di, 6DCEh
		jnz	loc_0_DC6E
		nop
		nop
		nop
		mov	word ptr ds:0CCAEh, 3Ch	; '<'

loc_0_DC6E:				; CODE XREF: TERMINATECHAR+4j
		cmp	word ptr ds:5B01h, 0
		jnz	loc_0_DCA8
		nop
		nop
		nop
		cmp	byte ptr ds:0D14Eh, 62h	; 'b'
		jnz	loc_0_DCA8
		nop
		nop
		nop
		mov	dl, [di+0Bh]
		mov	ax, 1
		cmp	dl, 1Bh
		jz	loc_0_DCA4
		nop
		nop
		nop
		shl	ax, 1
		cmp	dl, 0Ah
		jz	loc_0_DCA4
		nop
		nop
		nop
		shl	ax, 1
		cmp	dl, 0Fh
		jnz	loc_0_DCA8
		nop
		nop
		nop

loc_0_DCA4:				; CODE XREF: TERMINATECHAR+2Cj
					; TERMINATECHAR+36j
		or	ds:0D47Bh, ax

loc_0_DCA8:				; CODE XREF: TERMINATECHAR+14j
					; TERMINATECHAR+1Ej ...
		cmp	word ptr ds:0D442h, 2Ch	; ','
		jnz	loc_0_DCD5
		nop
		nop
		nop
		cmp	word ptr ds:0D483h, 1
		jnz	loc_0_DCD5
		nop
		nop
		nop
		cmp	byte ptr [di+35h], 6
		jnz	loc_0_DCD5
		nop
		nop
		nop
		cmp	word ptr ds:0CB04h, 0
		jz	loc_0_DCD5
		nop
		nop
		nop
		mov	word ptr ds:0D483h, 2

loc_0_DCD5:				; CODE XREF: TERMINATECHAR+4Ej
					; TERMINATECHAR+58j ...
		mov	word ptr [di], 1
		cmp	byte ptr [di+4Eh], 0
		jz	loc_0_DCFD
		nop
		nop
		nop
		mov	si, 0AED1h
		mov	ax, 0
		mov	al, [di+4Eh]
		add	si, ax
		mov	byte ptr [si], 2
		cmp	ax, 24h	; '$'
		jnz	loc_0_DCFD
		nop
		nop
		nop
		mov	byte ptr ds:0BCEBh, 4

loc_0_DCFD:				; CODE XREF: TERMINATECHAR+7Ej
					; TERMINATECHAR+94j
		cmp	word ptr ds:0D442h, 2Ah	; '*'
		jnz	loc_0_DD20
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 9
		jnz	loc_0_DD20
		nop
		nop
		nop
		cmp	word ptr ds:0D45Fh, 0
		jnz	loc_0_DD20
		nop
		nop
		nop
		call	DROPDIVINER
		jmp	locret_0_DEF0
;����������������������������������������������������������������������������

loc_0_DD20:				; CODE XREF: TERMINATECHAR+A3j
					; TERMINATECHAR+ACj ...
		cmp	word ptr ds:0D442h, 21h	; '!'
		jnz	loc_0_DD88
		nop
		nop
		nop
		cmp	byte ptr [di+4Eh], 20h ; ' '
		jnz	loc_0_DD4E
		nop
		nop
		nop
		mov	bx, 10h
		mov	ax, [di+2]
		mov	dx, [di+4]
		mov	cl, [di+0Ah]
		mov	ch, 0
		mov	bp, 6
		call	SETUPPICKUP
		mov	byte ptr [si+21h], 0Ah
		jmp	locret_0_DEF0
;����������������������������������������������������������������������������

loc_0_DD4E:				; CODE XREF: TERMINATECHAR+CFj
		cmp	byte ptr [di+0Bh], 0Eh
		jnz	loc_0_DD88
		nop
		nop
		nop
		cmp	word ptr ds:0D475h, 0
		jnz	loc_0_DD88
		nop
		nop
		nop
		mov	si, ds:0D44Bh
		mov	word ptr [si], 1
		mov	bx, 43h	; 'C'
		mov	ax, [di+2]
		mov	dx, [di+4]
		mov	cl, [di+0Ah]
		mov	ch, 0
		mov	bp, 10h
		call	SETUPPICKUP
		mov	ds:0D44Bh, si
		inc	word ptr ds:0D475h
		jmp	locret_0_DEF0
;����������������������������������������������������������������������������

loc_0_DD88:				; CODE XREF: TERMINATECHAR+C6j
					; TERMINATECHAR+F3j ...
		cmp	word ptr ds:0D442h, 1Dh
		jnz	loc_0_DDAB
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 18h
		jnz	loc_0_DDAB
		nop
		nop
		nop
		cmp	byte ptr [di+1Ah], 60h ; '`'
		jnz	loc_0_DDAB
		nop
		nop
		nop
		mov	si, ds:0D44Bh
		and	word ptr [si], 0FFFBh

loc_0_DDAB:				; CODE XREF: TERMINATECHAR+12Ej
					; TERMINATECHAR+137j
					; ...
		cmp	byte ptr [di+0Bh], 15h
		jnz	loc_0_DDCE
		nop
		nop
		nop
		mov	bx, 5Ah	; 'Z'
		mov	ax, [di+2]
		mov	dx, [di+4]
		mov	cl, [di+0Ah]
		mov	ch, 0
		mov	bp, 10h
		call	SETUPPICKUP
		mov	word ptr ds:0D487h, 1

loc_0_DDCE:				; CODE XREF: TERMINATECHAR+150j
		cmp	byte ptr [di+0Bh], 10h
		jnz	loc_0_DE11
		nop
		nop
		nop
		mov	si, ds:0D44Bh
		and	word ptr [si], 0FFFBh
		mov	ax, [di+2]
		mov	dx, [di+4]
		mov	cx, [di+6]
		mov	[si+2],	ax
		mov	[si+4],	dx
		mov	[si+6],	cx
		mov	word ptr ds:0AA92h, 1
		mov	si, ds:0BB6h
		cmp	si, 0
		jz	loc_0_DE11
		nop
		nop
		nop
		mov	word ptr [si], 1
		mov	word ptr ds:0BB6h, 0
		mov	byte ptr ds:13Dh, 1

loc_0_DE11:				; CODE XREF: TERMINATECHAR+173j
					; TERMINATECHAR+19Ej
		cmp	byte ptr [di+0Bh], 12h
		jnz	loc_0_DE3A
		nop
		nop
		nop
		cmp	byte ptr [di+1Ah], 0E0h	; '�'
		jz	loc_0_DE3A
		nop
		nop
		nop
		mov	bx, 55h	; 'U'
		mov	ax, [di+2]
		mov	dx, [di+4]
		mov	cl, [di+0Ah]
		mov	ch, 0
		mov	bp, 1
		call	SETUPPICKUP
		jmp	locret_0_DEF0
;����������������������������������������������������������������������������

loc_0_DE3A:				; CODE XREF: TERMINATECHAR+1B6j
					; TERMINATECHAR+1BFj
		cmp	byte ptr [di+4Eh], 1Fh
		jnz	loc_0_DE82
		nop
		nop
		nop
		cmp	word ptr ds:0D442h, 11h
		jnz	loc_0_DE82
		nop
		nop
		nop
		mov	word ptr ds:0D473h, 1
		push	di
		mov	di, 6DCEh
		mov	cx, 2Bh	; '+'

loc_0_DE5A:				; CODE XREF: TERMINATECHAR+219j
		cmp	byte ptr [di+0Bh], 2
		jnz	loc_0_DE75
		nop
		nop
		nop
		or	word ptr [di], 10h
		mov	word ptr [di+65h], 3993h
		mov	word ptr [di+67h], 0Ch
		mov	word ptr [di+27h], 0FC18h

loc_0_DE75:				; CODE XREF: TERMINATECHAR+1FFj
		add	di, 7Bh	; '{'
		loop	loc_0_DE5A
		pop	di
		mov	si, ds:0D44Bh
		jmp	short loc_0_DE8D
;����������������������������������������������������������������������������
		nop

loc_0_DE82:				; CODE XREF: TERMINATECHAR+1DFj
					; TERMINATECHAR+1E9j
		mov	si, [di+4Ch]
		cmp	si, 0
		jz	loc_0_DEAF
		nop
		nop
		nop

loc_0_DE8D:				; CODE XREF: TERMINATECHAR+220j
		mov	word ptr [di+4Ch], 0
		and	word ptr [si], 0FFFBh
		mov	bx, [di+2]
		mov	[si+2],	bx
		mov	dx, [di+4]
		mov	[si+4],	dx
		mov	dl, bh
		mov	[si+6],	dx
		mov	dl, [di+0Ah]
		mov	[si+0Ah], dl
		jmp	short locret_0_DEF0
;����������������������������������������������������������������������������
		nop

loc_0_DEAF:				; CODE XREF: TERMINATECHAR+229j
		mov	bp, 1
		mov	ax, [di+42h]
		cmp	ax, 0
		jnz	loc_0_DEDA
		nop
		nop
		nop
		mov	bx, 44h	; 'D'
		mov	cx, 1

loc_0_DEC3:				; CODE XREF: TERMINATECHAR+276j
		inc	bp
		mov	ah, 0
		mov	al, [bx+di]
		cmp	ax, 0
		jnz	loc_0_DEDA
		nop
		nop
		nop
		inc	bx
		inc	cx
		cmp	cx, 7
		jnz	loc_0_DEC3
		jmp	short locret_0_DEF0
;����������������������������������������������������������������������������
		nop

loc_0_DEDA:				; CODE XREF: TERMINATECHAR+259j
					; TERMINATECHAR+26Cj
		mov	bx, bp
		mov	bp, ax
		mov	ax, [di+2]
		mov	dx, [di+4]
		mov	cx, ds:0ADDh
		mov	di, bp
		mov	bp, 1
		call	SETUPPICKUP

locret_0_DEF0:				; CODE XREF: TERMINATECHAR+BEj
					; TERMINATECHAR+ECj ...
		retn
TERMINATECHAR	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_DEF1	proc near		; CODE XREF: COMBAT+2Ap COMBAT+406p
		push	word ptr ds:5B05h
		mov	word ptr ds:5B05h, 0B4h	; '�'
		mov	cx, 4

loc_0_DEFE:				; CODE XREF: sub_0_DEF1+15j
		push	cx
		call	sub_0_495E
		call	DRAWVIEW
		pop	cx
		loop	loc_0_DEFE
		pop	word ptr ds:5B05h
		retn
sub_0_DEF1	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_DF0D	proc near		; CODE XREF: COMBAT+152p COMBAT+3F7p
					; ...
		mov	bx, 996Ch
		mov	di, ds:0A2FDh
		mov	al, [di+0Bh]
		mov	ah, 0
		shl	ax, 1
		shl	ax, 1
		shl	ax, 1
		add	bx, ax
		mov	ax, [bx]
		push	ax
		push	bx
		mov	cx, ds:0CCB0h
		cmp	cx, 10h
		jl	loc_0_DF38
		nop
		nop
		nop
		sub	cx, 0Fh
		add	word ptr [bx], 3E80h

loc_0_DF38:				; CODE XREF: sub_0_DF0D+1Fj
		mov	ax, [bx+4]
		xchg	ah, al
		cmp	cx, 0
		jz	loc_0_DF49
		nop
		nop
		nop

loc_0_DF45:				; CODE XREF: sub_0_DF0D+3Aj
		add	[bx], ax
		loop	loc_0_DF45

loc_0_DF49:				; CODE XREF: sub_0_DF0D+33j
		mov	bx, 996Ch
		call	PLOTCU
		pop	bx
		pop	ax
		mov	[bx], ax
		retn
sub_0_DF0D	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_DF54	proc near		; CODE XREF: COMBAT+3FAp sub_0_E05A+113p
		push	word ptr ds:0D744h
		mov	ax, ds:0CCC5h
		mov	ds:0D744h, ax
		mov	cx, ds:0CCB6h
		cmp	cx, 0
		jz	loc_0_DF71
		nop
		nop
		nop

loc_0_DF6A:				; CODE XREF: sub_0_DF54+1Bj
		push	cx
		call	sub_0_DF76
		pop	cx
		loop	loc_0_DF6A

loc_0_DF71:				; CODE XREF: sub_0_DF54+11j
		pop	word ptr ds:0D744h
		retn
sub_0_DF54	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_DF76	proc near		; CODE XREF: sub_0_DF54+17p
		push	es
		push	ds
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ax, ds:0D708h
		mov	ds, ax
		mov	si, 8FC0h

loc_0_DF85:				; CODE XREF: sub_0_DF76+20j
		push	ds
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		call	RAND
		pop	ds
		assume ds:nothing
		mov	ah, 44h	; 'D'
		call	RAND_RANGE
		cmp	al, 12h
		jb	loc_0_DF85
		mov	ah, 0
		mov	di, 140h
		mul	di
		mov	di, ax

loc_0_DFA1:				; CODE XREF: sub_0_DF76+3Cj
		push	ds
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		call	RAND
		pop	ds
		assume ds:nothing
		mov	ah, 7Dh	; '}'
		call	RAND_RANGE
		cmp	al, 4Bh	; 'K'
		jb	loc_0_DFA1
		mov	ah, 0
		add	di, ax
		mov	bp, 15h
		mov	dx, 15h
		mov	al, 0
		call	COPY_BLOCK_LONIBM
		pop	ds
		pop	es
		retn
sub_0_DF76	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_DFC6	proc near		; CODE XREF: COMBAT+25Ap COMBAT+27Bp
					; ...
		cmp	word ptr ds:0CCB4h, 1
		jnz	loc_0_DFD0
		jmp	locret_0_E059
;����������������������������������������������������������������������������

loc_0_DFD0:				; CODE XREF: sub_0_DFC6+5j
		mov	di, ds:0A2FDh
		cmp	byte ptr [di+0Bh], 10h
		jnz	loc_0_DFF5
		nop
		nop
		nop
		mov	dx, 0
		mov	di, ds:0BB6h
		cmp	di, 0
		jz	loc_0_E023
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 60h ; '`'
		jnz	loc_0_E023
		nop
		nop
		nop

loc_0_DFF5:				; CODE XREF: sub_0_DFC6+12j
		mov	ax, ds:0AE1h
		mov	di, ds:0BB6h
		mov	dl, 0
		cmp	di, 0
		jz	loc_0_E009
		nop
		nop
		nop
		mov	dl, [di+24h]

loc_0_E009:				; CODE XREF: sub_0_DFC6+3Bj
		mov	dh, 0
		mov	cx, dx
		add	ax, dx
		add	ax, ds:5AC1h
		mov	di, ds:0A2FDh
		mov	bx, bp
		mov	dl, [bx+di+6Dh]
		mov	dh, 0
		add	ax, dx
		sub	[di+6Ch], al

loc_0_E023:				; CODE XREF: sub_0_DFC6+21j
					; sub_0_DFC6+2Aj
		mov	ax, ds:134h
		add	ax, ds:0AE5h
		mov	bx, ds:0BBAh
		add	bl, bh
		mov	bh, 0
		shl	bx, 1
		shl	bx, 1
		shl	bx, 1
		sub	ax, bx
		mov	ds:0CCBCh, ax
		mov	ds:0CCB6h, dx
		cmp	cx, 0
		jz	locret_0_E059
		nop
		nop
		nop
		push	es
		mov	ax, 1Dh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es

locret_0_E059:				; CODE XREF: sub_0_DFC6+7j
					; sub_0_DFC6+7Ej
		retn
sub_0_DFC6	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_E05A	proc near		; CODE XREF: COMBAT+3FDp sub_0_E05A+116p
		cmp	word ptr ds:0CDB9h, 0
		jnz	loc_0_E064
		jmp	locret_0_E185
;����������������������������������������������������������������������������

loc_0_E064:				; CODE XREF: sub_0_E05A+5j
		cmp	word ptr ds:0CDB9h, 0FFFFh
		jz	loc_0_E085
		nop
		nop
		nop
		cmp	word ptr ds:0CDB9h, 0FFFEh
		jz	loc_0_E0B3
		nop
		nop
		nop
		cmp	word ptr ds:0CDB9h, 0FFFDh
		jz	loc_0_E0CD
		nop
		nop
		nop
		jmp	short loc_0_E0E7
;����������������������������������������������������������������������������
		nop

loc_0_E085:				; CODE XREF: sub_0_E05A+Fj
		mov	si, 0CEC9h
		mov	di, ds:0BB6h
		cmp	di, 0
		jz	loc_0_E0A3
		nop
		nop
		nop
		mov	si, 0CDBBh
		cmp	byte ptr [di+29h], 1
		jz	loc_0_E0A3
		nop
		nop
		nop
		mov	si, 0CF0Dh

loc_0_E0A3:				; CODE XREF: sub_0_E05A+35j
					; sub_0_E05A+41j ...
		mov	ds:0CDB9h, si
		mov	ax, ds:134h
		add	ax, 4
		mov	ds:0CCBEh, ax
		jmp	short loc_0_E10D
;����������������������������������������������������������������������������
		nop

loc_0_E0B3:				; CODE XREF: sub_0_E05A+19j
		mov	si, 0CEB5h
		mov	di, ds:0BB6h
		cmp	di, 0
		jz	loc_0_E0A3
		mov	si, 0CDD3h
		cmp	byte ptr [di+29h], 1
		jz	loc_0_E0A3
		mov	si, 0CF25h
		jmp	short loc_0_E0A3
;����������������������������������������������������������������������������

loc_0_E0CD:				; CODE XREF: sub_0_E05A+23j
		mov	si, 0CEBFh
		mov	di, ds:0BB6h
		cmp	di, 0
		jz	loc_0_E0A3
		mov	si, 0CDC9h
		cmp	byte ptr [di+29h], 1
		jz	loc_0_E0A3
		mov	si, 0CF1Bh
		jmp	short loc_0_E0A3
;����������������������������������������������������������������������������

loc_0_E0E7:				; CODE XREF: sub_0_E05A+28j
		mov	si, ds:0CDB9h
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_E115
		nop
		nop
		nop
		mov	ax, ds:0CCBEh
		cmp	ax, ds:134h
		ja	loc_0_E10D
		nop
		nop
		nop
		mov	ax, ds:134h
		add	ax, 4
		mov	ds:0CCBEh, ax
		add	word ptr ds:0CDB9h, 2

loc_0_E10D:				; CODE XREF: sub_0_E05A+56j
					; sub_0_E05A+A0j
		mov	si, [si]
		call	STRETCHER
		jmp	short locret_0_E185
;����������������������������������������������������������������������������
		nop

loc_0_E115:				; CODE XREF: sub_0_E05A+94j
		mov	word ptr ds:0CDB9h, 0
		cmp	word ptr ds:0CCB6h, 0
		jz	locret_0_E185
		nop
		nop
		nop
		mov	di, ds:0A2FDh
		cmp	byte ptr [di+6Ch], 0
		jg	loc_0_E13F
		nop
		nop
		nop
		mov	byte ptr [di+6Ch], 0
		mov	word ptr ds:0CCCBh, 1
		jmp	short loc_0_E17F
;����������������������������������������������������������������������������
		nop

loc_0_E13F:				; CODE XREF: sub_0_E05A+D3j
		push	ds
		push	es
		mov	si, 0
		mov	di, 0
		mov	bp, ds:2630h
		mov	dx, ds:262Eh
		mov	bx, ds:0D702h
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ds, bx
		call	COPY_BLOCK
		pop	es
		pop	ds
		mov	bx, ds:0CD47h
		mov	ax, [bx]
		mov	ah, 0
		mov	ds:0CCB0h, ax
		call	sub_0_DF0D
		call	sub_0_DF54
		call	sub_0_E05A
		call	COPYVIEW
		call	sub_0_E4E9
		mov	cx, 32h	; '2'
		call	PAUSE

loc_0_E17F:				; CODE XREF: sub_0_E05A+E2j
		mov	word ptr ds:0CCB6h, 0

locret_0_E185:				; CODE XREF: sub_0_E05A+7j
					; sub_0_E05A+B8j ...
		retn
sub_0_E05A	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_E186	proc near		; CODE XREF: COMBAT+2CAp
		mov	word ptr ds:0CCB2h, 0FFFEh

loc_0_E18C:				; CODE XREF: sub_0_E186+4Fj
		mov	si, ds:0CCB2h
		add	si, 2
		mov	ds:0CCB2h, si
		mov	bx, ds:0CD47h
		mov	ax, [bx+si]
		cmp	al, 0FFh
		jz	loc_0_E1D7
		nop
		nop
		nop
		mov	ah, 0
		mov	ds:0CCB0h, ax
		push	ds
		push	es
		mov	si, 0
		mov	di, 0
		mov	bp, ds:2630h
		mov	dx, ds:262Eh
		mov	bx, ds:0D702h
		mov	ax, ds:0D704h
		mov	es, ax
		mov	ds, bx
		call	COPY_BLOCK
		pop	es
		pop	ds
		call	sub_0_DF0D
		call	COPYVIEW
		mov	cx, 0Ah
		call	PAUSE
		jmp	short loc_0_E18C
;����������������������������������������������������������������������������

loc_0_E1D7:				; CODE XREF: sub_0_E186+19j
		call	MAKEVIEW
		call	COPYVIEW
		retn
sub_0_E186	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SPELLBOOK1	proc near		; CODE XREF: CONTROLLER+351p
					; CONTROLLER+79Dp
		mov	word ptr ds:0D13Eh, 0
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		mov	ds:68A6h, cx
		mov	ds:68A8h, dx
		mov	ax, 0
		add	al, ds:0BB8h
		add	ah, ds:0BB9h
		cmp	ah, al
		jg	loc_0_E207
		nop
		nop
		nop
		mov	ah, al

loc_0_E207:				; CODE XREF: SPELLBOOK1+22j
		cmp	ah, 2
		jge	loc_0_E20F
		jmp	loc_0_E4D0
;����������������������������������������������������������������������������

loc_0_E20F:				; CODE XREF: SPELLBOOK1+2Cj
		mov	word ptr ds:0D140h, 4
		mov	word ptr ds:0D0E8h, 1
		jmp	short loc_0_E27C
SPELLBOOK1	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SPELLBOOK2	proc near		; CODE XREF: CONTROLLER+371p
					; CONTROLLER+7C0p
		mov	word ptr ds:0D13Eh, 0
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		mov	ds:68A6h, cx
		mov	ds:68A8h, dx
		mov	al, 0
		mov	ah, ds:0BBDh
		cmp	ah, ds:0BBEh
		jge	loc_0_E248
		nop
		nop
		nop
		mov	al, 1
		mov	ah, ds:0BBEh

loc_0_E248:				; CODE XREF: SPELLBOOK2+1Fj
		cmp	ah, ds:0BBFh
		jge	loc_0_E257
		nop
		nop
		nop
		mov	al, 2
		mov	ah, ds:0BBFh

loc_0_E257:				; CODE XREF: SPELLBOOK2+2Ej
		cmp	ah, ds:0BC0h
		jge	loc_0_E266
		nop
		nop
		nop
		mov	al, 3
		mov	ah, ds:0BC0h

loc_0_E266:				; CODE XREF: SPELLBOOK2+3Dj
		mov	cl, al
		mov	ch, 0
		mov	ds:0D140h, cx
		cmp	ah, 2
		jge	loc_0_E276
		jmp	loc_0_E4D0
;����������������������������������������������������������������������������

loc_0_E276:				; CODE XREF: SPELLBOOK2+53j
		mov	word ptr ds:0D0E8h, 2

loc_0_E27C:				; CODE XREF: SPELLBOOK1+3Dj
		mov	ds:0D14Fh, ah
		mov	byte ptr ds:0AECh, 0
		mov	word ptr ds:0D13Eh, 0
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 80h	; '�'
		mov	dx, 200h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 10h
		mov	dx, 74h	; 't'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 50h	; 'P'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		call	PICFADE2
		call	LOADSPELLBOOK
		call	GET_PAL
		call	COPYPAL
		mov	bx, 20h	; ' '
		mov	cx, 0E0h ; '�'
		mov	dx, 60h	; '`'
		call	SETPALBIT
		cmp	word ptr ds:0D0E8h, 2
		jnz	loc_0_E2E7
		nop
		nop
		nop
		mov	bp, 0C0h ; '�'
		mov	dx, 64h	; 'd'
		mov	si, 7D00h
		mov	di, 0
		call	COPY_BLOCK_22

loc_0_E2E7:				; CODE XREF: SPELLBOOK2+B5j
		call	PICRAISE2
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		mov	cx, 5DCh

loc_0_E2F2:				; CODE XREF: SPELLBOOK2+107j
		push	cx
		call	WAITFLY
		cmp	word ptr ds:0F8h, 0
		jnz	loc_0_E32B
		nop
		nop
		nop
		mov	si, 0D0EAh
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_E324
		nop
		nop
		nop
		mov	ax, 0
		test	bx, 2
		jnz	loc_0_E32B
		nop
		nop
		nop
		call	CHECKBOXES
		jmp	short loc_0_E32B
;����������������������������������������������������������������������������
		nop

loc_0_E324:				; CODE XREF: SPELLBOOK2+EFj
		pop	cx
		loop	loc_0_E2F2
		mov	ax, 0
		push	cx

loc_0_E32B:				; CODE XREF: SPELLBOOK2+DDj
					; SPELLBOOK2+FBj ...
		pop	cx
		cmp	ax, 0
		jnz	loc_0_E334
		jmp	loc_0_E4B8
;����������������������������������������������������������������������������

loc_0_E334:				; CODE XREF: SPELLBOOK2+111j
		cmp	ax, 1
		jnz	loc_0_E354
		nop
		nop
		nop
		mov	word ptr ds:0D13Ch, 0Ah
		mov	word ptr ds:0CCCDh, 0
		mov	word ptr ds:0CCCFh, 0
		mov	bx, 0FFFCh
		jmp	loc_0_E4A4
;����������������������������������������������������������������������������

loc_0_E354:				; CODE XREF: SPELLBOOK2+119j
		cmp	ax, 2
		jnz	loc_0_E396
		nop
		nop
		nop
		cmp	word ptr ds:0D0E8h, 2
		jz	loc_0_E37E
		nop
		nop
		nop
		mov	word ptr ds:0CCCDh, 5
		mov	word ptr ds:0D13Ch, 0
		mov	word ptr ds:0CCCFh, 0
		mov	bx, 0FFFBh
		jmp	loc_0_E4A4
;����������������������������������������������������������������������������

loc_0_E37E:				; CODE XREF: SPELLBOOK2+143j
		mov	word ptr ds:0CCCFh, 5
		mov	word ptr ds:0CCCDh, 0
		mov	word ptr ds:0D13Ch, 0
		mov	bx, 0FFFAh
		jmp	loc_0_E4A4
;����������������������������������������������������������������������������

loc_0_E396:				; CODE XREF: SPELLBOOK2+139j
		cmp	ax, 4
		jg	loc_0_E3E2
		nop
		nop
		nop
		cmp	byte ptr ds:0D14Fh, 3
		jge	loc_0_E3A8
		jmp	loc_0_E48B
;����������������������������������������������������������������������������

loc_0_E3A8:				; CODE XREF: SPELLBOOK2+185j
		cmp	ax, 3
		jnz	loc_0_E3D0
		nop
		nop
		nop

loc_0_E3B0:				; CODE XREF: SPELLBOOK2+19Bj
		call	RAND
		and	ax, 7
		cmp	ax, 5
		jge	loc_0_E3B0
		add	ax, 6Dh	; 'm'
		call	sub_0_E54F
		mov	byte ptr [si+20h], 96h ; '�'

loc_0_E3C5:				; CODE XREF: SPELLBOOK2+1C2j
		mov	byte ptr ds:13Dh, 1
		mov	bx, 0FF88h
		jmp	loc_0_E4A4
;����������������������������������������������������������������������������

loc_0_E3D0:				; CODE XREF: SPELLBOOK2+18Dj
		call	RAND
		and	ax, 1
		add	ax, 72h	; 'r'
		call	sub_0_E54F
		mov	byte ptr [si+23h], 96h ; '�'
		jmp	short loc_0_E3C5
;����������������������������������������������������������������������������

loc_0_E3E2:				; CODE XREF: SPELLBOOK2+17Bj
		cmp	ax, 5
		jg	loc_0_E40E
		nop
		nop
		nop
		cmp	byte ptr ds:0D14Fh, 4
		jge	loc_0_E3F4
		jmp	loc_0_E48B
;����������������������������������������������������������������������������

loc_0_E3F4:				; CODE XREF: SPELLBOOK2+1D1j
		cmp	word ptr ds:5AB9h, 0
		jz	loc_0_E3FE
		jmp	loc_0_E485
;����������������������������������������������������������������������������

loc_0_E3FE:				; CODE XREF: SPELLBOOK2+1DBj
		inc	word ptr ds:5AC1h
		mov	word ptr ds:5AB9h, 2
		mov	bx, 0FFF1h
		jmp	loc_0_E4A4
;����������������������������������������������������������������������������

loc_0_E40E:				; CODE XREF: SPELLBOOK2+1C7j
		cmp	ax, 6
		jg	loc_0_E43A
		nop
		nop
		nop
		cmp	byte ptr ds:0D14Fh, 4
		jl	loc_0_E48B
		nop
		nop
		nop
		cmp	word ptr ds:5AB7h, 0
		jnz	loc_0_E485
		nop
		nop
		nop
		inc	word ptr ds:5AC3h
		mov	word ptr ds:5AB7h, 2
		mov	bx, 0FFF1h
		jmp	short loc_0_E4A4
;����������������������������������������������������������������������������
		nop

loc_0_E43A:				; CODE XREF: SPELLBOOK2+1F3j
		cmp	ax, 7
		jg	loc_0_E464
		nop
		nop
		nop
		cmp	byte ptr ds:0D14Fh, 4
		jl	loc_0_E48B
		nop
		nop
		nop
		mov	word ptr ds:0CB3Eh, 64h	; 'd'
		mov	word ptr ds:0CA1Ch, 154h
		call	DISPLAYATTRIBS
		call	PROCESS_ILLNESS
		mov	bx, 0
		jmp	short loc_0_E4A4
;����������������������������������������������������������������������������
		nop

loc_0_E464:				; CODE XREF: SPELLBOOK2+21Fj
		cmp	ax, 8
		jnz	loc_0_E482
		nop
		nop
		nop
		cmp	byte ptr ds:0D14Fh, 5
		jnz	loc_0_E48B
		nop
		nop
		nop
		mov	word ptr ds:0D142h, 1
		mov	bx, 0FFECh
		jmp	short loc_0_E4A4
;����������������������������������������������������������������������������
		nop

loc_0_E482:				; CODE XREF: SPELLBOOK2+249j
		jmp	short loc_0_E4B8
;����������������������������������������������������������������������������
		nop

loc_0_E485:				; CODE XREF: SPELLBOOK2+1DDj
					; SPELLBOOK2+207j
		mov	si, 0AE87h
		jmp	short loc_0_E48E
;����������������������������������������������������������������������������
		nop

loc_0_E48B:				; CODE XREF: SPELLBOOK2+187j
					; SPELLBOOK2+1D3j ...
		mov	si, 0AE9Eh

loc_0_E48E:				; CODE XREF: SPELLBOOK2+26Aj
		call	PRINTINLOCWIN
		push	es
		mov	ax, 0Fh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_E4B8
;����������������������������������������������������������������������������
		nop

loc_0_E4A4:				; CODE XREF: SPELLBOOK2+133j
					; SPELLBOOK2+15Dj ...
		mov	dx, 0
		call	UPDATEHEALTH
		call	DISPLAYATTRIBS
		mov	word ptr ds:0D13Eh, 1
		mov	byte ptr ds:13Dh, 1

loc_0_E4B8:				; CODE XREF: SPELLBOOK2+113j
					; SPELLBOOK2+264j ...
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	BLANK_AND_SETPAL
		cmp	word ptr ds:2650h, 0
		jz	loc_0_E4CD
		nop
		nop
		nop
		call	GETBORDER

loc_0_E4CD:				; CODE XREF: SPELLBOOK2+2A7j
		call	DRAWVIEW

loc_0_E4D0:				; CODE XREF: SPELLBOOK1+2Ej
					; SPELLBOOK2+55j
		mov	byte ptr ds:0AECh, 1
		cmp	word ptr ds:0D13Eh, 1
		jnz	locret_0_E4E2
		nop
		nop
		nop
		call	SPELLEFFECT

locret_0_E4E2:				; CODE XREF: SPELLBOOK2+2BCj
		retn
SPELLBOOK2	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_E4E3	proc near		; CODE XREF: COMBAT+441p
		mov	dx, 0
		jmp	short CHARS_BARBLANK
sub_0_E4E3	endp

;����������������������������������������������������������������������������
		nop

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_E4E9	proc near		; CODE XREF: COMBAT+15Ep COMBAT+2D4p
					; ...
		mov	di, ds:0A2FDh
		mov	dl, [di+6Ch]
		mov	dh, 0
		sar	dx, 1
		mov	bx, 606h
sub_0_E4E9	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

CHARS_BARBLANK	proc near		; CODE XREF: CONTROLLER+96Bp
					; CONTROLLER+999p ...
		push	es
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	di, 0EB28h
		mov	ax, bx
		mov	cx, 0

loc_0_E505:				; CODE XREF: CHARS_BARBLANK+2Fj
		cmp	dx, cx
		jnz	loc_0_E50F
		nop
		nop
		nop
		mov	ax, 0

loc_0_E50F:				; CODE XREF: CHARS_BARBLANK+10j
		mov	es:[di], al
		mov	es:[di+140h], al
		mov	es:[di+280h], al
		mov	es:[di+3C0h], al
		inc	di
		inc	cx
		cmp	cx, 30h	; '0'
		jnz	loc_0_E505
		pop	es
		assume es:nothing
		retn
CHARS_BARBLANK	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

DROPDIVINER	proc near		; CODE XREF: sub_0_681D+189p
					; TERMINATECHAR+BBp
		mov	si, [di+4Ch]
		mov	word ptr [si], 1
		mov	word ptr [di+4Ch], 0
		mov	bx, 2Fh	; '/'
		mov	ax, [di+2]
		mov	dx, [di+4]
		mov	cl, [di+0Ah]
		mov	ch, 0
		mov	bp, 10h
		call	SETUPPICKUP
		inc	word ptr ds:0D45Fh
		retn
DROPDIVINER	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_E54F	proc near		; CODE XREF: SPELLBOOK2+1A0p
					; SPELLBOOK2+1BBp
		mov	word ptr ds:0CCD1h, 1
		mov	bx, ax
		mov	ax, ds:0ACDh
		mov	dx, ds:0ACFh
		mov	cx, ds:0ADDh
		mov	bp, 1
		call	SETUPPICKUP
		cmp	word ptr ds:0BB6h, 0
		jnz	loc_0_E579
		nop
		nop
		nop
		mov	ds:0BB6h, si
		or	word ptr [si], 4

loc_0_E579:				; CODE XREF: sub_0_E54F+1Ej
		mov	word ptr ds:0CCD1h, 0
		retn
sub_0_E54F	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

COPY_BLOCK_2V	proc near		; CODE XREF: CLEARUNDERMAP+Bp
					; COPYVIEWBORDER+Bp ...
		push	ds
		push	es
		mov	bx, ds:0D704h
		mov	ax, 0A000h
		mov	es, ax
		assume es:nothing
		mov	ds, bx
		call	COPY_BLOCK
		pop	es
		assume es:nothing
		pop	ds
		retn
COPY_BLOCK_2V	endp

;����������������������������������������������������������������������������
		db    0	;

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

NOTICEBOARD	proc near		; CODE XREF: SHOP+5C0p	seg000:91D0p
					; ...
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	dx, 4F1h
		mov	di, 578h
		mov	ax, 0A000h
		call	LOADPAD
		mov	ax, 7
		mov	cx, 0F0h ; '�'
		mov	dx, 218h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 4
		mov	dx, 80h	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 50h	; 'P'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		call	WAITMRELEASE

loc_0_E5CE:				; CODE XREF: NOTICEBOARD+44j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_E5CE
		test	bx, 2
		jz	loc_0_E5E3
		jmp	loc_0_E7A3
;����������������������������������������������������������������������������

loc_0_E5E3:				; CODE XREF: NOTICEBOARD+4Aj
		mov	si, 0D150h
		call	CHECKBOXES
		cmp	ax, 1
		jz	loc_0_E5FC
		nop
		nop
		nop
		cmp	ax, 2
		jnz	loc_0_E5F9
		jmp	loc_0_E74F
;����������������������������������������������������������������������������

loc_0_E5F9:				; CODE XREF: NOTICEBOARD+60j
		jmp	loc_0_E7A3
;����������������������������������������������������������������������������

loc_0_E5FC:				; CODE XREF: NOTICEBOARD+58j
		cmp	word ptr ds:0D442h, 20h	; ' '
		jnz	loc_0_E61E
		nop
		nop
		nop
		mov	bx, 0A7AEh
		mov	byte ptr [bx], 2
		mov	bx, 0Ah
		mov	ax, 2E80h
		mov	dx, 5780h
		mov	cx, 0FFFFh
		mov	bp, 10h
		call	SETUPPICKUP

loc_0_E61E:				; CODE XREF: NOTICEBOARD+6Dj
		cmp	word ptr ds:0D442h, 2Ah	; '*'
		jnz	loc_0_E640
		nop
		nop
		nop
		mov	bx, 0A76Eh
		mov	byte ptr [bx], 2
		mov	bx, 2Dh	; '-'
		mov	ax, 0D80h
		mov	dx, 0E80h
		mov	cx, 1
		mov	bp, 28h	; '('
		call	SETUPPICKUP

loc_0_E640:				; CODE XREF: NOTICEBOARD+8Fj
		cmp	word ptr ds:0D442h, 15h
		jnz	loc_0_E650
		nop
		nop
		nop
		mov	bx, 0A6FAh
		mov	byte ptr [bx], 2

loc_0_E650:				; CODE XREF: NOTICEBOARD+B1j
		cmp	word ptr ds:0D442h, 1Dh
		jnz	loc_0_E69C
		nop
		nop
		nop
		cmp	word ptr ds:0D481h, 0
		jg	loc_0_E69C
		nop
		nop
		nop
		mov	word ptr ds:0D481h, 1
		mov	byte ptr ds:0A7BEh, 2
		mov	byte ptr ds:0A80Ah, 2
		mov	bx, 0Fh
		mov	ax, 4F80h
		mov	dx, 4C80h
		mov	cx, 0FFFFh
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	byte ptr [si+1Dh], 19h
		mov	bx, 4Fh	; 'O'
		mov	ax, 1280h
		mov	dx, 1680h
		mov	cx, 1
		mov	bp, 20h	; ' '
		call	SETUPPICKUP

loc_0_E69C:				; CODE XREF: NOTICEBOARD+C1j
					; NOTICEBOARD+CBj
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		call	sub_0_E7BB
		call	sub_0_E838
		call	WAITMRELEASE

loc_0_E6AA:				; CODE XREF: NOTICEBOARD+1B8j
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_E6AF:				; CODE XREF: NOTICEBOARD+125j
					; NOTICEBOARD+139j ...
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_E6AF
		test	bx, 2
		jz	loc_0_E6C4
		jmp	NOTICEBOARD
;����������������������������������������������������������������������������

loc_0_E6C4:				; CODE XREF: NOTICEBOARD+12Bj
		mov	si, 0D166h
		call	CHECKBOXES
		cmp	ax, 0
		jz	loc_0_E6AF
		cmp	ax, ds:0D3F9h
		jg	loc_0_E6AF
		mov	si, 0D3E9h
		dec	ax
		add	si, ax
		add	si, ax
		mov	si, [si]
		mov	bx, [si+5]
		cmp	bx, 0
		jz	loc_0_E6EE
		nop
		nop
		nop
		mov	byte ptr [bx+3], 2

loc_0_E6EE:				; CODE XREF: NOTICEBOARD+151j
		add	si, 8
		push	si
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	dx, 4E5h
		mov	di, 578h
		mov	ax, 0A000h
		call	LOADPAD
		pop	si
		push	si
		mov	dx, si
		mov	di, 94h	; '�'
		mov	ax, ds:0D704h
		call	LOADPAD
		pop	si
		sub	si, 8
		cmp	si, 0D1D8h
		jnz	loc_0_E723
		nop
		nop
		nop
		mov	di, 1EBEh
		call	PLOTFACE

loc_0_E723:				; CODE XREF: NOTICEBOARD+184j
		push	ds
		push	es
		mov	si, 94h	; '�'
		mov	di, 578h
		mov	bp, 94h	; '�'
		mov	dx, 7Ch	; '|'
		mov	ax, ds:0D704h
		mov	bx, 0A000h
		mov	es, bx
		assume es:nothing
		mov	ds, ax
		call	COPY_BLOCKM
		pop	es
		assume es:nothing
		pop	ds
		call	WAITMRELEASE
		call	WAITKEY
		call	WAITMRELEASE
		call	GETTABLE
		jmp	loc_0_E6AA
;����������������������������������������������������������������������������

loc_0_E74F:				; CODE XREF: NOTICEBOARD+62j
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	dx, 4FEh
		mov	di, 0
		mov	ax, ds:0D704h
		call	LOADPAD
		call	WAITMRELEASE
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		mov	si, 5CE9h
		mov	byte ptr ds:218Fh, 2
		call	SSTOVIDTEXT
		mov	byte ptr ds:218Fh, 1
		call	WAITKEY
		mov	ax, ds:0D413h
		shl	ax, 1
		shl	ax, 1
		add	ax, 0A6F3h
		add	ax, 3
		mov	bx, ax
		mov	byte ptr [bx], 1
		mov	ax, ds:0D415h
		shl	ax, 1
		shl	ax, 1
		add	ax, 0A6F3h
		add	ax, 3
		mov	bx, ax
		mov	byte ptr [bx], 1
		jmp	NOTICEBOARD
;����������������������������������������������������������������������������

loc_0_E7A3:				; CODE XREF: NOTICEBOARD+4Cj
					; NOTICEBOARD+65j
		call	CLEARBORDER
		retn
NOTICEBOARD	endp

;����������������������������������������������������������������������������
		db 0BEh	; �
		db  94h	; �
		db    0	;
		db 0BFh	; �
		db  78h	; x
		db    5	;
		db 0BDh	; �
		db  94h	; �
		db    0	;
		db 0BAh	; �
		db  7Ch	; |
		db    0	;
		db 0E8h	; �
		db 0CAh	; �
		db 0FDh	; �
		db 0C3h	; �

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SET_NOTICE	proc near		; CODE XREF: MIDNIGHT+1B1p
					; JUSTICE+1DCp	...
		mov	[si+1],	al
		retn
SET_NOTICE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_E7BB	proc near		; CODE XREF: NOTICEBOARD+10Dp
		mov	di, 0D3E9h
		mov	si, 0D1B8h
		mov	cx, 0

loc_0_E7C4:				; CODE XREF: sub_0_E7BB+47j
		cmp	byte ptr [si], 0FFh
		jz	loc_0_E804
		nop
		nop
		nop
		mov	byte ptr [si+7], 0
		cmp	byte ptr [si+1], 0
		jz	loc_0_E7FF
		nop
		nop
		nop
		cmp	byte ptr [si+3], 0FFh
		jz	loc_0_E7F8
		nop
		nop
		nop
		mov	ax, ds:0A2F9h
		cmp	[si+3],	al
		jz	loc_0_E7F8
		nop
		nop
		nop
		cmp	[si+4],	al
		jz	loc_0_E7F8
		nop
		nop
		nop
		jmp	short loc_0_E7FF
;����������������������������������������������������������������������������
		nop

loc_0_E7F8:				; CODE XREF: sub_0_E7BB+22j
					; sub_0_E7BB+2Dj ...
		inc	cx
		mov	al, [si+2]
		mov	[si+7],	al

loc_0_E7FF:				; CODE XREF: sub_0_E7BB+19j
					; sub_0_E7BB+3Aj
		add	si, 10h
		jmp	short loc_0_E7C4
;����������������������������������������������������������������������������

loc_0_E804:				; CODE XREF: sub_0_E7BB+Cj
		mov	cx, 0
		mov	bp, 8

loc_0_E80A:				; CODE XREF: sub_0_E7BB+76j
		mov	si, 0D1B8h

loc_0_E80D:				; CODE XREF: sub_0_E7BB+73j
		cmp	byte ptr [si], 0FFh
		jz	loc_0_E830
		nop
		nop
		nop
		rol	byte ptr [si+7], 1
		jnb	loc_0_E82B
		nop
		nop
		nop
		inc	cx
		mov	[di], si
		add	di, 2
		cmp	cx, 8
		jz	loc_0_E833
		nop
		nop
		nop

loc_0_E82B:				; CODE XREF: sub_0_E7BB+5Dj
		add	si, 10h
		jmp	short loc_0_E80D
;����������������������������������������������������������������������������

loc_0_E830:				; CODE XREF: sub_0_E7BB+55j
		dec	bp
		jnz	loc_0_E80A

loc_0_E833:				; CODE XREF: sub_0_E7BB+6Bj
		mov	ds:0D3F9h, cx
		retn
sub_0_E7BB	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_E838	proc near		; CODE XREF: NOTICEBOARD+110p
		mov	cx, ds:0D3F9h
		mov	bp, 9B00h
		mov	si, 0D3E9h

loc_0_E842:				; CODE XREF: sub_0_E838+3Aj
		push	si
		push	cx
		push	bp
		mov	si, [si]
		mov	dx, si
		push	si
		add	dx, 8
		mov	di, 0
		mov	ax, ds:0D704h
		call	LOADPAD
		pop	si
		cmp	si, 0D1D8h
		jnz	loc_0_E866
		nop
		nop
		nop
		mov	di, 1E2Ah
		call	PLOTFACE

loc_0_E866:				; CODE XREF: sub_0_E838+23j
		pop	bp
		call	sub_0_E8A7
		add	bp, 26h	; '&'
		pop	cx
		pop	si
		add	si, 2
		loop	loc_0_E842
		mov	dx, 4E5h
		mov	di, 0
		mov	ax, ds:0D704h
		call	LOADPAD
		mov	cx, ds:0D3F9h
		mov	si, 9B00h
		mov	bx, 0D3FBh

loc_0_E88A:				; CODE XREF: sub_0_E838+69j
		push	bx
		push	si
		push	cx
		mov	di, [bx]
		mov	bp, 26h	; '&'
		mov	dx, 1Fh
		call	COPY_BLOCKM_22
		pop	cx
		pop	si
		pop	bx
		add	bx, 2
		add	si, 26h	; '&'
		loop	loc_0_E88A
		call	GETTABLE
		retn
sub_0_E838	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_E8A7	proc near		; CODE XREF: sub_0_E838+2Fp
		mov	di, bp
		mov	dx, 25h	; '%'
		mov	bx, 1Fh
		mov	si, 0
		push	ds
		push	es
		mov	ax, ds:0D704h
		mov	ds, ax
		mov	es, ax

loc_0_E8BB:				; CODE XREF: sub_0_E8A7+2Cj
		push	si
		push	di
		mov	cx, dx

loc_0_E8BF:				; CODE XREF: sub_0_E8A7+1Cj
		movsb
		add	si, 3
		loop	loc_0_E8BF
		mov	al, 0
		stosb
		pop	di
		pop	si
		add	di, 140h
		add	si, 500h
		dec	bx
		jnz	loc_0_E8BB
		pop	es
		pop	ds
		retn
sub_0_E8A7	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SET_TODAYS_JOB	proc near		; CODE XREF: CONTROLLER+15p
					; MIDNIGHT+1B4p ...
		push	es
		mov	ax, ds:0D716h
		mov	es, ax
		call	RAND
		mov	ds:0D40Fh, ax
		and	ax, 7
		add	ax, 11h
		mov	ds:0D411h, ax
		mov	es:5CFFh, al
		mov	es:5D44h, al

loc_0_E8F5:				; CODE XREF: SET_TODAYS_JOB+34j
					; SET_TODAYS_JOB+39j
					; ...
		call	RAND
		mov	cx, 5
		ror	ax, cl
		and	ax, 1Fh
		cmp	ax, 1Fh
		jnz	loc_0_E909
		nop
		nop
		nop
		dec	ax

loc_0_E909:				; CODE XREF: SET_TODAYS_JOB+2Bj
		cmp	ax, 15h
		jz	loc_0_E8F5
		cmp	ax, 17h
		jz	loc_0_E8F5
		cmp	ax, 1Bh
		jz	loc_0_E8F5
		cmp	ax, 1Eh
		jz	loc_0_E8F5
		mov	ds:0D413h, ax
		mov	es:5D06h, al

loc_0_E924:				; CODE XREF: SET_TODAYS_JOB+5Ej
					; SET_TODAYS_JOB+63j
					; ...
		call	RAND
		and	ax, 1Fh
		cmp	ax, 1Fh
		jnz	loc_0_E933
		nop
		nop
		nop
		dec	ax

loc_0_E933:				; CODE XREF: SET_TODAYS_JOB+55j
		cmp	ax, 15h
		jz	loc_0_E924
		cmp	ax, 17h
		jz	loc_0_E924
		cmp	ax, 1Bh
		jz	loc_0_E924
		cmp	ax, 1Eh
		jz	loc_0_E924
		cmp	ax, ds:0D413h
		jz	loc_0_E924
		mov	ds:0D415h, ax
		mov	es:5D16h, al
		add	ax, 9
		mov	ds:0D417h, ax
		pop	es
		call	RAND
		mov	ah, 7
		call	RAND_RANGE
		and	ax, 7
		add	ax, 12h
		mov	ds:0D40Dh, ax
		call	HEXTOBCD2
		mov	ds:0D40Bh, ax
		mov	ax, 10h
		inc	ax
		sub	ax, ds:0AF0h
		mov	bp, ax
		push	es
		mov	ax, ds:0D716h
		mov	es, ax
		mov	cx, ds:0D413h
		mov	dx, 0
		mov	di, 3023h
		dec	di

loc_0_E98D:				; CODE XREF: SET_TODAYS_JOB+C5j
		inc	di
		cmp	cx, dx
		jz	loc_0_E9A2
		nop
		nop
		nop
		add	di, 8
		inc	dx

loc_0_E999:				; CODE XREF: SET_TODAYS_JOB+C8j
		cmp	byte ptr es:[di], 0
		jz	loc_0_E98D
		inc	di
		jmp	short loc_0_E999
;����������������������������������������������������������������������������

loc_0_E9A2:				; CODE XREF: SET_TODAYS_JOB+B8j
		mov	ax, es:[di]
		pop	es
		mov	dh, ah
		mov	ah, al
		mov	al, 80h	; '�'
		mov	dl, 80h	; '�'
		mov	bx, ds:0D411h
		mov	cx, 0
		mov	di, 0
		call	SETUPPICKUP
		or	word ptr [si], 200h
		retn
SET_TODAYS_JOB	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

JOBDONECHECK	proc near		; CODE XREF: SHOP+C2p seg000:915Fp
					; ...
		mov	di, ds:0BB6h
		cmp	di, 0
		jz	loc_0_EA1E
		nop
		nop
		nop
		mov	ah, 0
		mov	al, [di+0Bh]
		cmp	ax, ds:0D411h
		jnz	loc_0_EA1E
		nop
		nop
		nop
		mov	dx, ds:0A2F9h
		cmp	dx, ds:0D417h
		jnz	loc_0_EA1E
		nop
		nop
		nop
		push	di
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		mov	si, 5D28h
		call	SSTOVIDTEXT
		call	WAITKEY
		pop	di
		mov	word ptr ds:0BB6h, 0
		mov	word ptr [di], 1
		mov	ax, ds:0D40Dh
		add	ds:0B1Fh, ax
		mov	bx, ds:0BB6h
		mov	di, ds:6AA2h
		call	BLITPICKUP
		call	PRINTCASH
		call	SET_TODAYS_JOB
		mov	ax, 1
		retn
;����������������������������������������������������������������������������

loc_0_EA1E:				; CODE XREF: JOBDONECHECK+7j
					; JOBDONECHECK+15j ...
		mov	ax, 0
		retn
JOBDONECHECK	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GUILDBUSINESS	proc near		; CODE XREF: seg000:9566p GUILDBUSINESS+326j
		mov	byte ptr ds:6017h, 1
		call	CLEARTWIN
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0F0h ; '�'
		mov	dx, 218h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 4
		mov	dx, 80h	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 50h	; 'P'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	bx, ds:0A2F9h
		add	bx, 0BB8h
		mov	bl, [bx]
		mov	bh, 0
		mov	ds:0D440h, bx
		mov	bp, bx
		call	RAND
		mov	bh, ah
		and	bh, 3
		mov	di, ds:0A2FBh
		mov	dl, [di]
		mov	dh, [di+1]
		mov	bl, [di+2]
		mov	cx, ds:0A2F9h
		push	ds
		mov	ax, ds:0D716h
		mov	ds, ax
		mov	ds:65B4h, cl
		mov	ds:6633h, cl
		mov	ds:6655h, cl
		mov	ds:6702h, cl
		mov	ds:6978h, cl
		mov	ds:698Bh, cl
		mov	ds:6ABFh, cl
		mov	ds:664Ah, dl
		mov	ds:66F7h, dl
		mov	ds:6664h, dh
		mov	ds:669Ah, bl
		mov	ds:696Dh, dl
		mov	ax, bp
		mov	ds:6679h, bh
		mov	ds:6694h, bh
		mov	ds:66A6h, bh
		mov	ds:664Bh, al
		mov	ds:6665h, al
		mov	ds:669Bh, al
		mov	ds:696Eh, al
		pop	ds
		cmp	word ptr ds:0A2F9h, 8
		jnz	loc_0_EB17
		nop
		nop
		nop
		cmp	word ptr ds:0D442h, 22h	; '"'
		jnz	loc_0_EB17
		nop
		nop
		nop
		cmp	word ptr ds:0D455h, 0
		jz	loc_0_EB17
		nop
		nop
		nop
		mov	si, 84B4h
		cmp	word ptr ds:0D455h, 1
		jz	loc_0_EAFE
		nop
		nop
		nop
		mov	byte ptr ds:0D448h, 2
		mov	si, 669Dh

loc_0_EAFE:				; CODE XREF: GUILDBUSINESS+CFj
		mov	word ptr ds:0D455h, 2
		call	PRINTANDOK
		mov	di, ds:0D44Bh
		and	word ptr [di], 0FFFBh
		mov	word ptr ds:0A775h, 2
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EB17:				; CODE XREF: GUILDBUSINESS+AEj
					; GUILDBUSINESS+B8j ...
		mov	si, 0BC1h
		add	si, ds:0A2F9h
		cmp	byte ptr [si], 0
		jz	loc_0_EB2F
		nop
		nop
		nop
		mov	si, 6915h
		call	PRINTANDOK
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EB2F:				; CODE XREF: GUILDBUSINESS+FFj
		cmp	word ptr ds:0D442h, 0FFFFh
		jnz	loc_0_EB96
		nop
		nop
		nop
		cmp	word ptr ds:0D446h, 0FFFFh
		jnz	loc_0_EB43
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EB43:				; CODE XREF: GUILDBUSINESS+11Cj
		mov	ax, ds:0A2F9h
		mov	dx, 5
		mul	dx
		add	ax, ds:0D440h
		cmp	ax, ds:0D446h
		jz	loc_0_EB58
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EB58:				; CODE XREF: GUILDBUSINESS+131j
		mov	di, ds:0BB6h
		cmp	di, 0
		jnz	loc_0_EB64
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EB64:				; CODE XREF: GUILDBUSINESS+13Dj
		mov	ah, 0
		mov	al, [di+0Bh]
		cmp	ax, ds:0D449h
		jz	loc_0_EB72
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EB72:				; CODE XREF: GUILDBUSINESS+14Bj
		mov	di, ds:0D44Bh
		mov	word ptr [di], 1
		mov	word ptr ds:0BB6h, 0
		mov	byte ptr ds:13Dh, 1
		call	INVENTORY
		mov	si, 6A59h
		call	PRINTANDOK
		mov	byte ptr ds:0D2A9h, 2
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EB96:				; CODE XREF: GUILDBUSINESS+112j
		mov	ax, ds:0A2F9h
		mov	dx, 5
		mul	dx
		add	ax, ds:0D440h
		cmp	ax, ds:0D442h
		jz	loc_0_EBAB
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EBAB:				; CODE XREF: GUILDBUSINESS+184j
		mov	di, ds:0BB6h
		cmp	di, 0
		jnz	loc_0_EBB7
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EBB7:				; CODE XREF: GUILDBUSINESS+190j
		cmp	word ptr ds:0D442h, 2Ah	; '*'
		jnz	loc_0_EBC7
		nop
		nop
		nop
		mov	word ptr ds:0D449h, 2Eh	; '.'

loc_0_EBC7:				; CODE XREF: GUILDBUSINESS+19Aj
		cmp	word ptr ds:0D442h, 7
		jnz	loc_0_EBDD
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 31h ; '1'
		jnz	loc_0_EBDD
		nop
		nop
		nop
		jmp	loc_0_EF50
;����������������������������������������������������������������������������

loc_0_EBDD:				; CODE XREF: GUILDBUSINESS+1AAj
					; GUILDBUSINESS+1B3j
		cmp	word ptr ds:0D442h, 12h
		jnz	loc_0_EBF1
		nop
		nop
		nop
		cmp	word ptr ds:0D479h, 1
		jz	loc_0_EBF1
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EBF1:				; CODE XREF: GUILDBUSINESS+1C0j
					; GUILDBUSINESS+1CAj
		cmp	word ptr ds:0D442h, 2Bh	; '+'
		jnz	loc_0_EC05
		nop
		nop
		nop
		cmp	byte ptr ds:0BCEBh, 4
		jz	loc_0_EC05
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EC05:				; CODE XREF: GUILDBUSINESS+1D4j
					; GUILDBUSINESS+1DEj
		cmp	word ptr ds:0D442h, 9
		jnz	loc_0_EC15
		nop
		nop
		nop
		mov	word ptr ds:0D449h, 58h	; 'X'

loc_0_EC15:				; CODE XREF: GUILDBUSINESS+1E8j
		cmp	word ptr ds:0D442h, 4
		jnz	loc_0_EC29
		nop
		nop
		nop
		cmp	word ptr ds:0D489h, 0FFFFh
		jz	loc_0_EC29
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EC29:				; CODE XREF: GUILDBUSINESS+1F8j
					; GUILDBUSINESS+202j
		cmp	word ptr ds:0D442h, 0Eh
		jnz	loc_0_EC43
		nop
		nop
		nop
		cmp	word ptr ds:0D475h, 1
		jz	loc_0_EC3D
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EC3D:				; CODE XREF: GUILDBUSINESS+216j
		mov	word ptr ds:0D449h, 65h	; 'e'

loc_0_EC43:				; CODE XREF: GUILDBUSINESS+20Cj
		cmp	word ptr ds:0D442h, 18h
		jnz	loc_0_EC57
		nop
		nop
		nop
		cmp	word ptr ds:0D48Bh, 1
		jz	loc_0_EC57
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EC57:				; CODE XREF: GUILDBUSINESS+226j
					; GUILDBUSINESS+230j
		mov	ah, 0
		mov	al, [di+0Bh]
		cmp	ax, ds:0D449h
		jz	loc_0_EC65
		jmp	loc_0_ED54
;����������������������������������������������������������������������������

loc_0_EC65:				; CODE XREF: GUILDBUSINESS+23Ej
		cmp	word ptr ds:0D442h, 0Ch
		jnz	loc_0_EC75
		nop
		nop
		nop
		mov	word ptr ds:0D471h, 1

loc_0_EC75:				; CODE XREF: GUILDBUSINESS+248j
		call	EFF_TO_MUS
		mov	ax, ds:0A2F9h
		cmp	ax, 2
		jl	loc_0_ECA3
		nop
		nop
		nop
		cmp	ax, 4
		jl	loc_0_ECB6
		nop
		nop
		nop
		jz	loc_0_ECC9
		nop
		nop
		nop
		push	es
		mov	ax, 6
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_ECD9
;����������������������������������������������������������������������������
		nop

loc_0_ECA3:				; CODE XREF: GUILDBUSINESS+25Cj
		push	es
		mov	ax, 4
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_ECD9
;����������������������������������������������������������������������������
		nop

loc_0_ECB6:				; CODE XREF: GUILDBUSINESS+264j
		push	es
		mov	ax, 3
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		jmp	short loc_0_ECD9
;����������������������������������������������������������������������������
		nop

loc_0_ECC9:				; CODE XREF: GUILDBUSINESS+269j
		push	es
		mov	ax, 5
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es

loc_0_ECD9:				; CODE XREF: GUILDBUSINESS+27Ej
					; GUILDBUSINESS+291j
					; ...
		mov	si, ds:0A2FBh
		add	si, 1Ch
		add	si, ds:0D440h
		cmp	byte ptr [si], 0FFh
		jz	loc_0_ECF8
		nop
		nop
		nop
		mov	al, [si]
		mov	ah, 0
		add	ax, 6003h
		mov	bx, ax
		mov	byte ptr [bx], 1

loc_0_ECF8:				; CODE XREF: GUILDBUSINESS+2C5j
		mov	word ptr ds:0D442h, 0FFFFh
		mov	word ptr ds:0D444h, 0
		call	UNSETTASK
		mov	di, ds:0D44Bh
		mov	word ptr [di], 1
		mov	word ptr ds:0BB6h, 0
		mov	byte ptr ds:13Dh, 1
		call	INVENTORY
		inc	word ptr ds:0D440h
		mov	si, 0BB8h
		add	si, ds:0A2F9h
		inc	byte ptr [si]
		cmp	byte ptr [si], 5
		jz	loc_0_ED4B
		nop
		nop
		nop
		cmp	byte ptr [si], 2
		jnz	loc_0_ED3F
		nop
		nop
		nop
		mov	byte ptr ds:6006h, 1

loc_0_ED3F:				; CODE XREF: GUILDBUSINESS+313j
		mov	si, 6933h
		call	PRINTANDOK
		call	MUS_TO_EFF
		jmp	GUILDBUSINESS
;����������������������������������������������������������������������������

loc_0_ED4B:				; CODE XREF: GUILDBUSINESS+30Bj
		call	sub_0_F5E8
		call	sub_0_F8EC
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_ED54:				; CODE XREF: GUILDBUSINESS+11Ej
					; GUILDBUSINESS+133j
					; ...
		mov	bx, ds:0A2F9h
		shl	bx, 1
		add	bx, 0BD3h
		mov	ax, [bx]
		mov	bx, 0BD3h
		mov	cx, 0
		mov	si, 0BB8h

loc_0_ED69:				; CODE XREF: GUILDBUSINESS+36Cj
		cmp	cx, ds:0A2F9h
		jz	loc_0_ED86
		nop
		nop
		nop
		cmp	byte ptr [si], 0
		jz	loc_0_ED86
		nop
		nop
		nop
		mov	dx, [bx]
		and	dx, ax
		jz	loc_0_ED86
		nop
		nop
		nop
		jmp	short loc_0_ED93
;����������������������������������������������������������������������������
		nop

loc_0_ED86:				; CODE XREF: GUILDBUSINESS+34Bj
					; GUILDBUSINESS+353j
					; ...
		inc	cx
		inc	si
		add	bx, 2
		cmp	cx, 9
		jnz	loc_0_ED69
		jmp	short loc_0_EDA8
;����������������������������������������������������������������������������
		nop

loc_0_ED93:				; CODE XREF: GUILDBUSINESS+361j
		push	es
		mov	ax, ds:0D716h
		mov	es, ax
		mov	es:65ACh, cl
		pop	es
		mov	si, 6587h
		call	PRINTANDOK
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EDA8:				; CODE XREF: GUILDBUSINESS+36Ej
		cmp	word ptr ds:0A2F9h, 7
		jnz	loc_0_EDC5
		nop
		nop
		nop
		cmp	word ptr ds:0AE7h, 0
		jz	loc_0_EDC5
		nop
		nop
		nop
		mov	si, 6535h
		call	PRINTANDOK
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EDC5:				; CODE XREF: GUILDBUSINESS+38Bj
					; GUILDBUSINESS+395j
		call	sub_0_EFE6
		mov	bx, ds:0A2F9h
		add	bx, 0BB8h
		mov	al, [bx]
		cmp	al, 0
		jnz	loc_0_EDEA
		nop
		nop
		nop
		mov	si, 65AEh
		call	sub_0_F016
		cmp	ax, 0
		jnz	loc_0_EDE7
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EDE7:				; CODE XREF: GUILDBUSINESS+3C0j
		jmp	short loc_0_EE2A
;����������������������������������������������������������������������������
		nop

loc_0_EDEA:				; CODE XREF: GUILDBUSINESS+3B2j
					; GUILDBUSINESS+547j
		mov	dx, 642h
		mov	di, 578h
		mov	ax, 0A000h
		call	LOADPAD
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh
		call	WAITMRELEASE

loc_0_EDFE:				; CODE XREF: GUILDBUSINESS+3E6j
					; GUILDBUSINESS+406j
		mov	ax, 3
		int	33h		; - MS MOUSE - RETURN POSITION AND BUTTON STATUS
					; Return: BX = button status, CX = column, DX =	row
		sar	cx, 1
		and	bx, 3
		jz	loc_0_EDFE
		mov	si, 0D420h
		call	CHECKBOXES
		cmp	ax, 1
		jz	loc_0_EE2A
		nop
		nop
		nop
		cmp	ax, 2
		jnz	loc_0_EE20
		jmp	loc_0_EF59
;����������������������������������������������������������������������������

loc_0_EE20:				; CODE XREF: GUILDBUSINESS+3F9j
		cmp	ax, 3
		jnz	loc_0_EE28
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EE28:				; CODE XREF: GUILDBUSINESS+401j
		jmp	short loc_0_EDFE
;����������������������������������������������������������������������������

loc_0_EE2A:				; CODE XREF: GUILDBUSINESS+3C5j
					; GUILDBUSINESS+3F1j
		cmp	word ptr ds:0D440h, 5
		jnz	loc_0_EE3D
		nop
		nop
		nop
		mov	si, 66D8h
		call	PRINTANDOK
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EE3D:				; CODE XREF: GUILDBUSINESS+40Dj
		cmp	word ptr ds:0D442h, 0FFFFh
		jz	loc_0_EE63
		nop
		nop
		nop
		mov	ax, ds:0D444h
		mov	ah, 0
		mov	ds:0D448h, al
		mov	si, 669Dh
		cmp	ax, 1
		jnz	loc_0_EE5D
		nop
		nop
		nop
		mov	si, 66B8h

loc_0_EE5D:				; CODE XREF: GUILDBUSINESS+433j
		call	PRINTANDOK
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EE63:				; CODE XREF: GUILDBUSINESS+420j
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0F0h ; '�'
		mov	dx, 218h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 4
		mov	dx, 80h	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 50h	; 'P'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		mov	si, 6635h
		call	sub_0_F016
		cmp	ax, 0
		jnz	loc_0_EE97
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EE97:				; CODE XREF: GUILDBUSINESS+470j
		call	WAITMRELEASE
		mov	si, ds:0A2FBh
		add	si, 3
		add	si, ds:0D440h
		mov	dl, [si]
		cmp	dl, 0FFh
		jz	loc_0_EEC3
		nop
		nop
		nop
		mov	dh, 0
		cmp	ds:0B1Fh, dx
		jge	loc_0_EEE7
		nop
		nop
		nop
		mov	si, 2DD2h
		call	PRINTANDOK
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EEC3:				; CODE XREF: GUILDBUSINESS+488j
		mov	word ptr ds:0B1Fh, 0
		mov	word ptr ds:0B21h, 0
		mov	word ptr ds:0B23h, 0
		mov	word ptr ds:0B25h, 0
		mov	word ptr ds:0B27h, 0
		call	PRINTCASH
		jmp	short loc_0_EEEE
;����������������������������������������������������������������������������
		nop

loc_0_EEE7:				; CODE XREF: GUILDBUSINESS+493j
		sub	ds:0B1Fh, dx
		call	PRINTCASH

loc_0_EEEE:				; CODE XREF: GUILDBUSINESS+4C2j
		mov	si, 6690h
		mov	ax, 0
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT
		mov	ax, ds:0A2F9h
		mov	dx, 5
		mul	dx
		add	ax, ds:0D440h
		mov	ds:0D442h, ax
		mov	word ptr ds:0D446h, 0FFFFh
		mov	si, ds:0A2FBh
		add	si, 8
		add	si, ds:0D440h
		mov	al, [si]
		inc	al
		mov	ah, 0
		mov	ds:0D444h, ax
		mov	si, ds:0A2FBh
		add	si, 0Dh
		add	si, ds:0D440h
		mov	al, [si]
		mov	ah, 0
		mov	ds:0D449h, ax
		mov	si, ds:0A2FBh
		add	si, 12h
		add	si, ds:0D440h
		add	si, ds:0D440h
		mov	si, [si]
		mov	ds:0D44Dh, si
		call	sub_0_F02C
		jmp	loc_0_EFE2
;����������������������������������������������������������������������������

loc_0_EF50:				; CODE XREF: GUILDBUSINESS+1B8j
		mov	si, 6704h
		call	PRINTANDOK
		jmp	short loc_0_EF6C
;����������������������������������������������������������������������������
		nop

loc_0_EF59:				; CODE XREF: GUILDBUSINESS+3FBj
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	si, 6605h
		call	sub_0_F016
		cmp	ax, 0
		jnz	loc_0_EF6C
		jmp	loc_0_EDEA
;����������������������������������������������������������������������������

loc_0_EF6C:				; CODE XREF: GUILDBUSINESS+534j
					; GUILDBUSINESS+545j
		mov	bx, ds:0A2FBh
		add	bx, 1Ch
		mov	cx, 5

loc_0_EF76:				; CODE XREF: GUILDBUSINESS+568j
		mov	al, [bx]
		cmp	al, 0
		jz	loc_0_EF89
		nop
		nop
		nop
		mov	ah, 0
		add	ax, 6003h
		mov	si, ax
		mov	byte ptr [si], 0

loc_0_EF89:				; CODE XREF: GUILDBUSINESS+558j
		inc	bx
		loop	loc_0_EF76
		mov	si, 0BB8h
		mov	di, 0BC1h
		add	si, ds:0A2F9h
		add	di, ds:0A2F9h
		mov	al, [si]
		cmp	al, 5
		jnz	loc_0_EFA7
		nop
		nop
		nop
		dec	word ptr ds:0D453h

loc_0_EFA7:				; CODE XREF: GUILDBUSINESS+57Cj
		mov	ah, al
		add	al, ah
		mov	[di], al
		mov	byte ptr [si], 0
		mov	ax, ds:0D442h
		cmp	ax, 0FFFFh
		jz	loc_0_EFD9
		nop
		nop
		nop
		mov	dl, 5
		div	dl
		mov	ah, 0
		cmp	ax, ds:0A2F9h
		jnz	loc_0_EFD9
		nop
		nop
		nop
		mov	word ptr ds:0D442h, 0FFFFh
		mov	word ptr ds:0D444h, 0
		call	UNSETTASK

loc_0_EFD9:				; CODE XREF: GUILDBUSINESS+594j
					; GUILDBUSINESS+5A3j
		mov	si, 68EBh
		call	PRINTANDOK
		jmp	short loc_0_EFE2
;����������������������������������������������������������������������������
		nop

loc_0_EFE2:				; CODE XREF: GUILDBUSINESS+F2j
					; GUILDBUSINESS+10Aj
					; ...
		call	sub_0_EFE6
		retn
GUILDBUSINESS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_EFE6	proc near		; CODE XREF: GUILDBUSINESS+3A3p
					; GUILDBUSINESS+5C0p
		mov	si, 0BCAh
		add	si, ds:0A2F9h
		cmp	byte ptr [si], 0
		jz	locret_0_F015
		nop
		nop
		nop
		mov	al, [si]
		mov	byte ptr [si], 0
		mov	ah, 0
		mov	ds:0D46Bh, ax
		call	HEXTOBCD
		mov	ds:0D46Dh, ax
		mov	si, 6A97h
		call	PRINTANDOK
		mov	ax, ds:0D46Bh
		add	ds:0B1Fh, ax
		call	PRINTCASH

locret_0_F015:				; CODE XREF: sub_0_EFE6+Aj
		retn
sub_0_EFE6	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_F016	proc near		; CODE XREF: GUILDBUSINESS+3BAp
					; GUILDBUSINESS+46Ap
					; ...
		mov	ax, 0FFFFh
		mov	ds:218Dh, ax
		call	SSTOVIDTEXT
		call	WAITMRELEASE
		mov	bx, 0E8h ; '�'
		mov	ax, 6Ch	; 'l'
		call	YNPAD
		retn
sub_0_F016	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_F02C	proc near		; CODE XREF: GUILDBUSINESS+528p
		mov	word ptr ds:0D46Fh, 0
		mov	word ptr ds:0D45Fh, 0
		mov	word ptr ds:0CC8Ch, 0
		mov	word ptr ds:0D473h, 0
		mov	word ptr ds:0D475h, 0
		mov	word ptr ds:0D49Bh, 0
		mov	word ptr ds:0D477h, 0
		mov	word ptr ds:0D479h, 0
		mov	word ptr ds:0D47Bh, 0
		mov	word ptr ds:0D47Fh, 0
		mov	word ptr ds:0D481h, 0
		mov	word ptr ds:0D483h, 0
		mov	word ptr ds:0D485h, 0
		mov	word ptr ds:9B3Ch, 0
		mov	word ptr ds:0D489h, 0
		mov	word ptr ds:0AA92h, 0
		mov	word ptr ds:0D48Bh, 0
		mov	word ptr ds:0D48Dh, 0
		mov	word ptr ds:0D48Fh, 0

loc_0_F09E:				; CODE XREF: sub_0_F02C+87j
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_F0B5
		nop
		nop
		nop
		mov	bp, 0A6E3h
		mov	dx, ds:0D444h
		call	sub_0_F5C8
		add	si, 2
		jmp	short loc_0_F09E
;����������������������������������������������������������������������������

loc_0_F0B5:				; CODE XREF: sub_0_F02C+75j
		add	si, 2

loc_0_F0B8:				; CODE XREF: sub_0_F02C+A1j
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_F0CF
		nop
		nop
		nop
		mov	bp, 0A83Fh
		mov	dx, ds:0D444h
		call	sub_0_F5C8
		add	si, 2
		jmp	short loc_0_F0B8
;����������������������������������������������������������������������������

loc_0_F0CF:				; CODE XREF: sub_0_F02C+8Fj
		add	si, 2

loc_0_F0D2:				; CODE XREF: sub_0_F02C+C6j
		cmp	byte ptr [si], 0FFh
		jz	loc_0_F0F4
		nop
		nop
		nop
		mov	al, [si]
		mov	ah, 0
		mov	dx, 10h
		mul	dx
		mov	di, 0D1B8h
		add	di, ax
		add	di, 1
		mov	dx, ds:0D444h
		mov	[di], dl
		inc	si
		jmp	short loc_0_F0D2
;����������������������������������������������������������������������������

loc_0_F0F4:				; CODE XREF: sub_0_F02C+A9j
		inc	si
		mov	word ptr ds:0D44Fh, 0
		mov	bl, [si]
		mov	bh, 0
		cmp	word ptr [si+1], 0FFFFh
		jnz	loc_0_F11D
		nop
		nop
		nop
		mov	di, ds:0D744h
		and	di, 3
		shl	di, 1
		add	di, 0D457h
		mov	ah, [di]
		mov	dh, [di+1]
		jmp	short loc_0_F123
;����������������������������������������������������������������������������
		nop

loc_0_F11D:				; CODE XREF: sub_0_F02C+D7j
		mov	ah, [si+1]
		mov	dh, [si+2]

loc_0_F123:				; CODE XREF: sub_0_F02C+EEj
		mov	al, 80h	; '�'
		mov	dl, 80h	; '�'
		mov	ds:0D461h, ax
		mov	ds:0D463h, dx
		mov	ds:0D465h, ah
		mov	ds:0D466h, dh
		mov	cl, [si+3]
		push	ax
		push	dx
		mov	ax, 10h
		mov	bp, ds:0D444h
		mul	bp
		mov	bp, ax
		pop	dx
		pop	ax
		push	si
		call	SETUPPICKUP
		or	word ptr [si], 200h
		mov	ds:0D44Bh, si
		cmp	word ptr ds:0D442h, 5
		jnz	loc_0_F167
		nop
		nop
		nop
		mov	bx, 9DB9h
		mov	ax, 28h	; '('
		call	SETINSHOP

loc_0_F167:				; CODE XREF: sub_0_F02C+12Dj
		cmp	word ptr ds:0D442h, 10h
		jnz	loc_0_F17A
		nop
		nop
		nop
		mov	word ptr ds:0C9ACh, 0
		or	word ptr [si], 4

loc_0_F17A:				; CODE XREF: sub_0_F02C+140j
		cmp	word ptr ds:0D442h, 1
		jnz	loc_0_F187
		nop
		nop
		nop
		or	word ptr [si], 4

loc_0_F187:				; CODE XREF: sub_0_F02C+153j
		cmp	word ptr ds:0D442h, 1Fh
		jnz	loc_0_F196
		nop
		nop
		nop
		mov	byte ptr ds:6005h, 1

loc_0_F196:				; CODE XREF: sub_0_F02C+160j
		cmp	word ptr ds:0D442h, 20h	; ' '
		jnz	loc_0_F1A5
		nop
		nop
		nop
		mov	byte ptr ds:6006h, 1

loc_0_F1A5:				; CODE XREF: sub_0_F02C+16Fj
		cmp	word ptr ds:0D442h, 2Ah	; '*'
		jnz	loc_0_F1B4
		nop
		nop
		nop
		mov	byte ptr ds:6006h, 1

loc_0_F1B4:				; CODE XREF: sub_0_F02C+17Ej
		cmp	word ptr ds:0D442h, 25h	; '%'
		jnz	loc_0_F1C1
		nop
		nop
		nop
		or	word ptr [si], 4

loc_0_F1C1:				; CODE XREF: sub_0_F02C+18Dj
		cmp	word ptr ds:0D442h, 7
		jnz	loc_0_F1DD
		nop
		nop
		nop
		mov	bx, 31h	; '1'
		mov	ax, 4180h
		mov	dx, 4F80h
		mov	cx, 0FFFFh
		mov	bp, 40h	; '@'
		call	SETUPPICKUP

loc_0_F1DD:				; CODE XREF: sub_0_F02C+19Aj
		cmp	word ptr ds:0D442h, 2
		jnz	loc_0_F20F
		nop
		nop
		nop
		mov	bx, 35h	; '5'
		mov	ax, 4680h
		mov	dx, 3780h
		mov	cx, 0FFFFh
		mov	bp, 50h	; 'P'
		call	SETUPPICKUP
		mov	bx, 10h
		mov	ax, 3780h
		mov	dx, 2F80h
		mov	cx, 0FFFFh
		mov	bp, 50h	; 'P'
		call	SETUPPICKUP
		mov	byte ptr [si+21h], 4

loc_0_F20F:				; CODE XREF: sub_0_F02C+1B6j
		cmp	word ptr ds:0D442h, 0Ch
		jnz	loc_0_F248
		nop
		nop
		nop
		or	word ptr [si], 4
		mov	bx, 37h	; '7'
		mov	ax, 4F80h
		mov	dx, 4C80h
		mov	cx, 0
		mov	bp, 40h	; '@'
		call	SETUPPICKUP
		mov	bx, 0Fh
		mov	ax, 4F80h
		mov	dx, 4C80h
		mov	cx, 0
		mov	bp, 40h	; '@'
		call	SETUPPICKUP
		mov	byte ptr [si+1Dh], 0Dh
		mov	byte ptr [si+1Bh], 1

loc_0_F248:				; CODE XREF: sub_0_F02C+1E8j
		cmp	word ptr ds:0D442h, 11h
		jnz	loc_0_F255
		nop
		nop
		nop
		or	word ptr [si], 4

loc_0_F255:				; CODE XREF: sub_0_F02C+221j
		cmp	word ptr ds:0D442h, 1Bh
		jnz	loc_0_F2BA
		nop
		nop
		nop
		or	word ptr [si], 4
		mov	bx, 3Dh	; '='
		mov	ax, 2F80h
		mov	dx, 4680h
		mov	cx, 0FFFFh
		mov	bp, 40h	; '@'
		call	SETUPPICKUP
		mov	ds:0D491h, si
		mov	bx, 3Dh	; '='
		mov	ax, 3380h
		mov	dx, 4980h
		mov	cx, 0FFFFh
		mov	bp, 40h	; '@'
		call	SETUPPICKUP
		mov	ds:0D493h, si
		mov	bx, 3Dh	; '='
		mov	ax, 3580h
		mov	dx, 4680h
		mov	cx, 0FFFFh
		mov	bp, 40h	; '@'
		call	SETUPPICKUP
		mov	ds:0D495h, si
		mov	bx, 3Dh	; '='
		mov	ax, 3380h
		mov	dx, 4480h
		mov	cx, 0FFFFh
		mov	bp, 40h	; '@'
		call	SETUPPICKUP
		mov	ds:0D497h, si

loc_0_F2BA:				; CODE XREF: sub_0_F02C+22Ej
		cmp	word ptr ds:0D442h, 1Ch
		jnz	loc_0_F2DF
		nop
		nop
		nop
		mov	bx, 10h
		mov	ax, 3E80h
		mov	dx, 980h
		mov	cx, 0
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	byte ptr [si+21h], 65h ; 'e'
		mov	word ptr [si+1Dh], 10h

loc_0_F2DF:				; CODE XREF: sub_0_F02C+293j
		cmp	word ptr ds:0D442h, 26h	; '&'
		jnz	loc_0_F303
		nop
		nop
		nop
		or	word ptr [si], 4
		mov	bx, 0Fh
		mov	ax, 280h
		mov	dx, 3580h
		mov	cx, 0
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	word ptr [si+1Dh], 12h

loc_0_F303:				; CODE XREF: sub_0_F02C+2B8j
		cmp	word ptr ds:0D442h, 1
		jnz	loc_0_F310
		nop
		nop
		nop
		or	word ptr [si], 4

loc_0_F310:				; CODE XREF: sub_0_F02C+2DCj
		cmp	word ptr ds:0D442h, 8
		jnz	loc_0_F331
		nop
		nop
		nop
		mov	bx, 0Fh
		mov	ax, 1680h
		mov	dx, 2480h
		mov	cx, 0
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	word ptr [si+1Dh], 14h

loc_0_F331:				; CODE XREF: sub_0_F02C+2E9j
		cmp	word ptr ds:0D442h, 17h
		jnz	loc_0_F33E
		nop
		nop
		nop
		or	word ptr [si], 4

loc_0_F33E:				; CODE XREF: sub_0_F02C+30Aj
		cmp	word ptr ds:0D442h, 12h
		jnz	loc_0_F35A
		nop
		nop
		nop
		mov	bx, 47h	; 'G'
		mov	ax, 980h
		mov	dx, 4380h
		mov	cx, 0
		mov	bp, 20h	; ' '
		call	SETUPPICKUP

loc_0_F35A:				; CODE XREF: sub_0_F02C+317j
		cmp	word ptr ds:0D442h, 0Dh
		jnz	loc_0_F367
		nop
		nop
		nop
		or	word ptr [si], 4

loc_0_F367:				; CODE XREF: sub_0_F02C+333j
		cmp	word ptr ds:0D442h, 21h	; '!'
		jnz	loc_0_F374
		nop
		nop
		nop
		or	word ptr [si], 4

loc_0_F374:				; CODE XREF: sub_0_F02C+340j
		cmp	word ptr ds:0D442h, 3
		jnz	loc_0_F38B
		nop
		nop
		nop
		mov	byte ptr [si+0Bh], 4Ch ; 'L'
		mov	bx, 9E5Dh
		mov	ax, 14h
		call	SETINSHOP

loc_0_F38B:				; CODE XREF: sub_0_F02C+34Dj
		cmp	word ptr ds:0D442h, 1Dh
		jnz	loc_0_F398
		nop
		nop
		nop
		or	word ptr [si], 4

loc_0_F398:				; CODE XREF: sub_0_F02C+364j
		cmp	word ptr ds:0D442h, 22h	; '"'
		jnz	loc_0_F3B7
		nop
		nop
		nop
		or	word ptr [si], 4
		mov	bx, 50h	; 'P'
		mov	ax, 5180h
		mov	dx, 1080h
		mov	cx, 0FFFFh
		mov	bp, 40h	; '@'
		call	SETUPPICKUP

loc_0_F3B7:				; CODE XREF: sub_0_F02C+371j
		cmp	word ptr ds:0D442h, 27h	; '''
		jnz	loc_0_F3C4
		nop
		nop
		nop
		or	word ptr [si], 4

loc_0_F3C4:				; CODE XREF: sub_0_F02C+390j
		cmp	word ptr ds:0D442h, 2Ch	; ','
		jnz	loc_0_F3E5
		nop
		nop
		nop
		mov	bx, 54h	; 'T'
		mov	ax, 4A80h
		mov	dx, 7780h
		mov	cx, 0FFFFh
		mov	bp, 50h	; 'P'
		call	SETUPPICKUP
		mov	byte ptr ds:600Fh, 0

loc_0_F3E5:				; CODE XREF: sub_0_F02C+39Dj
		cmp	word ptr ds:0D442h, 9
		jnz	loc_0_F406
		nop
		nop
		nop
		mov	bx, 0Fh
		mov	ax, 3B80h
		mov	dx, 5F80h
		mov	cx, 1
		mov	bp, 20h	; ' '
		call	SETUPPICKUP
		mov	word ptr [si+1Dh], 1Eh

loc_0_F406:				; CODE XREF: sub_0_F02C+3BEj
		cmp	word ptr ds:0D442h, 13h
		jnz	loc_0_F45D
		nop
		nop
		nop
		mov	byte ptr ds:6010h, 1
		mov	word ptr ds:0D487h, 0
		mov	bx, 10h
		mov	ax, 3780h
		mov	dx, 6680h
		mov	cx, 0FFFFh
		mov	bp, 70h	; 'p'
		call	SETUPPICKUP
		mov	byte ptr [si+21h], 0Fh
		mov	bx, 10h
		mov	ax, 2D80h
		mov	dx, 6A80h
		mov	cx, 0FFFFh
		mov	bp, 70h	; 'p'
		call	SETUPPICKUP
		mov	byte ptr [si+21h], 10h
		mov	bx, 10h
		mov	ax, 3680h
		mov	dx, 6680h
		mov	cx, 0FFFFh
		mov	bp, 70h	; 'p'
		call	SETUPPICKUP
		mov	byte ptr [si+21h], 11h

loc_0_F45D:				; CODE XREF: sub_0_F02C+3DFj
		cmp	word ptr ds:0D442h, 4
		jnz	loc_0_F49D
		nop
		nop
		nop
		mov	bx, 5Ch	; '\'
		mov	ax, 2680h
		mov	dx, 1780h
		mov	cx, 1
		mov	bp, 60h	; '`'
		call	SETUPPICKUP
		mov	bx, 5Dh	; ']'
		mov	ax, 2780h
		mov	dx, 1780h
		mov	cx, 1
		mov	bp, 60h	; '`'
		call	SETUPPICKUP
		mov	bx, 5Eh	; '^'
		mov	ax, 2880h
		mov	dx, 1780h
		mov	cx, 1
		mov	bp, 60h	; '`'
		call	SETUPPICKUP

loc_0_F49D:				; CODE XREF: sub_0_F02C+436j
		cmp	word ptr ds:0D442h, 0Eh
		jnz	loc_0_F4D8
		nop
		nop
		nop
		or	word ptr [si], 4
		mov	byte ptr ds:6015h, 1
		mov	byte ptr ds:6016h, 1
		mov	bx, 60h	; '`'
		mov	ax, 3680h
		mov	dx, 2580h
		mov	cx, 0FFFFh
		mov	bp, 80h	; '�'
		call	SETUPPICKUP
		mov	bx, 61h	; 'a'
		mov	ax, 4380h
		mov	dx, 1580h
		mov	cx, 0FFFFh
		mov	bp, 80h	; '�'
		call	SETUPPICKUP

loc_0_F4D8:				; CODE XREF: sub_0_F02C+476j
		cmp	word ptr ds:0D442h, 18h
		jnz	loc_0_F4FD
		nop
		nop
		nop
		mov	bx, 64h	; 'd'
		mov	ax, 4380h
		mov	dx, 1580h
		mov	cx, 0
		mov	bp, 1
		call	SETUPPICKUP
		mov	bx, 9D67h
		mov	ax, 78h	; 'x'
		call	SETINSHOP

loc_0_F4FD:				; CODE XREF: sub_0_F02C+4B1j
		pop	si
		add	si, 4
		mov	byte ptr ds:0D2A9h, 0
		retn
sub_0_F02C	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

UNSETTASK	proc near		; CODE XREF: MIDNIGHT+1DBp
					; GUILDBUSINESS+2E2p
					; ...
		mov	word ptr ds:0D46Fh, 0
		mov	word ptr ds:0D455h, 0
		mov	word ptr ds:0D485h, 0
		mov	word ptr ds:9B3Ch, 0
		mov	byte ptr ds:6010h, 0
		mov	byte ptr ds:6011h, 0
		mov	byte ptr ds:6012h, 0
		mov	byte ptr ds:6013h, 0
		mov	byte ptr ds:6014h, 0
		mov	byte ptr ds:6015h, 0
		cmp	word ptr ds:5ACDh, 0
		jz	loc_0_F563
		nop
		nop
		nop
		mov	word ptr ds:5ACDh, 0
		mov	ax, 2
		int	33h		; - MS MOUSE - HIDE MOUSE CURSOR
					; SeeAlso: AX=0001h, INT 16/AX=FFFFh
		mov	dx, 47Bh
		mov	di, 0AAE0h
		mov	ax, 0A000h
		call	LOADPAD
		mov	ax, 1
		int	33h		; - MS MOUSE - SHOW MOUSE CURSOR
					; SeeAlso: AX=0002h, INT 16/AX=FFFEh

loc_0_F563:				; CODE XREF: UNSETTASK+3Bj
		mov	si, ds:0D44Dh

loc_0_F567:				; CODE XREF: UNSETTASK+74j
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_F57D
		nop
		nop
		nop
		mov	bp, 0A6E3h
		mov	dx, 0
		call	sub_0_F5C8
		add	si, 2
		jmp	short loc_0_F567
;����������������������������������������������������������������������������

loc_0_F57D:				; CODE XREF: UNSETTASK+63j
		add	si, 2

loc_0_F580:				; CODE XREF: UNSETTASK+8Dj
		cmp	word ptr [si], 0FFFFh
		jz	loc_0_F596
		nop
		nop
		nop
		mov	bp, 0A83Fh
		mov	dx, 0
		call	sub_0_F5C8
		add	si, 2
		jmp	short loc_0_F580
;����������������������������������������������������������������������������

loc_0_F596:				; CODE XREF: UNSETTASK+7Cj
		add	si, 2

loc_0_F599:				; CODE XREF: UNSETTASK+B1j
		cmp	byte ptr [si], 0FFh
		jz	loc_0_F5BA
		nop
		nop
		nop
		mov	al, [si]
		mov	ah, 0
		mov	dx, 10h
		mul	dx
		mov	di, 0D1B8h
		add	di, ax
		add	di, 1
		mov	dx, 0
		mov	[di], dl
		inc	si
		jmp	short loc_0_F599
;����������������������������������������������������������������������������

loc_0_F5BA:				; CODE XREF: UNSETTASK+95j
		inc	si
		mov	di, ds:0D44Bh
		mov	word ptr [di+27h], 0
		add	si, 4
		retn
UNSETTASK	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_F5C8	proc near		; CODE XREF: sub_0_F02C+81p
					; sub_0_F02C+9Bp ...
		mov	ax, [si]
sub_0_F5C8	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SETQT		proc near		; CODE XREF: DIALOG+46Ep DIALOG+4A2p
					; ...
		push	di
		mov	di, bp

loc_0_F5CD:				; CODE XREF: SETQT+15j
		cmp	word ptr [di], 0FFFFh
		jz	loc_0_F5E1
		nop
		nop
		nop
		cmp	ax, [di]
		jz	loc_0_F5E3
		nop
		nop
		nop
		add	di, 4
		jmp	short loc_0_F5CD
;����������������������������������������������������������������������������

loc_0_F5E1:				; CODE XREF: SETQT+6j
		pop	di
		retn
;����������������������������������������������������������������������������

loc_0_F5E3:				; CODE XREF: SETQT+Dj
		mov	[di+3],	dl
		pop	di
		retn
SETQT		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_F5E8	proc near		; CODE XREF: GUILDBUSINESS+329p
		inc	word ptr ds:0D453h
		call	EFF_TO_MUS
		mov	ax, ds:0A2F9h
		cmp	ax, 2
		jl	loc_0_F61D
		nop
		nop
		nop
		cmp	ax, 4
		jl	loc_0_F633
		nop
		nop
		nop
		jz	loc_0_F649
		nop
		nop
		nop
		push	es
		mov	ax, 0Ah
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	dx, 252h
		jmp	short loc_0_F65C
;����������������������������������������������������������������������������
		nop

loc_0_F61D:				; CODE XREF: sub_0_F5E8+Dj
		push	es
		mov	ax, 0Bh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	dx, 25Dh
		jmp	short loc_0_F65C
;����������������������������������������������������������������������������
		nop

loc_0_F633:				; CODE XREF: sub_0_F5E8+15j
		push	es
		mov	ax, 0Bh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	dx, 245h
		jmp	short loc_0_F65C
;����������������������������������������������������������������������������
		nop

loc_0_F649:				; CODE XREF: sub_0_F5E8+1Aj
		push	es
		mov	ax, 0Bh
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		mov	dx, 23Bh

loc_0_F65C:				; CODE XREF: sub_0_F5E8+32j
					; sub_0_F5E8+48j ...
		mov	ds:0D451h, dx
		call	sub_0_F686
		mov	si, 6933h
		call	SCROLLTEXT
		mov	si, 697Ah
		call	SCROLLTEXT
		call	BLANK_AND_SETPAL
		call	MUS_TO_EFF
		mov	si, ds:0D70Ah
		mov	di, 0A000h
		call	COPYSCREEN
		call	LOADPANELS
		call	CLEARBORDER
		retn
sub_0_F5E8	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_F686	proc near		; CODE XREF: sub_0_F5E8+78p
					; GUILDSERVICE+A9p
		mov	si, 0A000h
		mov	di, ds:0D70Ah
		call	COPYSCREEN
		call	GETBORDER
		mov	dx, ds:0D451h
		call	LC1
		call	GET_PAL
		call	COPYPAL
		mov	bx, 20h	; ' '
		mov	cx, 0E0h ; '�'
		mov	dx, 60h	; '`'
		call	SETPALBIT
		call	PICRAISE2
		retn
sub_0_F686	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

GUILDSERVICE	proc near		; CODE XREF: seg000:9560p
		call	CLEARTWIN
		mov	ax, 0
		int	33h		; - MS MOUSE - RESET DRIVER AND	READ STATUS
					; Return: AX = status
					; BX = number of buttons
		mov	ax, 7
		mov	cx, 0F0h ; '�'
		mov	dx, 218h
		int	33h		; - MS MOUSE - DEFINE HORIZONTAL CURSOR	RANGE
					; CX = minimum column, DX = maximum column
		mov	ax, 8
		mov	cx, 4
		mov	dx, 80h	; '�'
		int	33h		; - MS MOUSE - DEFINE VERTICAL CURSOR RANGE
					; CX = minimum row, DX = maximum row
		mov	ax, 4
		mov	cx, 0A0h ; '�'
		mov	dx, 50h	; 'P'
		int	33h		; - MS MOUSE - POSITION	MOUSE CURSOR
					; CX = column, DX = row
		cmp	word ptr ds:0A2F9h, 4
		jnz	loc_0_F73F
		nop
		nop
		nop
		cmp	word ptr ds:0D442h, 2
		jnz	loc_0_F736
		nop
		nop
		nop
		cmp	word ptr ds:0D46Fh, 0
		jnz	loc_0_F736
		nop
		nop
		nop
		mov	di, ds:0BB6h
		cmp	di, 0
		jz	loc_0_F72D
		nop
		nop
		nop
		cmp	byte ptr [di+0Bh], 35h ; '5'
		jnz	loc_0_F72D
		nop
		nop
		nop
		mov	word ptr [di], 1
		mov	word ptr ds:0BB6h, 0
		mov	byte ptr ds:13Dh, 1
		mov	si, 40B3h
		call	PRINTANDOK
		mov	word ptr ds:0D46Fh, 1
		call	INVENTORY
		jmp	locret_0_F8CE
;����������������������������������������������������������������������������

loc_0_F72D:				; CODE XREF: GUILDSERVICE+4Ej
					; GUILDSERVICE+57j
		mov	si, 4080h
		call	PRINTANDOK
		jmp	locret_0_F8CE
;����������������������������������������������������������������������������

loc_0_F736:				; CODE XREF: GUILDSERVICE+38j
					; GUILDSERVICE+42j
		mov	si, 4010h
		call	PRINTANDOK
		jmp	locret_0_F8CE
;����������������������������������������������������������������������������

loc_0_F73F:				; CODE XREF: GUILDSERVICE+2Ej
		cmp	word ptr ds:0A2F9h, 4
		jl	loc_0_F7AD
		nop
		nop
		nop
		mov	si, 3ECCh
		call	PRINTANDOK
		call	CLEARTWIN
		mov	dx, 28Dh
		mov	ds:0D451h, dx
		call	sub_0_F686
		mov	ax, ds:0A2F9h
		shl	ax, 1
		mov	ds:0D467h, ax
		mov	bx, ds:0A2F9h
		add	bx, 0BB8h
		cmp	byte ptr [bx], 0
		jz	loc_0_F778
		nop
		nop
		nop
		neg	word ptr ds:0D467h

loc_0_F778:				; CODE XREF: GUILDSERVICE+BFj
		call	GIVEDIAG
		call	SCROLLRESPONSE
		cmp	word ptr ds:0A305h, 0
		jz	loc_0_F791
		nop
		nop
		nop
		mov	word ptr ds:0A305h, 0
		call	DO_CURE

loc_0_F791:				; CODE XREF: GUILDSERVICE+D3j
		call	BLANK_AND_SETPAL
		mov	si, ds:0D70Ah
		mov	di, 0A000h
		call	COPYSCREEN
		call	PRINTCASH
		call	LOADPANELS
		call	DISPLAYATTRIBS
		call	CLEARBORDER
		jmp	locret_0_F8CE
;����������������������������������������������������������������������������

loc_0_F7AD:				; CODE XREF: GUILDSERVICE+94j
		cmp	word ptr ds:0A2F9h, 2
		jl	loc_0_F7B7
		jmp	loc_0_F85D
;����������������������������������������������������������������������������

loc_0_F7B7:				; CODE XREF: GUILDSERVICE+102j
		cmp	word ptr ds:0D442h, 7
		jnz	loc_0_F7D1
		nop
		nop
		nop
		cmp	word ptr ds:0A2F9h, 1
		jnz	loc_0_F7D1
		nop
		nop
		nop
		mov	si, 3E88h
		jmp	short loc_0_F848
;����������������������������������������������������������������������������
		nop

loc_0_F7D1:				; CODE XREF: GUILDSERVICE+10Cj
					; GUILDSERVICE+116j
		mov	si, 3F42h
		call	PRINTANDOK
		call	CLEARTWIN
		cmp	word ptr ds:0BB6h, 0
		jz	loc_0_F851
		nop
		nop
		nop
		mov	di, ds:0BB6h
		mov	al, [di+0Bh]
		cmp	al, 31h	; '1'
		jnz	loc_0_F7F8
		nop
		nop
		nop
		mov	si, 677Ah
		jmp	short loc_0_F848
;����������������������������������������������������������������������������
		nop

loc_0_F7F8:				; CODE XREF: GUILDSERVICE+13Dj
		cmp	al, 32h	; '2'
		jnz	loc_0_F805
		nop
		nop
		nop
		mov	si, 67CEh
		jmp	short loc_0_F848
;����������������������������������������������������������������������������
		nop

loc_0_F805:				; CODE XREF: GUILDSERVICE+14Aj
		cmp	al, 10h
		jnz	loc_0_F81B
		nop
		nop
		nop
		cmp	word ptr [di+1Dh], 10h
		jnz	loc_0_F81B
		nop
		nop
		nop
		mov	si, 3DD6h
		jmp	short loc_0_F848
;����������������������������������������������������������������������������
		nop

loc_0_F81B:				; CODE XREF: GUILDSERVICE+157j
					; GUILDSERVICE+160j
		cmp	al, 50h	; 'P'
		jnz	loc_0_F828
		nop
		nop
		nop
		mov	si, 683Eh
		jmp	short loc_0_F848
;����������������������������������������������������������������������������
		nop

loc_0_F828:				; CODE XREF: GUILDSERVICE+16Dj
		mov	ah, [di+22h]
		push	es
		mov	dx, ds:0D716h
		mov	es, dx
		mov	es:3FFFh, al
		mov	es:400Eh, ah
		pop	es
		mov	ax, [di+1Bh]
		call	HEXTOBCD
		mov	ds:0D469h, ax
		mov	si, 3FFBh

loc_0_F848:				; CODE XREF: GUILDSERVICE+11Ej
					; GUILDSERVICE+145j ...
		call	PRINTANDOK
		call	CLEARTWIN
		jmp	short locret_0_F8CE
;����������������������������������������������������������������������������
		nop

loc_0_F851:				; CODE XREF: GUILDSERVICE+12Fj
		mov	si, 3FC0h
		call	PRINTANDOK
		call	CLEARTWIN
		jmp	short locret_0_F8CE
;����������������������������������������������������������������������������
		nop

loc_0_F85D:				; CODE XREF: GUILDSERVICE+104j
		mov	ax, ds:0D41Ah
		cmp	ax, 4
		jz	loc_0_F8C5
		nop
		nop
		nop
		push	es
		mov	ax, ds:0D716h
		mov	es, ax
		mov	al, ds:0D41Ah
		mov	es:4168h, al
		pop	es
		mov	si, 4104h
		call	sub_0_F016
		cmp	ax, 0
		jz	loc_0_F8CB
		nop
		nop
		nop
		mov	si, 2DD2h
		cmp	word ptr ds:0B1Fh, 32h ; '2'
		jl	loc_0_F8C8
		nop
		nop
		nop
		sub	word ptr ds:0B1Fh, 32h ; '2'
		call	PRINTCASH
		push	es
		mov	ax, 13h
		push	ax
		mov	es, ds:0D714h
		call	dword ptr ds:0D6E4h
		inc	sp
		inc	sp
		pop	es
		inc	word ptr ds:0D41Ah
		mov	ax, ds:0D41Ah
		test	al, 1
		jnz	loc_0_F8BE
		nop
		nop
		nop
		inc	word ptr ds:0AE1h
		jmp	short loc_0_F8CB
;����������������������������������������������������������������������������
		nop

loc_0_F8BE:				; CODE XREF: GUILDSERVICE+202j
		inc	word ptr ds:0AE3h
		jmp	short loc_0_F8CB
;����������������������������������������������������������������������������
		nop

loc_0_F8C5:				; CODE XREF: GUILDSERVICE+1B3j
		mov	si, 4179h

loc_0_F8C8:				; CODE XREF: GUILDSERVICE+1DCj
		call	PRINTANDOK

loc_0_F8CB:				; CODE XREF: GUILDSERVICE+1CFj
					; GUILDSERVICE+20Bj ...
		call	CLEARTWIN

locret_0_F8CE:				; CODE XREF: GUILDSERVICE+7Aj
					; GUILDSERVICE+83j ...
		retn
GUILDSERVICE	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SETINSHOP	proc near		; CODE XREF: P_RANDINIT+4Ep
					; P_RANDINIT+69p ...
		add	bx, 19h
		cmp	word ptr [bx+0Ch], 0
		jnz	loc_0_F8E2
		nop
		nop
		nop
		mov	di, [bx+0Ch]
		mov	word ptr [di], 1

loc_0_F8E2:				; CODE XREF: SETINSHOP+7j
		mov	[bx+0Ch], si
		mov	[bx+0Eh], ax
		or	word ptr [si], 4
		retn
SETINSHOP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_F8EC	proc near		; CODE XREF: GUILDBUSINESS+32Cp
		mov	di, ds:0A2FBh
		mov	bx, 0A2F5h
		mov	ax, 0
		mov	al, [di+24h]
		add	bx, ax
		cmp	byte ptr [bx], 0
		jnz	locret_0_F96A
		nop
		nop
		nop
		mov	byte ptr [bx], 1
		mov	bx, 0A2F5h
		mov	dx, [bx]
		add	dx, [bx+2]
		cmp	dx, 202h
		jnz	loc_0_F91C
		nop
		nop
		nop
		mov	byte ptr ds:6008h, 1

loc_0_F91C:				; CODE XREF: sub_0_F8EC+26j
		add	dl, dh
		mov	dh, 0
		mov	ds:0D41Ch, dx
		add	ax, 66h	; 'f'
		mov	ds:0D41Eh, ax
		mov	dx, [di+21h]
		mov	ax, 80h	; '�'
		mov	ah, dl
		mov	dl, 80h	; '�'
		mov	cx, 0
		push	ax
		push	dx
		mov	cl, [di+23h]
		push	cx
		mov	bp, 0FFFFh
		mov	bx, 0Fh
		call	SETUPPICKUP
		pop	cx
		pop	dx
		pop	ax
		mov	bp, ds:0D41Ch
		add	bp, 1Fh
		cmp	bp, 23h	; '#'
		jnz	loc_0_F95D
		nop
		nop
		nop
		mov	word ptr [si+27h], 50h ; 'P'

loc_0_F95D:				; CODE XREF: sub_0_F8EC+67j
		mov	[si+1Dh], bp
		mov	bx, ds:0D41Eh
		mov	bp, 0FFFFh
		call	SETUPPICKUP

locret_0_F96A:				; CODE XREF: sub_0_F8EC+12j
		retn
sub_0_F8EC	endp

;����������������������������������������������������������������������������
		db    0	;

;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SETPALBIT	proc near		; CODE XREF: START+23Dp LOADANDSHOW+19p
					; ...
		push	es
		mov	ah, 10h
		mov	al, 12h
		mov	bp, ds:0D70Eh
		mov	es, bp
		int	10h		; - VIDEO - SET	BLOCK OF DAC REGISTERS (EGA, VGA/MCGA)
					; BX = starting	color register,	CX = number of registers to set
					; ES:DX	-> table of 3*CX bytes where each 3 byte group represents one
					; byte each of red, green and blue (0-63)
		pop	es
		retn
SETPALBIT	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADUGPANELS	proc near		; CODE XREF: sub_0_49FD+329p
					; CHANGELEVEL+27p ...
		cmp	byte ptr ds:0AFAh, 2
		jnz	loc_0_F985
		jmp	loc_0_FA5C
;����������������������������������������������������������������������������

loc_0_F985:				; CODE XREF: LOADUGPANELS+5j
		cmp	byte ptr ds:0AFAh, 4
		jnz	loc_0_F98F
		jmp	loc_0_FA5C
;����������������������������������������������������������������������������

loc_0_F98F:				; CODE XREF: LOADUGPANELS+Fj
		cmp	byte ptr ds:0AFAh, 5
		jnz	loc_0_F999
		jmp	loc_0_FA5C
;����������������������������������������������������������������������������

loc_0_F999:				; CODE XREF: LOADUGPANELS+19j
		mov	bx, 0F17h
		mov	byte ptr ds:0AFAh, 2
		mov	ax, ds:0ADBh

loc_0_F9A4:				; CODE XREF: LOADUGPANELS+3Bj
		cmp	word ptr [bx], 0FFFFh
		jz	LOADUGP
		nop
		nop
		nop
		cmp	[bx], ax
		jz	loc_0_F9B8
		nop
		nop
		nop
		add	bx, 2
		jmp	short loc_0_F9A4
;����������������������������������������������������������������������������

loc_0_F9B8:				; CODE XREF: LOADUGPANELS+33j
		cmp	bx, 0F27h
		jnb	loc_0_F9C9
		nop
		nop
		nop
		mov	byte ptr ds:0AFAh, 4
		jmp	short LOADUGP
;����������������������������������������������������������������������������
		nop

loc_0_F9C9:				; CODE XREF: LOADUGPANELS+41j
		mov	byte ptr ds:0AFAh, 5
LOADUGPANELS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADUGP		proc near		; CODE XREF: LOADPANELS+4Ep
					; LOADUGPANELS+2Cj ...
		mov	byte ptr ds:608Ah, 0
		mov	ax, 26F6h
		mov	ds:2716h, ax
		mov	word ptr ds:4F0Ah, 4F60h
		mov	dx, 1B4h
		mov	word ptr ds:13Fh, 3C0h
		mov	word ptr ds:141h, 660h
		cmp	byte ptr ds:0AFAh, 2
		jz	loc_0_FA14
		nop
		nop
		nop
		mov	dx, 1C1h
		cmp	byte ptr ds:0AFAh, 4
		jz	loc_0_FA14
		nop
		nop
		nop
		mov	dx, 1CEh
		mov	word ptr ds:13Fh, 720h
		mov	word ptr ds:141h, 7E0h

loc_0_FA14:				; CODE XREF: LOADUGP+25j LOADUGP+32j
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		mov	bx, 20h	; ' '
		mov	cx, 40h	; '@'
		mov	dx, ds:13Fh
		call	SETPALBIT
		mov	bx, 70h	; 'p'
		mov	cx, 40h	; '@'
		mov	dx, ds:141h
		call	SETPALBIT
		mov	bx, 0E0h ; '�'
		mov	cx, 10h
		mov	dx, 1E0h
		call	SETPALBIT
		call	SAVE_SMTHNG?
		mov	dx, 399h
		call	sub_0_FD2F
		mov	word ptr ds:262Ah, 303h
		mov	word ptr ds:262Ch, 404h

loc_0_FA5C:				; CODE XREF: LOADUGPANELS+7j
					; LOADUGPANELS+11j ...
		mov	cx, ds:0ACDh
		mov	cl, ch
		mov	ch, 0
		mov	dx, ds:0ACFh
		mov	dl, dh
		mov	dh, 0
		mov	si, 608Eh
		call	CHECKBOXES
		cmp	al, 0
		jz	loc_0_FA87
		nop
		nop
		nop
		cmp	al, 7
		jg	loc_0_FA87
		nop
		nop
		nop
		cmp	al, 4
		jge	loc_0_FA89
		nop
		nop
		nop

loc_0_FA87:				; CODE XREF: LOADUGP+A6j LOADUGP+ADj
		mov	al, 4

loc_0_FA89:				; CODE XREF: LOADUGP+B4j
		sub	al, 4
		cmp	al, ds:608Ah
		jz	loc_0_FAA0
		nop
		nop
		nop
		mov	ds:608Ah, al
		mov	di, 5100h
		mov	si, 5000h
		call	LANDSETTAP

loc_0_FAA0:				; CODE XREF: LOADUGP+C1j
		mov	dx, 3D0h
		call	LOADTILE
		retn
LOADUGP		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADISPANELS	proc near		; CODE XREF: sub_0_49FD+33Fp
					; CHANGELEVEL+53p ...
		mov	bx, ds:0ACFh
		mov	bl, ds:0ACEh
		cmp	bx, 793Ah
		jnz	loc_0_FAB8
		jmp	BOATYARD
;����������������������������������������������������������������������������

loc_0_FAB8:				; CODE XREF: LOADISPANELS+Cj
		cmp	bx, 7943h
		jnz	loc_0_FAC1
		jmp	BOATYARD
;����������������������������������������������������������������������������

loc_0_FAC1:				; CODE XREF: LOADISPANELS+15j
		cmp	byte ptr ds:0AFAh, 0
		jz	loc_0_FB36
		nop
		nop
		nop
LOADISPANELS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADISP		proc near		; CODE XREF: LOADPANELS+24p
		mov	byte ptr ds:0AFAh, 0
		mov	byte ptr ds:6089h, 0
		mov	byte ptr ds:608Bh, 0
		mov	word ptr ds:262Ah, 101h
		mov	word ptr ds:262Ch, 202h
		mov	ax, 26D6h
		mov	ds:2716h, ax
		mov	word ptr ds:4F0Ah, 4F0Ch
		mov	dx, 1A7h
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	WHICHPANELS
		mov	ds:13Bh, bp
		mov	di, 60h	; '`'
		cmp	bp, 1
		jz	loc_0_FB22
		nop
		nop
		nop
		mov	di, 5A0h
		cmp	bp, 0
		jz	loc_0_FB22
		nop
		nop
		nop
		mov	di, 480h

loc_0_FB22:				; CODE XREF: LOADISP+44j LOADISP+4Fj
		mov	bx, 20h	; ' '
		mov	cx, 40h	; '@'
		mov	dx, di
		call	SETPALBIT
		call	SAVE_SMTHNG?
		mov	dx, 38Eh
		call	sub_0_FD2F

loc_0_FB36:				; CODE XREF: LOADISPANELS+1Fj
		mov	cx, ds:0ACDh
		mov	cl, ch
		mov	ch, 0
		mov	dx, ds:0ACFh
		mov	dl, dh
		mov	dh, 0
		mov	si, 608Eh
		call	CHECKBOXES
		push	ax
		cmp	al, 3
		jle	loc_0_FB56
		nop
		nop
		nop
		mov	al, 0

loc_0_FB56:				; CODE XREF: LOADISP+84j
		mov	bp, 0
		cmp	al, ds:6089h
		jz	loc_0_FB71
		nop
		nop
		nop
		mov	ds:6089h, al
		mov	di, 0A100h
		mov	si, 0
		call	LANDSETTAP
		mov	bp, 1

loc_0_FB71:				; CODE XREF: LOADISP+92j
		pop	ax
		cmp	al, 8
		jge	loc_0_FB7B
		nop
		nop
		nop
		mov	al, 8

loc_0_FB7B:				; CODE XREF: LOADISP+A9j
		sub	al, 8
		cmp	al, ds:608Bh
		jz	loc_0_FBB6
		nop
		nop
		nop
		mov	ds:608Bh, al
		cmp	bp, 1
		jz	loc_0_FB96
		nop
		nop
		nop
		push	ax
		call	LOAD_TAPESTRY?
		pop	ax

loc_0_FB96:				; CODE XREF: LOADISP+C1j
		mov	cx, 6
		shl	ax, cl
		mov	si, ax
		add	si, 0A000h
		mov	di, 5000h
		push	es
		push	ds
		mov	ax, ds:0D704h
		mov	bx, ds:0D70Ah
		mov	es, bx
		mov	ds, ax
		call	sub_0_FDA6
		pop	ds
		pop	es

loc_0_FBB6:				; CODE XREF: LOADISP+B6j
		mov	dx, 3B8h
		cmp	word ptr ds:0ADDh, 1
		jnz	loc_0_FBC6
		nop
		nop
		nop
		mov	dx, 3C4h

loc_0_FBC6:				; CODE XREF: LOADISP+F3j
		call	LOADTILE
		retn
LOADISP		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

BOATYARD	proc near		; CODE XREF: LOADPANELS+2Ap
					; LOADISPANELS+Ej ...
		mov	byte ptr ds:0AFAh, 3
		mov	byte ptr ds:6089h, 0
		mov	byte ptr ds:608Bh, 0
		mov	word ptr ds:262Ah, 101h
		mov	word ptr ds:262Ch, 202h
		mov	ax, 26D6h
		mov	ds:2716h, ax
		mov	word ptr ds:4F0Ah, 4F0Ch
		mov	dx, 21Ch
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	WHICHPANELS
		mov	ds:13Bh, bp
		mov	di, 60h	; '`'
		mov	si, 1B0h
		cmp	bp, 1
		jz	loc_0_FC2A
		nop
		nop
		nop
		mov	di, 300h
		mov	si, 570h
		cmp	bp, 0
		jz	loc_0_FC2A
		nop
		nop
		nop
		mov	di, 480h
		mov	si, 540h

loc_0_FC2A:				; CODE XREF: BOATYARD+47j BOATYARD+55j
		push	si
		mov	bx, 20h	; ' '
		mov	cx, 40h	; '@'
		mov	dx, di
		call	SETPALBIT
		pop	si
		mov	bx, 90h	; '�'
		mov	cx, 10h
		mov	dx, si
		call	SETPALBIT
		call	SAVE_SMTHNG?
		mov	dx, 38Eh
		call	sub_0_FD2F
		mov	dx, 3B8h
		call	LOADTILE
		retn
BOATYARD	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADOSPANELS	proc near		; CODE XREF: sub_0_49FD+339p
		cmp	byte ptr ds:0AFAh, 1
		jnz	LOADOSP
		jmp	loc_0_FD28
LOADOSPANELS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOADOSP		proc near		; CODE XREF: LOADPANELS+14p
					; LOADOSPANELS+5j
		call	WHICHPANELS
		mov	ds:13Bh, bp
		mov	byte ptr ds:0AFAh, 1
		mov	byte ptr ds:608Ch, 0FFh
		mov	word ptr ds:262Ah, 101h
		mov	word ptr ds:262Ch, 202h
		mov	ax, 26D6h
		mov	ds:2716h, ax
		mov	word ptr ds:4F0Ah, 4F0Ch
		cmp	bp, 1
		jz	loc_0_FCEB
		nop
		nop
		nop
		cmp	bp, 2
		jz	loc_0_FCC0
		nop
		nop
		nop
		mov	dx, 19Ah
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		mov	bx, 20h	; ' '
		mov	cx, 40h	; '@'
		mov	dx, 300h
		call	SETPALBIT
		mov	bx, 90h	; '�'
		mov	cx, 10h
		mov	dx, 570h
		call	SETPALBIT
		jmp	short loc_0_FD13
;����������������������������������������������������������������������������
		nop

loc_0_FCC0:				; CODE XREF: LOADOSP+34j
		mov	dx, 18Dh
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		mov	bx, 20h	; ' '
		mov	cx, 40h	; '@'
		mov	dx, 480h
		call	SETPALBIT
		mov	bx, 90h	; '�'
		mov	cx, 10h
		mov	dx, 540h
		call	SETPALBIT
		jmp	short loc_0_FD13
;����������������������������������������������������������������������������
		nop

loc_0_FCEB:				; CODE XREF: LOADOSP+2Cj
		mov	dx, 18Dh
		mov	bp, 0FA00h
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		mov	bx, 20h	; ' '
		mov	cx, 40h	; '@'
		mov	dx, 60h	; '`'
		call	SETPALBIT
		mov	bx, 90h	; '�'
		mov	cx, 10h
		mov	dx, 1B0h
		call	SETPALBIT

loc_0_FD13:				; CODE XREF: LOADOSP+61j LOADOSP+8Cj
		mov	bx, 0E0h ; '�'
		mov	cx, 10h
		mov	dx, 2A0h
		call	SETPALBIT
		call	SAVE_SMTHNG?
		mov	dx, 383h
		call	sub_0_FD2F

loc_0_FD28:				; CODE XREF: LOADOSPANELS+7j
		mov	dx, 3ADh
		call	LOADTILE
		retn
LOADOSP		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_FD2F	proc near		; CODE XREF: LOADUGP+7Fp LOADISP+68p
					; ...
		mov	di, 0
		mov	ax, ds:0D704h
		call	LOADPAD
		mov	si, 0
		mov	di, 0F000h
		push	es
		push	ds
		mov	ax, ds:0D70Ah
		mov	es, ax
		mov	ax, ds:0D704h
		mov	ds, ax
		mov	dx, 64h	; 'd'   ; 100

loc_0_FD4D:				; CODE XREF: sub_0_FD2F+28j
		mov	cx, 10h		; 16
		rep movsw
		add	si, 120h	; 288
		dec	dx
		jnz	loc_0_FD4D	; 16
		pop	ds
		pop	es
		retn
sub_0_FD2F	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LOAD_TAPESTRY?	proc near		; CODE XREF: LOADISP+C7p LANDSETTAP+3p
		mov	dx, 202h
		mov	bp, 0FA00h	; 64000
		mov	si, 0
		mov	di, ds:0D702h
		call	LOAD
		call	EXP_DP
		retn
LOAD_TAPESTRY?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

SAVE_SMTHNG?	proc near		; CODE XREF: LOADUGP+79p LOADISP+62p
					; ...
		call	EXP_DP
		push	es
		push	ds
		mov	ax, ds:0D704h
		mov	bx, ds:0D70Ah
		mov	es, bx
		mov	ds, ax
		mov	bx, 26B8h
		mov	bp, 0Fh

loc_0_FD86:				; CODE XREF: SAVE_SMTHNG?+2Bj
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	si, [bx]
		mov	ax, SCREEN2
		mov	ds, ax
		assume ds:nothing
		mov	di, si
		call	sub_0_FDA6
		add	bx, 2
		dec	bp
		jnz	loc_0_FD86
		pop	ds
		assume ds:nothing
		pop	es
		mov	al, 0Fh
		mov	dx, 3F2h
		out	dx, al		; Floppy: digital output reg bits:
					; 0-1: Drive to	select 0-3 (AT:	bit 1 not used)
					; 2:   0=reset diskette	controller; 1=enable controller
					; 3:   1=enable	diskette DMA and interrupts
					; 4-7: drive motor enable.  Set	bits to	turn drive ON.
					;
		retn
SAVE_SMTHNG?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_FDA6	proc near		; CODE XREF: LOADISP+E6p SAVE_SMTHNG?+24p
					; ...
		mov	dx, 40h	; '@'   ; 64

loc_0_FDA9:				; CODE XREF: sub_0_FDA6+17j
		push	si
		push	di
		mov	cx, 40h	; '@'   ; 64

loc_0_FDAE:				; CODE XREF: sub_0_FDA6+Dj
		movsb
		add	di, 13Fh	; 319
		loop	loc_0_FDAE
		pop	di
		pop	si
		add	si, 140h	; 320
		inc	di		; ++di
		dec	dx		; --dx
		jnz	loc_0_FDA9
		retn
sub_0_FDA6	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

LANDSETTAP	proc near		; CODE XREF: FLIPBIT2+3Dp LOADUGP+CFp
					; ...
		push	di
		push	si
		push	ax
		call	LOAD_TAPESTRY?
		pop	ax
		pop	si
		pop	di
		mov	cx, 6
		shl	ax, cl
		add	si, ax
		push	es
		push	ds
		mov	ax, ds:0D704h
		mov	bx, ds:0D70Ah
		mov	es, bx
		mov	ds, ax
		call	sub_0_FDA6
		pop	ds
		pop	es
		retn
LANDSETTAP	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

FLI_FROMDISKS	proc near		; CODE XREF: sub_0_58DE+71p
		mov	dx, ax
		mov	ah, 3Dh	; '='
		mov	al, 2
		mov	cx, 0
		int	21h		; DOS -	2+ - OPEN DISK FILE WITH HANDLE
					; DS:DX	-> ASCIZ filename
					; AL = access mode
					; 2 - read & write
		mov	ds:0D726h, ax
		mov	ah, 3Fh	; '?'
		mov	bx, ds:0D726h
		mov	cx, 12h
		mov	dx, 0D748h
		int	21h		; DOS -	2+ - READ FROM FILE WITH HANDLE
					; BX = file handle, CX = number	of bytes to read
					; DS:DX	-> buffer
		mov	ax, 4200h
		mov	bx, ds:0D726h
		mov	dx, 80h	; '�'
		mov	cx, 0
		int	21h		; DOS -	2+ - MOVE FILE READ/WRITE POINTER (LSEEK)
					; AL = method: offset from beginning of	file
		call	sub_0_FE50
		call	sub_0_FE87
		mov	cx, 64h	; 'd'
		call	PAUSE
		mov	bx, 0D748h
		mov	cx, [bx+6]
		dec	cx
		mov	bp, [bx+10h]
		mov	word ptr ds:136h, 0

loc_0_FE2A:				; CODE XREF: FLI_FROMDISKS+4Bj
					; FLI_FROMDISKS+62j
		cmp	ds:136h, bp
		jl	loc_0_FE2A
		mov	word ptr ds:136h, 0
		push	cx
		push	bx
		push	bp
		call	sub_0_FE50
		call	sub_0_FE87
		pop	bp
		pop	bx
		add	bx, 2
		pop	cx
		loop	loc_0_FE2A
		mov	ah, 3Eh	; '>'
		mov	bx, ds:0D726h
		int	21h		; DOS -	2+ - CLOSE A FILE WITH HANDLE
					; BX = file handle
		retn
FLI_FROMDISKS	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_FE50	proc near		; CODE XREF: FLI_FROMDISKS+2Bp
					; FLI_FROMDISKS+56p
		mov	ah, 3Fh	; '?'
		mov	bx, ds:0D726h
		mov	cx, 10h
		mov	dx, ds:0D704h
		push	ds
		mov	ds, dx
		mov	dx, 0
		int	21h		; DOS -	2+ - READ FROM FILE WITH HANDLE
					; BX = file handle, CX = number	of bytes to read
					; DS:DX	-> buffer
		pop	ds
		mov	ax, ds:0D704h
		mov	es, ax
		mov	cx, es:0
		sub	cx, 10h
		mov	ah, 3Fh	; '?'
		mov	bx, ds:0D726h
		mov	dx, ds:0D704h
		push	ds
		mov	ds, dx
		mov	dx, 10h
		int	21h		; DOS -	2+ - READ FROM FILE WITH HANDLE
					; BX = file handle, CX = number	of bytes to read
					; DS:DX	-> buffer
		pop	ds
		retn
sub_0_FE50	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_FE87	proc near		; CODE XREF: FLI_FROMDISKS+2Ep
					; FLI_FROMDISKS+59p
		mov	ax, ds:0D704h
		mov	dx, 0A000h	; VGA
		push	ds
		mov	ds, ax
		mov	es, dx
		assume es:nothing
		mov	cx, ds:6
		mov	si, 10h

loc_0_FE99:				; CODE XREF: sub_0_FE87+62j
		push	es
		push	cx
		push	si
		mov	ax, [si+4]
		cmp	ax, 0Bh
		jnz	loc_0_FEAD
		nop
		nop
		nop
		call	PALETTE_SWITCH?
		jmp	short loc_0_FEE2
;����������������������������������������������������������������������������
		nop

loc_0_FEAD:				; CODE XREF: sub_0_FE87+1Bj
		cmp	ax, 0Ch
		jnz	loc_0_FEBB
		nop
		nop
		nop
		call	sub_0_FF38
		jmp	short loc_0_FEE2
;����������������������������������������������������������������������������
		nop

loc_0_FEBB:				; CODE XREF: sub_0_FE87+29j
		cmp	ax, 0Dh
		jnz	loc_0_FEC9
		nop
		nop
		nop
		call	NOTHING
		jmp	short loc_0_FEE2
;����������������������������������������������������������������������������
		nop

loc_0_FEC9:				; CODE XREF: sub_0_FE87+37j
		cmp	ax, 0Fh
		jnz	loc_0_FED7
		nop
		nop
		nop
		call	sub_0_FF8D
		jmp	short loc_0_FEE2
;����������������������������������������������������������������������������
		nop

loc_0_FED7:				; CODE XREF: sub_0_FE87+45j
		cmp	ax, 10h
		jnz	loc_0_FEE2
		nop
		nop
		nop
		call	sub_0_FF81

loc_0_FEE2:				; CODE XREF: sub_0_FE87+23j
					; sub_0_FE87+31j ...
		pop	si
		mov	ax, [si]
		add	si, ax
		pop	cx
		pop	es
		assume es:nothing
		loop	loc_0_FE99
		pop	ds
		retn
sub_0_FE87	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

PALETTE_SWITCH?	proc near		; CODE XREF: sub_0_FE87+20p
		add	si, 6
		mov	di, 0
		push	ds
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		mov	ax, PALETTESEG
		mov	es, ax
		assume es:nothing
		pop	ds
		assume ds:nothing
		lodsw
		mov	bx, ax
		test	bx, bx
		jmp	short loc_0_FF22
;����������������������������������������������������������������������������
		nop

loc_0_FF07:				; CODE XREF: PALETTE_SWITCH?+35j
		lodsb
		add	di, ax
		add	di, ax
		add	di, ax
		lodsb
		or	al, al
		jnz	loc_0_FF19
		nop
		nop
		nop
		mov	ax, 100h	; 256

loc_0_FF19:				; CODE XREF: PALETTE_SWITCH?+24j
		mov	cx, ax
		add	cx, ax
		add	cx, ax
		rep movsb
		dec	bx

loc_0_FF22:				; CODE XREF: PALETTE_SWITCH?+17j
		jnz	loc_0_FF07
		mov	bx, 0
		mov	cx, 100h
		mov	dx, 0
		push	ds
		mov	ax, seg001
		mov	ds, ax
		assume ds:seg001
		call	SETPALBIT
		pop	ds
		assume ds:nothing
		retn
PALETTE_SWITCH?	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_FF38	proc near		; CODE XREF: sub_0_FE87+2Ep
		add	si, 6
		mov	di, 0
		lodsw
		mov	dx, 140h	; 200
		mul	dx
		add	di, ax
		lodsw
		mov	bp, ax
		mov	dx, di
		xor	ah, ah

loc_0_FF4D:				; CODE XREF: sub_0_FF38+45j
		mov	di, dx
		lodsb
		mov	bl, al
		test	bl, bl
		jmp	short loc_0_FF76
;����������������������������������������������������������������������������
		nop

loc_0_FF57:				; CODE XREF: sub_0_FF38+30j
					; sub_0_FF38+3Ej
		lodsb
		add	di, ax
		lodsb
		test	al, al
		js	loc_0_FF6D
		nop
		nop
		nop
		mov	cx, ax
		rep movsb
		dec	bl
		jnz	loc_0_FF57
		jmp	short loc_0_FF78; 200
;����������������������������������������������������������������������������
		nop

loc_0_FF6D:				; CODE XREF: sub_0_FF38+25j
		neg	al
		mov	cx, ax
		lodsb
		rep stosb
		dec	bl

loc_0_FF76:				; CODE XREF: sub_0_FF38+1Cj
		jnz	loc_0_FF57

loc_0_FF78:				; CODE XREF: sub_0_FF38+32j
		add	dx, 140h	; 200
		dec	bp
		jnz	loc_0_FF4D
		retn
sub_0_FF38	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

NOTHING		proc near		; CODE XREF: sub_0_FE87+3Cp
		retn
NOTHING		endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_FF81	proc near		; CODE XREF: sub_0_FE87+58p
		add	si, 6
		mov	di, 0
		mov	cx, 7D00h
		rep movsw
		retn
sub_0_FF81	endp


;����������������������������������������������������������������������������

;		S u b r	o u t i	n e

sub_0_FF8D	proc near		; CODE XREF: sub_0_FE87+4Ap
		add	si, 6
		mov	di, 0
		mov	bp, 0C8h ; '�'
		mov	dx, di
		xor	ah, ah

loc_0_FF9A:				; CODE XREF: sub_0_FF8D+3Aj
		mov	di, dx
		lodsb
		mov	bl, al
		test	bl, bl
		jmp	short loc_0_FFC0
;����������������������������������������������������������������������������
		nop

loc_0_FFA4:				; CODE XREF: sub_0_FF8D+26j
					; sub_0_FF8D+33j
		lodsb
		test	al, al
		js	loc_0_FFB8
		nop
		nop
		nop
		mov	cx, ax
		lodsb
		rep stosb
		dec	bl
		jnz	loc_0_FFA4
		jmp	short loc_0_FFC2
;����������������������������������������������������������������������������
		nop

loc_0_FFB8:				; CODE XREF: sub_0_FF8D+1Aj
		neg	al
		mov	cx, ax
		rep movsb
		dec	bl

loc_0_FFC0:				; CODE XREF: sub_0_FF8D+14j
		jnz	loc_0_FFA4

loc_0_FFC2:				; CODE XREF: sub_0_FF8D+28j
		add	dx, 140h
		dec	bp
		jnz	loc_0_FF9A
		retn
sub_0_FF8D	endp

;����������������������������������������������������������������������������
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;

seg000		ends

;����������������������������������������������������������������������������

seg001		segment	byte public ''
		assume cs:seg001

		assume es:nothing, ss:nothing, ds:nothing
		db  77h	; w		; Cabecera
		db  61h	; a
		db  6Ch	; l
		db  74h	; t
		db  65h	; e
		db  72h	; r
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  59h	; Y
		db  57h	; W
		db  57h	; W
		db  57h	; W
		db  57h	; W
		db  57h	; W
		db  57h	; W
		db  57h	; W
		db  57h	; W
		db  88h	; �
		db  88h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
PLAYERNAME	db  43h	; C
		db  61h	; a
		db  64h	; d
		db  62h	; b
		db  79h	; y
		db  20h	;
		db  41h	; A
		db  72h	; r
		db  63h	; c
		db  68h	; h
		db  65h	; e
		db  72h	; r
		db  20h	;
		db  20h	;
		db  20h	;
		db  20h	;
		db  20h	;
		db  20h	;
		db  20h	;
		db  20h	;
		db  20h	;
		db  20h	;
		db  20h	;
		db  20h	;
		db 0FFh	; �
		db    0	;
		db    6	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db  0Dh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    7	;
		db  0Bh	;
		db  0Ah	;
		db    8	;
		db    9	;
		db  0Eh	;
		db  0Fh	;
		db  10h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db    0	;
		db    4	;
		db    0	;
		db  10h	;		; 16
		db    0	;
		db  20h	;		; 32
		db    0	;
		db  40h	; @		; 64
		db    0	;
		db  80h	; �		; 128
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    2	;
		db    0	;
		db    4	;
		db    0	;
		db    8	;
		db    0	;
		db  10h	;		; 16
		db    0	;
		db  20h	;		; 32
		db    0	;
		db  40h	; @		; 64
		db    0	;
		db  80h	; �		; 128
KEYWORD		dw 0			; DATA XREF: IS_KEY?+Br IS_KEY?+3Dw
		db    0	;
		db    0	;
		db    0	;
		db    0	;
INPUTWORD	db    0	;
		db    0	;
		db    0	;
		db    0	;
KEYNO		db    0	;
		db    0	;
MOUSEWORD	db    0	;
		db    0	;
CGA		db    0	;
		db    0	;
EGA		db    0	;
		db    0	;
MCGA		db    0	;
		db    0	;
VGA		db    0	;
		db    0	;
MOUSEFLAG	db    0	;
		db    0	;
DOSVERSION	db    0	;
		db    0	;
NAMEOFFSET	db    0	;
		db    0	;
		db    0	;
		db  10h	;		; 16
		db    0	;
		db  10h	;		; 16
		db    0	;
		db  10h	;		; 16
		db    0	;
		db  0Ch	;		; 12
		db    0	;
		db  10h	;		; 16
		db    0	;
		db    8	;
		db  90h	; �
		db    0	;
		db    0	;
		db    2	;
		db 0F0h	; �
		db    0	;
		db  40h	; @		; 64
		db    2	;
COUNTER50	dw 0			; DATA XREF: INIT_CLCK_STUFF+Bw
					; INIT_CLCK_STUFF+Fr
					; ...
SPEEDCOUNTER	dw 0			; DATA XREF: INIT_CLCK_STUFF+61w
					; INIT_CLCK_STUFF+65r
					; ...
SCFLAG		dw 0			; DATA XREF: INIT_CLCK_STUFF+75w
word_FFD_12E	dw 0			; DATA XREF: INIT_INTVEC+16w
					; INIT_CLCK_STUFF+8Fr
word_FFD_130	dw 0			; DATA XREF: INIT_INTVEC+1Aw
					; INIT_CLCK_STUFF+92w
HERTZCOUNT	dw 0			; DATA XREF: INIT_CLCK_STUFF+48w
					; INIT_CLCK_STUFF+53r
COMBATHERTZ	dw 0			; DATA XREF: INIT_CLCK_STUFF+4Cw
HERTZFLI	dw 0			; DATA XREF: INIT_CLCK_STUFF+44w
CLWCOUNT	dw 0			; DATA XREF: INIT_CLCK_STUFF+50r
CLWFLAG		db 0			; DATA XREF: INIT_CLCK_STUFF+5Cw
BRAZFLAG	db    1	;
		db    0	;
INVENTORYFLAG	db 0			; DATA XREF: JUSTICE+1E5w MUGGED+49w
		db  38h	; 8
UGPAL1		db    0	;
		db    0	;
UGPAL2		db    0	;
		db    0	;
TEXTNIBSFILE	db 'textnibs.dat',0
PALETTEFILE	db 'palettes.dat',0
MAPGFILE	db 'MAPG0009.DAT',0
MAPUFILE	db 'MAPU0009.DAT',0
MAPFFILE	db 'MAPF0009.DAT',0
WOLFFLI		db 'wolf.FLI',0
OSPANELFILE	db 'ospanels.fcb',0
OSNIGHTPANS	db 'nitpanel.fcb',0
ISPANELFILE	db 'ispanels.fcb',0
UGPANELFILE	db 'cavepans.fcb',0
UGPANELFILE2	db 'cavepan2.fcb',0
UGPANELFILE3	db 'cavepan3.fcb',0
FSPRITESFILE	db 'fsprites.fcb',0
FSPRITE2FILE	db 'fsprite2.fcb',0
SURROUNDFILE	db 'surround.fcb',0
TAPESTRYFILE	db 'tapestry.fcb',0
PUBSIGNSFILE	db 'pubsigns.fcb',0
BOATYARDFILE	db 'boat.fcb',0
SWITCHESFILE	db 'switches.fcb',0
FLIPFILE	db 'flip.fcb',0
THIEFFILE	db 'thief.fcb',0
SOLDIERSFILE	db 'soldiers.fcb',0
TEMPLEFILE	db 'temple.fcb',0
MAGICIANFILE	db 'magician.fcb',0
LOADSAVEFILE	db 'loadsave.fcb',0
STARSFILE	db 'stars.fcb',0
LABMAPFILE	db 'lab_map.fcb',0
HEALERFILE	db 'healer.fcb',0
LAND6FILE	db 'land6.fcb',0
LAND6MFILE	db 'land6m.fcb',0
ARCHMAPFILE	db 'archmap.fcb',0
LAMIABKFILE	db 'lamiabk.fcb',0
MACPICFILE	db 'macpic.fcb',0
GENIEPICFILE	db 'geniepic.fcb',0
FCMAPFILE	db 'fcmap.fcb',0
CRYPTMAPFILE	db 'cryptmap.fcb',0
ORBPICFILE	db 'orbpic.fcb',0
DEMON1FILE	db 'demon1.fcb',0
DEMON2FILE	db 'demon2.fcb',0
DIARYFILE	db 'diary.fcb',0
POSTCARDFILE	db 'postcard.fcb',0
MAINMENUFILE	db 'mainmenu.fcb',0
DAWNFILE	db 'dawn.fcb',0
DUSKFILE	db 'dusk.fcb',0
TOMBSTONEFILE	db 'tombst.fcb',0
LSCHARFILE	db 'lschar.fcb',0
COURTFILE	db 'court.fcb',0
REAPERFILE	db 'reaper.fcb',0
SPELLBOOKFILE	db 'spellboo.fcb',0
OSBGNDFILE	db 'osbgnd.fab',0
ISBGNDFILE	db 'isbgnd.fab',0
UGBGNDFILE	db 'ugbgnd.fab',0
BUSYFILE	db 'busy.fab',0
OSTILEFILE	db 'ostile.fab',0
ISGTILEFILE	db 'isgtile.fab',0
ISFTILEFILE	db 'isftile.fab',0
UGTILEFILE	db 'ugtile.fab',0
UGCTILEFILE	db 'ugctile.fab',0
S_TILE2FILE	db 's_tile2.fab',0
S_TILE1FILE	db 's_tile1.fab',0
S_TILE3FILE	db 's_tile3.fab',0
UGWTILEFILE	db 'ugwtile.fab',0
UGLTILEFILE	db 'ugltile.fab',0
S_TILE6FILE	db 's_tile6.fab',0
S_TILE7FILE	db 's_tile7.fab',0
S_TILE8FILE	db 's_tile8.fab',0
S_TILE9FILE	db 's_tile9.fab',0
S_TILE10FILE	db 's_tile10.fab',0
S_TILE11FILE	db 's_tile11.fab',0
P1FILE		db 'p1.fab',0
P2FILE		db 'p2.fab',0
aP3_fab		db 'p3.fab',0
aP4_fab		db 'p4.fab',0
aP5_fab		db 'p5.fab',0
aP6_fab		db 'p6.fab',0
aP7_fab		db 'p7.fab',0
aP8_fab		db 'p8.fab',0
aP9_fab		db 'p9.fab',0
aP10_fab	db 'p10.fab',0
aP11_fab	db 'p11.fab',0
aP12_fab	db 'p12.fab',0
aP13_fab	db 'p13.fab',0
aP14_fab	db 'p14.fab',0
aP14a_fab	db 'p14a.fab',0
aP15_fab	db 'p15.fab',0
aNoticeb_fab	db 'noticeb.fab',0
aInfowork_fab	db 'infowork.fab',0
aParch_fab	db 'parch.fab',0
aSprtest_fcb	db 'sprtest.fcb',0
aFemale_fcb	db 'female.fcb',0
aMonk_fcb	db 'monk.fcb',0
aElf_fcb	db 'elf.fcb',0
aGirl_fcb	db 'girl.fcb',0
aSatyr_fcb	db 'satyr.fcb',0
aDwarf_fcb	db 'dwarf.fcb',0
aVampire_fcb	db 'vampire.fcb',0
aWolfman_fcb	db 'wolfman.fcb',0
aTrollspr_fcb	db 'trollspr.fcb',0
aJester_fcb	db 'jester.fcb',0
aGoblin_fcb	db 'goblin.fcb',0
aSatyrbig_fcb	db 'satyrbig.fcb',0
aCyclops_fcb	db 'cyclops.fcb',0
aMinotaur_fcb	db 'minotaur.fcb',0
aGorgon_fcb	db 'gorgon.fcb',0
aSpider_fcb	db 'spider.fcb',0
aBat_fcb	db 'bat.fcb',0
aLizard_fcb	db 'lizard.fcb',0
aZombie_fcb	db 'zombie.fcb',0
aDragon_fcb	db 'dragon.fcb',0
aGhost_fcb	db 'ghost.fcb',0
aAcolyte_fcb	db 'acolyte.fcb',0
aLamia_fcb	db 'lamia.fcb',0
aMummy_fcb	db 'mummy.fcb',0
aWilf_fcb	db 'wilf.fcb',0
aBear_fcb	db 'bear.fcb',0
aSpideru_fcb	db 'spideru.fcb',0
aBodygard_fcb	db 'bodygard.fcb',0
aGuild01_fab	db 'guild01.fab',0
aTable_fcb	db 'table.fcb',0
aRacetabl_fcb	db 'racetabl.fcb',0
aH00_fab	db 'h00.fab',0
aH01_fab	db 'h01.fab',0
aH02_fab	db 'h02.fab',0
aH03_fab	db 'h03.fab',0
aH04_fab	db 'h04.fab',0
aH05_fab	db 'h05.fab',0
aH06_fab	db 'h06.fab',0
aH07_fab	db 'h07.fab',0
aH08_fab	db 'h08.fab',0
aH09_fab	db 'h09.fab',0
aH10_fab	db 'h10.fab',0
aH11_fab	db 'h11.fab',0
aH12_fab	db 'h12.fab',0
aH13_fab	db 'h13.fab',0
aH14_fab	db 'h14.fab',0
aH15_fab	db 'h15.fab',0
aH16_fab	db 'h16.fab',0
aH17_fab	db 'h17.fab',0
aH18_fab	db 'h18.fab',0
aH19_fab	db 'h19.fab',0
aH20_fab	db 'h20.fab',0
aH21_fab	db 'h21.fab',0
aH22_fab	db 'h22.fab',0
aH23_fab	db 'h23.fab',0
aH24_fab	db 'h24.fab',0
aH25_fab	db 'h25.fab',0
aH26_fab	db 'h26.fab',0
aH27_fab	db 'h27.fab',0
aH28_fab	db 'h28.fab',0
aH29_fab	db 'h29.fab',0
aH30_fab	db 'h30.fab',0
aH31_fab	db 'h31.fab',0
aH32_fab	db 'h32.fab',0
aH33_fab	db 'h33.fab',0
aH34_fab	db 'h34.fab',0
aH35_fab	db 'h35.fab',0
aH36_fab	db 'h36.fab',0
aH37_fab	db 'h37.fab',0
aH38_fab	db 'h38.fab',0
aH39_fab	db 'h39.fab',0
aM01_fab	db 'm01.fab',0
aM02_fab	db 'm02.fab',0
aM03_fab	db 'm03.fab',0
aM04_fab	db 'm04.fab',0
aM05_fab	db 'm05.fab',0
aM06_fab	db 'm06.fab',0
aM07_fab	db 'm07.fab',0
aM08_fab	db 'm08.fab',0
aBuysell_fab	db 'buysell.fab',0
aShopbord_fab	db 'shopbord.fab',0
aN00_fab	db 'n00.fab',0
aN01_fab	db 'n01.fab',0
aN02_fab	db 'n02.fab',0
aN03_fab	db 'n03.fab',0
aN04_fab	db 'n04.fab',0
aN05_fab	db 'n05.fab',0
aN06_fab	db 'n06.fab',0
aN07_fab	db 'n07.fab',0
aN08_fab	db 'n08.fab',0
aN09_fab	db 'n09.fab',0
aN10_fab	db 'n10.fab',0
aN11_fab	db 'n11.fab',0
aN12_fab	db 'n12.fab',0
aN13_fab	db 'n13.fab',0
aN14_fab	db 'n14.fab',0
aN15_fab	db 'n15.fab',0
aN16_fab	db 'n16.fab',0
aN17_fab	db 'n17.fab',0
aN18_fab	db 'n18.fab',0
aN19_fab	db 'n19.fab',0
aN20_fab	db 'n20.fab',0
aN21_fab	db 'n21.fab',0
aN22_fab	db 'n22.fab',0
aN23_fab	db 'n23.fab',0
aN24_fab	db 'n24.fab',0
aN25_fab	db 'n25.fab',0
aN26_fab	db 'n26.fab',0
aN27_fab	db 'n27.fab',0
aN28Fab		db 'n28,fab',0
aN29Fab		db 'n29,fab',0
aN30Fab		db 'n30,fab',0
aN31Fab		db 'n31,fab',0
aN32Fab		db 'n32,fab',0
aN33Fab		db 'n33,fab',0
aN34Fab		db 'n34,fab',0
aStart_dat	db 'start.dat',0
aGtdes		db 'gtdes',0
aGtquit		db 'gtquit',0
aGttitle	db 'gttitle',0
aGtexp		db 'gtexp',0
		db    8	;
		db    5	;
		db  14h	;
		db    5	;
		db    8	;
		db    5	;
		db  1Fh	;
		db    5	;
		db  28h	; (
		db    5	;
		db  30h	; 0
		db    5	;
		db  39h	; 9
		db    5	;
		db  43h	; C
		db    5	;
		db  4Dh	; M
		db    5	;
		db  59h	; Y
		db    5	;
		db  65h	; e
		db    5	;
		db  72h	; r
		db    5	;
		db  7Dh	; }
		db    5	;
		db  88h	; �
		db    5	;
		db  95h	; �
		db    5	;
		db 0A1h	; �
		db    5	;
		db 0AEh	; �
		db    5	;
		db 0B9h	; �
		db    5	;
		db 0C4h	; �
		db    5	;
		db 0CCh	; �
		db    5	;
		db 0D7h	; �
		db    5	;
		db 0E2h	; �
		db    5	;
		db 0EDh	; �
		db    5	;
		db 0F7h	; �
		db    5	;
		db    3	;
		db    6	;
		db  0Dh	;
		db    6	;
		db  17h	;
		db    6	;
		db  20h	;
		db    6	;
		db  29h	; )
		db    6	;
		db  35h	; 5
		db    6	;
CHARSPRITESIN	db 0FFh	; �
		db 0FFh	; �
byte_FFD_979	db 0FFh			; DATA XREF: MAKECHAR+2Fr MAKECHAR+43r
					; ...
byte_FFD_97A	db 0FFh			; DATA XREF: MAKEREGULARS+88r
OLDCSIN		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
aLov1_1_sav	db 'lov1_1.sav',0
aLov1_2_sav	db 'lov1_2.sav',0
aLov1_3_sav	db 'lov1_3.sav',0
aLov1_4_sav	db 'lov1_4.sav',0
aLov1_5_sav	db 'lov1_5.sav',0
aLov1_6_sav	db 'lov1_6.sav',0
aLov1_7_sav	db 'lov1_7.sav',0
aLov1_8_sav	db 'lov1_8.sav',0
aFace_bbm	db 'face.bbm',0
CHARNO		db  10h	;
		db    0	;
aChar01_dat	db 'char01.dat',0
aChar02_dat	db 'char02.dat',0
aChar03_dat	db 'char03.dat',0
aChar04_dat	db 'char04.dat',0
aChar05_dat	db 'char05.dat',0
aChar06_dat	db 'char06.dat',0
aChar07_dat	db 'char07.dat',0
aChar08_dat	db 'char08.dat',0
aChar09_dat	db 'char09.dat',0
aChar10_dat	db 'char10.dat',0
aChar11_dat	db 'char11.dat',0
aChar12_dat	db 'char12.dat',0
aChar13_dat	db 'char13.dat',0
aChar14_dat	db 'char14.dat',0
aChar15_dat	db 'char15.dat',0
aChar16_dat	db 'char16.dat',0
aChar00_dat	db 'char00.dat',0
		db  17h	;
		db  0Ch	;
		db    0	;
		db  19h	;
		db  0Eh	;
		db    0	;
		db  1Ch	;
		db  10h	;
		db    2	;
		db  1Fh	;
		db  12h	;
		db    4	;
		db  21h	; !
		db  14h	;
		db    6	;
		db  24h	; $
		db  17h	;
		db    9	;
		db  0Eh	;
		db    4	;
		db    0	;
		db  15h	;
		db    8	;
		db    0	;
		db  1Ch	;
		db  0Ch	;
		db    0	;
		db  22h	; "
		db  10h	;
		db    0	;
		db  28h	; (
		db  16h	;
		db    4	;
		db  2Eh	; .
		db  1Ch	;
		db  0Ah	;
		db  31h	; 1
		db  22h	; "
		db  10h	;
		db  34h	; 4
		db  28h	; (
		db  16h	;
		db  3Dh	; =
		db  2Ch	; ,
		db  1Ah	;
		db  3Fh	; ?
		db  2Eh	; .
		db  21h	; !
HEROX		dw 0			; DATA XREF: JUSTICE+9Fw JUSTICE+12Cw
					; ...
HEROY		dw 0			; DATA XREF: JUSTICE+A3w JUSTICE+130w
					; ...
THETA		dw 0
PLAYERSEED	dw 1234h		; DATA XREF: MAKEREGULARS+2C8r
word_FFD_AD5	dw 0			; DATA XREF: seg000:B457r
SINTHETA	dw 0			; DATA XREF: FINDRADIUS+18r
COSTHETA	dw 0			; DATA XREF: FINDRADIUS+Fr
HEROADD		dw 0			; DATA XREF: MAKEREGULARSr
					; MAKEREGULARS+280r ...
LEVEL		dw 0			; DATA XREF: COLLISIONS+10Er
					; MAKECHAR+B6r	...
DRESS		dw 5			; DATA XREF: START+1E1w
PLAYER_ATTVAL	dw 2			; DATA XREF: ATTACKr
PLAYER_DEFVAL	dw 2			; DATA XREF: START+1D7w ATTACK+3r
		db  6Eh	; n
		db    0	;
PLAYERSEX	dw 1			; DATA XREF: START+20Aw
		db    0	;
		db    0	;
		db    0	;
TIMEON		db 1			; DATA XREF: INIT_CLCK_STUFF+23r
					; COMBATw
TIMEFLAG	db 0
SECONDS		dw 0			; DATA XREF: INIT_CLCK_STUFF+33w
					; INIT_CLCK_STUFF+37r
HOURS		dw 8			; DATA XREF: seg000:B67Fr MAKEREGULARS+4Cr
					; ...
DAYS		dw 0
YEAR		dw 0
SECCOUNT	db 0			; DATA XREF: INIT_CLCK_STUFF+1Fw
		db    0	;
NOOSEC		dw 0			; DATA XREF: INIT_CLCK_STUFF+2Dw
ACTIVEPANS	db 0FFh			; DATA XREF: JUSTICE+17Ew
		db  11h	;
		db    0	;
COMMCARRIES	db  0Ah	;
		db    8	;
		db    5	;
		db    2	;
		db    3	;
		db    3	;
COMMBASKETS	db  0Fh	;
		db  10h	;
		db  0Ah	;
		db    5	;
		db    6	;
		db    6	;
CASHMAX		db  0Fh	;
		db  27h	; '
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
POSITIONS	db    0	;		; POSESSIONS
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
CASH		dw 96h			; DATA XREF: START+1F4w JUSTICE+58r
					; ...
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
COMMODITY1	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
OBJECT1		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
OBJECT2		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
OBJECT3		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
OBJECT4		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
OBJECT5		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
OBJECT6		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
ROOMSBOOKED	db 0			; DATA XREF: MIDNIGHT+95w MIDNIGHT+99r
					; ...
RIGHTHAND	dw 0			; DATA XREF: ROBBEDOBJ+Fr ROBBEDOBJ+1Bw
					; ...
ATTAINMENTS	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
RESIGNATIONS	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
ACCOUNTS	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
CONFLICTS	db  88h	; �
		db    0	;
		db  91h	; �
		db    0	;
		db  45h	; E
		db    0	;
		db  42h	; B
		db    0	;
		db    1	;
		db    0	;
		db  2Ch	; ,
		db    0	;
		db  23h	; #
		db    0	;
		db  31h	; 1
		db    0	;
		db  22h	; "
		db    0	;
THRESHOLDS	db  21h	; !
		db    9	;
		db    0	;
		db    0	;
		db  2Ch	; ,
		db    9	;
		db    1	;
		db    0	;
		db  2Eh	; .
		db    7	;
		db    1	;
		db    0	;
		db  2Eh	; .
		db  0Bh	;
		db    1	;
		db    0	;
		db  30h	; 0
		db    9	;
		db    1	;
		db    0	;
		db  4Fh	; O
		db    6	;
		db    2	;
		db    0	;
		db  4Ch	; L
		db  2Ch	; ,
		db    3	;
		db    0	;
		db  51h	; Q
		db  2Fh	; /
		db    3	;
		db    0	;
		db    7	;
		db    7	;
		db    6	;
		db    0	;
		db  1Dh	;
		db  0Dh	;
		db    7	;
		db    0	;
		db  17h	;
		db  0Dh	;
		db    7	;
		db    0	;
		db  17h	;
		db  1Ch	;
		db    9	;
		db    0	;
		db  30h	; 0
		db  1Fh	;
		db    9	;
		db    0	;
		db  3Bh	; ;
		db  1Dh	;
		db    9	;
		db    0	;
		db  21h	; !
		db  2Dh	; -
		db    8	;
		db    0	;
		db  4Ah	; J
		db  3Ah	; :
		db    8	;
		db    0	;
		db  45h	; E
		db  39h	; 9
		db    8	;
		db    0	;
		db  32h	; 2
		db  54h	; T
		db    9	;
		db    0	;
		db  4Dh	; M
		db  5Bh	; [
		db    8	;
		db    0	;
		db  50h	; P
		db  58h	; X
		db    8	;
		db    0	;
		db  40h	; @
		db  71h	; q
		db    8	;
		db    0	;
		db  19h	;
		db  6Dh	; m
		db    8	;
		db    0	;
		db  1Dh	;
		db    9	;
		db  0Ah	;
		db    0	;
		db  0Ah	;
		db  15h	;
		db  0Bh	;
		db    0	;
		db  39h	; 9
		db  25h	; %
		db  0Ch	;
		db    0	;
		db  3Ah	; :
		db  24h	; $
		db  0Ch	;
		db    0	;
		db  3Eh	; >
		db  44h	; D
		db  0Dh	;
		db    0	;
		db    6	;
		db  49h	; I
		db  0Eh	;
		db    0	;
		db  12h	;
		db  65h	; e
		db  0Fh	;
		db    0	;
		db  10h	;
		db  67h	; g
		db  0Fh	;
		db    0	;
		db  14h	;
		db  67h	; g
		db  0Fh	;
		db    0	;
		db  4Bh	; K
		db  77h	; w
		db  10h	;
		db    0	;
		db  27h	; '
		db  73h	; s
		db  11h	;
		db    0	;
		db  36h	; 6
		db  15h	;
		db    4	;
		db    0	;
		db  18h	;
		db  20h	;
		db  12h	;
		db    0	;
		db  52h	; R
		db  23h	; #
		db  12h	;
		db    0	;
		db  23h	; #
		db  30h	; 0
		db  12h	;
		db    0	;
		db  4Dh	; M
		db  39h	; 9
		db  13h	;
		db    0	;
		db  10h	;
		db  43h	; C
		db  12h	;
		db    0	;
		db  13h	;
		db  4Eh	; N
		db  12h	;
		db    0	;
		db  30h	; 0
		db  4Fh	; O
		db  12h	;
		db    0	;
		db  2Dh	; -
		db  54h	; T
		db  12h	;
		db    0	;
		db  1Dh	;
		db  77h	; w
		db  12h	;
		db    0	;
		db  1Ah	;
		db  7Bh	; {
		db  12h	;
		db    0	;
		db  3Fh	; ?
		db  65h	; e
		db  12h	;
		db    0	;
		db  3Ah	; :
		db  6Ah	; j
		db  12h	;
		db    0	;
		db  39h	; 9
		db  78h	; x
		db    5	;
		db    0	;
		db  3Ah	; :
		db  78h	; x
		db    5	;
		db    0	;
		db  26h	; &
		db  13h	;
		db  14h	;
		db    0	;
		db  26h	; &
		db  18h	;
		db  14h	;
		db    0	;
		db  23h	; #
		db  13h	;
		db  14h	;
		db    0	;
		db  34h	; 4
		db  5Fh	; _
		db  15h	;
		db    0	;
		db  52h	; R
		db  2Fh	; /
		db  16h	;
		db    0	;
		db  53h	; S
		db  33h	; 3
		db  16h	;
		db    0	;
		db  0Bh	;
		db  43h	; C
		db  17h	;
		db    0	;
		db  0Ch	;
		db  3Dh	; =
		db  17h	;
		db    0	;
		db  38h	; 8
		db  67h	; g
		db  18h	;
		db    0	;
		db  3Dh	; =
		db  0Ah	;
		db  19h	;
		db    0	;
		db  23h	; #
		db  38h	; 8
		db  1Ah	;
		db    0	;
		db    9	;
		db  62h	; b
		db  1Bh	;
		db    0	;
		db  47h	; G
		db  56h	; V
		db  1Ch	;
		db    0	;
		db  47h	; G
		db  57h	; W
		db  1Ch	;
		db    0	;
		db  4Fh	; O
		db    6	;
		db  1Dh	;
		db    0	;
		db  35h	; 5
		db    3	;
		db  1Eh	;
		db    0	;
		db    5	;
		db  3Fh	; ?
		db  1Fh	;
		db    0	;
		db  39h	; 9
		db  6Dh	; m
		db  20h	;
		db    0	;
		db  1Ah	;
		db  75h	; u
		db  21h	; !
		db    0	;
		db  46h	; F
		db  18h	;
		db  22h	; "
		db    0	;
		db  2Eh	; .
		db  26h	; &
		db  23h	; #
		db    0	;
		db  0Bh	;
		db  37h	; 7
		db  24h	; $
		db    0	;
		db  0Dh	;
		db  37h	; 7
		db  24h	; $
		db    0	;
		db  4Ch	; L
		db  36h	; 6
		db  24h	; $
		db    0	;
		db  4Dh	; M
		db  35h	; 5
		db  24h	; $
		db    0	;
		db  12h	;
		db  31h	; 1
		db  25h	; %
		db    0	;
		db  41h	; A
		db  77h	; w
		db  25h	; %
		db    0	;
		db    5	;
		db  6Fh	; o
		db  25h	; %
		db    0	;
		db  36h	; 6
		db  20h	;
		db  25h	; %
		db    0	;
		db  4Bh	; K
		db  66h	; f
		db  26h	; &
		db    0	;
		db  4Ch	; L
		db  64h	; d
		db  26h	; &
		db    0	;
		db  25h	; %
		db  5Ah	; Z
		db  26h	; &
		db    0	;
		db  1Dh	;
		db  5Fh	; _
		db  27h	; '
		db    0	;
		db  22h	; "
		db  26h	; &
		db  28h	; (
		db    0	;
		db  23h	; #
		db  27h	; '
		db  28h	; (
		db    0	;
		db  31h	; 1
		db  34h	; 4
		db  29h	; )
		db    0	;
		db  38h	; 8
		db  52h	; R
		db  29h	; )
		db    0	;
		db  0Fh	;
		db  2Ch	; ,
		db  2Ah	; *
		db    0	;
		db  13h	;
		db  2Bh	; +
		db  2Bh	; +
		db    0	;
		db    7	;
		db  2Eh	; .
		db  2Bh	; +
		db    0	;
		db    9	;
		db  2Eh	; .
		db  2Bh	; +
		db    0	;
		db  0Bh	;
		db  2Eh	; .
		db  2Bh	; +
		db    0	;
		db  33h	; 3
		db  4Ch	; L
		db  2Ch	; ,
		db    0	;
		db  16h	;
		db  1Ah	;
		db  2Ch	; ,
		db    0	;
		db  1Dh	;
		db  6Ah	; j
		db  2Dh	; -
		db    0	;
		db  22h	; "
		db  44h	; D
		db  2Eh	; .
		db    0	;
		db  52h	; R
		db  3Bh	; ;
		db  2Fh	; /
		db    0	;
		db  52h	; R
		db  36h	; 6
		db  2Fh	; /
		db    0	;
		db  53h	; S
		db  34h	; 4
		db  2Fh	; /
		db    0	;
		db  10h	;
		db  0Eh	;
		db  2Fh	; /
		db    0	;
		db    4	;
		db    5	;
		db  2Fh	; /
		db    0	;
		db  22h	; "
		db  1Ch	;
		db  30h	; 0
		db    0	;
		db  15h	;
		db  4Bh	; K
		db  31h	; 1
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db  32h	; 2
		db    0	;
		db  17h	;
		db  28h	; (
		db  33h	; 3
		db    0	;
		db    2	;
		db  57h	; W
		db  34h	; 4
		db    0	;
		db  28h	; (
		db  44h	; D
		db  35h	; 5
		db    0	;
		db  4Fh	; O
		db  4Dh	; M
		db  36h	; 6
		db    0	;
		db  4Dh	; M
		db  4Eh	; N
		db  36h	; 6
		db    0	;
		db  39h	; 9
		db  48h	; H
		db  37h	; 7
		db    0	;
		db  3Ah	; :
		db  4Eh	; N
		db  37h	; 7
		db    0	;
		db    2	;
		db  5Ch	; \
		db  38h	; 8
		db    0	;
		db  47h	; G
		db  2Bh	; +
		db  38h	; 8
		db    0	;
		db  37h	; 7
		db  7Ch	; |
		db  39h	; 9
		db    0	;
		db  0Eh	;
		db  72h	; r
		db  3Ah	; :
		db    0	;
		db  0Ch	;
		db  73h	; s
		db  3Ah	; :
		db    0	;
		db    9	;
		db  76h	; v
		db  3Ah	; :
		db    0	;
		db  52h	; R
		db  61h	; a
		db  3Ah	; :
		db    0	;
		db  2Ch	; ,
		db  7Ch	; |
		db  3Bh	; ;
		db    0	;
		db  37h	; 7
		db  77h	; w
		db  3Ch	; <
		db    0	;
		db  44h	; D
		db  77h	; w
		db  3Ch	; <
		db    0	;
		db  0Ah	;
		db  7Dh	; }
		db  3Dh	; =
		db    0	;
		db    3	;
		db  77h	; w
		db  3Eh	; >
		db    0	;
		db  0Dh	;
		db  14h	;
		db  3Fh	; ?
		db    0	;
		db  41h	; A
		db  49h	; I
		db  40h	; @
		db    0	;
		db  18h	;
		db  1Eh	;
		db  41h	; A
		db    0	;
		db  0Ah	;
		db  1Eh	;
		db  42h	; B
		db    0	;
		db  33h	; 3
		db  3Dh	; =
		db  43h	; C
		db    0	;
		db  30h	; 0
		db  3Dh	; =
		db  44h	; D
		db    0	;
		db  16h	;
		db  15h	;
		db  45h	; E
		db    0	;
		db  0Ah	;
		db  6Ch	; l
		db  46h	; F
		db    0	;
		db    4	;
		db  6Bh	; k
		db  46h	; F
		db    0	;
		db    6	;
		db  64h	; d
		db  47h	; G
		db    0	;
		db  18h	;
		db  30h	; 0
		db  48h	; H
		db    0	;
		db    4	;
		db  30h	; 0
		db  49h	; I
		db    0	;
		db  3Eh	; >
		db  12h	;
		db  4Ah	; J
		db    0	;
		db  2Fh	; /
		db  58h	; X
		db  4Bh	; K
		db    0	;
		db  37h	; 7
		db  31h	; 1
		db  4Ch	; L
		db 0FFh	; �
		db  46h	; F
		db  1Eh	;
		db  4Dh	; M
		db    0	;
		db  47h	; G
		db  20h	;
		db  4Eh	; N
		db 0FFh	; �
		db  53h	; S
		db  47h	; G
		db  4Fh	; O
		db 0FFh	; �
		db  52h	; R
		db  47h	; G
		db  4Fh	; O
		db 0FFh	; �
		db  51h	; Q
		db  47h	; G
		db  50h	; P
		db 0FFh	; �
		db  4Fh	; O
		db  48h	; H
		db  50h	; P
		db 0FFh	; �
		db  4Eh	; N
		db  48h	; H
		db  51h	; Q
		db 0FFh	; �
		db  4Dh	; M
		db  48h	; H
		db  51h	; Q
		db 0FFh	; �
		db  50h	; P
		db  4Ah	; J
		db  52h	; R
		db 0FFh	; �
		db  53h	; S
		db  48h	; H
		db  52h	; R
		db 0FFh	; �
		db  4Dh	; M
		db  49h	; I
		db  53h	; S
		db 0FFh	; �
		db  4Dh	; M
		db  4Ah	; J
		db  53h	; S
		db 0FFh	; �
		db  50h	; P
		db  4Bh	; K
		db  54h	; T
		db 0FFh	; �
		db  4Eh	; N
		db  4Bh	; K
		db  54h	; T
		db 0FFh	; �
		db  2Bh	; +
		db  15h	;
		db  55h	; U
		db    0	;
		db    4	;
		db  37h	; 7
		db  56h	; V
		db    0	;
		db  4Ch	; L
		db  20h	;
		db  57h	; W
		db 0FFh	; �
		db  3Bh	; ;
		db  45h	; E
		db  58h	; X
		db 0FFh	; �
		db  34h	; 4
		db  45h	; E
		db  59h	; Y
		db 0FFh	; �
		db  22h	; "
		db  2Dh	; -
		db  5Ah	; Z
		db 0FFh	; �
		db  29h	; )
		db  36h	; 6
		db  1Ah	;
		db    0	;
		db  30h	; 0
		db  38h	; 8
		db  5Bh	; [
		db    0	;
		db  2Ch	; ,
		db  71h	; q
		db  5Ch	; \
		db    0	;
		db  13h	;
		db  76h	; v
		db  5Dh	; ]
		db 0FFh	; �
		db  1Fh	;
		db    2	;
		db  5Eh	; ^
		db 0FFh	; �
		db  18h	;
		db  24h	; $
		db  5Fh	; _
		db    0	;
		db  0Ch	;
		db  24h	; $
		db  5Fh	; _
		db    0	;
		db  0Ch	;
		db  41h	; A
		db  60h	; `
		db    0	;
		db  0Ch	;
		db  3Eh	; >
		db  60h	; `
		db    0	;
		db  4Dh	; M
		db  30h	; 0
		db  61h	; a
		db    1	;
		db  0Bh	;
		db  47h	; G
		db  62h	; b
		db 0FFh	; �
		db  0Ch	;
		db  48h	; H
		db  62h	; b
		db 0FFh	; �
		db  52h	; R
		db  1Fh	;
		db  26h	; &
		db    0	;
		db  29h	; )
		db  62h	; b
		db  63h	; c
		db    0	;
		db  23h	; #
		db  18h	;
		db  64h	; d
		db    1	;
		db  30h	; 0
		db  5Fh	; _
		db  65h	; e
		db    1	;
		db  31h	; 1
		db  60h	; `
		db  65h	; e
		db    1	;
		db  51h	; Q
		db  31h	; 1
		db  66h	; f
		db    1	;
		db  0Ch	;
		db  3Bh	; ;
		db  67h	; g
		db    1	;
		db  34h	; 4
		db  66h	; f
		db  68h	; h
		db    1	;
		db  3Ah	; :
		db    6	;
		db  69h	; i
		db    0	;
		db  22h	; "
		db  33h	; 3
		db  6Ah	; j
		db    0	;
		db    9	;
		db  60h	; `
		db  6Bh	; k
		db    1	;
		db  4Bh	; K
		db  51h	; Q
		db  6Ah	; j
		db    0	;
		db  39h	; 9
		db  5Ch	; \
		db  6Ch	; l
		db    1	;
		db  38h	; 8
		db  60h	; `
		db  6Ch	; l
		db    1	;
		db  49h	; I
		db    7	;
		db  6Dh	; m
		db    0	;
		db  44h	; D
		db  69h	; i
		db  6Eh	; n
		db    0	;
		db  44h	; D
		db  6Fh	; o
		db  6Eh	; n
		db    0	;
		db  3Bh	; ;
		db  6Ah	; j
		db  6Fh	; o
		db 0FFh	; �
		db  12h	;
		db  40h	; @
		db  70h	; p
		db    0	;
		db  13h	;
		db  3Fh	; ?
		db  70h	; p
		db    0	;
		db  29h	; )
		db  1Fh	;
		db  71h	; q
		db 0FFh	; �
		db  49h	; I
		db    3	;
		db  3Ah	; :
		db    0	;
		db  1Eh	;
		db  7Eh	; ~
		db  72h	; r
		db    0	;
		db  20h	;
		db  78h	; x
		db  72h	; r
		db    0	;
		db  46h	; F
		db  67h	; g
		db  73h	; s
		db    0	;
		db  45h	; E
		db  66h	; f
		db  73h	; s
		db    0	;
		db  44h	; D
		db  66h	; f
		db  73h	; s
		db    0	;
		db  43h	; C
		db  66h	; f
		db  73h	; s
		db    0	;
		db  42h	; B
		db  67h	; g
		db  73h	; s
		db    0	;
		db  17h	;
		db  7Ch	; |
		db  74h	; t
		db    0	;
		db  4Eh	; N
		db  2Ah	; *
		db  75h	; u
		db 0FFh	; �
		db  41h	; A
		db  2Ah	; *
		db  76h	; v
		db 0FFh	; �
		db  50h	; P
		db  2Ah	; *
		db  77h	; w
		db 0FFh	; �
		db  4Dh	; M
		db  3Dh	; =
		db  78h	; x
		db    0	;
		db  0Bh	;
		db  24h	; $
		db  79h	; y
		db    0	;
		db  23h	; #
		db  39h	; 9
		db  73h	; s
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
CAVES2		db  31h	; 1
		db  2Fh	; /
		db  28h	; (
		db  79h	; y
		db  22h	; "
		db  7Ah	; z
		db  22h	; "
		db  7Ch	; |
		db  22h	; "
		db  7Eh	; ~
		db  38h	; 8
		db  67h	; g
		db  35h	; 5
		db  6Dh	; m
		db  3Dh	; =
		db  5Ah	; Z
CAVES3		db  3Fh	; ?
		db  5Ah	; Z
		db  50h	; P
		db  49h	; I
		db  3Bh	; ;
		db  45h	; E
		db  4Bh	; K
		db  42h	; B
		db 0FFh	; �
		db 0FFh	; �
		db  78h	; x
		db  56h	; V
		db  34h	; 4
		db  12h	;
VARSTRING	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
WHEREDIST	db 0D2h	; �
		db    4	;
RELDIRNWD	db  7Dh	; }
		db    2	;
RELDIRN		db  3Fh	; ?
		db  0Fh	;
		db  20h	;
		db  76h	; v
		db  61h	; a
		db  72h	; r
		db  61h	; a
		db  73h	; s
		db  20h	;
		db  7Bh	; {
		db    2	;
		db    0	;
		db 0FFh	; �
DUNNO		db  7Bh	; {
		db    5	;
DUNNOSTRNO	db    0	;
		db 0FFh	; �
SNUBBER		db  7Bh	; {
		db    6	;
SNUBNO		db    0	;
		db 0FFh	; �
SNUBFACTOR	db    0	;
TIMESTRING	db  7Bh	; {
		db    4	;
HALFHOUR	db    0	;
		db 0FFh	; �
DAYSTRING	db  7Bh	; {
		db    3	;
DAYPOINTER	db 0			; DATA XREF: sub_0_BA48+4Dr
					; sub_0_BA48+57r ...
		db 0FFh	; �
NO_FORENAMES	db 1Bh			; DATA XREF: seg000:B4D0r
NO_SURNAMES	db 2Ah			; DATA XREF: seg000:B4F3r
NO_TRADES	db 1Bh			; DATA XREF: seg000:B548r
CREDITS		db    0	;
		db    0	;
ARRESTED	dw 0			; DATA XREF: JUSTICE+28w JUSTICE+32r
					; ...
SENTENCES	db  0Ah	;
		db    0	;
		db    2	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    2	;
		db    0	;
		db  14h	;
		db    0	;
		db    1	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    1	;
		db    0	;
		db  28h	; (
		db    0	;
		db    2	;
		db    0	;
		db  1Eh	;
		db    0	;
		db    1	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    1	;
		db    0	;
		db  14h	;
		db    0	;
		db    1	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    1	;
		db    0	;
		db 0E8h	; �
		db    3	;
		db    1	;
		db    0	;
		db  14h	;
		db    0	;
		db    2	;
		db    0	;
		db 0C8h	; �
		db    0	;
		db    2	;
		db    0	;
PRISONS		db  49h	; I
		db    6	;
		db  49h	; I
		db    3	;
		db 0FFh	; �
		db 0FFh	; �
		db  49h	; I
		db    9	;
		db  49h	; I
		db  0Ah	;
		db 0FFh	; �
		db 0FFh	; �
		db  4Ch	; L
		db    9	;
		db  4Ch	; L
		db  0Ah	;
		db 0FFh	; �
		db 0FFh	; �
		db  39h	; 9
		db    6	;
		db  3Ah	; :
		db    6	;
		db 0FFh	; �
		db 0FFh	; �
		db  39h	; 9
		db    8	;
		db  3Ah	; :
		db    7	;
		db 0FFh	; �
		db 0FFh	; �
		db  38h	; 8
		db  0Ch	;
		db  38h	; 8
		db  0Dh	;
		db 0FFh	; �
		db 0FFh	; �
		db    4	;
		db  3Eh	; >
		db    9	;
		db  3Fh	; ?
		db 0FFh	; �
		db 0FFh	; �
		db    4	;
		db  3Eh	; >
		db    9	;
		db  40h	; @
		db 0FFh	; �
		db 0FFh	; �
		db    4	;
		db  3Eh	; >
		db    9	;
		db  42h	; B
		db 0FFh	; �
		db 0FFh	; �
		db  3Dh	; =
		db  6Ah	; j
		db  3Ch	; <
		db  68h	; h
		db 0FFh	; �
		db 0FFh	; �
		db  3Fh	; ?
		db  6Ah	; j
		db  3Fh	; ?
		db  67h	; g
		db 0FFh	; �
		db 0FFh	; �
		db  3Dh	; =
		db  6Bh	; k
		db  3Dh	; =
		db  6Dh	; m
		db 0FFh	; �
		db 0FFh	; �
		db  40h	; @
		db  6Bh	; k
		db  40h	; @
		db  6Ch	; l
		db 0FFh	; �
		db 0FFh	; �
		db  15h	;
		db  77h	; w
		db  14h	;
		db  78h	; x
		db    0	;
		db    0	;
		db  17h	;
		db  77h	; w
		db  16h	;
		db  78h	; x
		db    0	;
		db    0	;
		db  19h	;
		db  77h	; w
		db  18h	;
		db  78h	; x
		db    0	;
		db    0	;
WHICHJAIL	db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    2	;
		db    2	;
		db    2	;
		db    3	;
		db    3	;
		db    3	;
		db    3	;
		db    4	;
		db    4	;
		db    4	;
COURTRMFCS	dw 1847h		; DATA XREF: JUSTICE+93r
PRISONTERM	dw 0			; DATA XREF: JUSTICE+117w JUSTICE+159r
					; ...
PRISONDOOR	dw 0			; DATA XREF: JUSTICE+111w
		db    0	;
		db    0	;
word_FFD_1010	dw 0
word_FFD_1012	dw 0
GLOADFLAG	db    0	;
		db    0	;
		db  14h	;
		db    0	;
		db 0A0h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  20h	;
		db    0	;
		db    1	;
		db    0	;
		db  64h	; d
		db    0	;
		db 0A0h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  20h	;
		db    0	;
		db    2	;
		db    0	;
		db 0B4h	; �
		db    0	;
		db 0A0h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  20h	;
		db    0	;
		db    3	;
		db    0	;
		db    4	;
		db    1	;
		db 0ABh	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  14h	;
		db    0	;
		db    4	;
		db    0	;
		db 0C8h	; �
		db    0	;
		db  52h	; R
		db    0	;
		db  10h	;
		db    0	;
		db  16h	;
		db    0	;
		db    5	;
		db    0	;
		db  14h	;
		db    0	;
		db  74h	; t
		db    0	;
		db  40h	; @
		db    0	;
		db  20h	;
		db    0	;
		db    6	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
TRANSWEAPON	db  7Bh	; {
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  20h	;
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    5	;
		db    0	;
		db    2	;
		db    2	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    5	;
		db    0	;
		db    3	;
		db    3	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    5	;
		db    0	;
		db    4	;
		db    4	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    5	;
		db    0	;
		db    5	;
		db    5	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db  7Bh	; {
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    5	;
		db    0	;
		db    6	;
		db    6	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    5	;
		db    0	;
		db    7	;
		db    7	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db  7Bh	; {
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    5	;
		db    0	;
		db    8	;
		db    8	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  7Bh	; {
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db    9	;
		db    9	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  70h	; p
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db  0Ah	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  80h	; �
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  0Bh	;
		db  0Bh	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  67h	; g
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db  0Ch	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db  67h	; g
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  0Dh	;
		db  0Dh	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db  67h	; g
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    6	;
		db    0	;
		db    0	;
		db    0	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db  0Eh	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db  7Bh	; {
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    2	;
		db    0	;
		db    0	;
		db  0Fh	;
		db  0Fh	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db    1	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  10h	;
		db  10h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  30h	; 0
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  11h	;
		db  11h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db  7Bh	; {
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  12h	;
		db  12h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db  7Bh	; {
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  13h	;
		db  13h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  50h	; P
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Eh	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  14h	;
		db  14h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  60h	; `
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db  15h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  70h	; p
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  16h	;
		db  16h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  80h	; �
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  17h	;
		db  17h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  90h	; �
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db  18h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0A0h	; �
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  19h	;
		db  19h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  1Ah	;
		db  1Ah	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    4	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  1Bh	;
		db  1Bh	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  90h	; �
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    7	;
		db    0	;
		db    4	;
		db    0	;
		db  80h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  1Ch	;
		db  1Ch	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  1Dh	;
		db  1Dh	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  1Eh	;
		db  1Eh	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  1Fh	;
		db  1Fh	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db  8Fh	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  14h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  20h	;
		db  20h	;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    3	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  21h	; !
		db  21h	; !
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db  8Fh	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  22h	; "
		db  22h	; "
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  23h	; #
		db  23h	; #
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    5	;
		db    0	;
		db    5	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  24h	; $
		db  24h	; $
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db  67h	; g
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  28h	; (
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  25h	; %
		db  25h	; %
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  70h	; p
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  26h	; &
		db  26h	; &
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  27h	; '
		db  27h	; '
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  90h	; �
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  28h	; (
		db  28h	; (
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  50h	; P
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  29h	; )
		db  29h	; )
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  60h	; `
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  2Ah	; *
		db  2Ah	; *
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    5	;
		db    0	;
		db    8	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  2Bh	; +
		db  2Bh	; +
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  2Ch	; ,
		db  2Ch	; ,
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  90h	; �
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  14h	;
		db    0	;
		db    0	;
		db    0	;
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  2Dh	; -
		db  2Dh	; -
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0A0h	; �
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  14h	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  2Eh	; .
		db  2Eh	; .
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0B0h	; �
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  14h	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  2Fh	; /
		db  2Fh	; /
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  14h	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  30h	; 0
		db  30h	; 0
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  31h	; 1
		db  31h	; 1
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  32h	; 2
		db  32h	; 2
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  33h	; 3
		db  33h	; 3
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  30h	; 0
		db  15h	;
		db    8	;
		db 0D7h	; �
		db  40h	; @
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  34h	; 4
		db  34h	; 4
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db  35h	; 5
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  36h	; 6
		db  36h	; 6
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db 0A3h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  37h	; 7
		db  37h	; 7
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db  0Eh	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  38h	; 8
		db  38h	; 8
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  90h	; �
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  39h	; 9
		db  3Ah	; :
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db  0Fh	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  3Ah	; :
		db  3Ah	; :
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  3Bh	; ;
		db  3Bh	; ;
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  3Ch	; <
		db  3Ch	; <
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  30h	; 0
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  3Dh	; =
		db  3Dh	; =
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  20h	;
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  3Eh	; >
		db  3Eh	; >
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  40h	; @
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  3Fh	; ?
		db  3Fh	; ?
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  30h	; 0
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db  40h	; @
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  40h	; @
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  41h	; A
		db  41h	; A
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  40h	; @
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  42h	; B
		db  42h	; B
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  50h	; P
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  43h	; C
		db  43h	; C
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  60h	; `
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  44h	; D
		db  44h	; D
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  70h	; p
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  45h	; E
		db  45h	; E
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db  15h	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  46h	; F
		db  46h	; F
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  80h	; �
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  47h	; G
		db  47h	; G
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  90h	; �
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  48h	; H
		db  48h	; H
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0A0h	; �
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  14h	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  49h	; I
		db  49h	; I
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0B0h	; �
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  4Ah	; J
		db  4Ah	; J
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  4Bh	; K
		db  4Bh	; K
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db  18h	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  4Ch	; L
		db  4Ch	; L
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  4Dh	; M
		db  4Dh	; M
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  4Eh	; N
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  4Fh	; O
		db  4Fh	; O
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  1Eh	;
		db    0	;
		db  1Ah	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  50h	; P
		db  50h	; P
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db 0A4h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  1Eh	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  51h	; Q
		db  51h	; Q
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db  1Bh	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  52h	; R
		db  52h	; R
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db  53h	; S
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  53h	; S
		db  53h	; S
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db  1Dh	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  54h	; T
		db  54h	; T
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  53h	; S
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  55h	; U
		db  55h	; U
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  94h	; �
		db  50h	; P
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  56h	; V
		db  56h	; V
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  94h	; �
		db  3Ch	; <
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  57h	; W
		db  57h	; W
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  94h	; �
		db  28h	; (
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  58h	; X
		db  58h	; X
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  94h	; �
		db  28h	; (
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  59h	; Y
		db  59h	; Y
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0B0h	; �
		db  40h	; @
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  5Ah	; Z
		db  5Ah	; Z
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0B0h	; �
		db  54h	; T
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db  0Eh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  5Bh	; [
		db  5Bh	; [
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db  54h	; T
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  5Ch	; \
		db  5Ch	; \
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db  40h	; @
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  5Dh	; ]
		db  5Dh	; ]
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  40h	; @
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  5Eh	; ^
		db  5Eh	; ^
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  54h	; T
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  5Fh	; _
		db  5Fh	; _
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  2Ch	; ,
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  60h	; `
		db  60h	; `
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  18h	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    2	;
		db    0	;
		db    0	;
		db  61h	; a
		db  61h	; a
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  62h	; b
		db  62h	; b
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db  40h	; @
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  63h	; c
		db  63h	; c
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db  2Ch	; ,
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  64h	; d
		db  64h	; d
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  50h	; P
		db    0	;
		db  1Fh	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  65h	; e
		db  65h	; e
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  66h	; f
		db  66h	; f
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db  67h	; g
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  29h	; )
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  67h	; g
		db  67h	; g
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  20h	;
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  29h	; )
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  68h	; h
		db  68h	; h
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  30h	; 0
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  29h	; )
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  69h	; i
		db  69h	; i
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  40h	; @
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  29h	; )
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  6Ah	; j
		db  6Ah	; j
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E0h	; �
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db    0	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  6Bh	; k
		db  6Bh	; k
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  50h	; P
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Ah	;
		db    0	;
		db  24h	; $
		db    0	;
		db    6	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  6Ch	; l
		db  6Ch	; l
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  20h	;
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  6Dh	; m
		db  6Dh	; m
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  10h	;
		db  7Ch	; |
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  6Eh	; n
		db  6Eh	; n
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  6Fh	; o
		db  6Fh	; o
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  60h	; `
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db  1Eh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  70h	; p
		db  70h	; p
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  70h	; p
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  71h	; q
		db  71h	; q
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0B0h	; �
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  72h	; r
		db  72h	; r
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db  14h	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  73h	; s
		db  73h	; s
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0D0h	; �
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db  1Eh	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  74h	; t
		db  74h	; t
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0E1h	; �
		db  18h	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  75h	; u
		db  75h	; u
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0A0h	; �
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  76h	; v
		db  76h	; v
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  90h	; �
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  14h	;
		db    0	;
		db  25h	; %
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  77h	; w
		db  77h	; w
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db  18h	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  78h	; x
		db  78h	; x
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db  2Ch	; ,
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  79h	; y
		db  79h	; y
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  80h	; �
		db  68h	; h
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db    0	;
		db  7Ah	; z
		db  7Ah	; z
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  20h	;
		db  90h	; �
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db    5	;
		db    0	;
		db  7Bh	; {
		db  7Bh	; {
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0C0h	; �
		db  67h	; g
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    1	;
		db    0	;
		db    0	;
		db  7Ch	; |
		db  7Ch	; |
		db  24h	; $
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db 0F0h	; �
		db  7Bh	; {
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    1	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    2	;
		db    0	;
		db    0	;
		db  49h	; I
		db  6Eh	; n
		db  73h	; s
		db  75h	; u
		db  66h	; f
		db  66h	; f
		db  69h	; i
		db  63h	; c
		db  69h	; i
		db  65h	; e
		db  6Eh	; n
		db  74h	; t
		db  20h	;
		db  4Dh	; M
		db  65h	; e
		db  6Dh	; m
		db  6Fh	; o
		db  72h	; r
		db  79h	; y
		db  0Dh	;
		db  0Ah	;
		db  24h	; $
word_FFD_2089	dw 0			; DATA XREF: START+68w	START+B7r
					; ...
		db  6Ch	; l
		db  6Fh	; o
		db  76h	; v
		db  70h	; p
		db  6Ch	; l
		db  75h	; u
		db  73h	; s
		db  2Eh	; .
		db  62h	; b
		db  61h	; a
		db  74h	; t
		db    0	;
		db  6Ch	; l
		db  6Fh	; o
		db  76h	; v
		db  70h	; p
		db  6Ch	; l
		db  75h	; u
		db  73h	; s
		db  2Eh	; .
		db  64h	; d
		db  61h	; a
		db  74h	; t
		db    0	;
		db    0	;
CHARWIDTHS	db    4	;
		db    4	;
		db    5	;
		db    7	;
		db    6	;
		db    7	;
		db    7	;
		db    4	;
		db    4	;
		db    4	;
		db    8	;
		db    6	;
		db    3	;
		db    6	;
		db    2	;
		db    7	;
		db    7	;
		db    6	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    2	;
		db    3	;
		db    7	;
		db    6	;
		db    4	;
		db    6	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    4	;
		db    7	;
		db    7	;
		db    6	;
		db    8	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    4	;
		db    7	;
		db    4	;
		db    7	;
		db    8	;
		db    3	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    3	;
		db    7	;
		db    7	;
		db    6	;
		db    8	;
		db    7	;
		db    7	;
		db    7	;
		db    8	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    8	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    5	;
		db    7	;
		db    7	;
		db    0	;
		db    3	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    0	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    4	;
		db    7	;
		db    7	;
		db    8	;
		db    7	;
		db    7	;
		db    7	;
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
TWINX		db  0Ah	;
		db    0	;
TWINY		db  0Ah	;
		db    0	;
TWINH		db 0A0h	; �
		db    0	;
TWINW		db  64h	; d
		db    0	;
		db    0	;
		db    0	;
TWINADD		db    0	;
		db    0	;
TWINMASK	db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
TEXTSOURCESEG	dw 0			; DATA XREF: DISPLAY_ISSUE+23w
					; DISPLAY_ISSUE+3Dw ...
OUTSTRING	db 'hellojim'
		db 0FFh	; �
OUTSTRADD	dw 0			; DATA XREF: TEXT_PREPROCESS+A7w
					; TEXT_PREPROCESS+C3r
word_FFD_2187	dw 0			; DATA XREF: TEXT_PREPROCESS+AFw
BCDVAL		db    0	;
		db    0	;
		db    0	;
		db    0	;
TEXTBOXES	dw 0			; DATA XREF: DINE+121w
CLSFLAG		db 0			; DATA XREF: DINE+113w	DINE+130w
		db    0	;
		db    0	;
LISTOFLISTS	db  1Bh	;
		db    0	;
		db  16h	;
		db 0D7h	; �
		db  3Ch	; <
		db    8	;
		db  16h	;
		db 0D7h	; �
		db  39h	; 9
		db  2Dh	; -
		db  16h	;
		db 0D7h	; �
		db  7Fh	; 
		db  2Bh	; +
		db  16h	;
		db 0D7h	; �
		db 0FDh	; �
		db  2Bh	; +
		db  16h	;
		db 0D7h	; �
		db  8Eh	; �
		db  2Ch	; ,
		db  16h	;
		db 0D7h	; �
		db 0D2h	; �
		db  2Ch	; ,
		db  16h	;
		db 0D7h	; �
		db    8	;
		db  0Fh	;
		db  16h	;
		db 0D7h	; �
		db  0Fh	;
		db  10h	;
		db  16h	;
		db 0D7h	; �
		db 0C3h	; �
		db  10h	;
		db  16h	;
		db 0D7h	; �
		db  7Fh	; 
		db  16h	;
		db  16h	;
		db 0D7h	; �
		db 0AEh	; �
		db  17h	;
		db  16h	;
		db 0D7h	; �
		db  56h	; V
		db  18h	;
		db  16h	;
		db 0D7h	; �
		db 0EEh	; �
		db  17h	;
		db  16h	;
		db 0D7h	; �
		db  35h	; 5
		db  18h	;
		db  16h	;
		db 0D7h	; �
		db  54h	; T
		db  3Ah	; :
		db  16h	;
		db 0D7h	; �
		db  6Eh	; n
		db  3Bh	; ;
		db  16h	;
		db 0D7h	; �
		db 0E9h	; �
		db  41h	; A
		db  16h	;
		db 0D7h	; �
		db  17h	;
		db  42h	; B
		db  16h	;
		db 0D7h	; �
		db 0D9h	; �
		db  45h	; E
		db  16h	;
		db 0D7h	; �
		db 0F2h	; �
		db  46h	; F
		db  16h	;
		db 0D7h	; �
		db  92h	; �
		db  12h	;
		db  16h	;
		db 0D7h	; �
		db 0FBh	; �
		db  12h	;
		db  16h	;
		db 0D7h	; �
		db  30h	; 0
		db  13h	;
		db  16h	;
		db 0D7h	; �
		db 0C6h	; �
		db  13h	;
		db  16h	;
		db 0D7h	; �
		db 0F9h	; �
		db  57h	; W
		db  16h	;
		db 0D7h	; �
		db  58h	; X
		db  19h	;
		db  16h	;
		db 0D7h	; �
		db 0C3h	; �
		db  0Fh	;
		db  16h	;
		db 0D7h	; �
		db    4	;
		db  1Ah	;
		db  16h	;
		db 0D7h	; �
		db  70h	; p
		db  5Eh	; ^
		db  16h	;
		db 0D7h	; �
		db  8Eh	; �
		db  62h	; b
		db  16h	;
		db 0D7h	; �
		db  9Ah	; �
		db  63h	; c
		db  16h	;
		db 0D7h	; �
		db  7Dh	; }
		db    1	;
		db  16h	;
		db 0D7h	; �
		db 0F4h	; �
		db  64h	; d
		db  16h	;
		db 0D7h	; �
		db 0BDh	; �
		db  73h	; s
		db  16h	;
		db 0D7h	; �
		db  18h	;
		db  74h	; t
		db  16h	;
		db 0D7h	; �
		db  44h	; D
		db  74h	; t
		db  16h	;
		db 0D7h	; �
		db 0CFh	; �
		db    0	;
		db  16h	;
		db 0D7h	; �
		db  1Eh	;
		db  5Fh	; _
		db  16h	;
		db 0D7h	; �
		db  4Ch	; L
		db  84h	; �
		db  16h	;
		db 0D7h	; �
		db  89h	; �
		db  84h	; �
		db  16h	;
		db 0D7h	; �
		db 0B4h	; �
		db  84h	; �
		db  16h	;
		db 0D7h	; �
		db 0DCh	; �
		db  6Ah	; j
		db  16h	;
		db 0D7h	; �
		db  1Ch	;
		db  6Bh	; k
		db  16h	;
		db 0D7h	; �
		db  47h	; G
		db  6Bh	; k
		db  16h	;
		db 0D7h	; �
		db  3Eh	; >
		db  78h	; x
		db  16h	;
		db 0D7h	; �
		db  72h	; r
		db  78h	; x
		db  16h	;
		db 0D7h	; �
		db  9Dh	; �
		db  78h	; x
		db  16h	;
		db 0D7h	; �
		db 0D1h	; �
		db  6Eh	; n
		db  16h	;
		db 0D7h	; �
		db 0FBh	; �
		db  6Eh	; n
		db  16h	;
		db 0D7h	; �
		db  25h	; %
		db  6Fh	; o
		db  16h	;
		db 0D7h	; �
		db    0	;
		db  71h	; q
		db  16h	;
		db 0D7h	; �
		db  2Dh	; -
		db  71h	; q
		db  16h	;
		db 0D7h	; �
		db  59h	; Y
		db  71h	; q
		db  16h	;
		db 0D7h	; �
		db  2Bh	; +
		db  7Bh	; {
		db  16h	;
		db 0D7h	; �
		db  67h	; g
		db  7Bh	; {
		db  16h	;
		db 0D7h	; �
		db  7Dh	; }
		db  7Bh	; {
		db  16h	;
		db 0D7h	; �
		db 0E3h	; �
		db  7Eh	; ~
		db  16h	;
		db 0D7h	; �
		db  20h	;
		db  7Fh	; 
		db  16h	;
		db 0D7h	; �
		db  36h	; 6
		db  7Fh	; 
		db  16h	;
		db 0D7h	; �
		db  99h	; �
		db  81h	; �
		db  16h	;
		db 0D7h	; �
		db 0D1h	; �
		db  81h	; �
		db  16h	;
		db 0D7h	; �
		db 0FCh	; �
		db  81h	; �
		db  16h	;
		db 0D7h	; �
		db  64h	; d
		db  61h	; a
		db  16h	;
		db 0D7h	; �
		db  8Eh	; �
		db  49h	; I
		db  16h	;
		db 0D7h	; �
		db    5	;
		db  3Ch	; <
		db  16h	;
		db 0D7h	; �
		db  42h	; B
		db  26h	; &
		db  16h	;
		db 0D7h	; �
		db 0B5h	; �
		db  41h	; A
		db  16h	;
		db 0D7h	; �
		db 0E5h	; �
		db  0Eh	;
		db  16h	;
		db 0D7h	; �
		db 0BEh	; �
		db 0AEh	; �
		db  16h	;
		db 0D7h	; �
DESTINTROS	db 0F5h	; �
		db  5Bh	; [
		db  0Eh	;
		db  5Ch	; \
		db  1Dh	;
		db  5Ch	; \
		db  38h	; 8
		db  5Ch	; \
		db  4Bh	; K
		db  5Ch	; \
		db  51h	; Q
		db  5Ch	; \
		db  53h	; S
		db  5Ch	; \
		db  59h	; Y
		db  5Ch	; \
COMMTRADES	db  73h	; s
		db  42h	; B
		db 0D8h	; �
		db  42h	; B
		db  3Bh	; ;
		db  43h	; C
		db  9Ch	; �
		db  43h	; C
		db    3	;
		db  44h	; D
		db  6Ch	; l
		db  44h	; D
FINE_T		db 0D2h	; �
		db  39h	; 9
		db 0F7h	; �
		db  39h	; 9
		db  27h	; '
		db  3Ah	; :
		db 0D2h	; �
		db  39h	; 9
FINE		dw 0			; DATA XREF: JUSTICE+54w
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
FLOORWRAP	db    0	;
		db    0	;
FFLAG		db    5	;		; FLOOR	FLAG
		db    0	;
		db 0E2h	; �
		db  22h	; "
		db  18h	;
		db  23h	; #
		db  4Eh	; N
		db  23h	; #
FIST_S1		db  34h	; 4
		db    0	;
		db  10h	;
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db  8Ch	; �
		db    0	;
		db  54h	; T
		db    0	;
		db  34h	; 4
		db    0	;
		db  10h	;
		db    0	;
		db  40h	; @
		db 0F0h	; �
FIST_S1A	db  48h	; H
		db    0	;
		db  1Fh	;
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db  78h	; x
		db    0	;
		db  45h	; E
		db    0	;
		db  48h	; H
		db    0	;
		db  1Fh	;
		db    0	;
		db  40h	; @
		db 0F0h	; �
FIST_S1B	db  6Ah	; j
		db    0	;
		db  39h	; 9
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db  56h	; V
		db    0	;
		db  2Bh	; +
		db    0	;
		db  6Ah	; j
		db    0	;
		db  39h	; 9
		db    0	;
		db  40h	; @
		db 0F0h	; �
		db  34h	; 4
		db    0	;
		db  10h	;
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db  75h	; u
		db    0	;
		db  47h	; G
		db    0	;
		db  2Bh	; +
		db    0	;
		db  0Dh	;
		db    0	;
		db  40h	; @
		db 0F0h	; �
		db  48h	; H
		db    0	;
		db  1Fh	;
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db  64h	; d
		db    0	;
		db  3Ah	; :
		db    0	;
		db  3Ch	; <
		db    0	;
		db  1Ah	;
		db    0	;
		db  40h	; @
		db 0F0h	; �
		db  6Ah	; j
		db    0	;
		db  39h	; 9
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db  48h	; H
		db    0	;
		db  24h	; $
		db    0	;
		db  58h	; X
		db    0	;
		db  30h	; 0
		db    0	;
		db  40h	; @
		db 0F0h	; �
		db  34h	; 4
		db    0	;
		db  10h	;
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db  5Eh	; ^
		db    0	;
		db  39h	; 9
		db    0	;
		db  22h	; "
		db    0	;
		db  0Bh	;
		db    0	;
		db  40h	; @
		db 0F0h	; �
		db  48h	; H
		db    0	;
		db  1Fh	;
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db  50h	; P
		db    0	;
		db  2Fh	; /
		db    0	;
		db  30h	; 0
		db    0	;
		db  15h	;
		db    0	;
		db  40h	; @
		db 0F0h	; �
		db  6Ah	; j
		db    0	;
		db  39h	; 9
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db  3Ah	; :
		db    0	;
		db  1Dh	;
		db    0	;
		db  46h	; F
		db    0	;
		db  27h	; '
		db    0	;
		db  40h	; @
		db 0F0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  9Ch	; �
		db  23h	; #
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  5Fh	; _
		db  73h	; s
		db  61h	; a
		db  76h	; v
		db  65h	; e
		db  5Fh	; _
		db  30h	; 0
		db  2Eh	; .
		db  6Ch	; l
		db  62h	; b
		db  6Dh	; m
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  46h	; F
		db  4Fh	; O
		db  52h	; R
		db  4Dh	; M
		db    0	;
		db    0	;
		db 0FDh	; �
		db  30h	; 0
		db  49h	; I
		db  4Ch	; L
		db  42h	; B
		db  4Dh	; M
		db  42h	; B
		db  4Dh	; M
		db  48h	; H
		db  44h	; D
		db    0	;
		db    0	;
		db    0	;
		db  14h	;
		db    1	;
		db  40h	; @
		db    0	;
		db 0C8h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    6	;
		db    1	;
		db  40h	; @
		db    0	;
		db 0C8h	; �
		db  43h	; C
		db  4Dh	; M
		db  41h	; A
		db  50h	; P
		db    0	;
		db    0	;
		db    3	;
		db    0	;
		db  42h	; B
		db  4Fh	; O
		db  44h	; D
		db  59h	; Y
		db    0	;
		db    0	;
		db 0FAh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  30h	; 0
		db    0	;
		db  30h	; 0
		db    0	;
		db  30h	; 0
		db    0	;
		db  50h	; P
		db    0	;
		db  50h	; P
		db    0	;
		db  50h	; P
		db    0	;
		db  60h	; `
		db    0	;
		db  60h	; `
		db    0	;
		db  60h	; `
		db    0	;
		db  70h	; p
		db    0	;
		db  70h	; p
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
TILESIN		db    0	;
		db    0	;
LASTILE		db    0	;
		db    0	;
FLIPXCONE	db  90h	; �
		db    1	;
HORIZONANG	db  0Ah	;
		db    0	;
EYEHEIGHT	db  64h	; d
		db    0	;
VIEWRANGE	db    0	;
		db    0	;
HORIZONHT	db  2Bh	; +
		db    0	;
XCONE		db 0C0h	; �
		db    0	;
YCONE		db  8Ch	; �
		db    0	;
XFACTOR		db    0	;
		db    0	;
YFACTOR		db 0B6h	; �
		db    0	;
HORIZONADD	db    0	;
		db    0	;
LASTLINEADD	db    0	;
		db    0	;
SKYCOLOUR	db  90h	; �
		db  90h	; �
GROUNDCOLOUR	db  98h	; �
		db  98h	; �
CEILINGCOLOUR	db    1	;
		db    1	;
ISFLOORCOLOUR	db    2	;
		db    2	;
VIEWPORTH	dw 64h			; DATA XREF: COMBAT+117w COMBAT+138r
VIEWPORTW	dw 0C0h			; DATA XREF: COLLISIONS+6Br
					; COMBAT+11Dw ...
VIEWPORTADD	dw 1440h		; DATA XREF: COMBAT+123w
SCRHORIZY	db    0	;
		db    0	;
SCRCENTREX	db    0	;
		db    0	;
		db    0	;
		db    0	;
VIEWRANGEFLAG	db    5	;
		db    0	;
VIEWSIZES	db  64h	; d
		db    0	;
		db 0C0h	; �
		db    0	;
		db  40h	; @
		db  14h	;
		db  54h	; T
		db    0	;
		db 0A0h	; �
		db    0	;
		db  50h	; P
		db  1Eh	;
		db  44h	; D
		db    0	;
		db  80h	; �
		db    0	;
		db  60h	; `
		db  28h	; (
		db 0FFh	; �
		db 0FFh	; �
VIEWSPTR	dw 0			; DATA XREF: BACKTOGAMEr COMBAT+106r
					; ...
SKYADDONS	db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
WALLADDS	db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db  80h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db  50h	; P
		db  40h	; @
		db  50h	; P
		db  80h	; �
		db  50h	; P
		db 0C0h	; �
		db  50h	; P
		db    0	;
		db  51h	; Q
		db    0	;
		db 0A0h	; �
		db  40h	; @
		db 0A0h	; �
		db  80h	; �
		db 0A0h	; �
		db 0C0h	; �
		db 0A0h	; �
		db    0	;
		db 0A1h	; �
WALLTYPES	db    0	;
		db    1	;
		db    2	;
		db    2	;
		db    1	;
		db    1	;
		db    1	;
		db    2	;
		db    1	;
		db    3	;
		db    1	;
		db    1	;
		db    3	;
		db    2	;
		db    3	;
		db    1	;
		db    0	;
		db    1	;
		db    2	;
		db    2	;
		db    5	;
		db    4	;
		db    6	;
		db    1	;
		db    1	;
		db    3	;
		db    1	;
		db    2	;
		db    3	;
		db    2	;
		db    3	;
		db    1	;
WALLTYPESUG	db    0	;
		db    1	;
		db    1	;
		db    7	;
		db    8	;
		db    7	;
		db    4	;
		db    2	;
		db    2	;
		db    1	;
		db    1	;
		db    3	;
		db    3	;
		db    4	;
		db    1	;
		db    2	;
		db    0	;
		db    1	;
		db    1	;
		db    7	;
		db    8	;
		db    7	;
		db    4	;
		db    2	;
		db    2	;
		db    1	;
		db    1	;
		db    3	;
		db    3	;
		db    4	;
		db    1	;
		db    2	;
WALLTYPE	db 0D6h	; �
		db  26h	; &
		db    0	;
		db 0A0h	; �
		db    0	;
		db 0B4h	; �
		db    0	;
		db 0C8h	; �
		db    0	;
		db 0DCh	; �
		db  10h	;
		db 0A0h	; �
		db  10h	;
		db 0B4h	; �
		db  10h	;
		db 0C8h	; �
		db  10h	;
		db 0DCh	; �
		db  20h	;
		db 0A0h	; �
		db  20h	;		; �?
		db 0B4h	; �
		db  20h	;		; �?
		db 0C8h	; �
		db  20h	;
		db 0DCh	; �
		db  30h	; 0
		db 0A0h	; �
		db  30h	; 0
		db 0B4h	; �
		db  30h	; 0
		db 0C8h	; �
		db  30h	; 0
		db 0DCh	; �
word_FFD_2738	dw 0			; DATA XREF: COLLISIONS+144r
word_FFD_273A	dw 0			; DATA XREF: COLLISIONS+101r
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
XEND1		db    0	;
		db    0	;
XEND2		db    0	;
		db    0	;
		db    0	;
		db    0	;
YEND1		db    0	;
		db    0	;
YEND2		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
XP		dw 0			; DATA XREF: FINDRADIUS+8w
					; FINDRADIUS+12r
YP		dw 0			; DATA XREF: FINDRADIUS+Bw
					; FINDRADIUS+1Br
YPCXPS		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
word_FFD_3760	dw 0			; DATA XREF: COLLISIONS+15Cr
COLMISSES	dw 0			; DATA XREF: COLLISIONS+50w
					; COLLISIONS+61w ...
ROWMISSES	dw 0			; DATA XREF: SPRITER+198r SPRITER+224r
					; ...
SPRSEG		dw 0			; DATA XREF: SPRITER+1BAr SPRITER+248r
					; ...
CONEFLAG	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
UNK2?		db    0	;		; �?
		db    0	;
UNK1?		db    1	;
		db    0	;
XRAYFLAG	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
TLADD		db    0	;
		db    0	;
BRADD		db    0	;
		db    0	;
		db    0	;
		db    0	;
FLOORATT	db 1			; DATA XREF: MAKEREGULARS+297r
STORIES		db    0	;
		db    0	;
		db    0	;
ENTITIES	db    0	;
		db    0	;
ENTITIES2	db    0	;
		db    0	;
ATTRIBYTE	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
UNK3		db    0	;		; �?
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
ANGEND1		db    0	;
		db    0	;
ANGEND2		db    0	;
		db    0	;
		db  75h	; u
		db  37h	; 7
		db  75h	; u
		db  37h	; 7
		db  44h	; D
		db  3Bh	; ;
		db  4Eh	; N
		db  3Bh	; ;
		db  58h	; X
		db  3Bh	; ;
		db  62h	; b
		db  3Bh	; ;
		db  6Ch	; l
		db  3Bh	; ;
		db  76h	; v
		db  3Bh	; ;
		db  80h	; �
		db  3Bh	; ;
		db  80h	; �
		db  3Bh	; ;
		db  80h	; �
		db  3Bh	; ;
		db  80h	; �
		db  3Bh	; ;
		db  80h	; �
		db  3Bh	; ;
		db  80h	; �
		db  3Bh	; ;
		db  80h	; �
		db  3Bh	; ;
		db  80h	; �
		db  3Bh	; ;
		db  80h	; �
		db  3Bh	; ;
		db  80h	; �
		db  3Bh	; ;
		db  20h	;
		db  20h	;
		db  20h	;
		db  20h	;
		db  30h	; 0
		db  40h	; @
		db  50h	; P
		db  70h	; p
		db  80h	; �
		db  90h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0A0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;		; �?
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;		; �?
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
COLDI		dw 0			; DATA XREF: COLLISIONS+8Aw
					; COLLISIONS+1A1w ...
word_FFD_4EF0	dw 0			; DATA XREF: COLLISIONS+BAw
					; COLLISIONS+171r ...
word_FFD_4EF2	dw 0			; DATA XREF: COLLISIONS+93w
					; COLLISIONS+A4w ...
word_FFD_4EF4	dw 0			; DATA XREF: COLLISIONS+8Dw
					; COLLISIONS+1A8r ...
COLHT		dw 0			; DATA XREF: COLLISIONS+F2w
					; COLLISIONS+18Cw ...
word_FFD_4EF8	dw 0			; DATA XREF: COLLISIONS+F5w
					; COLLISIONS+190w ...
COLHTINC	dw 0			; DATA XREF: COLLISIONS+E0w
					; COLLISIONS+160r ...
word_FFD_4EFC	dw 0			; DATA XREF: COLLISIONS+BDw
					; COLLISIONS+CEw ...
word_FFD_4EFE	dw 0			; DATA XREF: COLLISIONS+4Aw
					; COLLISIONS+78w ...
word_FFD_4F00	dw 0			; DATA XREF: COLLISIONS+4Dw
					; COLLISIONS+B4r
word_FFD_4F02	dw 0			; DATA XREF: COLLISIONS+F9w
					; COLLISIONS+1E2r ...
WWIDTHINC	dw 0			; DATA XREF: COLLISIONS+106w
					; COLLISIONS+1DFr ...
word_FFD_4F06	dw 0			; DATA XREF: COLLISIONS+14Cw
					; COLLISIONS+1F8w
word_FFD_4F08	dw 0			; DATA XREF: COLLISIONS+7Fw
					; COLLISIONS+1D5w
FSPRITELIST	db  0Ch	;
		db  4Fh	; O
SPRITELIST	db 0A0h	; �
		db    0	;
SPRITELIST2	db  32h	; 2
		db    0	;
		db    0	;
		db  42h	; B
		db    0	;
		db  1Ch	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db 0C8h	; �
		db    0	;
		db 0A0h	; �
		db    0	;
		db    0	;
		db  4Ch	; L
		db    0	;
		db  3Eh	; >
		db  1Ch	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db  20h	;
		db 0FAh	; �
		db    0	;
		db  50h	; P
		db    0	;
		db    0	;
		db  50h	; P
		db    0	;
		db  1Dh	;
		db  5Ah	; Z
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db  10h	;
		db  50h	; P
		db    0	;
		db  50h	; P
		db    0	;
		db    0	;
		db  20h	;
		db    0	;
		db  34h	; 4
		db  77h	; w
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0D0h	; �
		db  78h	; x
		db    0	;
		db  1Eh	;
		db    0	;
		db    0	;
		db  51h	; Q
		db    0	;
		db  1Fh	;
		db 0ABh	; �
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db  30h	; 0
		db 0B4h	; �
		db    0	;
		db  38h	; 8
		db    0	;
		db    0	;
		db  51h	; Q
		db    0	;
		db  1Eh	;
		db 0CAh	; �
		db    0	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db  30h	; 0
		db 0FAh	; �
		db    0	;
		db  64h	; d
		db    0	;
		db    0	;
		db  45h	; E
		db    0	;
		db  1Fh	;
		db    0	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db  40h	; @
		db  20h	;
		db  64h	; d
		db    0	;
		db  64h	; d
		db    0	;
		db    0	;
		db  1Fh	;
		db    0	;
		db  19h	;
		db  1Fh	;
		db    0	;
		db    8	;
		db 0D7h	; �
		db  40h	; @
		db  20h	;
		db  3Ch	; <
		db    0	;
		db  3Ch	; <
		db    0	;
		db    0	;
		db  18h	;
		db    0	;
		db  25h	; %
		db  38h	; 8
		db    0	;
		db    8	;
		db 0D7h	; �
		db  40h	; @
		db  20h	;
		db  3Ch	; <
		db    0	;
		db  3Ch	; <
		db    0	;
		db    0	;
		db  16h	;
		db    0	;
		db  27h	; '
		db  5Dh	; ]
		db    0	;
		db    8	;
		db 0D7h	; �
		db  40h	; @
		db  20h	;
		db  3Ch	; <
		db    0	;
		db  3Ch	; <
		db    0	;
		db    0	;
		db  21h	; !
		db    0	;
		db  37h	; 7
		db  84h	; �
		db    0	;
		db    8	;
		db 0D7h	; �
		db  40h	; @
		db  20h	;
		db 0FAh	; �
		db    0	;
		db  3Ch	; <
		db    0	;
		db    0	;
		db  52h	; R
		db    0	;
		db  1Ch	;
		db 0BBh	; �
		db    0	;
		db    8	;
		db 0D7h	; �
		db  40h	; @
		db  20h	;
		db  50h	; P
		db    0	;
		db  28h	; (
		db    0	;
		db    0	;
		db  24h	; $
		db    0	;
		db  19h	;
		db 0A8h	; �
		db  13h	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  14h	;
		db    0	;
		db  3Ch	; <
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  20h	;
		db  20h	;
		db    1	;
		db    8	;
		db 0D7h	; �
		db    0	;
		db 0C0h	; �
		db  28h	; (
		db    0	;
		db  28h	; (
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db  30h	; 0
		db  15h	;
		db    8	;
		db 0D7h	; �
		db  40h	; @
		db    0	;
SIGNLIST	db  1Eh	;
		db  0Bh	;
		db    0	;
		db    0	;
		db  18h	;
		db  0Ah	;
		db    0	;
		db    0	;
		db  0Bh	;
		db  13h	;
		db    1	;
		db    0	;
		db  11h	;
		db  65h	; e
		db    2	;
		db    0	;
		db  15h	;
		db  66h	; f
		db    2	;
		db    0	;
		db  48h	; H
		db  77h	; w
		db    3	;
		db    0	;
		db  4Ch	; L
		db  77h	; w
		db    3	;
		db    0	;
		db  4Dh	; M
		db  77h	; w
		db    3	;
		db    0	;
		db  3Fh	; ?
		db  44h	; D
		db    4	;
		db    0	;
		db    5	;
		db  4Bh	; K
		db    5	;
		db    0	;
		db    5	;
		db  48h	; H
		db    5	;
		db    0	;
		db  25h	; %
		db  73h	; s
		db    6	;
		db    0	;
		db  29h	; )
		db  73h	; s
		db    6	;
		db    0	;
		db  2Ah	; *
		db  73h	; s
		db    6	;
		db    0	;
		db  3Ah	; :
		db  26h	; &
		db    7	;
		db    0	;
		db  3Bh	; ;
		db  25h	; %
		db    7	;
		db    0	;
		db  18h	;
		db  1Ch	;
		db  0Fh	;
		db    0	;
		db  30h	; 0
		db  20h	;
		db  0Fh	;
		db    0	;
		db  30h	; 0
		db  21h	; !
		db  0Fh	;
		db    0	;
		db  22h	; "
		db  2Ch	; ,
		db  0Fh	;
		db    0	;
		db  4Bh	; K
		db  39h	; 9
		db  0Fh	;
		db    0	;
		db  32h	; 2
		db  53h	; S
		db  0Fh	;
		db    0	;
		db  4Dh	; M
		db  5Bh	; [
		db  0Fh	;
		db    0	;
		db  42h	; B
		db  66h	; f
		db  0Fh	;
		db    0	;
		db  44h	; D
		db  66h	; f
		db  0Fh	;
		db    0	;
		db  46h	; F
		db  66h	; f
		db  0Fh	;
		db    0	;
		db  47h	; G
		db  66h	; f
		db  0Fh	;
		db    0	;
		db  18h	;
		db  6Dh	; m
		db  0Fh	;
		db    0	;
		db  35h	; 5
		db  16h	;
		db  0Ch	;
		db    0	;
		db  38h	; 8
		db  13h	;
		db  0Ch	;
		db    0	;
		db  17h	;
		db  21h	; !
		db  0Eh	;
		db    0	;
		db  52h	; R
		db  22h	; "
		db  0Eh	;
		db    0	;
		db  24h	; $
		db  31h	; 1
		db  0Eh	;
		db    0	;
		db  12h	;
		db  4Fh	; O
		db  0Eh	;
		db    0	;
		db  2Eh	; .
		db  4Fh	; O
		db  0Eh	;
		db    0	;
		db  2Eh	; .
		db  50h	; P
		db  0Eh	;
		db    0	;
		db  31h	; 1
		db  50h	; P
		db  0Eh	;
		db    0	;
		db  32h	; 2
		db  4Fh	; O
		db  0Eh	;
		db    0	;
		db  2Eh	; .
		db  55h	; U
		db  0Eh	;
		db    0	;
		db  1Eh	;
		db  78h	; x
		db  0Eh	;
		db    0	;
		db  1Fh	;
		db  77h	; w
		db  0Eh	;
		db    0	;
		db  1Bh	;
		db  7Dh	; }
		db  0Eh	;
		db    0	;
		db  3Dh	; =
		db  65h	; e
		db  0Eh	;
		db    0	;
		db  3Bh	; ;
		db  6Bh	; k
		db  0Eh	;
		db    0	;
		db  40h	; @
		db  65h	; e
		db  0Eh	;
		db    0	;
		db  3Ah	; :
		db  6Ah	; j
		db  0Eh	;
		db    0	;
		db  41h	; A
		db  65h	; e
		db  0Eh	;
		db    0	;
		db  36h	; 6
		db  77h	; w
		db  0Eh	;
		db    0	;
		db  26h	; &
		db  12h	;
		db  0Bh	;
		db    0	;
		db  33h	; 3
		db  5Fh	; _
		db  0Bh	;
		db    0	;
		db  36h	; 6
		db  5Fh	; _
		db  0Bh	;
		db    0	;
		db  52h	; R
		db  2Eh	; .
		db    8	;
		db    0	;
		db  0Bh	;
		db  42h	; B
		db    8	;
		db    0	;
		db  0Dh	;
		db  42h	; B
		db    8	;
		db    0	;
		db  3Eh	; >
		db  0Bh	;
		db  0Dh	;
		db    0	;
		db  3Ch	; <
		db  0Bh	;
		db  0Dh	;
		db    0	;
		db  23h	; #
		db  3Ah	; :
		db  0Dh	;
		db    0	;
		db    8	;
		db  63h	; c
		db  0Dh	;
		db    0	;
		db  46h	; F
		db  55h	; U
		db  0Dh	;
		db    0	;
		db  46h	; F
		db  56h	; V
		db  0Dh	;
		db    0	;
		db  46h	; F
		db  58h	; X
		db  0Dh	;
		db    0	;
		db  46h	; F
		db  59h	; Y
		db  0Dh	;
		db    0	;
		db  39h	; 9
		db  36h	; 6
		db  0Ah	;
		db    0	;
		db  42h	; B
		db  48h	; H
		db    9	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
WATERSOUND	db    0	;
		db    0	;
SINTAB14	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SINTAB8		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  54h	; T
		db  52h	; R
		db  49h	; I
		db  47h	; G
		db  54h	; T
		db  41h	; A
		db  42h	; B
		db  53h	; S
		db  2Eh	; .
		db  44h	; D
		db  41h	; A
		db  54h	; T
		db    0	;
		db  41h	; A
		db  52h	; R
		db  43h	; C
		db  54h	; T
		db  41h	; A
		db  4Eh	; N
		db  53h	; S
		db  2Eh	; .
		db  44h	; D
		db  41h	; A
		db  54h	; T
		db    0	;
		db    0	;
		db  64h	; d
		db  69h	; i
		db  73h	; s
		db  6Bh	; k
		db  20h	;
		db  65h	; e
		db  72h	; r
		db  72h	; r
		db  6Fh	; o
		db  72h	; r
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
ASPELLFLAG	db    0	;
		db    0	;
GSPELLFLAG	db    0	;
		db    0	;
HOWCLOSE	dw 0			; DATA XREF: MAKEREGULARS+2ABw
PAVEDFLAG	db    0	;
		db    0	;
BOOTSFLAG	db    0	;
		db    0	;
GLOVEFLAG	db    0	;
		db    0	;
AMULETFLAG	dw 0			; DATA XREF: ATTACK+7r
		db    0	;
		db    0	;
		db    0	;
		db    0	;
FROMWINDOW	db    0	;
		db    0	;
PLODFLAG	db    0	;
		db    0	;
DIVINERFLAG	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db  26h	; &
		db  10h	;
		db  73h	; s
		db 0FFh	; �
		db  26h	; &
		db  10h	;
		db  4Bh	; K
		db 0FFh	; �
		db  26h	; &
		db  10h	;
		db  23h	; #
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  30h	; 0
		db  90h	; �
		db  10h	;
		db  73h	; s
		db  40h	; @
		db  7Ch	; |
		db  10h	;
		db  4Bh	; K
		db  40h	; @
		db  90h	; �
		db  10h	;
		db  23h	; #
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  30h	; 0
		db  90h	; �
		db  10h	;
		db  73h	; s
		db 0EFh	; �
		db  26h	; &
		db  10h	;
		db  4Bh	; K
		db 0DFh	; �
		db  26h	; &
		db  10h	;
		db  23h	; #
		db    0	;
		db    0	;
		db    0	;
		db    0	;
BINOS		db    1	;
		db    0	;
		db    4	;
		db    0	;
ANGVEL		db  14h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  13h	;
		db  5Ch	; \
		db  15h	;
		db  5Dh	; ]
		db    0	;
		db    0	;
UNK4		db    0	;
		db    0	;
UNK5		db    0	;
		db    0	;
LASTARROW	db  0Ah	;
		db    0	;
		db    0	;		; �?
		db    0	;
ENHANCEDFLAG	db    1	;
AUTOCOMBAT	db    0	;
		db    4	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
DORS		dw 0			; DATA XREF: MAKEREGULARS+2A1r
		db    0	;
		db    0	;
		db  28h	; (
		db    5	;
		db  78h	; x
		db    0	;
		db  42h	; B
		db    1	;
		db  80h	; �
		db    0	;
		db    0	;
		db    0	;
		db 0F0h	; �
		db    0	;
		db 0E0h	; �
		db    1	;
		db  80h	; �
		db    0	;
		db  42h	; B
		db    1	;
		db  68h	; h
		db    1	;
		db  58h	; X
		db    2	;
		db  48h	; H
		db    3	;
		db 0BEh	; �
		db 0FFh	; �
		db  80h	; �
		db    0	;
		db 0D0h	; �
		db    2	;
		db 0C0h	; �
		db    3	;
		db 0B0h	; �
		db    4	;
		db  80h	; �
		db    0	;
		db 0BEh	; �
		db 0FFh	; �
		db  38h	; 8
		db    4	;
DAYCYCLE	dw 5E5Eh
SUMMERTIME	db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    1	;
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    1	;
		db    3	;
		db    0	;
		db    0	;
AUTUMNTIME	db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    1	;
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    1	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
WINTERTIME	db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    1	;
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    1	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SPRINGTIME	db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    1	;
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    1	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
MONSTERFOOT	db    7	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    9	;
		db  42h	; B
		db    0	;
		db  50h	; P
		db    0	;
		db  0Ch	;
		db  3Ch	; <
		db    1	;
		db  51h	; Q
		db    7	;
		db  0Ch	;
		db  44h	; D
		db 0FFh	; �
		db  50h	; P
		db    0	;
		db  0Ch	;
		db  3Eh	; >
		db    0	;
		db  50h	; P
		db    0	;
K_ASYLUM	db  0Fh	;
		db  2Dh	; -
		db    0	;
byte_FFD_5EBC	db 0			; DATA XREF: sub_0_D37E+23w
					; sub_0_D37E+2Dw
		db    0	;
		db    4	;
		db  6Ch	; l
		db    0	;
		db    1	;
		db    0	;
		db  19h	;
		db  2Fh	; /
		db    0	;
		db    2	;
		db    0	;
		db  1Ah	;
		db  10h	;
		db    0	;
		db    3	;
		db    0	;
		db  37h	; 7
		db  31h	; 1
		db 0FFh	; �
		db    4	;
		db    7	;
		db  37h	; 7
		db  2Ch	; ,
		db 0FFh	; �
		db    5	;
		db    7	;
		db  47h	; G
		db  38h	; 8
		db 0FFh	; �
		db    6	;
		db    7	;
		db  2Eh	; .
		db  15h	;
		db    0	;
		db    7	;
		db    7	;
		db  35h	; 5
		db  45h	; E
		db 0FFh	; �
		db    8	;
		db    6	;
		db  22h	; "
		db  76h	; v
		db 0FFh	; �
		db    9	;
		db    7	;
		db  1Bh	;
		db    6	;
		db 0FFh	; �
		db  0Ah	;
		db    7	;
		db  23h	; #
		db    9	;
		db    0	;
		db  0Bh	;
		db    7	;
		db  53h	; S
		db  4Ch	; L
		db    0	;
		db  0Ch	;
		db    7	;
		db  51h	; Q
		db  58h	; X
		db 0FFh	; �
		db  0Ch	;
		db    7	;
		db  4Ch	; L
		db  63h	; c
		db 0FFh	; �
		db  0Dh	;
		db    7	;
		db  40h	; @
		db  61h	; a
		db 0FFh	; �
		db  0Eh	;
		db    7	;
		db  38h	; 8
		db  5Fh	; _
		db 0FFh	; �
		db  0Fh	;
		db    7	;
		db  36h	; 6
		db  62h	; b
		db 0FFh	; �
		db  10h	;
		db    7	;
		db  36h	; 6
		db  5Eh	; ^
		db 0FFh	; �
		db  11h	;
		db    7	;
		db  13h	;
		db  23h	; #
		db 0FFh	; �
		db  12h	;
		db    7	;
		db  1Ch	;
		db  40h	; @
		db 0FFh	; �
		db  13h	;
		db    7	;
		db  22h	; "
		db  48h	; H
		db 0FFh	; �
		db  14h	;
		db    7	;
		db    4	;
		db  31h	; 1
		db 0FFh	; �
		db  15h	;
		db    7	;
		db  3Fh	; ?
		db    8	;
		db    0	;
		db  55h	; U
		db    0	;
		db  40h	; @
		db    6	;
		db    0	;
		db  56h	; V
		db    0	;
		db  3Bh	; ;
		db    6	;
		db    0	;
		db  57h	; W
		db    7	;
		db    9	;
		db  60h	; `
		db    0	;
		db  5Ah	; Z
		db    0	;
		db    9	;
		db  60h	; `
		db    1	;
		db  5Eh	; ^
		db    7	;
		db  0Bh	;
		db  5Dh	; ]
		db    0	;
		db  5Bh	; [
		db    0	;
		db    8	;
		db  5Dh	; ]
		db    0	;
		db  5Bh	; [
		db    0	;
		db  4Bh	; K
		db  5Bh	; [
		db    0	;
		db  5Fh	; _
		db    0	;
		db  4Ch	; L
		db  57h	; W
		db    0	;
		db  60h	; `
		db    0	;
		db  48h	; H
		db  52h	; R
		db    0	;
		db  60h	; `
		db    0	;
		db  4Ah	; J
		db  59h	; Y
		db    0	;
		db  61h	; a
		db    0	;
		db  4Bh	; K
		db  52h	; R
		db    0	;
		db  62h	; b
		db    7	;
		db  22h	; "
		db  38h	; 8
		db    0	;
		db  64h	; d
		db    7	;
		db  23h	; #
		db  37h	; 7
		db    0	;
		db  64h	; d
		db    7	;
		db  30h	; 0
		db  37h	; 7
		db 0FFh	; �
		db  65h	; e
		db    7	;
		db  25h	; %
		db  36h	; 6
		db 0FFh	; �
		db  66h	; f
		db    7	;
		db  53h	; S
		db  2Eh	; .
		db    0	;
		db  69h	; i
		db    0	;
		db  52h	; R
		db  30h	; 0
		db    0	;
		db  69h	; i
		db    0	;
		db  53h	; S
		db  2Eh	; .
		db    1	;
		db  6Ah	; j
		db    0	;
		db  51h	; Q
		db  31h	; 1
		db    1	;
		db  6Bh	; k
		db    7	;
		db  37h	; 7
		db  69h	; i
		db    0	;
		db  6Eh	; n
		db    0	;
		db  37h	; 7
		db  66h	; f
		db    0	;
		db  6Eh	; n
		db    0	;
		db  34h	; 4
		db  65h	; e
		db    0	;
		db  6Fh	; o
		db    0	;
		db  34h	; 4
		db  66h	; f
		db    0	;
		db  6Fh	; o
		db    0	;
		db  34h	; 4
		db  65h	; e
		db    0	;
		db  6Fh	; o
		db    0	;
		db  34h	; 4
		db  66h	; f
		db    1	;
		db  71h	; q
		db    7	;
		db  27h	; '
		db  14h	;
		db    0	;
		db  73h	; s
		db    0	;
		db  24h	; $
		db  13h	;
		db    0	;
		db  73h	; s
		db    0	;
		db  26h	; &
		db  18h	;
		db    0	;
		db  73h	; s
		db    0	;
		db  24h	; $
		db  13h	;
		db    1	;
		db  74h	; t
		db    0	;
		db  24h	; $
		db  15h	;
		db    1	;
		db  74h	; t
		db    0	;
		db  27h	; '
		db  15h	;
		db    1	;
		db  74h	; t
		db    0	;
		db  26h	; &
		db  19h	;
		db    1	;
		db  75h	; u
		db    0	;
		db  25h	; %
		db  16h	;
		db    1	;
		db  75h	; u
		db    0	;
		db  27h	; '
		db  15h	;
		db    1	;
		db  75h	; u
		db    0	;
		db  24h	; $
		db  18h	;
		db    1	;
		db  76h	; v
		db    7	;
		db  35h	; 5
		db  5Eh	; ^
		db    0	;
		db  78h	; x
		db    0	;
		db  38h	; 8
		db  60h	; `
		db    1	;
		db  79h	; y
		db    0	;
		db  34h	; 4
		db  60h	; `
		db    1	;
		db  79h	; y
		db    0	;
		db  33h	; 3
		db  5Dh	; ]
		db    1	;
		db  79h	; y
		db    0	;
		db  30h	; 0
		db  5Fh	; _
		db    1	;
		db  7Ah	; z
		db    7	;
		db  32h	; 2
		db  60h	; `
		db    1	;
		db  7Ah	; z
		db    7	;
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
PLAYERKEYS	db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
byte_FFD_6016	db 0			; DATA XREF: sub_0_D6EDw
byte_FFD_6017	db 0			; DATA XREF: sub_0_D6F3+Aw
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
HOLES		db    4	;
		db  6Eh	; n
		db  1Ch	;
		db  56h	; V
		db 0FFh	; �
		db 0FFh	; �
TAPESTRY	db    0	;
WALLSHIELD	db    0	;
SHOPANEL	db    0	;
SIGNNO		db 0			; DATA XREF: BLITSIGNr	BLITSIGN+9w
BRAZFRAME	db    0	;		; BRAZFRAME
AREABOXES	db  16h	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    3	;
		db    0	;
		db    2	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  1Bh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    8	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  20h	;
		db    0	;
		db  2Ch	; ,
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  41h	; A
		db    0	;
		db  36h	; 6
		db    0	;
		db  0Ah	;
		db    0	;
		db    8	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  2Fh	; /
		db    0	;
		db  53h	; S
		db    0	;
		db    7	;
		db    0	;
		db    7	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  4Dh	; M
		db    0	;
		db  58h	; X
		db    0	;
		db    7	;
		db    0	;
		db    7	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  41h	; A
		db    0	;
		db  66h	; f
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  16h	;
		db    0	;
		db  6Ch	; l
		db    0	;
		db    7	;
		db    0	;
		db    5	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  34h	; 4
		db    0	;
		db  12h	;
		db    0	;
		db    4	;
		db    0	;
		db    4	;
		db    0	;
		db    9	;
		db    0	;
		db  16h	;
		db    0	;
		db  1Fh	;
		db    0	;
		db    3	;
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  4Fh	; O
		db    0	;
		db  22h	; "
		db    0	;
		db    4	;
		db    0	;
		db    3	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  21h	; !
		db    0	;
		db  30h	; 0
		db    0	;
		db    3	;
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  4Ch	; L
		db    0	;
		db  39h	; 9
		db    0	;
		db    4	;
		db    0	;
		db    5	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db  43h	; C
		db    0	;
		db    4	;
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  10h	;
		db    0	;
		db  4Dh	; M
		db    0	;
		db    4	;
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  2Eh	; .
		db    0	;
		db  4Dh	; M
		db    0	;
		db    4	;
		db    0	;
		db    3	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  29h	; )
		db    0	;
		db  50h	; P
		db    0	;
		db    5	;
		db    0	;
		db    5	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  1Bh	;
		db    0	;
		db  76h	; v
		db    0	;
		db    4	;
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  18h	;
		db    0	;
		db  7Ah	; z
		db    0	;
		db    4	;
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  3Ah	; :
		db    0	;
		db  65h	; e
		db    0	;
		db    7	;
		db    0	;
		db    6	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  39h	; 9
		db    0	;
		db  77h	; w
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  10h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    4	;
		db    0	;
		db    4	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  26h	; &
		db    0	;
		db  12h	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  33h	; 3
		db    0	;
		db  5Eh	; ^
		db    0	;
		db    3	;
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  50h	; P
		db    0	;
		db  2Eh	; .
		db    0	;
		db    4	;
		db    0	;
		db    6	;
		db    0	;
		db    9	;
		db    0	;
		db    8	;
		db    0	;
		db  42h	; B
		db    0	;
		db    4	;
		db    0	;
		db    3	;
		db    0	;
		db    9	;
		db    0	;
		db  3Ch	; <
		db    0	;
		db    7	;
		db    0	;
		db    3	;
		db    0	;
		db    4	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  22h	; "
		db    0	;
		db  37h	; 7
		db    0	;
		db    4	;
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db    8	;
		db    0	;
		db  60h	; `
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  47h	; G
		db    0	;
		db  52h	; R
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  49h	; I
		db    0	;
		db  5Bh	; [
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db  0Bh	;
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db  41h	; A
		db    0	;
		db  11h	;
		db    0	;
		db    3	;
		db    0	;
		db  49h	; I
		db    0	;
		db  1Ch	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db  51h	; Q
		db    0	;
		db  33h	; 3
		db    0	;
		db    4	;
		db    0	;
		db    4	;
		db    0	;
		db    3	;
		db    0	;
		db  51h	; Q
		db    0	;
		db  39h	; 9
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db  14h	;
		db    0	;
		db  74h	; t
		db    0	;
		db    7	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db  2Dh	; -
		db    0	;
		db  29h	; )
		db    0	;
		db    5	;
		db    0	;
		db    7	;
		db    0	;
		db    3	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  72h	; r
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    0	;
		db  15h	;
		db    0	;
		db  45h	; E
		db    0	;
		db    3	;
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    0	;
		db  1Bh	;
		db    0	;
		db  25h	; %
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db  49h	; I
		db    0	;
		db    1	;
		db    0	;
		db    5	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db  15h	;
		db    0	;
		db  28h	; (
		db    0	;
		db    6	;
		db    0	;
		db    6	;
		db    0	;
		db    3	;
		db    0	;
		db  33h	; 3
		db    0	;
		db  18h	;
		db    0	;
		db    5	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db  2Bh	; +
		db    0	;
		db  6Fh	; o
		db    0	;
		db    6	;
		db    0	;
		db    4	;
		db    0	;
		db    3	;
		db    0	;
		db  44h	; D
		db    0	;
		db    7	;
		db    0	;
		db    2	;
		db    0	;
		db    6	;
		db    0	;
		db    1	;
		db    0	;
		db  3Ah	; :
		db    0	;
		db  4Bh	; K
		db    0	;
		db    3	;
		db    0	;
		db    4	;
		db    0	;
		db    1	;
		db    0	;
		db    7	;
		db    0	;
		db  3Ah	; :
		db    0	;
		db  0Ah	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    1	;
		db    0	;
		db  52h	; R
		db    0	;
		db  60h	; `
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db    1	;
		db    0	;
		db  0Dh	;
		db    0	;
		db  70h	; p
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    0	;
		db    1	;
		db    0	;
		db    6	;
		db    0	;
		db  64h	; d
		db    0	;
		db    3	;
		db    0	;
		db    4	;
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db  44h	; D
		db    0	;
		db    2	;
		db    0	;
		db    7	;
		db    0	;
		db    1	;
		db    0	;
		db  21h	; !
		db    0	;
		db  1Fh	;
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db    1	;
		db    0	;
		db  20h	;
		db    0	;
		db  65h	; e
		db    0	;
		db    5	;
		db    0	;
		db    3	;
		db    0	;
		db    1	;
		db    0	;
		db  39h	; 9
		db    0	;
		db  47h	; G
		db    0	;
		db    3	;
		db    0	;
		db    4	;
		db    0	;
		db    2	;
		db    0	;
		db    1	;
		db    0	;
		db  76h	; v
		db    0	;
		db    7	;
		db    0	;
		db    9	;
		db    0	;
		db    2	;
		db    0	;
		db  49h	; I
		db    0	;
		db  7Dh	; }
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db  4Fh	; O
		db    0	;
		db  77h	; w
		db    0	;
		db    5	;
		db    0	;
		db    8	;
		db    0	;
		db    2	;
		db    0	;
		db  49h	; I
		db    0	;
		db  59h	; Y
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db    8	;
		db    0	;
		db  79h	; y
		db    0	;
		db    5	;
		db    0	;
		db    6	;
		db    0	;
		db    2	;
		db    0	;
		db    8	;
		db    0	;
		db  73h	; s
		db    0	;
		db    2	;
		db    0	;
		db    4	;
		db    0	;
		db    2	;
		db    0	;
		db  21h	; !
		db    0	;
		db  5Dh	; ]
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    0	;
		db    2	;
		db    0	;
		db  41h	; A
		db    0	;
		db  63h	; c
		db    0	;
		db    5	;
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  60h	; `
		db    0	;
		db    5	;
		db    0	;
		db    4	;
		db    0	;
		db    2	;
		db    0	;
		db    4	;
		db    0	;
		db  31h	; 1
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db    6	;
		db    0	;
		db  0Eh	;
		db    0	;
		db  34h	; 4
		db    0	;
		db    2	;
		db    0	;
		db    1	;
		db    0	;
		db    6	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  36h	; 6
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db    6	;
		db    0	;
		db  21h	; !
		db    0	;
		db  3Dh	; =
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db    6	;
		db    0	;
		db  49h	; I
		db    0	;
		db    5	;
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db    5	;
		db    0	;
		db  49h	; I
		db    0	;
		db    8	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    2	;
		db    0	;
		db    5	;
		db    0	;
		db  53h	; S
		db    0	;
		db    6	;
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db    5	;
		db    0	;
		db  49h	; I
		db    0	;
		db    3	;
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db    5	;
		db    0	;
		db  49h	; I
		db    0	;
		db  0Ah	;
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db    5	;
		db    0	;
		db  4Ch	; L
		db    0	;
		db  0Ah	;
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db    5	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    7	;
		db    7	;
		db 0F3h	; �
		db    3	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    5	;
		db 0F3h	; �
		db    3	;
		db    0	;
		db    0	;
		db  4Ch	; L
		db  2Ch	; ,
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  4Ch	; L
		db  29h	; )
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  4Dh	; M
		db  29h	; )
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  29h	; )
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  4Fh	; O
		db  29h	; )
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  50h	; P
		db  29h	; )
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  50h	; P
		db  2Ah	; *
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  50h	; P
		db  2Bh	; +
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  50h	; P
		db  2Ch	; ,
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  50h	; P
		db  2Dh	; -
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  4Ch	; L
		db  2Eh	; .
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  4Dh	; M
		db  2Eh	; .
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  2Eh	; .
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  4Fh	; O
		db  2Eh	; .
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  51h	; Q
		db  2Eh	; .
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  50h	; P
		db  2Fh	; /
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  51h	; Q
		db  2Fh	; /
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  50h	; P
		db  2Ah	; *
		db 0FFh	; �
		db    3	;
		db 0FFh	; �
		db 0FFh	; �
		db  43h	; C
		db  79h	; y
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  3Ah	; :
		db  79h	; y
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db  0Bh	;
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  3Fh	; ?
		db  5Ch	; \
		db  17h	;
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  40h	; @
		db  5Dh	; ]
		db  17h	;
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  40h	; @
		db  61h	; a
		db  17h	;
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  40h	; @
		db  60h	; `
		db  17h	;
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  34h	; 4
		db  45h	; E
		db  17h	;
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  39h	; 9
		db  5Ch	; \
		db 0F3h	; �
		db    3	;
		db    1	;
		db    0	;
		db  38h	; 8
		db  60h	; `
		db 0F3h	; �
		db    3	;
		db    1	;
		db    0	;
		db  46h	; F
		db  14h	;
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  50h	; P
		db  12h	;
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  47h	; G
		db  10h	;
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  2Dh	; -
		db  6Fh	; o
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  13h	;
		db  77h	; w
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ch	;
		db  7Eh	; ~
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  4Bh	; K
		db  3Fh	; ?
		db  0Bh	;
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  51h	; Q
		db  4Dh	; M
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  51h	; Q
		db  57h	; W
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  53h	; S
		db  54h	; T
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  52h	; R
		db  4Dh	; M
		db  3Bh	; ;
		db    4	;
		db    0	;
		db    0	;
		db    9	;
		db    8	;
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db    1	;
		db  2Dh	; -
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db    4	;
		db  30h	; 0
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db  2Bh	; +
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  10h	;
		db  2Ch	; ,
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  10h	;
		db  2Dh	; -
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db    9	;
		db  2Dh	; -
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db  2Dh	; -
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db    9	;
		db  2Ch	; ,
		db  2Fh	; /
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db    4	;
		db  31h	; 1
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Eh	;
		db  34h	; 4
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Bh	;
		db  36h	; 6
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  1Ah	;
		db  36h	; 6
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  1Eh	;
		db  38h	; 8
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  1Ah	;
		db  34h	; 4
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db  34h	; 4
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  16h	;
		db  32h	; 2
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  11h	;
		db  34h	; 4
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db  35h	; 5
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  16h	;
		db  35h	; 5
		db  47h	; G
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db  32h	; 2
		db  53h	; S
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  21h	; !
		db  3Dh	; =
		db  53h	; S
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db    8	;
		db  54h	; T
		db 0E7h	; �
		db    3	;
		db    0	;
		db    0	;
		db  36h	; 6
		db  18h	;
		db  60h	; `
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  33h	; 3
		db  16h	;
		db  60h	; `
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  34h	; 4
		db  14h	;
		db  60h	; `
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  37h	; 7
		db  14h	;
		db  60h	; `
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  37h	; 7
		db  15h	;
		db  60h	; `
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  38h	; 8
		db  15h	;
		db  60h	; `
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  0Bh	;
		db  5Bh	; [
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    9	;
		db  62h	; b
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    7	;
		db  60h	; `
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    7	;
		db  60h	; `
		db    1	;
		db    0	;
		db    5	;
		db    0	;
		db  51h	; Q
		db    9	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db    4	;
		db  30h	; 0
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    2	;
		db  34h	; 4
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    6	;
		db  32h	; 2
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    7	;
		db    7	;
		db    0	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  15h	;
		db    3	;
		db    0	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  30h	; 0
		db  59h	; Y
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  37h	; 7
		db  2Ch	; ,
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  39h	; 9
		db  4Dh	; M
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  11h	;
		db  5Fh	; _
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  30h	; 0
		db  3Eh	; >
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  26h	; &
		db  44h	; D
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  3Ah	; :
		db  4Eh	; N
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db  3Bh	; ;
		db  4Ch	; L
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    2	;
		db  67h	; g
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  11h	;
		db  5Eh	; ^
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  0Bh	;
		db  5Bh	; [
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  1Bh	;
		db  4Bh	; K
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  21h	; !
		db  46h	; F
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  17h	;
		db  46h	; F
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  25h	; %
		db  44h	; D
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  0Eh	;
		db  0Fh	;
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  10h	;
		db  78h	; x
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  34h	; 4
		db  7Ch	; |
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  4Dh	; M
		db  42h	; B
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  12h	;
		db  24h	; $
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  1Ch	;
		db  40h	; @
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  13h	;
		db  23h	; #
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db 0FFh	; �
		db 0FFh	; �
		db  13h	;
		db    0	;
		db  3Fh	; ?
		db  5Ah	; Z
		db 0FFh	; �
		db 0FFh	; �
		db  15h	;
		db    0	;
		db  47h	; G
		db  38h	; 8
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  47h	; G
		db  19h	;
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  53h	; S
		db  47h	; G
		db 0FFh	; �
		db 0FFh	; �
		db  0Dh	;
		db    0	;
		db  52h	; R
		db  47h	; G
		db 0FFh	; �
		db 0FFh	; �
		db  0Dh	;
		db    0	;
		db  51h	; Q
		db  47h	; G
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  4Fh	; O
		db  48h	; H
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  4Eh	; N
		db  48h	; H
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  4Dh	; M
		db  48h	; H
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  50h	; P
		db  4Ah	; J
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  53h	; S
		db  48h	; H
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  4Dh	; M
		db  49h	; I
		db 0FFh	; �
		db 0FFh	; �
		db  13h	;
		db    0	;
		db  4Dh	; M
		db  4Ah	; J
		db 0FFh	; �
		db 0FFh	; �
		db  13h	;
		db    0	;
		db  50h	; P
		db  4Bh	; K
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  4Eh	; N
		db  4Bh	; K
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db    5	;
		db  38h	; 8
		db 0FFh	; �
		db 0FFh	; �
		db  0Dh	;
		db    0	;
		db  31h	; 1
		db  12h	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Dh	;
		db    0	;
		db  4Ch	; L
		db  20h	;
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  4Ch	; L
		db  26h	; &
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  3Bh	; ;
		db  45h	; E
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  22h	; "
		db  2Dh	; -
		db 0FFh	; �
		db 0FFh	; �
		db  14h	;
		db    0	;
		db  2Dh	; -
		db  6Fh	; o
		db 0FFh	; �
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  19h	;
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  1Fh	;
		db    9	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Eh	;
		db    0	;
		db  14h	;
		db  24h	; $
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  0Bh	;
		db  47h	; G
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  0Ch	;
		db  44h	; D
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  42h	; B
		db  0Ah	;
		db 0FFh	; �
		db 0FFh	; �
		db  18h	;
		db    0	;
		db  0Ch	;
		db  7Eh	; ~
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  4Bh	; K
		db  3Fh	; ?
		db 0FFh	; �
		db 0FFh	; �
		db  13h	;
		db    0	;
		db  4Bh	; K
		db  42h	; B
		db 0FFh	; �
		db 0FFh	; �
		db  13h	;
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db 0FFh	; �
		db 0FFh	; �
		db  13h	;
		db    0	;
		db  51h	; Q
		db  58h	; X
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  51h	; Q
		db  4Dh	; M
		db 0FFh	; �
		db 0FFh	; �
		db  1Ch	;
		db    0	;
		db  53h	; S
		db  54h	; T
		db 0FFh	; �
		db 0FFh	; �
		db  1Ch	;
		db    0	;
		db  51h	; Q
		db  57h	; W
		db 0FFh	; �
		db 0FFh	; �
		db  1Ch	;
		db    0	;
		db    9	;
		db    8	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db    1	;
		db    8	;
		db 0FFh	; �
		db 0FFh	; �
		db  16h	;
		db    0	;
		db  3Dh	; =
		db  66h	; f
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  42h	; B
		db  67h	; g
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  4Bh	; K
		db  63h	; c
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  49h	; I
		db  5Bh	; [
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  4Ch	; L
		db  63h	; c
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  2Fh	; /
		db  67h	; g
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  33h	; 3
		db  65h	; e
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  35h	; 5
		db  62h	; b
		db 0FFh	; �
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  38h	; 8
		db  1Dh	;
		db 0FFh	; �
		db 0FFh	; �
		db  10h	;
		db    0	;
		db  18h	;
		db  41h	; A
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  1Bh	;
		db  40h	; @
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  13h	;
		db  22h	; "
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  22h	; "
		db  13h	;
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  28h	; (
		db  1Fh	;
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  29h	; )
		db  17h	;
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  24h	; $
		db  19h	;
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  15h	;
		db  25h	; %
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  11h	;
		db  23h	; #
		db 0FFh	; �
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  26h	; &
		db  24h	; $
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  23h	; #
		db  23h	; #
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  29h	; )
		db  1Fh	;
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  2Bh	; +
		db  1Dh	;
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  2Eh	; .
		db  22h	; "
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  36h	; 6
		db  1Ah	;
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  35h	; 5
		db  22h	; "
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  2Bh	; +
		db  1Ch	;
		db 0FFh	; �
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  2Dh	; -
		db  1Ah	;
		db 0FFh	; �
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  2Eh	; .
		db  1Ah	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  2Bh	; +
		db  29h	; )
		db 0FFh	; �
		db 0FFh	; �
		db  0Eh	;
		db    0	;
		db  35h	; 5
		db  23h	; #
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  37h	; 7
		db  23h	; #
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  37h	; 7
		db  27h	; '
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  37h	; 7
		db  1Ah	;
		db 0FFh	; �
		db 0FFh	; �
		db  1Ch	;
		db    0	;
		db  38h	; 8
		db  1Ch	;
		db 0FFh	; �
		db 0FFh	; �
		db  1Ch	;
		db    0	;
		db    5	;
		db  1Dh	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db    6	;
		db  1Dh	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db    9	;
		db  23h	; #
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db    1	;
		db  2Ch	; ,
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db    9	;
		db  26h	; &
		db 0FFh	; �
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db    1	;
		db  2Dh	; -
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db    4	;
		db  30h	; 0
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db    9	;
		db  2Dh	; -
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  10h	;
		db  2Dh	; -
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db    4	;
		db  31h	; 1
		db 0FFh	; �
		db 0FFh	; �
		db  1Dh	;
		db    0	;
		db  0Eh	;
		db  34h	; 4
		db 0FFh	; �
		db 0FFh	; �
		db  1Dh	;
		db    0	;
		db  0Bh	;
		db  36h	; 6
		db 0FFh	; �
		db 0FFh	; �
		db  1Dh	;
		db    0	;
		db  13h	;
		db  3Bh	; ;
		db 0FFh	; �
		db 0FFh	; �
		db  1Dh	;
		db    0	;
		db  33h	; 3
		db  30h	; 0
		db 0FFh	; �
		db 0FFh	; �
		db  16h	;
		db    0	;
		db  33h	; 3
		db  36h	; 6
		db 0FFh	; �
		db 0FFh	; �
		db  14h	;
		db    0	;
		db  21h	; !
		db  3Dh	; =
		db 0FFh	; �
		db 0FFh	; �
		db  1Ah	;
		db    0	;
		db  13h	;
		db  50h	; P
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  18h	;
		db  56h	; V
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  1Ch	;
		db  56h	; V
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  1Fh	;
		db  58h	; X
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  27h	; '
		db  58h	; X
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  28h	; (
		db  58h	; X
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db    7	;
		db  72h	; r
		db 0FFh	; �
		db 0FFh	; �
		db  13h	;
		db    0	;
		db  0Ah	;
		db  65h	; e
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  0Fh	;
		db  68h	; h
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  2Ch	; ,
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  30h	; 0
		db    1	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  47h	; G
		db    1	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  44h	; D
		db    8	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  37h	; 7
		db  0Fh	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  30h	; 0
		db  0Fh	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  33h	; 3
		db    6	;
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
GIRLIST		db  0Ah	;
		db  61h	; a
		db    0	;
		db    0	;
		db    9	;
		db  5Eh	; ^
		db    0	;
		db    0	;
		db    9	;
		db  5Bh	; [
		db    0	;
		db    0	;
		db    6	;
		db  5Dh	; ]
		db    0	;
		db    0	;
		db  0Ch	;
		db  5Dh	; ]
		db    0	;
		db    0	;
		db    9	;
		db  61h	; a
		db    1	;
		db    0	;
		db    9	;
		db  5Ch	; \
		db    1	;
		db    0	;
FRAME3		dw 0			; DATA XREF: COLLISIONS+120r
					; COLLISIONS+12Fr
STAIRDIRN	dw 0			; DATA XREF: sub_0_D55D+3Ew
					; sub_0_D55D+4Er
INQUMAR		db    0	;
		db    0	;
		db    0	;
		db  0Fh	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  2Dh	; -
		db    0	;
		db  3Ch	; <
		db    0	;
		db  4Bh	; K
		db    0	;
		db  5Ah	; Z
		db    0	;
		db  69h	; i
		db    0	;
		db  78h	; x
		db    0	;
		db  87h	; �
		db    0	;
		db  96h	; �
		db    0	;
		db 0A5h	; �
		db    0	;
		db 0B4h	; �
		db    0	;
		db 0C3h	; �
		db    0	;
		db 0D2h	; �
		db    0	;
		db 0E1h	; �
		db    0	;
		db 0F0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
THROWHT		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    0	;
FIST_FRAME	dw 0FFFFh		; DATA XREF: COMBAT+34w
INPUTMODE	dw 1			; DATA XREF: JUSTICE+3r JUSTICE+1EAr
OLDIM		db    1	;
		db    0	;
OLDCX		db    0	;
		db    0	;
OLDCY		db    0	;
		db    0	;
SSBOXES		db  20h	;
		db    0	;
		db  88h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  40h	; @
		db    0	;
		db    1	;
		db    0	;
		db  60h	; `
		db    0	;
		db  88h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  40h	; @
		db    0	;
		db    2	;
		db    0	;
		db 0A0h	; �
		db    0	;
		db  88h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  40h	; @
		db    0	;
		db    3	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db  88h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  40h	; @
		db    0	;
		db    4	;
		db    0	;
		db  20h	;
		db    1	;
		db  88h	; �
		db    0	;
		db  20h	;
		db    0	;
		db  40h	; @
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db  88h	; �
		db    0	;
		db  20h	;
		db    0	;
		db  40h	; @
		db    0	;
		db    6	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
PADBOXES	db    8	;
		db    0	;
		db    8	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    1	;
		db    0	;
		db  18h	;
		db    0	;
		db    8	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    2	;
		db    0	;
		db  28h	; (
		db    0	;
		db    8	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    3	;
		db    0	;
		db    8	;
		db    0	;
		db  18h	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    4	;
		db    0	;
		db  18h	;
		db    0	;
		db  18h	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    5	;
		db    0	;
		db  28h	; (
		db    0	;
		db  18h	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    6	;
		db    0	;
		db    8	;
		db    0	;
		db  28h	; (
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    7	;
		db    0	;
		db  18h	;
		db    0	;
		db  28h	; (
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    8	;
		db    0	;
		db  28h	; (
		db    0	;
		db  28h	; (
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    9	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
UNK6		db    2	;
		db    0	;
		db  12h	;
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  20h	;
		db    0	;
		db  10h	;
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db  32h	; 2
		db    0	;
		db  1Eh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    3	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
??BOXES		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  10h	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  1Eh	;
		db    0	;
		db  10h	;
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db  12h	;
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    3	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  9Ah	; �
		db    0	;
		db  2Bh	; +
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Dh	;
		db    0	;
		db 0AAh	; �
		db    0	;
		db  2Bh	; +
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Eh	;
		db    0	;
		db  9Ah	; �
		db    0	;
		db  3Ah	; :
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Fh	;
		db    0	;
		db 0AAh	; �
		db    0	;
		db  3Ah	; :
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db  10h	;
		db    0	;
		db  9Ah	; �
		db    0	;
		db  49h	; I
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db  11h	;
		db    0	;
		db 0AAh	; �
		db    0	;
		db  49h	; I
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db  12h	;
		db    0	;
		db 0C5h	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  13h	;
		db    0	;
		db 0D8h	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  14h	;
		db    0	;
		db 0C5h	; �
		db    0	;
		db  45h	; E
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  15h	;
		db    0	;
		db 0D8h	; �
		db    0	;
		db  45h	; E
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  16h	;
		db    0	;
		db  98h	; �
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db    8	;
		db    0	;
		db  17h	;
		db    0	;
		db  18h	;
		db    1	;
		db    8	;
		db    0	;
		db  20h	;
		db    0	;
		db    8	;
		db    0	;
		db  18h	;
		db    0	;
		db  1Ah	;
		db    1	;
		db  13h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    1	;
		db    0	;
		db  2Ah	; *
		db    1	;
		db  13h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    2	;
		db    0	;
		db  1Ah	;
		db    1	;
		db  22h	; "
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    3	;
		db    0	;
		db  2Ah	; *
		db    1	;
		db  22h	; "
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    4	;
		db    0	;
		db  1Ah	;
		db    1	;
		db  31h	; 1
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    5	;
		db    0	;
		db  2Ah	; *
		db    1	;
		db  31h	; 1
		db    0	;
		db  0Dh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    6	;
		db    0	;
		db  13h	;
		db    1	;
		db  4Bh	; K
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    7	;
		db    0	;
		db  2Ah	; *
		db    1	;
		db  4Bh	; K
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    8	;
		db    0	;
		db  13h	;
		db    1	;
		db  5Eh	; ^
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    9	;
		db    0	;
		db  2Ah	; *
		db    1	;
		db  5Eh	; ^
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  13h	;
		db    1	;
		db  71h	; q
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  0Bh	;
		db    0	;
		db  2Ah	; *
		db    1	;
		db  71h	; q
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
PADPOSNS	db  20h	;
		db 0AAh	; �
		db  60h	; `
		db 0AAh	; �
		db 0A0h	; �
		db 0AAh	; �
		db 0E0h	; �
		db 0AAh	; �
PADFILES	db  6Dh	; m
		db    4	;
		db  74h	; t
		db    4	;
		db  7Bh	; {
		db    4	;
		db  82h	; �
		db    4	;
		db 0C4h	; �
		db    4	;
		db  2Fh	; /
		db  3Fh	; ?
		db 0BEh	; �
		db  3Fh	; ?
		db  76h	; v
		db  40h	; @
		db  8Bh	; �
		db  40h	; @
		db  8Bh	; �
		db  40h	; @
PADTABLE	db    4	;
		db    0	;
		db    1	;
		db    2	;
		db 0D7h	; �
		db  5Eh	; ^
		db 0EAh	; �
		db  5Eh	; ^
		db  97h	; �
		db  76h	; v
		db 0AAh	; �
		db  76h	; v
		db  57h	; W
		db  8Eh	; �
		db  6Ah	; j
		db  8Eh	; �
RHADD		db  28h	; (
		db 0C9h	; �
ACTIVEBASKET	dw 0			; DATA XREF: MIDNIGHT+8Ew MIDNIGHT+B1r
					; ...
		db  45h	; E
		db  3Fh	; ?
		db  58h	; X
		db  3Fh	; ?
		db    5	;
		db  57h	; W
		db  18h	;
		db  57h	; W
SCATTERCELL	dw 0			; DATA XREF: REPOSITIONOBJ+13w
PUNCHFLAG	db 0			; DATA XREF: COMBAT+Cr	COMBAT+16r
					; ...
		db    0	;
		db    0	;
		db    0	;
		db    0	;
DOSOUT		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    8	;
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db    1	;
		db    0	;
		db  30h	; 0
		db    0	;
		db    8	;
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db    2	;
		db    0	;
		db  58h	; X
		db    0	;
		db    8	;
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db    3	;
		db    0	;
		db    8	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db    4	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db    5	;
		db    0	;
		db  58h	; X
		db    0	;
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db    6	;
		db    0	;
		db    8	;
		db    0	;
		db  58h	; X
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db    7	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  58h	; X
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db    8	;
		db    0	;
		db  58h	; X
		db    0	;
		db  58h	; X
		db    0	;
		db  20h	;
		db    0	;
		db  20h	;
		db    0	;
		db    9	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  28h	; (
		db    0	;
		db  2Ch	; ,
		db    0	;
		db 0F0h	; �
		db    0	;
		db  0Ah	;
		db    0	;
		db    1	;
		db    0	;
		db  28h	; (
		db    0	;
		db  3Bh	; ;
		db    0	;
		db 0F0h	; �
		db    0	;
		db  0Ah	;
		db    0	;
		db    2	;
		db    0	;
		db  28h	; (
		db    0	;
		db  4Ah	; J
		db    0	;
		db 0F0h	; �
		db    0	;
		db  0Ah	;
		db    0	;
		db    3	;
		db    0	;
		db  28h	; (
		db    0	;
		db  59h	; Y
		db    0	;
		db 0F0h	; �
		db    0	;
		db  0Ah	;
		db    0	;
		db    4	;
		db    0	;
		db  28h	; (
		db    0	;
		db  68h	; h
		db    0	;
		db 0F0h	; �
		db    0	;
		db  0Ah	;
		db    0	;
		db    5	;
		db    0	;
		db  28h	; (
		db    0	;
		db  77h	; w
		db    0	;
		db 0F0h	; �
		db    0	;
		db  0Ah	;
		db    0	;
		db    6	;
		db    0	;
		db  28h	; (
		db    0	;
		db  86h	; �
		db    0	;
		db 0F0h	; �
		db    0	;
		db  0Ah	;
		db    0	;
		db    7	;
		db    0	;
		db  28h	; (
		db    0	;
		db  95h	; �
		db    0	;
		db 0F0h	; �
		db    0	;
		db  0Ah	;
		db    0	;
		db    8	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  38h	; 8
		db    1	;
		db 0C0h	; �
		db    0	;
		db    8	;
		db    0	;
		db    8	;
		db    0	;
		db    1	;
		db    0	;
		db    6	;
		db    0	;
		db  70h	; p
		db    0	;
		db  46h	; F
		db    0	;
		db    8	;
		db    0	;
		db    2	;
		db    0	;
		db    6	;
		db    0	;
		db  79h	; y
		db    0	;
		db  46h	; F
		db    0	;
		db    8	;
		db    0	;
		db    3	;
		db    0	;
		db    6	;
		db    0	;
		db  82h	; �
		db    0	;
		db  46h	; F
		db    0	;
		db    8	;
		db    0	;
		db    4	;
		db    0	;
		db    6	;
		db    0	;
		db  8Bh	; �
		db    0	;
		db  46h	; F
		db    0	;
		db    8	;
		db    0	;
		db    5	;
		db    0	;
		db    6	;
		db    0	;
		db  94h	; �
		db    0	;
		db  46h	; F
		db    0	;
		db    8	;
		db    0	;
		db    6	;
		db    0	;
		db    6	;
		db    0	;
		db  9Dh	; �
		db    0	;
		db  46h	; F
		db    0	;
		db    8	;
		db    0	;
		db    7	;
		db    0	;
		db    6	;
		db    0	;
		db 0A6h	; �
		db    0	;
		db  46h	; F
		db    0	;
		db    8	;
		db    0	;
		db    8	;
		db    0	;
		db    6	;
		db    0	;
		db 0AFh	; �
		db    0	;
		db  46h	; F
		db    0	;
		db    8	;
		db    0	;
		db    9	;
		db    0	;
		db    6	;
		db    0	;
		db 0B8h	; �
		db    0	;
		db  46h	; F
		db    0	;
		db    8	;
		db    0	;
		db  0Ah	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  2Ah	; *
		db  30h	; 0
		db  33h	; 3
		db  22h	; "
		db  2Dh	; -
		db  36h	; 6
		db  39h	; 9
		db  3Ch	; <
		db  27h	; '
FLYFLAG		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SAVDAYBCD	db    0	;
		db    0	;
SAVMONTHBCD	db    0	;
		db    0	;
GAMESLOT	db    0	;
		db    0	;
		db    3	;
		db  6Ah	; j
DBX		db  80h	; �
		db  3Dh	; =
DBY		db  80h	; �
		db  5Fh	; _
DBH		db  40h	; @
DBFLAG		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  50h	; P
		db  14h	;
		db 0A0h	; �
		db    0	;
		db  64h	; d
		db    0	;
		db    4	;
		db 0D7h	; �
		db 0A0h	; �
		db    0	;
		db  50h	; P
		db  14h	;
		db 0A0h	; �
		db    0	;
		db  64h	; d
		db    0	;
		db    4	;
		db 0D7h	; �
		db    0	;
		db  7Dh	; }
		db  50h	; P
		db  14h	;
		db 0A0h	; �
		db    0	;
		db  64h	; d
		db    0	;
		db    4	;
		db 0D7h	; �
		db 0A0h	; �
		db  7Dh	; }
		db  50h	; P
		db  14h	;
		db 0A0h	; �
		db    0	;
		db  64h	; d
		db    0	;
		db    4	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db  50h	; P
		db  14h	;
		db 0A0h	; �
		db    0	;
		db  64h	; d
		db    0	;
		db  0Ah	;
		db 0D7h	; �
		db 0A0h	; �
		db    0	;
		db  50h	; P
		db  14h	;
		db 0A0h	; �
		db    0	;
		db  64h	; d
		db    0	;
		db  0Ah	;
		db 0D7h	; �
		db    0	;
		db  7Dh	; }
		db  50h	; P
		db  14h	;
		db 0A0h	; �
		db    0	;
		db  64h	; d
		db    0	;
		db  0Ah	;
		db 0D7h	; �
		db  57h	; W
		db 0A3h	; �
		db    7	;
		db  3Ah	; :
		db  28h	; (
		db    0	;
		db    6	;
		db    0	;
		db  0Ah	;
		db 0D7h	; �
		db 0DCh	; �
		db 0AAh	; �
		db  8Ch	; �
		db  41h	; A
		db  1Eh	;
		db    0	;
		db    8	;
		db    0	;
		db  0Ah	;
		db 0D7h	; �
		db  54h	; T
		db 0B2h	; �
		db    4	;
		db  49h	; I
		db  30h	; 0
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Ah	;
		db 0D7h	; �
		db  54h	; T
		db 0C1h	; �
		db    4	;
		db  58h	; X
		db  30h	; 0
		db    0	;
		db  21h	; !
		db    0	;
		db  0Ah	;
		db 0D7h	; �
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    1	;
		db    5	;
		db    2	;
		db    5	;
		db    3	;
		db    5	;
		db    4	;
		db  1Eh	;
		db    5	;
		db  1Eh	;
		db    6	;
		db  32h	; 2
		db    7	;
		db  64h	; d
		db    8	;
		db  32h	; 2
		db    9	;
		db  32h	; 2
		db  0Ah	;
		db  32h	; 2
		db  0Bh	;
		db  14h	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db  9Dh	; �
		db 0A5h	; �
		db 0E5h	; �
		db 0A5h	; �
		db 0A5h	; �
		db  7Ch	; |
		db  5Dh	; ]
		db  7Ch	; |
		db 0EDh	; �
		db  7Ch	; |
		db  2Dh	; -
		db 0A6h	; �
		db 0DDh	; �
		db 0CEh	; �
		db  25h	; %
		db 0CFh	; �
		db  6Dh	; m
		db 0CFh	; �
		db    0	;
		db  7Dh	; }
		db  12h	;
		db  7Dh	; }
		db  24h	; $
		db  7Dh	; }
		db  80h	; �
		db 0A2h	; �
		db  92h	; �
		db 0A2h	; �
		db 0A4h	; �
		db 0A2h	; �
		db  72h	; r
		db    0	;
		db  85h	; �
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    1	;
		db    0	;
		db 0BAh	; �
		db    0	;
		db  85h	; �
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    2	;
		db    0	;
		db 0BAh	; �
		db    0	;
		db  64h	; d
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    3	;
		db    0	;
		db  72h	; r
		db    0	;
		db  64h	; d
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    4	;
		db    0	;
		db    2	;
		db    1	;
		db  64h	; d
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    5	;
		db    0	;
		db    2	;
		db    1	;
		db  85h	; �
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    6	;
		db    0	;
		db  72h	; r
		db    0	;
		db 0A6h	; �
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    7	;
		db    0	;
		db 0BAh	; �
		db    0	;
		db 0A6h	; �
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    8	;
		db    0	;
		db    2	;
		db    1	;
		db 0A6h	; �
		db    0	;
		db  1Ch	;
		db    0	;
		db  1Ch	;
		db    0	;
		db    9	;
		db    0	;
		db  78h	; x
		db    0	;
		db    8	;
		db    0	;
		db  40h	; @
		db    0	;
		db  40h	; @
		db    0	;
		db  0Ah	;
		db    0	;
		db  9Dh	; �
		db    0	;
		db  84h	; �
		db    0	;
		db  12h	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  0Bh	;
		db    0	;
		db 0E5h	; �
		db    0	;
		db  84h	; �
		db    0	;
		db  12h	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db 0E5h	; �
		db    0	;
		db  63h	; c
		db    0	;
		db  12h	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db  9Dh	; �
		db    0	;
		db  63h	; c
		db    0	;
		db  12h	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  0Eh	;
		db    0	;
		db  2Dh	; -
		db    1	;
		db  63h	; c
		db    0	;
		db  12h	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  0Fh	;
		db    0	;
		db  2Dh	; -
		db    1	;
		db  84h	; �
		db    0	;
		db  12h	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  10h	;
		db    0	;
		db  9Dh	; �
		db    0	;
		db 0A5h	; �
		db    0	;
		db  12h	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  11h	;
		db    0	;
		db 0E5h	; �
		db    0	;
		db 0A5h	; �
		db    0	;
		db  12h	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  12h	;
		db    0	;
		db  2Dh	; -
		db    1	;
		db 0A5h	; �
		db    0	;
		db  12h	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  13h	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
C_BLOCKS	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
REGULARS	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
MONSTERS	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
P_BLOCKS	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
ENDOFCHARS	db    0	;
		db    0	;
BASKET_PU	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db  40h	; @
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  20h	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  20h	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db    0	;
		db    0	;
RELATIVES	db    0	;
		db    0	;
		db  20h	;
		db    0	;
		db  40h	; @
		db    0	;
		db  60h	; `
		db    0	;
		db  70h	; p
		db    0	;
		db  10h	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  50h	; P
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  20h	;
		db    0	;
		db  40h	; @
		db    0	;
		db  50h	; P
		db    0	;
		db  70h	; p
		db    0	;
		db  10h	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  40h	; @
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  20h	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  50h	; P
		db    0	;
		db  70h	; p
		db    0	;
		db  10h	;
		db    0	;
		db  20h	;
		db    0	;
		db  40h	; @
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  10h	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  50h	; P
		db    0	;
		db  70h	; p
		db    0	;
ANIMLIST	db  7Ch	; |
		db  94h	; �
		db 0FCh	; �
		db  94h	; �
		db  7Ch	; |
		db  95h	; �
		db 0FCh	; �
		db  95h	; �
		db 0FCh	; �
		db  95h	; �
		db  7Ch	; |
		db  96h	; �
		db 0FCh	; �
		db  94h	; �
		db 0FCh	; �
		db  96h	; �
		db  7Ch	; |
		db  96h	; �
		db 0FCh	; �
		db  96h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  96h	; �
		db 0FCh	; �
		db  97h	; �
		db  7Ch	; |
		db  98h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  98h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  98h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  98h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  97h	; �
		db  7Ch	; |
		db  97h	; �
WALKSEQS	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  69h	; i
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0D2h	; �
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db    0	;
		db  80h	; �
		db    0	;
		db  7Eh	; ~
		db    0	;
		db  80h	; �
		db    0	;
		db  15h	;
		db    0	;
		db  80h	; �
		db    0	;
		db 0E7h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  2Ah	; *
		db    0	;
		db  80h	; �
		db    0	;
		db  93h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  2Ah	; *
		db    0	;
		db  80h	; �
		db    0	;
		db 0FCh	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  80h	; �
		db    0	;
		db 0A8h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  80h	; �
		db    0	;
		db  11h	;
		db    1	;
		db  80h	; �
		db    0	;
		db  54h	; T
		db    0	;
		db    0	;
		db    0	;
		db 0BDh	; �
		db    0	;
		db    0	;
		db    0	;
		db  54h	; T
		db    0	;
		db    0	;
		db    0	;
		db  26h	; &
		db    1	;
		db    0	;
		db    0	;
		db  3Fh	; ?
		db    0	;
		db    0	;
		db    0	;
		db 0A8h	; �
		db    0	;
		db    0	;
		db    0	;
		db  3Fh	; ?
		db    0	;
		db    0	;
		db    0	;
		db  11h	;
		db    1	;
		db    0	;
		db    0	;
		db  2Ah	; *
		db    0	;
		db    0	;
		db    0	;
		db  93h	; �
		db    0	;
		db    0	;
		db    0	;
		db  2Ah	; *
		db    0	;
		db    0	;
		db    0	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db    0	;
		db    0	;
		db    0	;
		db  7Eh	; ~
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db    0	;
		db    0	;
		db    0	;
		db 0E7h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db  69h	; i
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db 0D2h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  15h	;
		db    0	;
		db 0C0h	; �
		db    0	;
		db  7Eh	; ~
		db    0	;
		db 0C0h	; �
		db    0	;
		db  15h	;
		db    0	;
		db 0C0h	; �
		db    0	;
		db 0E7h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  2Ah	; *
		db    0	;
		db 0C0h	; �
		db    0	;
		db  93h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  2Ah	; *
		db    0	;
		db 0C0h	; �
		db    0	;
		db 0FCh	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  3Fh	; ?
		db    0	;
		db 0C0h	; �
		db    0	;
		db 0A8h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  3Fh	; ?
		db    0	;
		db 0C0h	; �
		db    0	;
		db  11h	;
		db    1	;
		db 0C0h	; �
		db    0	;
		db  54h	; T
		db    0	;
		db  40h	; @
		db    0	;
		db 0BDh	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  54h	; T
		db    0	;
		db  40h	; @
		db    0	;
		db  26h	; &
		db    1	;
		db  40h	; @
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  40h	; @
		db    0	;
		db 0A8h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  40h	; @
		db    0	;
		db  11h	;
		db    1	;
		db  40h	; @
		db    0	;
		db  2Ah	; *
		db    0	;
		db  40h	; @
		db    0	;
		db  93h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  2Ah	; *
		db    0	;
		db  40h	; @
		db    0	;
		db 0FCh	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  15h	;
		db    0	;
		db  40h	; @
		db    0	;
		db  7Eh	; ~
		db    0	;
		db  40h	; @
		db    0	;
		db  15h	;
		db    0	;
		db  40h	; @
		db    0	;
		db 0E7h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db  7Dh	; }
		db    0	;
		db    0	;
		db  7Dh	; }
		db  7Dh	; }
		db    0	;
		db    0	;
		db    0	;
		db  7Dh	; }
		db    0	;
		db    0	;
		db 0FAh	; �
		db  7Dh	; }
		db    0	;
		db    0	;
		db  19h	;
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db  96h	; �
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db  19h	;
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db  13h	;
		db  7Eh	; ~
		db  80h	; �
		db    0	;
		db  32h	; 2
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db 0AFh	; �
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db  32h	; 2
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db  80h	; �
		db 0BBh	; �
		db  80h	; �
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db 0C8h	; �
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db  99h	; �
		db 0BBh	; �
		db  80h	; �
		db    0	;
		db  64h	; d
		db  7Dh	; }
		db    0	;
		db    0	;
		db 0E1h	; �
		db  7Dh	; }
		db    0	;
		db    0	;
		db  64h	; d
		db  7Dh	; }
		db    0	;
		db    0	;
		db 0B2h	; �
		db 0BBh	; �
		db    0	;
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db    0	;
		db    0	;
		db 0C8h	; �
		db  7Dh	; }
		db    0	;
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db    0	;
		db    0	;
		db  99h	; �
		db 0BBh	; �
		db    0	;
		db    0	;
		db  32h	; 2
		db  7Dh	; }
		db    0	;
		db    0	;
		db 0AFh	; �
		db  7Dh	; }
		db    0	;
		db    0	;
		db  32h	; 2
		db  7Dh	; }
		db    0	;
		db    0	;
		db  80h	; �
		db 0BBh	; �
		db    0	;
		db    0	;
		db  19h	;
		db  7Dh	; }
		db    0	;
		db    0	;
		db  96h	; �
		db  7Dh	; }
		db    0	;
		db    0	;
		db  19h	;
		db  7Dh	; }
		db    0	;
		db    0	;
		db  13h	;
		db  7Eh	; ~
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db  69h	; i
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db 0D2h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  15h	;
		db    0	;
		db 0C0h	; �
		db    0	;
		db  7Eh	; ~
		db    0	;
		db 0C0h	; �
		db    0	;
		db  15h	;
		db    0	;
		db 0C0h	; �
		db    0	;
		db 0E7h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  2Ah	; *
		db    0	;
		db 0C0h	; �
		db    0	;
		db  93h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  2Ah	; *
		db    0	;
		db 0C0h	; �
		db    0	;
		db 0FCh	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  3Fh	; ?
		db    0	;
		db 0C0h	; �
		db    0	;
		db 0A8h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  3Fh	; ?
		db    0	;
		db 0C0h	; �
		db    0	;
		db  11h	;
		db    1	;
		db 0C0h	; �
		db    0	;
		db  54h	; T
		db    0	;
		db  40h	; @
		db    0	;
		db 0BDh	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  54h	; T
		db    0	;
		db  40h	; @
		db    0	;
		db  26h	; &
		db    1	;
		db  40h	; @
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  40h	; @
		db    0	;
		db 0A8h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  40h	; @
		db    0	;
		db  11h	;
		db    1	;
		db  40h	; @
		db    0	;
		db  2Ah	; *
		db    0	;
		db  40h	; @
		db    0	;
		db  93h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  2Ah	; *
		db    0	;
		db  40h	; @
		db    0	;
		db 0FCh	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  15h	;
		db    0	;
		db  40h	; @
		db    0	;
		db  7Eh	; ~
		db    0	;
		db  40h	; @
		db    0	;
		db  15h	;
		db    0	;
		db  40h	; @
		db    0	;
		db 0E7h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  69h	; i
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db    0	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db 0D2h	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  15h	;
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  7Eh	; ~
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  15h	;
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db 0E7h	; �
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  2Ah	; *
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  93h	; �
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  2Ah	; *
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db 0FCh	; �
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  3Fh	; ?
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db 0A8h	; �
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  3Fh	; ?
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  11h	;
		db  7Eh	; ~
		db 0C0h	; �
		db    0	;
		db  54h	; T
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db 0BDh	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  54h	; T
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  26h	; &
		db  7Eh	; ~
		db  40h	; @
		db    0	;
		db  3Fh	; ?
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db 0A8h	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  3Fh	; ?
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  11h	;
		db  7Eh	; ~
		db  40h	; @
		db    0	;
		db  2Ah	; *
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  93h	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  2Ah	; *
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db 0FCh	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  15h	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  7Eh	; ~
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  15h	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db 0E7h	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db    0	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  7Dh	; }
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db    0	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db 0FAh	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  19h	;
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  96h	; �
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  19h	;
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  13h	;
		db  7Eh	; ~
		db 0C0h	; �
		db    0	;
		db  32h	; 2
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db 0AFh	; �
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  32h	; 2
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  80h	; �
		db 0BBh	; �
		db 0C0h	; �
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db 0C8h	; �
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  99h	; �
		db 0BBh	; �
		db 0C0h	; �
		db    0	;
		db  64h	; d
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db 0E1h	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  64h	; d
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db 0B2h	; �
		db 0BBh	; �
		db  40h	; @
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db 0C8h	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  99h	; �
		db 0BBh	; �
		db  40h	; @
		db    0	;
		db  32h	; 2
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db 0AFh	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  32h	; 2
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  80h	; �
		db 0BBh	; �
		db  40h	; @
		db    0	;
		db  19h	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  96h	; �
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  19h	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  13h	;
		db  7Eh	; ~
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db  9Fh	; �
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db  9Fh	; �
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  35h	; 5
		db    0	;
		db 0C0h	; �
		db    0	;
		db 0D4h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  35h	; 5
		db    0	;
		db 0C0h	; �
		db    0	;
		db  35h	; 5
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  35h	; 5
		db    0	;
		db 0C0h	; �
		db    0	;
		db 0D4h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  35h	; 5
		db    0	;
		db 0C0h	; �
		db    0	;
		db  35h	; 5
		db  7Dh	; }
		db 0C0h	; �
		db    0	;
		db  6Ah	; j
		db    0	;
		db  40h	; @
		db    0	;
		db    9	;
		db    1	;
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db    0	;
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db    0	;
		db  40h	; @
		db    0	;
		db    9	;
		db    1	;
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db    0	;
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db    0	;
		db 0D4h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db    0	;
		db  35h	; 5
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db    0	;
		db 0D4h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db    0	;
		db  35h	; 5
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  9Fh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  7Dh	; }
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  9Fh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  7Dh	; }
		db    0	;
		db    0	;
		db  35h	; 5
		db    0	;
		db  80h	; �
		db    0	;
		db 0D4h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  35h	; 5
		db    0	;
		db  80h	; �
		db    0	;
		db  35h	; 5
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db  35h	; 5
		db    0	;
		db  80h	; �
		db    0	;
		db 0D4h	; �
		db    0	;
		db  80h	; �
		db    0	;
		db  35h	; 5
		db    0	;
		db  80h	; �
		db    0	;
		db  35h	; 5
		db  7Dh	; }
		db  80h	; �
		db    0	;
		db  6Ah	; j
		db    0	;
		db    0	;
		db    0	;
		db    9	;
		db    1	;
		db    0	;
		db    0	;
		db  6Ah	; j
		db    0	;
		db    0	;
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db    0	;
		db  6Ah	; j
		db    0	;
		db    0	;
		db    0	;
		db    9	;
		db    1	;
		db    0	;
		db    0	;
		db  6Ah	; j
		db    0	;
		db    0	;
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db    0	;
		db  35h	; 5
		db    0	;
		db    0	;
		db    0	;
		db 0D4h	; �
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db  7Dh	; }
		db    0	;
		db    0	;
		db  35h	; 5
		db    0	;
		db    0	;
		db    0	;
		db 0D4h	; �
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db  7Dh	; }
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db  78h	; x
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db 0F0h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db  78h	; x
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db 0F0h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  28h	; (
		db    0	;
		db 0C0h	; �
		db    0	;
		db 0A0h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  28h	; (
		db    0	;
		db 0C0h	; �
		db    0	;
		db  18h	;
		db    1	;
		db 0C0h	; �
		db    0	;
		db  28h	; (
		db    0	;
		db 0C0h	; �
		db    0	;
		db 0A0h	; �
		db    0	;
		db 0C0h	; �
		db    0	;
		db  28h	; (
		db    0	;
		db 0C0h	; �
		db    0	;
		db  18h	;
		db    1	;
		db 0C0h	; �
		db    0	;
		db  50h	; P
		db    0	;
		db  40h	; @
		db    0	;
		db 0C8h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  50h	; P
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  50h	; P
		db    0	;
		db  40h	; @
		db    0	;
		db 0C8h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  50h	; P
		db    0	;
		db  40h	; @
		db    0	;
		db    0	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  28h	; (
		db    0	;
		db  40h	; @
		db    0	;
		db 0A0h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  28h	; (
		db    0	;
		db  40h	; @
		db    0	;
		db  18h	;
		db    1	;
		db  40h	; @
		db    0	;
		db  28h	; (
		db    0	;
		db  40h	; @
		db    0	;
		db 0A0h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  28h	; (
		db    0	;
		db  40h	; @
		db    0	;
		db  18h	;
		db    1	;
		db  40h	; @
		db    0	;
WAVES		db  80h	; �
		db  3Eh	; >
		db    0	;
		db    0	;
		db  80h	; �
		db  3Eh	; >
		db  40h	; @
		db    0	;
		db 0CBh	; �
		db 0BBh	; �
		db    0	;
		db    0	;
		db  80h	; �
		db  3Eh	; >
		db  40h	; @
		db    0	;
		db  80h	; �
		db 0BBh	; �
		db  40h	; @
		db    0	;
		db  80h	; �
		db 0BBh	; �
		db  40h	; @
		db    0	;
		db  80h	; �
		db 0BBh	; �
		db  40h	; @
		db    0	;
		db 0CBh	; �
		db 0BBh	; �
		db  40h	; @
		db    0	;
		db  80h	; �
		db 0BBh	; �
		db  40h	; @
		db    0	;
		db 0CBh	; �
		db 0BBh	; �
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  80h	; �
		db 0BBh	; �
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db    0	;
		db    0	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  28h	; (
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  28h	; (
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db    0	;
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db  40h	; @
		db    0	;
TALKERS		db  9Ah	; �
		db  3Eh	; >
		db    0	;
		db  32h	; 2
		db    0	;
		db  2Ah	; *
		db    0	;
		db    0	;
		db  9Ah	; �
		db  3Eh	; >
		db    0	;
		db  32h	; 2
		db    0	;
		db  2Ah	; *
		db  40h	; @
		db    0	;
		db 0E4h	; �
		db 0BBh	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  32h	; 2
		db    0	;
		db    0	;
		db  9Ah	; �
		db  3Eh	; >
		db    0	;
		db  32h	; 2
		db    0	;
		db  2Ah	; *
		db  40h	; @
		db    0	;
		db  9Ah	; �
		db 0BBh	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  2Ah	; *
		db  40h	; @
		db    0	;
		db  9Ah	; �
		db 0BBh	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  2Ah	; *
		db  40h	; @
		db    0	;
		db  9Ah	; �
		db 0BBh	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  2Ah	; *
		db  40h	; @
		db    0	;
		db 0E4h	; �
		db 0BBh	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  32h	; 2
		db  40h	; @
		db    0	;
		db  9Ah	; �
		db 0BBh	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  2Ah	; *
		db  40h	; @
		db    0	;
		db 0E4h	; �
		db 0BBh	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  32h	; 2
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  9Ah	; �
		db 0BBh	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  2Ah	; *
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db    0	;
		db    0	;
		db  28h	; (
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  28h	; (
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  28h	; (
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  28h	; (
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  28h	; (
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  28h	; (
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  28h	; (
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  28h	; (
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db  6Ah	; j
		db  7Dh	; }
		db    0	;
		db  32h	; 2
		db    0	;
		db  35h	; 5
		db  40h	; @
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
AVAILABLEPICKUP	db    0	;
		db    0	;
		db    0	;
		db    0	;
TORCHADD	dw 0			; DATA XREF: COMBAT+71r
PUBLICPLACES	db  1Ah	;
		db  12h	;
		db  30h	; 0
		db  51h	; Q
		db  24h	; $
		db  2Ah	; *
		db  1Ah	;
		db  0Ch	;
		db    4	;
		db  11h	;
		db  43h	; C
		db  0Dh	;
		db  38h	; 8
		db  27h	; '
		db  43h	; C
		db  18h	;
		db  23h	; #
		db  2Eh	; .
		db  0Ch	;
		db  46h	; F
		db  50h	; P
		db  37h	; 7
		db  3Eh	; >
		db  37h	; 7
		db  39h	; 9
		db  76h	; v
		db  11h	;
		db  70h	; p
		db    8	;
		db  64h	; d
		db  0Ch	;
		db  36h	; 6
		db  3Eh	; >
		db  41h	; A
		db  47h	; G
		db  26h	; &
		db  50h	; P
		db  72h	; r
		db  34h	; 4
		db  6Ch	; l
		db  1Ah	;
		db  19h	;
		db  14h	;
		db  7Dh	; }
		db  28h	; (
		db  4Ah	; J
		db  1Dh	;
		db  59h	; Y
		db  38h	; 8
		db  5Bh	; [
		db  32h	; 2
		db  10h	;
		db  4Eh	; N
		db  47h	; G
		db  34h	; 4
		db  35h	; 5
		db  37h	; 7
		db  4Bh	; K
		db    7	;
		db  21h	; !
		db  4Eh	; N
		db    8	;
		db    1	;
		db  53h	; S
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db  6Dh	; m
		db  6Dh	; m
		db  6Eh	; n
		db  6Fh	; o
		db  6Fh	; o
		db  6Fh	; o
		db  70h	; p
		db  70h	; p
		db  70h	; p
		db  79h	; y
		db  71h	; q
		db  71h	; q
		db  7Ah	; z
		db  7Ah	; z
		db  7Ah	; z
		db  72h	; r
		db  72h	; r
		db  72h	; r
		db  73h	; s
		db  73h	; s
		db  74h	; t
		db  74h	; t
		db  75h	; u
		db  7Bh	; {
		db  7Ch	; |
		db  76h	; v
		db  77h	; w
		db  77h	; w
		db  77h	; w
		db  78h	; x
		db  78h	; x
		db  78h	; x
		db  6Dh	; m
		db  6Dh	; m
		db  6Dh	; m
		db  6Dh	; m
		db  6Dh	; m
		db  6Eh	; n
		db  6Eh	; n
		db  6Eh	; n
		db  70h	; p
		db  79h	; y
		db  79h	; y
		db  79h	; y
		db  79h	; y
		db  79h	; y
		db  7Ah	; z
		db  7Ah	; z
		db  72h	; r
		db  73h	; s
		db  73h	; s
		db  74h	; t
		db  74h	; t
		db  75h	; u
		db  75h	; u
		db  75h	; u
		db  75h	; u
		db  75h	; u
		db  75h	; u
		db  7Bh	; {
		db  7Ch	; |
		db  76h	; v
		db  77h	; w
		db  78h	; x
		db  6Eh	; n
		db  6Eh	; n
		db  6Eh	; n
		db  6Eh	; n
		db  79h	; y
		db  79h	; y
		db  7Ah	; z
		db  7Ah	; z
		db  7Ah	; z
		db  7Ah	; z
		db  73h	; s
		db  73h	; s
		db  74h	; t
		db  74h	; t
		db  74h	; t
		db  74h	; t
		db  75h	; u
		db  75h	; u
		db  75h	; u
		db  75h	; u
		db  75h	; u
		db  7Bh	; {
		db  7Bh	; {
		db  7Ch	; |
		db  7Ch	; |
		db  76h	; v
		db  76h	; v
		db  77h	; w
		db  77h	; w
		db  78h	; x
		db  78h	; x
		db  78h	; x
LIVES		db    0	;
		db    0	;
INSURANCECOSTS	db  14h	;
		db  19h	;
		db  1Eh	;
		db  28h	; (
		db    0	;
		db    0	;
MACSPEECH	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SHOPDATA	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  17h	;
		db  1Dh	;
		db  11h	;
		db    0	;
		db  31h	; 1
		db  20h	;
		db  12h	;
		db    0	;
		db  20h	;
		db  2Dh	; -
		db  13h	;
		db    0	;
		db  48h	; H
		db  3Ah	; :
		db  14h	;
		db    0	;
		db  34h	; 4
		db  54h	; T
		db  15h	;
		db    0	;
		db  52h	; R
		db  5Bh	; [
		db  16h	;
		db    0	;
		db  42h	; B
		db  6Fh	; o
		db  17h	;
		db    0	;
		db  19h	;
		db  6Fh	; o
		db  18h	;
		db    0	;
		db  1Dh	;
		db  0Ah	;
		db    9	;
		db    0	;
		db    8	;
		db  14h	;
		db  0Ah	;
		db    0	;
		db  38h	; 8
		db  24h	; $
		db  0Bh	;
		db    0	;
		db  3Eh	; >
		db  46h	; F
		db  0Ch	;
		db    0	;
		db  3Fh	; ?
		db  46h	; F
		db  0Ch	;
		db    0	;
		db    6	;
		db  4Bh	; K
		db  0Dh	;
		db    0	;
		db    7	;
		db  4Bh	; K
		db  0Dh	;
		db    0	;
		db  11h	;
		db  68h	; h
		db  0Eh	;
		db    0	;
		db  11h	;
		db  67h	; g
		db  0Eh	;
		db    0	;
		db  11h	;
		db  66h	; f
		db  0Eh	;
		db    0	;
		db  12h	;
		db  66h	; f
		db  0Eh	;
		db    0	;
		db  13h	;
		db  66h	; f
		db  0Eh	;
		db    0	;
		db  13h	;
		db  67h	; g
		db  0Eh	;
		db    0	;
		db  13h	;
		db  68h	; h
		db  0Eh	;
		db    0	;
		db  4Bh	; K
		db  79h	; y
		db  0Fh	;
		db    0	;
		db  4Ch	; L
		db  78h	; x
		db  0Fh	;
		db    0	;
		db  29h	; )
		db  76h	; v
		db  10h	;
		db    0	;
		db  29h	; )
		db  77h	; w
		db  10h	;
		db    0	;
		db  34h	; 4
		db  12h	;
		db  19h	;
		db    0	;
		db  35h	; 5
		db  12h	;
		db  19h	;
		db    0	;
		db  34h	; 4
		db  13h	;
		db  19h	;
		db    0	;
		db  35h	; 5
		db  13h	;
		db  19h	;
		db    0	;
		db  34h	; 4
		db  14h	;
		db  19h	;
		db    0	;
		db  35h	; 5
		db  14h	;
		db  19h	;
		db    0	;
		db  17h	;
		db  20h	;
		db  1Ah	;
		db    0	;
		db  50h	; P
		db  24h	; $
		db  1Bh	;
		db    0	;
		db  22h	; "
		db  31h	; 1
		db  1Ch	;
		db    0	;
		db  4Ch	; L
		db  3Ah	; :
		db  1Dh	;
		db    0	;
		db  4Eh	; N
		db  3Ch	; <
		db  1Eh	;
		db    0	;
		db  0Dh	;
		db  44h	; D
		db  1Fh	;
		db    0	;
		db  0Eh	;
		db  44h	; D
		db  1Fh	;
		db    0	;
		db  10h	;
		db  4Fh	; O
		db  20h	;
		db    0	;
		db  11h	;
		db  4Fh	; O
		db  20h	;
		db    0	;
		db  2Ch	; ,
		db  4Ah	; J
		db  21h	; !
		db    0	;
		db  29h	; )
		db  4Eh	; N
		db  22h	; "
		db    0	;
		db  1Bh	;
		db  78h	; x
		db  23h	; #
		db    0	;
		db  18h	;
		db  7Ch	; |
		db  24h	; $
		db    0	;
		db  3Fh	; ?
		db  68h	; h
		db  25h	; %
		db    0	;
		db  40h	; @
		db  67h	; g
		db  25h	; %
		db    0	;
		db  3Ah	; :
		db  77h	; w
		db  26h	; &
		db    0	;
		db  0Eh	;
		db  0Fh	;
		db  27h	; '
		db    0	;
		db  28h	; (
		db  12h	;
		db    0	;
		db    0	;
		db  34h	; 4
		db  5Eh	; ^
		db    1	;
		db    0	;
		db  50h	; P
		db  32h	; 2
		db    2	;
		db    0	;
		db  51h	; Q
		db  32h	; 2
		db    2	;
		db    0	;
		db  0Ah	;
		db  44h	; D
		db    3	;
		db    0	;
		db  0Bh	;
		db  44h	; D
		db    3	;
		db    0	;
		db  36h	; 6
		db  67h	; g
		db    4	;
		db    0	;
		db  3Dh	; =
		db  0Ah	;
		db    5	;
		db    0	;
		db  24h	; $
		db  39h	; 9
		db    6	;
		db    0	;
		db  0Ah	;
		db  61h	; a
		db    7	;
		db    0	;
		db  48h	; H
		db  5Ch	; \
		db    8	;
		db    0	;
		db  49h	; I
		db  5Ch	; \
		db    8	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  19h	;
		db  0Ch	;
		db    5	;
		db    7	;
		db  0Ah	;
		db  11h	;
		db  0Eh	;
		db  0Dh	;
		db    6	;
		db    8	;
		db  0Bh	;
		db  12h	;
		db  0Fh	;
		db  32h	; 2
		db  14h	;
		db  1Eh	;
		db  14h	;
		db  28h	; (
		db  1Eh	;
		db  19h	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SHOPD2		db  1Ah	;
		db  0Eh	;
		db    5	;
		db    7	;
		db  0Ah	;
		db  11h	;
		db  0Eh	;
		db  0Fh	;
		db    6	;
		db    8	;
		db  0Bh	;
		db  12h	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db  1Eh	;
		db  14h	;
		db  28h	; (
		db  1Eh	;
		db    5	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Bh	;
		db  0Bh	;
		db    3	;
		db    5	;
		db    8	;
		db  0Fh	;
		db  0Dh	;
		db  0Ch	;
		db    4	;
		db    6	;
		db    9	;
		db  10h	;
		db  0Eh	;
		db  1Eh	;
		db  14h	;
		db  1Eh	;
		db  14h	;
		db  28h	; (
		db  0Fh	;
		db  0Fh	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SHOPD4		db  1Ch	;
		db  0Bh	;
		db    3	;
		db    5	;
		db    8	;
		db  0Fh	;
		db  0Ch	;
		db  0Ch	;
		db    4	;
		db    6	;
		db    9	;
		db  10h	;
		db  0Dh	;
		db  32h	; 2
		db  14h	;
		db  1Eh	;
		db  14h	;
		db  28h	; (
		db  1Eh	;
		db  19h	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SHOPD5		db  1Dh	;
		db  0Ah	;
		db    3	;
		db    5	;
		db    8	;
		db  0Fh	;
		db  0Ch	;
		db  0Bh	;
		db    4	;
		db    6	;
		db    9	;
		db  10h	;
		db  0Dh	;
		db  32h	; 2
		db  14h	;
		db  1Eh	;
		db  14h	;
		db  28h	; (
		db  1Eh	;
		db  19h	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Eh	;
		db  0Ah	;
		db    3	;
		db    5	;
		db    4	;
		db  0Fh	;
		db  0Ch	;
		db  0Ah	;
		db    3	;
		db    5	;
		db    4	;
		db  0Fh	;
		db  0Ch	;
		db  32h	; 2
		db  14h	;
		db  1Eh	;
		db    4	;
		db  28h	; (
		db  1Eh	;
		db  19h	;
		db  0Ah	;
		db  0Fh	;
		db    2	;
		db  14h	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Fh	;
		db  0Bh	;
		db    3	;
		db    4	;
		db    8	;
		db  0Eh	;
		db  0Dh	;
		db  0Ch	;
		db    4	;
		db    5	;
		db    9	;
		db  0Fh	;
		db  0Eh	;
		db  0Fh	;
		db  14h	;
		db  1Eh	;
		db  14h	;
		db  28h	; (
		db  1Eh	;
		db  0Ah	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SHOPD8		db  20h	;
		db    7	;
		db    2	;
		db    3	;
		db    6	;
		db  0Ch	;
		db  0Ah	;
		db    8	;
		db    3	;
		db    4	;
		db    7	;
		db  0Dh	;
		db  0Bh	;
		db  14h	;
		db  0Ah	;
		db  0Ch	;
		db  0Fh	;
		db  14h	;
		db  0Ah	;
		db  0Fh	;
		db    5	;
		db    7	;
		db  0Ah	;
		db  0Ah	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  21h	; !
		db  0Ah	;
		db    3	;
		db    4	;
		db    8	;
		db  0Fh	;
		db  0Ch	;
		db  0Ch	;
		db    5	;
		db    6	;
		db  0Ah	;
		db  11h	;
		db  0Eh	;
		db  32h	; 2
		db  14h	;
		db  1Eh	;
		db  14h	;
		db  28h	; (
		db  1Eh	;
		db  19h	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SHOPD10		db  22h	; "
		db  0Ah	;
		db    3	;
		db    5	;
		db    8	;
		db  0Fh	;
		db  0Ch	;
		db  0Ch	;
		db    5	;
		db    7	;
		db  0Ah	;
		db  12h	;
		db  0Fh	;
		db  32h	; 2
		db  14h	;
		db  1Eh	;
		db  14h	;
		db  28h	; (
		db  1Eh	;
		db  19h	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SHOPD11		db  23h	; #
		db    8	;
		db    1	;
		db    4	;
		db    7	;
		db  0Dh	;
		db  0Ah	;
		db    9	;
		db    2	;
		db    5	;
		db    8	;
		db  0Eh	;
		db  0Bh	;
		db  0Fh	;
		db  10h	;
		db  14h	;
		db  0Ch	;
		db  14h	;
		db  1Eh	;
		db  0Bh	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  0Ah	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  24h	; $
		db    8	;
		db    1	;
		db    2	;
		db    7	;
		db  0Dh	;
		db  0Ah	;
		db    9	;
		db    2	;
		db    2	;
		db    8	;
		db  0Eh	;
		db  0Bh	;
		db  0Fh	;
		db  10h	;
		db  0Ah	;
		db  0Ch	;
		db  14h	;
		db  1Eh	;
		db  0Bh	;
		db  0Ah	;
		db    5	;
		db  0Ah	;
		db  0Ah	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  25h	; %
		db  0Ah	;
		db    3	;
		db    5	;
		db    7	;
		db  0Fh	;
		db  0Bh	;
		db  0Bh	;
		db    4	;
		db    6	;
		db    8	;
		db  10h	;
		db  0Ch	;
		db  32h	; 2
		db  14h	;
		db  1Eh	;
		db  14h	;
		db  28h	; (
		db  1Eh	;
		db  19h	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SHOPD14		db  26h	; &
		db    8	;
		db    1	;
		db    4	;
		db    8	;
		db  0Dh	;
		db  0Ah	;
		db    9	;
		db    2	;
		db    5	;
		db    9	;
		db  0Eh	;
		db  0Bh	;
		db  0Fh	;
		db  10h	;
		db  14h	;
		db  0Ch	;
		db  14h	;
		db  1Eh	;
		db  0Bh	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  0Ah	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  27h	; '
		db  0Eh	;
		db    5	;
		db    7	;
		db  0Ah	;
		db  11h	;
		db  0Ch	;
		db  0Fh	;
		db    6	;
		db    8	;
		db  0Bh	;
		db  12h	;
		db  0Dh	;
		db  0Ah	;
		db  14h	;
		db  1Eh	;
		db  14h	;
		db  28h	; (
		db  1Eh	;
		db    5	;
		db  0Ah	;
		db  0Fh	;
		db  0Ah	;
		db  14h	;
		db  0Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db    9	;
		db    0	;
		db    5	;
		db  64h	; d
		db    3	;
		db    4	;
		db  3Ch	; <
		db    1	;
		db    4	;
		db  50h	; P
		db    4	;
		db    8	;
		db  3Ch	; <
		db    8	;
		db    3	;
		db  5Ah	; Z
		db    9	;
		db    3	;
		db  46h	; F
		db    8	;
		db  0Ah	;
		db    0	;
		db    5	;
		db  6Eh	; n
		db    5	;
		db    4	;
		db  5Fh	; _
		db    3	;
		db    5	;
		db  5Ah	; Z
		db    6	;
		db    5	;
		db  64h	; d
		db  0Ah	;
		db    2	;
		db  28h	; (
		db  0Bh	;
		db    3	;
		db  2Dh	; -
		db    1	;
		db  0Bh	;
		db    5	;
		db    4	;
		db  50h	; P
		db    3	;
		db    5	;
		db  50h	; P
		db    2	;
		db    6	;
		db  64h	; d
		db    7	;
		db    4	;
		db  5Ah	; Z
		db    8	;
		db    1	;
		db  46h	; F
		db  0Ah	;
		db    1	;
		db  5Ah	; Z
		db    2	;
		db  0Ch	;
		db    0	;
		db    5	;
		db  3Ch	; <
		db    2	;
		db    6	;
		db  3Ch	; <
		db    6	;
		db    5	;
		db  41h	; A
		db    5	;
		db    4	;
		db  41h	; A
		db  0Bh	;
		db    2	;
		db  78h	; x
		db    9	;
		db    2	;
		db  6Eh	; n
		db    4	;
		db  0Dh	;
		db    0	;
		db    5	;
		db  5Ah	; Z
		db    2	;
		db    5	;
		db  55h	; U
		db    6	;
		db    6	;
		db  55h	; U
		db    7	;
		db    5	;
		db  46h	; F
		db    8	;
		db    1	;
		db  50h	; P
		db  0Bh	;
		db    2	;
		db  50h	; P
		db    4	;
		db  0Eh	;
		db    1	;
		db    2	;
		db  46h	; F
		db    6	;
		db    3	;
		db  64h	; d
		db    4	;
		db    3	;
		db  5Ah	; Z
		db    2	;
		db    4	;
		db  64h	; d
		db    9	;
		db    2	;
		db  46h	; F
		db  0Ah	;
		db    2	;
		db  46h	; F
		db    8	;
		db  0Fh	;
		db    4	;
		db    4	;
		db  55h	; U
		db    1	;
		db    4	;
		db  5Ah	; Z
		db    5	;
		db    5	;
		db  5Ah	; Z
		db    3	;
		db    4	;
		db  41h	; A
		db    8	;
		db    2	;
		db  5Ah	; Z
		db    9	;
		db    2	;
		db  5Ah	; Z
		db    1	;
		db  10h	;
		db    0	;
		db    7	;
		db  55h	; U
		db    4	;
		db    5	;
		db  64h	; d
		db    7	;
		db    5	;
		db  50h	; P
		db    1	;
		db    6	;
		db  55h	; U
		db  0Ah	;
		db    2	;
		db  5Ah	; Z
		db  0Bh	;
		db    2	;
		db  46h	; F
		db    2	;
		db 0FFh	; �
HOSTELDATA1	db  11h	;
		db    0	;
		db    6	;
		db  5Fh	; _
		db    3	;
		db    4	;
		db  46h	; F
		db    7	;
		db    5	;
		db  50h	; P
		db    5	;
		db    4	;
		db  4Bh	; K
		db    8	;
		db    2	;
		db  50h	; P
		db    9	;
		db    2	;
		db  50h	; P
		db    2	;
		db  33h	; 3
		db 0A4h	; �
		db 0D2h	; �
		db 0C8h	; �
		db  1Eh	;
		db  28h	; (
		db  32h	; 2
		db  3Ch	; <
		db  46h	; F
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db  1Ch	;
		db  0Fh	;
		db  1Fh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
HOSTELDATA2	db  12h	;
		db    0	;
		db    5	;
		db  5Fh	; _
		db    6	;
		db    6	;
		db  5Ah	; Z
		db    5	;
		db    5	;
		db  50h	; P
		db    1	;
		db    7	;
		db  4Bh	; K
		db  0Ah	;
		db    2	;
		db  46h	; F
		db  0Bh	;
		db    3	;
		db  46h	; F
		db    5	;
		db  49h	; I
		db 0A4h	; �
		db 0A0h	; �
		db 0A0h	; �
		db 0AAh	; �
		db 0AFh	; �
		db 0BEh	; �
		db  3Ch	; <
		db  46h	; F
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  31h	; 1
		db  1Ch	;
		db  33h	; 3
		db  1Ch	;
		db  37h	; 7
		db  1Ch	;
		db  38h	; 8
		db  1Eh	;
		db  39h	; 9
		db  20h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
HOSTELDATA3	db  13h	;
		db    3	;
		db    5	;
		db  50h	; P
		db    5	;
		db    5	;
		db  4Bh	; K
		db    2	;
		db    6	;
		db  5Ah	; Z
		db    4	;
		db    7	;
		db  46h	; F
		db    8	;
		db    2	;
		db  5Ah	; Z
		db  0Ah	;
		db    2	;
		db  5Ah	; Z
		db    5	;
		db  7Dh	; }
		db 0A4h	; �
		db  96h	; �
		db  96h	; �
		db  8Ch	; �
		db  8Ch	; �
		db  8Ch	; �
		db  3Ch	; <
		db  46h	; F
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Dh	;
		db  31h	; 1
		db  1Dh	;
		db  2Ch	; ,
		db  1Ch	;
		db  30h	; 0
		db  1Ch	;
		db  2Dh	; -
		db  21h	; !
		db  2Ch	; ,
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Ch	;
HOSTELDATA4	db  14h	;
		db    0	;
		db    6	;
		db  5Ah	; Z
		db    2	;
		db    6	;
		db  64h	; d
		db    3	;
		db    5	;
		db  3Ch	; <
		db    7	;
		db    6	;
		db  5Ah	; Z
		db  0Bh	;
		db    3	;
		db  5Ah	; Z
		db    9	;
		db    2	;
		db  50h	; P
		db    5	;
		db 0B1h	; �
		db 0A4h	; �
		db 0AAh	; �
		db  8Ch	; �
		db  96h	; �
		db  96h	; �
		db  8Ch	; �
		db  3Ch	; <
		db  46h	; F
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  44h	; D
		db  3Ah	; :
		db  46h	; F
		db  37h	; 7
		db  45h	; E
		db  36h	; 6
		db  41h	; A
		db  38h	; 8
		db  41h	; A
		db  3Ch	; <
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
HOSTELDATA5	db  15h	;
		db    0	;
		db    7	;
		db  55h	; U
		db    1	;
		db    8	;
		db  50h	; P
		db    6	;
		db    7	;
		db  50h	; P
		db    5	;
		db    6	;
		db  50h	; P
		db    8	;
		db    3	;
		db  4Bh	; K
		db  0Bh	;
		db    4	;
		db  5Ah	; Z
		db    2	;
		db    3	;
		db 0A5h	; �
		db  8Ch	; �
		db  87h	; �
		db  1Eh	;
		db  28h	; (
		db  32h	; 2
		db  3Ch	; <
		db  46h	; F
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db  51h	; Q
		db  30h	; 0
		db  56h	; V
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
HOSTELDATA6	db  16h	;
		db    0	;
		db    7	;
		db  50h	; P
		db    4	;
		db    5	;
		db  5Ah	; Z
		db    7	;
		db    5	;
		db  55h	; U
		db    1	;
		db    6	;
		db  46h	; F
		db    9	;
		db    2	;
		db  55h	; U
		db  0Ah	;
		db    2	;
		db  46h	; F
		db    8	;
		db  23h	; #
		db 0A5h	; �
		db  8Ch	; �
		db  8Ch	; �
		db  8Ch	; �
		db  8Ch	; �
		db  82h	; �
		db  82h	; �
		db  82h	; �
		db  82h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  59h	; Y
		db  52h	; R
		db  59h	; Y
		db  4Eh	; N
		db  5Dh	; ]
		db  52h	; R
		db  5Dh	; ]
		db  4Eh	; N
		db  59h	; Y
		db  52h	; R
		db  59h	; Y
		db  4Eh	; N
		db  5Dh	; ]
		db  52h	; R
		db  5Dh	; ]
		db 0F0h	; �
HOSTELDATA7	db  17h	;
		db    6	;
		db    5	;
		db  5Ah	; Z
		db    4	;
		db    4	;
		db  55h	; U
		db    1	;
		db    6	;
		db  55h	; U
		db    2	;
		db    6	;
		db  55h	; U
		db    8	;
		db    2	;
		db  55h	; U
		db    9	;
		db    2	;
		db  5Ah	; Z
		db    6	;
		db  75h	; u
		db 0A5h	; �
		db  82h	; �
		db  82h	; �
		db  7Dh	; }
		db  7Dh	; }
		db  7Dh	; }
		db  7Dh	; }
		db  14h	;
		db  14h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  44h	; D
		db  72h	; r
		db  46h	; F
		db  72h	; r
		db  4Bh	; K
		db  72h	; r
		db  45h	; E
		db  75h	; u
		db  47h	; G
		db  75h	; u
		db  4Bh	; K
		db  75h	; u
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
HOSTELDATA8	db  18h	;
		db    2	;
		db    5	;
		db  5Ah	; Z
		db    6	;
		db    6	;
		db  46h	; F
		db    4	;
		db    4	;
		db  50h	; P
		db    3	;
		db    6	;
		db  41h	; A
		db  0Ah	;
		db    2	;
		db  50h	; P
		db  0Bh	;
		db    2	;
		db  50h	; P
		db    4	;
		db 0B3h	; �
		db 0A5h	; �
		db  78h	; x
		db  78h	; x
		db  78h	; x
		db  7Dh	; }
		db  32h	; 2
		db  3Ch	; <
		db  46h	; F
		db  50h	; P
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  12h	;
		db  6Ah	; j
		db  13h	;
		db  6Ch	; l
		db  14h	;
		db  6Fh	; o
		db  16h	;
		db  70h	; p
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db    0	;
		db    0	;
ROOMRATE	db    0	;
ROOMRATE2	db    0	;
		db    0	;
		db  2Ah	; *
		db  2Bh	; +
		db  2Ch	; ,
		db  1Ch	;
		db  26h	; &
		db  23h	; #
		db  3Ch	; <
		db 0FFh	; �
		db    2	;
		db    4	;
		db    5	;
		db    6	;
		db    5	;
		db  1Bh	;
		db  23h	; #
		db  34h	; 4
		db  4Dh	; M
		db  5Bh	; [
		db  9Dh	; �
		db 0D4h	; �
		db    7	;
		db 0D5h	; �
		db  6Bh	; k
		db 0D5h	; �
		db 0D3h	; �
		db 0D5h	; �
		db  35h	; 5
		db 0D6h	; �
		db    0	;
		db  73h	; s
		db  74h	; t
		db  75h	; u
		db  76h	; v
		db  21h	; !
		db  19h	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  30h	; 0
		db  31h	; 1
		db  32h	; 2
		db    5	;
		db  2Ah	; *
		db  1Eh	;
		db  30h	; 0
		db 0FFh	; �
		db    3	;
		db    4	;
		db    4	;
		db    7	;
		db    7	;
		db  1Dh	;
		db  24h	; $
		db  32h	; 2
		db  44h	; D
		db  56h	; V
		db 0A8h	; �
		db 0D4h	; �
		db  15h	;
		db 0D5h	; �
		db  77h	; w
		db 0D5h	; �
		db 0E0h	; �
		db 0D5h	; �
		db  3Eh	; >
		db 0D6h	; �
		db    0	;
		db  78h	; x
		db  79h	; y
		db    0	;
		db  7Ah	; z
		db  30h	; 0
		db  61h	; a
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  33h	; 3
		db  34h	; 4
		db  35h	; 5
		db  18h	;
		db  24h	; $
		db  2Dh	; -
		db  3Ch	; <
		db 0AFh	; �
		db    2	;
		db    3	;
		db    5	;
		db    7	;
		db    8	;
		db  1Eh	;
		db  25h	; %
		db  38h	; 8
		db  4Ah	; J
		db  5Fh	; _
		db 0B8h	; �
		db 0D4h	; �
		db  1Fh	;
		db 0D5h	; �
		db  83h	; �
		db 0D5h	; �
		db 0EBh	; �
		db 0D5h	; �
		db  48h	; H
		db 0D6h	; �
		db    0	;
		db  69h	; i
		db    0	;
		db  6Ah	; j
		db  6Bh	; k
		db  50h	; P
		db  32h	; 2
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  22h	; "
		db  23h	; #
		db  24h	; $
		db  1Eh	;
		db  28h	; (
		db  32h	; 2
		db  32h	; 2
		db 0BEh	; �
		db    2	;
		db    4	;
		db    5	;
		db    4	;
		db    7	;
		db  19h	;
		db  22h	; "
		db  3Bh	; ;
		db  48h	; H
		db  59h	; Y
		db 0C4h	; �
		db 0D4h	; �
		db  2Ah	; *
		db 0D5h	; �
		db  8Eh	; �
		db 0D5h	; �
		db 0F6h	; �
		db 0D5h	; �
		db  53h	; S
		db 0D6h	; �
		db    0	;
		db  50h	; P
		db    0	;
		db    0	;
		db  51h	; Q
		db  0Bh	;
		db  3Ah	; :
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Dh	; -
		db  2Eh	; .
		db  2Fh	; /
		db  14h	;
		db  28h	; (
		db  1Eh	;
		db  32h	; 2
		db 0FFh	; �
		db    2	;
		db    3	;
		db    7	;
		db    7	;
		db    7	;
		db  1Ch	;
		db  26h	; &
		db  39h	; 9
		db  45h	; E
		db  62h	; b
		db 0D0h	; �
		db 0D4h	; �
		db  35h	; 5
		db 0D5h	; �
		db  9Ah	; �
		db 0D5h	; �
		db    1	;
		db 0D6h	; �
		db  5Eh	; ^
		db 0D6h	; �
		db    0	;
		db  6Eh	; n
		db  6Fh	; o
		db    0	;
		db  71h	; q
		db  31h	; 1
		db  69h	; i
		db    1	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  36h	; 6
		db  37h	; 7
		db  38h	; 8
		db  1Eh	;
		db  23h	; #
		db  23h	; #
		db  3Ch	; <
		db 0C8h	; �
		db    3	;
		db    3	;
		db    4	;
		db    6	;
		db    7	;
		db  21h	; !
		db  27h	; '
		db  3Ch	; <
		db  3Eh	; >
		db  4Eh	; N
		db 0D9h	; �
		db 0D4h	; �
		db  3Fh	; ?
		db 0D5h	; �
		db 0A5h	; �
		db 0D5h	; �
		db  0Ch	;
		db 0D6h	; �
		db  6Bh	; k
		db 0D6h	; �
		db    0	;
		db  55h	; U
		db  56h	; V
		db    0	;
		db  57h	; W
		db  3Bh	; ;
		db    4	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  39h	; 9
		db  3Ah	; :
		db  3Bh	; ;
		db  1Eh	;
		db  21h	; !
		db  28h	; (
		db  36h	; 6
		db 0B4h	; �
		db    2	;
		db    3	;
		db    4	;
		db    7	;
		db    6	;
		db  1Fh	;
		db  28h	; (
		db  2Bh	; +
		db  43h	; C
		db  1Ah	;
		db 0E4h	; �
		db 0D4h	; �
		db  4Ah	; J
		db 0D5h	; �
		db 0B0h	; �
		db 0D5h	; �
		db  15h	;
		db 0D6h	; �
		db  75h	; u
		db 0D6h	; �
		db    0	;
		db  64h	; d
		db  65h	; e
		db    0	;
		db  66h	; f
		db  1Fh	;
		db  36h	; 6
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Ch	; <
		db  3Dh	; =
		db  3Eh	; >
		db  23h	; #
		db  0Ah	;
		db  28h	; (
		db  3Ch	; <
		db 0FFh	; �
		db    2	;
		db    3	;
		db    5	;
		db    6	;
		db    6	;
		db  20h	;
		db  29h	; )
		db  30h	; 0
		db  42h	; B
		db  51h	; Q
		db 0F1h	; �
		db 0D4h	; �
		db  55h	; U
		db 0D5h	; �
		db 0BEh	; �
		db 0D5h	; �
		db  20h	;
		db 0D6h	; �
		db  7Fh	; 
		db 0D6h	; �
		db    0	;
		db  5Ah	; Z
		db    0	;
		db  5Bh	; [
		db  5Eh	; ^
		db    8	;
		db  60h	; `
		db    1	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  27h	; '
		db  28h	; (
		db  29h	; )
		db  19h	;
		db  28h	; (
		db  32h	; 2
		db  37h	; 7
		db 0FFh	; �
		db    2	;
		db    4	;
		db    5	;
		db    4	;
		db    7	;
		db  1Ah	;
		db  2Ah	; *
		db  2Ch	; ,
		db  4Bh	; K
		db  53h	; S
		db 0FCh	; �
		db 0D4h	; �
		db  60h	; `
		db 0D5h	; �
		db 0C7h	; �
		db 0D5h	; �
		db  29h	; )
		db 0D6h	; �
		db  88h	; �
		db 0D6h	; �
		db    0	;
		db  5Fh	; _
		db  60h	; `
		db  61h	; a
		db  62h	; b
		db  4Fh	; O
		db  56h	; V
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SHOPNO		dw 0			; DATA XREF: DINE+B6r DINE+17Er
SHOPDATS	dw 0			; DATA XREF: DINE+31r DINE+A8r
					; ...
CHARACTER	dw 0			; DATA XREF: ATTACK+Dr	COMBAT+A9w
CHARACTERPASS	dw 0			; DATA XREF: COMBAT+8r	COMBAT+2Dr
		db    0	;
		db    0	;
		db    0	;
		db    0	;
CUREFLAG	db    0	;
		db    0	;
TALKERSIZE	db  0Dh	;
		db 0A3h	; �
		db  25h	; %
		db 0A3h	; �
		db  3Dh	; =
		db 0A3h	; �
		db    0	;
		db    0	;
		db  42h	; B
		db    0	;
		db  7Eh	; ~
		db    0	;
		db  1Ah	;
		db    0	;
		db  64h	; d
		db    0	;
		db  55h	; U
		db 0A3h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Ah	; J
		db    0	;
		db  3Ch	; <
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  38h	; 8
		db    0	;
		db  68h	; h
		db    0	;
		db  14h	;
		db    0	;
		db  54h	; T
		db    0	;
		db  55h	; U
		db 0A3h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    0	;
		db  30h	; 0
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Eh	; .
		db    0	;
		db  52h	; R
		db    0	;
		db  14h	;
		db    0	;
		db  44h	; D
		db    0	;
		db  55h	; U
		db 0A3h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  24h	; $
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Ch	; <
		db    0	;
		db  48h	; H
		db    0	;
		db  30h	; 0
		db    0	;
		db  10h	;
		db    0	;
		db    1	;
		db    0	;
		db  3Ch	; <
		db    0	;
		db  58h	; X
		db    0	;
		db  30h	; 0
		db    0	;
		db  10h	;
		db    0	;
		db    2	;
		db    0	;
		db  3Ch	; <
		db    0	;
		db  68h	; h
		db    0	;
		db  30h	; 0
		db    0	;
		db  10h	;
		db    0	;
		db    3	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  3Ch	; <
		db    0	;
		db  60h	; `
		db    0	;
		db  30h	; 0
		db    0	;
		db  0Ch	;
		db    0	;
		db    1	;
		db    0	;
		db  3Ch	; <
		db    0	;
		db  48h	; H
		db    0	;
		db  30h	; 0
		db    0	;
		db  0Ch	;
		db    0	;
		db    2	;
		db    0	;
		db  3Ch	; <
		db    0	;
		db  54h	; T
		db    0	;
		db  30h	; 0
		db    0	;
		db  0Ch	;
		db    0	;
		db    3	;
		db    0	;
		db  3Ch	; <
		db    0	;
		db  6Ch	; l
		db    0	;
		db  30h	; 0
		db    0	;
		db  0Ch	;
		db    0	;
		db    4	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  28h	; (
		db    0	;
		db  8Ch	; �
		db    0	;
		db  30h	; 0
		db    0	;
		db  0Ch	;
		db    0	;
		db    1	;
		db    0	;
		db  28h	; (
		db    0	;
		db  98h	; �
		db    0	;
		db  30h	; 0
		db    0	;
		db  0Ch	;
		db    0	;
		db    2	;
		db    0	;
		db  28h	; (
		db    0	;
		db 0A4h	; �
		db    0	;
		db  18h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    3	;
		db    0	;
		db  40h	; @
		db    0	;
		db 0A4h	; �
		db    0	;
		db  18h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    4	;
		db    0	;
		db  28h	; (
		db    0	;
		db 0B0h	; �
		db    0	;
		db  16h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    5	;
		db    0	;
		db  42h	; B
		db    0	;
		db 0B0h	; �
		db    0	;
		db  16h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    6	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  66h	; f
		db    0	;
		db  8Eh	; �
		db    0	;
		db 0B4h	; �
		db    0	;
		db    3	;
		db    0	;
		db    1	;
		db    0	;
		db  66h	; f
		db    0	;
		db  91h	; �
		db    0	;
		db 0B4h	; �
		db    0	;
		db    9	;
		db    0	;
		db    2	;
		db    0	;
		db  66h	; f
		db    0	;
		db  9Ah	; �
		db    0	;
		db 0B4h	; �
		db    0	;
		db    9	;
		db    0	;
		db    3	;
		db    0	;
		db  66h	; f
		db    0	;
		db 0A3h	; �
		db    0	;
		db 0B4h	; �
		db    0	;
		db    9	;
		db    0	;
		db    4	;
		db    0	;
		db  66h	; f
		db    0	;
		db 0ACh	; �
		db    0	;
		db 0B4h	; �
		db    0	;
		db    9	;
		db    0	;
		db    5	;
		db    0	;
		db  66h	; f
		db    0	;
		db 0B5h	; �
		db    0	;
		db 0B4h	; �
		db    0	;
		db    9	;
		db    0	;
		db    6	;
		db    0	;
		db  66h	; f
		db    0	;
		db 0BEh	; �
		db    0	;
		db 0B4h	; �
		db    0	;
		db    3	;
		db    0	;
		db    7	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db 0A1h	; �
		db    0	;
		db  23h	; #
		db    0	;
		db  17h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    1	;
		db    0	;
		db 0A1h	; �
		db    0	;
		db  38h	; 8
		db    0	;
		db  17h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    2	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  9Ah	; �
		db    0	;
		db  25h	; %
		db    0	;
		db  10h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    1	;
		db    0	;
		db 0ABh	; �
		db    0	;
		db  25h	; %
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    2	;
		db    0	;
		db 0BBh	; �
		db    0	;
		db  25h	; %
		db    0	;
		db  17h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    3	;
		db    0	;
		db 0D3h	; �
		db    0	;
		db  25h	; %
		db    0	;
		db  0Fh	;
		db    0	;
		db  14h	;
		db    0	;
		db    4	;
		db    0	;
		db 0D3h	; �
		db    0	;
		db  47h	; G
		db    0	;
		db  16h	;
		db    0	;
		db  14h	;
		db    0	;
		db    5	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  8Ch	; �
		db    0	;
		db  43h	; C
		db    0	;
		db  0Eh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    1	;
		db    0	;
		db  8Dh	; �
		db    0	;
		db  28h	; (
		db    0	;
		db  17h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    2	;
		db    0	;
		db 0C5h	; �
		db    0	;
		db  43h	; C
		db    0	;
		db  0Eh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    3	;
		db    0	;
		db 0C5h	; �
		db    0	;
		db  28h	; (
		db    0	;
		db  16h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    4	;
		db    0	;
		db 0E4h	; �
		db    0	;
		db  28h	; (
		db    0	;
		db  0Fh	;
		db    0	;
		db  13h	;
		db    0	;
		db    5	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db 0B9h	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  0Eh	;
		db    0	;
		db  0Eh	;
		db    0	;
		db    1	;
		db    0	;
		db 0C7h	; �
		db    0	;
		db  48h	; H
		db    0	;
		db  11h	;
		db    0	;
		db    6	;
		db    0	;
		db    1	;
		db    0	;
		db 0C1h	; �
		db    0	;
		db  2Ch	; ,
		db    0	;
		db  0Eh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    2	;
		db    0	;
		db 0C8h	; �
		db    0	;
		db  39h	; 9
		db    0	;
		db    7	;
		db    0	;
		db    7	;
		db    0	;
		db    2	;
		db    0	;
		db 0B1h	; �
		db    0	;
		db  25h	; %
		db    0	;
		db  0Fh	;
		db    0	;
		db  14h	;
		db    0	;
		db    3	;
		db    0	;
		db 0C0h	; �
		db    0	;
		db  25h	; %
		db    0	;
		db    7	;
		db    0	;
		db    6	;
		db    0	;
		db    3	;
		db    0	;
		db 0A0h	; �
		db    0	;
		db  33h	; 3
		db    0	;
		db  10h	;
		db    0	;
		db  13h	;
		db    0	;
		db    4	;
		db    0	;
		db 0A0h	; �
		db    0	;
		db  47h	; G
		db    0	;
		db  10h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    5	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db 0DDh	; �
		db    0	;
		db  23h	; #
		db    0	;
		db  0Eh	;
		db    0	;
		db  14h	;
		db    0	;
		db    1	;
		db    0	;
		db 0D5h	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  0Eh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    1	;
		db    0	;
		db 0BCh	; �
		db    0	;
		db  55h	; U
		db    0	;
		db  10h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    2	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  96h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    1	;
		db    0	;
		db 0ADh	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    2	;
		db    0	;
		db  96h	; �
		db    0	;
		db  42h	; B
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    3	;
		db    0	;
		db 0ADh	; �
		db    0	;
		db  42h	; B
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    4	;
		db    0	;
		db 0CDh	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    5	;
		db    0	;
		db 0E4h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    6	;
		db    0	;
		db 0CDh	; �
		db    0	;
		db  42h	; B
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    7	;
		db    0	;
		db 0E4h	; �
		db    0	;
		db  42h	; B
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    8	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db 0ABh	; �
		db    0	;
		db  33h	; 3
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    1	;
		db    0	;
		db 0BBh	; �
		db    0	;
		db  33h	; 3
		db    0	;
		db  0Fh	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    2	;
		db    0	;
		db 0CAh	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db  1Fh	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    3	;
		db    0	;
		db 0A2h	; �
		db    0	;
		db  48h	; H
		db    0	;
		db  18h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    4	;
		db    0	;
		db 0BBh	; �
		db    0	;
		db  48h	; H
		db    0	;
		db  17h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    5	;
		db    0	;
		db 0D3h	; �
		db    0	;
		db  48h	; H
		db    0	;
		db  16h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    6	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db 0A0h	; �
		db    0	;
		db  2Dh	; -
		db    0	;
		db  16h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    1	;
		db    0	;
		db 0A0h	; �
		db    0	;
		db  3Bh	; ;
		db    0	;
		db  16h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    2	;
		db    0	;
		db 0A8h	; �
		db    0	;
		db  48h	; H
		db    0	;
		db  15h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db    3	;
		db    0	;
		db 0C0h	; �
		db    0	;
		db  49h	; I
		db    0	;
		db  0Eh	;
		db    0	;
		db  13h	;
		db    0	;
		db    4	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  78h	; x
		db    0	;
		db    4	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    1	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  78h	; x
		db    0	;
		db    4	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    2	;
		db    0	;
		db  78h	; x
		db    0	;
		db    4	;
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    1	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  80h	; �
		db    0	;
		db    6	;
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    1	;
		db    0	;
		db  80h	; �
		db    0	;
		db  18h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    2	;
		db    0	;
		db  80h	; �
		db    0	;
		db  2Ah	; *
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    3	;
		db    0	;
		db  80h	; �
		db    0	;
		db  3Ch	; <
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    4	;
		db    0	;
		db  80h	; �
		db    0	;
		db  4Eh	; N
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    5	;
		db    0	;
		db  80h	; �
		db    0	;
		db  60h	; `
		db    0	;
		db  0Ch	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    6	;
		db    0	;
		db 0F4h	; �
		db    0	;
		db  30h	; 0
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    7	;
		db    0	;
		db 0F4h	; �
		db    0	;
		db  44h	; D
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    8	;
		db    0	;
		db 0F4h	; �
		db    0	;
		db  58h	; X
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    9	;
		db    0	;
		db 0F4h	; �
		db    0	;
		db  6Ch	; l
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  0Ah	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  98h	; �
		db  17h	;
		db 0A8h	; �
		db  17h	;
		db  58h	; X
		db  2Ah	; *
		db  68h	; h
		db  2Ah	; *
		db  18h	;
		db  3Dh	; =
		db  28h	; (
		db  3Dh	; =
		db  88h	; �
		db    0	;
		db  6Ch	; l
		db    0	;
		db  20h	;
		db    0	;
		db  10h	;
		db    0	;
		db    1	;
		db    0	;
		db 0B8h	; �
		db    0	;
		db  6Ch	; l
		db    0	;
		db  20h	;
		db    0	;
		db  10h	;
		db    0	;
		db    2	;
		db    0	;
		db 0E5h	; �
		db    0	;
		db  6Ch	; l
		db    0	;
		db  20h	;
		db    0	;
		db  10h	;
		db    0	;
		db    3	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db 0F0h	; �
		db    0	;
		db  50h	; P
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    7	;
		db    0	;
		db 0DDh	; �
		db    0	;
		db  50h	; P
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    6	;
		db    0	;
		db 0CAh	; �
		db    0	;
		db  50h	; P
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    5	;
		db    0	;
		db 0B7h	; �
		db    0	;
		db  50h	; P
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    4	;
		db    0	;
		db 0A4h	; �
		db    0	;
		db  50h	; P
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    3	;
		db    0	;
		db  91h	; �
		db    0	;
		db  50h	; P
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    2	;
		db    0	;
		db  7Eh	; ~
		db    0	;
		db  50h	; P
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    1	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
WHERELIST	db  3Bh	; ;
		db  2Fh	; /
		db 0FFh	; �
		db 0FFh	; �
		db  97h	; �
		db  2Fh	; /
		db 0FFh	; �
		db 0FFh	; �
		db    7	;
		db  30h	; 0
		db 0FFh	; �
		db 0FFh	; �
		db  14h	;
		db  30h	; 0
		db 0FFh	; �
		db 0FFh	; �
PUBWL		db  23h	; #
		db  30h	; 0
		db    0	;
		db    0	;
		db  84h	; �
		db  30h	; 0
		db    0	;
		db    0	;
		db 0E7h	; �
		db  30h	; 0
		db    0	;
		db    0	;
		db  3Eh	; >
		db  31h	; 1
		db    0	;
		db    0	;
		db  99h	; �
		db  31h	; 1
		db    0	;
		db    0	;
		db  28h	; (
		db  32h	; 2
		db    0	;
		db    0	;
		db  7Bh	; {
		db  32h	; 2
		db    0	;
		db    0	;
		db 0C1h	; �
		db  32h	; 2
		db    0	;
		db    0	;
HOSTWL		db  41h	; A
		db  33h	; 3
		db    0	;
		db    0	;
		db 0DBh	; �
		db  33h	; 3
		db    0	;
		db    0	;
		db  34h	; 4
		db  34h	; 4
		db    0	;
		db    0	;
		db  68h	; h
		db  34h	; 4
		db    0	;
		db    0	;
		db 0D2h	; �
		db  34h	; 4
		db    0	;
		db    0	;
		db    8	;
		db  35h	; 5
		db    0	;
		db    0	;
		db  40h	; @
		db  35h	; 5
		db    0	;
		db    0	;
		db  89h	; �
		db  35h	; 5
		db    0	;
		db    0	;
		db 0C7h	; �
		db  35h	; 5
		db    0	;
		db    0	;
		db 0FDh	; �
		db  35h	; 5
		db    0	;
		db    0	;
		db  1Eh	;
		db  36h	; 6
		db    0	;
		db    0	;
		db  3Fh	; ?
		db  36h	; 6
		db    0	;
		db    0	;
SHOPWL_5	db  5Ch	; \
		db  36h	; 6
		db    0	;
		db    2	;
		db  94h	; �
		db  36h	; 6
		db    0	;
		db    0	;
		db 0B5h	; �
		db  36h	; 6
		db    0	;
		db    0	;
		db 0D4h	; �
		db  36h	; 6
		db    0	;
		db    0	;
		db 0F6h	; �
		db  36h	; 6
		db    0	;
		db    0	;
		db  13h	;
		db  37h	; 7
		db    0	;
		db    0	;
		db  33h	; 3
		db  37h	; 7
		db    0	;
		db    0	;
		db  51h	; Q
		db  37h	; 7
		db    0	;
		db    0	;
		db  6Dh	; m
		db  37h	; 7
		db    0	;
		db    0	;
		db  8Eh	; �
		db  37h	; 7
		db    0	;
		db    0	;
SHOPWL_15	db 0D4h	; �
		db  37h	; 7
		db    0	;
		db    0	;
		db 0A9h	; �
		db  87h	; �
		db    0	;
		db    0	;
		db 0D7h	; �
		db  87h	; �
		db    0	;
		db    0	;
ASYLUM_WL	db  4Eh	; N
		db  87h	; �
		db    0	;
		db    0	;
		db  36h	; 6
		db  88h	; �
		db    0	;
		db    0	;
		db  72h	; r
		db  88h	; �
		db    0	;
		db    0	;
		db 0ACh	; �
		db  88h	; �
		db    0	;
		db    0	;
		db 0F2h	; �
		db  88h	; �
		db    0	;
		db    0	;
		db  1Dh	;
		db  89h	; �
		db    0	;
		db    0	;
		db  51h	; Q
		db  89h	; �
		db    0	;
		db    0	;
		db  89h	; �
		db  89h	; �
		db    0	;
		db    0	;
		db 0C1h	; �
		db  89h	; �
		db    0	;
		db    0	;
		db 0F7h	; �
		db  89h	; �
		db    0	;
		db    0	;
		db  2Bh	; +
		db  8Ah	; �
		db    0	;
		db    0	;
		db  84h	; �
		db  8Ah	; �
		db    0	;
		db    0	;
		db  9Ah	; �
		db  8Ah	; �
		db    0	;
		db    0	;
LABYRINTH_WL	db 0FFh	; �
		db  8Ah	; �
		db    0	;
		db    0	;
		db  40h	; @
		db  8Bh	; �
		db    0	;
		db    0	;
		db 0C3h	; �
		db  8Bh	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db  8Ch	; �
		db    0	;
		db    0	;
ZOOL_WL		db 0C8h	; �
		db  8Ch	; �
		db    0	;
		db    0	;
		db  11h	;
		db  8Dh	; �
		db    0	;
		db    0	;
		db  4Dh	; M
		db  8Dh	; �
		db    0	;
		db    0	;
		db  88h	; �
		db  8Dh	; �
		db    0	;
		db    0	;
		db 0F4h	; �
		db  8Dh	; �
		db    0	;
		db    0	;
		db  3Dh	; =
		db  8Eh	; �
		db    0	;
		db    0	;
		db    0	;
		db  8Fh	; �
		db    0	;
		db    0	;
		db  8Fh	; �
		db  8Fh	; �
		db    0	;
		db    0	;
		db 0EBh	; �
		db  8Fh	; �
		db    0	;
		db    0	;
		db  25h	; %
		db  90h	; �
		db    0	;
		db    0	;
		db  9Eh	; �
		db  90h	; �
		db    0	;
		db    0	;
		db  92h	; �
		db  91h	; �
		db    0	;
		db    0	;
		db  95h	; �
		db  38h	; 8
		db    0	;
		db    0	;
		db  54h	; T
		db  38h	; 8
		db    0	;
		db    0	;
		db  25h	; %
		db  38h	; 8
		db 0FFh	; �
		db 0FFh	; �
MH_WL		db 0DDh	; �
		db  91h	; �
		db    0	;
		db    0	;
BH_WL		db 0E5h	; �
		db  38h	; 8
		db    0	;
		db    0	;
		db  1Ch	;
		db  92h	; �
		db    0	;
		db    0	;
		db  66h	; f
		db  92h	; �
		db    0	;
		db    0	;
		db 0CBh	; �
		db  92h	; �
		db    0	;
		db    0	;
TM_WL		db  2Bh	; +
		db  93h	; �
		db    0	;
		db    0	;
		db  6Dh	; m
		db  93h	; �
		db    0	;
		db    0	;
MAC1		db  5Eh	; ^
		db 0A9h	; �
		db    0	;
		db    0	;
		db 0C0h	; �
		db  93h	; �
		db    0	;
		db    0	;
		db  4Ch	; L
		db  94h	; �
		db    0	;
		db    0	;
NIDAV_WL	db  66h	; f
		db  94h	; �
		db    0	;
		db    0	;
ZOR_WL		db 0A2h	; �
		db  94h	; �
		db    0	;
byte_FFD_A826	db 0			; DATA XREF: MAKEREGULARS+39w
		db 0D8h	; �
		db  94h	; �
		db    0	;
byte_FFD_A82A	db 0			; DATA XREF: MAKEREGULARS+3Ew
		db  36h	; 6
		db  95h	; �
		db    0	;
		db    0	;
WL_WL		db 0E7h	; �
		db  95h	; �
		db    0	;
		db    0	;
SVEN_WL		db  60h	; `
		db 0AEh	; �
		db    0	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  7Ch	; |
		db  39h	; 9
		db 0FFh	; �
		db 0FFh	; �
WHATLIST	db  1Dh	;
		db  39h	; 9
		db 0FFh	; �
		db 0FFh	; �
		db  2Dh	; -
		db  39h	; 9
		db 0FFh	; �
		db 0FFh	; �
		db  3Eh	; >
		db  39h	; 9
		db 0FFh	; �
		db 0FFh	; �
		db  51h	; Q
		db  39h	; 9
		db 0FFh	; �
		db 0FFh	; �
		db  66h	; f
		db  39h	; 9
		db 0FFh	; �
		db 0FFh	; �
		db  7Eh	; ~
		db  96h	; �
		db    0	;
		db    0	;
		db    7	;
		db  97h	; �
		db    0	;
		db    0	;
		db  5Eh	; ^
		db  97h	; �
		db    0	;
		db    0	;
		db  8Ah	; �
		db  97h	; �
		db    0	;
		db    0	;
		db 0D6h	; �
		db  97h	; �
		db    0	;
		db    0	;
		db    5	;
		db  98h	; �
		db    0	;
		db    0	;
		db  2Bh	; +
		db  98h	; �
		db    0	;
		db    0	;
VALHALLA_WL	db  68h	; h
		db  98h	; �
		db    0	;
		db    0	;
		db 0F1h	; �
		db  98h	; �
		db    0	;
		db    0	;
		db  20h	;
		db  99h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db  99h	; �
		db    0	;
		db    0	;
MAC2		db  33h	; 3
		db 0A9h	; �
		db    0	;
		db    0	;
		db 0CBh	; �
		db  99h	; �
		db    0	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
CHARSRAND	db    0	;
		db    0	;
		db    0	;
		db  16h	;
		db  10h	;
		db  0Bh	;
		db    4	;
		db    1	;
		db  2Ah	; *
		db  4Dh	; M
		db  0Ch	;
		db    9	;
		db    2	;
		db  21h	; !
		db  27h	; '
		db    8	;
		db    6	;
		db    3	;
		db    3	;
		db    3	;
		db  1Eh	;
		db  0Ch	;
		db    4	;
		db    3	;
		db  10h	;
		db    9	;
		db    7	;
		db    5	;
		db    1	;
		db  37h	; 7
		db  0Ch	;
		db  0Dh	;
		db    6	;
		db  32h	; 2
		db  26h	; &
		db  0Ah	;
		db    9	;
		db    7	;
		db  42h	; B
		db  15h	;
		db    4	;
		db    7	;
		db    8	;
		db  20h	;
		db  3Ah	; :
		db    8	;
		db    7	;
		db    9	;
		db    8	;
		db  43h	; C
		db  0Ah	;
		db    5	;
		db  0Ah	;
		db  4Eh	; N
		db  36h	; 6
		db    6	;
		db    4	;
		db  0Bh	;
		db  39h	; 9
		db  55h	; U
		db  0Eh	;
		db    4	;
		db  0Ch	;
		db  35h	; 5
		db  76h	; v
		db  12h	;
		db    9	;
		db  0Dh	;
		db  0Fh	;
		db  6Fh	; o
		db    7	;
		db    5	;
		db  0Eh	;
		db    7	;
		db  63h	; c
		db    7	;
		db    4	;
		db  0Fh	;
		db    8	;
		db  33h	; 3
		db  0Ah	;
		db    6	;
		db  10h	;
		db  38h	; 8
		db  3Fh	; ?
		db  0Ch	;
		db    8	;
		db  11h	;
		db  44h	; D
		db  25h	; %
		db    6	;
		db    3	;
		db  12h	;
		db  1Fh	;
		db  73h	; s
		db    3	;
		db    5	;
		db  13h	;
		db  31h	; 1
		db  6Ah	; j
		db  0Ah	;
		db    6	;
		db  14h	;
		db  19h	;
		db  14h	;
		db    3	;
		db  15h	;
		db  15h	;
		db  0Dh	;
		db  79h	; y
		db  10h	;
		db    6	;
		db  16h	;
		db  25h	; %
		db  49h	; I
		db    6	;
		db    6	;
		db  17h	;
		db  16h	;
		db  54h	; T
		db  0Ch	;
		db    9	;
		db  18h	;
		db  34h	; 4
		db  5Ah	; Z
		db    9	;
		db    4	;
		db  19h	;
		db  1Fh	;
		db  10h	;
		db  22h	; "
		db    2	;
		db  1Ah	;
		db  4Ah	; J
		db  3Dh	; =
		db  0Ah	;
		db  12h	;
		db  1Bh	;
		db  33h	; 3
		db  32h	; 2
		db    5	;
		db    7	;
		db  1Ch	;
		db  36h	; 6
		db  47h	; G
		db    4	;
		db    8	;
		db  1Dh	;
		db    4	;
		db  1Fh	;
		db    4	;
		db    5	;
		db  1Eh	;
		db  46h	; F
		db    7	;
		db    8	;
		db    2	;
		db  1Fh	;
		db    1	;
		db  43h	; C
		db    7	;
		db  1Ch	;
		db  20h	;
		db  2Ch	; ,
		db    0	;
		db  27h	; '
		db  1Bh	;
		db  21h	; !
		db    1	;
		db  10h	;
		db  2Ah	; *
		db  1Ch	;
		db  22h	; "
		db  2Ch	; ,
		db  1Ch	;
		db  27h	; '
		db  20h	;
		db  23h	; #
		db  18h	;
		db  2Ch	; ,
		db  26h	; &
		db  20h	;
		db  24h	; $
		db    0	;
		db  2Ch	; ,
		db  17h	;
		db  2Eh	; .
		db  25h	; %
		db  18h	;
		db  4Ch	; L
		db  26h	; &
		db  17h	;
		db  26h	; &
		db  3Eh	; >
		db  3Ch	; <
		db  16h	;
		db  27h	; '
		db  27h	; '
		db  20h	;
		db  63h	; c
		db  34h	; 4
		db  1Ch	;
		db  28h	; (
		db    1	;
		db  5Ah	; Z
		db  1Fh	;
		db  25h	; %
		db  29h	; )
		db 0FFh	; �
COMMSTOCK	db  64h	; d
		db    0	;
		db    0	;
		db    0	;
COMMBUY		db  14h	;
		db    0	;
		db    0	;
		db    0	;
COMMSELL	db  19h	;
		db    0	;
		db    0	;
		db    0	;
COMMPLAYER	db  17h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
OBJPRICE	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
SALEPRICE	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
CURECOST	db    0	;
		db    0	;
CURECOSTHEX	db    0	;
		db    0	;
		db    0	;
INFOCOSTBCD	db    0	;
byte_FFD_AA88	db 0			; DATA XREF: SPRITER+1B6r SPRITER+244r
					; ...
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db  70h	; p
		db    0	;
		db  80h	; �
word_FFD_AA90	dw 0			; DATA XREF: MAKECHAR+63w MAKECHAR+119r
					; ...
GORGONDEAD	dw 0			; DATA XREF: sub_0_BA48+1Cr
word_FFD_AA94	dw 0			; DATA XREF: MIDNIGHT+92w MIDNIGHT+E5r
word_FFD_AA96	dw 0			; DATA XREF: INIT_VAMPIRESw
					; INIT_WOLFMANw ...
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db 0E0h	; �
		db 0B1h	; �
		db 0F3h	; �
		db 0B1h	; �
		db  0Eh	;
		db 0B2h	; �
		db  2Eh	; .
		db 0B2h	; �
		db  41h	; A
		db 0B2h	; �
		db  6Ah	; j
		db 0B2h	; �
		db 0F3h	; �
		db 0B1h	; �
		db  41h	; A
		db 0B2h	; �
		db  6Ch	; l
		db 0B2h	; �
		db  7Dh	; }
		db 0B2h	; �
		db  91h	; �
		db 0B2h	; �
		db  68h	; h
		db 0B2h	; �
		db 0B1h	; �
		db 0B2h	; �
		db 0C5h	; �
		db 0B2h	; �
		db 0D5h	; �
		db 0B2h	; �
		db 0F5h	; �
		db 0B2h	; �
		db  15h	;
		db 0B3h	; �
		db  2Dh	; -
		db 0B3h	; �
		db  41h	; A
		db 0B3h	; �
		db  55h	; U
		db 0B3h	; �
		db  75h	; u
		db 0B3h	; �
		db  95h	; �
		db 0B3h	; �
		db 0B3h	; �
		db 0B3h	; �
		db 0CBh	; �
		db 0B3h	; �
		db 0E3h	; �
		db 0B3h	; �
		db  0Fh	;
		db 0B4h	; �
		db  2Bh	; +
		db 0B4h	; �
		db  2Eh	; .
		db 0B4h	; �
word_FFD_AAD4	dw 0			; DATA XREF: MAKEREGULARS+1Dw
					; sub_0_BA48+3Ar ...
WITCHDONE	dw 0			; DATA XREF: MAKEREGULARS+56r
					; MIDNIGHTw
byte_FFD_AAD8	db 0			; DATA XREF: JUSTICE+145w JUSTICE+174r
		db  38h	; 8
		db  37h	; 7
		db  0Dh	;
		db 0AFh	; �
		db    0	;
		db    0	;
		db  39h	; 9
		db  25h	; %
		db  54h	; T
		db 0AFh	; �
		db    0	;
		db    0	;
		db  3Ah	; :
		db  24h	; $
		db  54h	; T
		db 0AFh	; �
		db    0	;
		db    0	;
		db  4Ch	; L
		db  2Ch	; ,
		db  67h	; g
		db 0B0h	; �
		db    0	;
		db    0	;
		db  51h	; Q
		db  2Fh	; /
		db  67h	; g
		db 0B0h	; �
		db    0	;
		db    0	;
		db  1Dh	;
		db  7Eh	; ~
		db 0F4h	; �
		db 0B0h	; �
		db    0	;
		db    0	;
		db  4Bh	; K
		db  77h	; w
		db 0C7h	; �
		db 0B1h	; �
		db    0	;
		db    0	;
		db  23h	; #
		db  38h	; 8
		db  54h	; T
		db 0B2h	; �
		db    0	;
		db    0	;
		db  49h	; I
		db  17h	;
		db  9Bh	; �
		db 0B2h	; �
		db    0	;
		db    0	;
		db  0Dh	;
		db  1Eh	;
		db 0E2h	; �
		db 0B2h	; �
		db    0	;
		db    0	;
		db    6	;
		db  49h	; I
		db  29h	; )
		db 0B3h	; �
		db    0	;
		db    0	;
		db  0Ah	;
		db  15h	;
		db  70h	; p
		db 0B3h	; �
		db    0	;
		db    0	;
		db  12h	;
		db  65h	; e
		db  30h	; 0
		db 0B4h	; �
		db    0	;
		db    0	;
		db  10h	;
		db  67h	; g
		db  30h	; 0
		db 0B4h	; �
		db    0	;
		db    0	;
		db  14h	;
		db  67h	; g
		db  30h	; 0
		db 0B4h	; �
		db    0	;
		db    0	;
		db    4	;
		db  30h	; 0
		db  77h	; w
		db 0B4h	; �
		db    0	;
		db    0	;
		db    6	;
		db  32h	; 2
		db  77h	; w
		db 0B4h	; �
		db    0	;
		db    0	;
		db  3Eh	; >
		db  12h	;
		db 0BEh	; �
		db 0B4h	; �
		db    0	;
		db    0	;
		db  15h	;
		db  76h	; v
		db    5	;
		db 0B5h	; �
		db    0	;
		db    0	;
		db    7	;
		db    7	;
		db  4Ch	; L
		db 0B5h	; �
		db    0	;
		db    0	;
		db  51h	; Q
		db    9	;
		db 0FDh	; �
		db 0B3h	; �
		db    1	;
		db    0	;
		db  30h	; 0
		db  59h	; Y
		db  20h	;
		db 0B6h	; �
		db    1	;
		db    0	;
		db  2Ch	; ,
		db  56h	; V
		db  20h	;
		db 0B6h	; �
		db    1	;
		db    0	;
		db  37h	; 7
		db  2Ch	; ,
		db  35h	; 5
		db 0B6h	; �
		db    1	;
		db    0	;
		db  11h	;
		db  5Fh	; _
		db  68h	; h
		db 0B6h	; �
		db    1	;
		db    0	;
		db  39h	; 9
		db  4Dh	; M
		db  68h	; h
		db 0B6h	; �
		db    1	;
		db    0	;
		db  30h	; 0
		db  3Eh	; >
		db 0B9h	; �
		db 0B6h	; �
		db    1	;
		db    0	;
		db  26h	; &
		db  44h	; D
		db 0B9h	; �
		db 0B6h	; �
		db    1	;
		db    0	;
		db  3Ch	; <
		db  4Dh	; M
		db 0D9h	; �
		db 0B5h	; �
		db    0	;
		db    0	;
		db    2	;
		db  67h	; g
		db 0D8h	; �
		db 0B6h	; �
		db    1	;
		db    0	;
		db  11h	;
		db  5Eh	; ^
		db 0D8h	; �
		db 0B6h	; �
		db    1	;
		db    0	;
		db  0Bh	;
		db  5Bh	; [
		db 0D8h	; �
		db 0B6h	; �
		db    1	;
		db    0	;
		db  1Bh	;
		db  4Bh	; K
		db 0D8h	; �
		db 0B6h	; �
		db    1	;
		db    0	;
		db  21h	; !
		db  46h	; F
		db 0D8h	; �
		db 0B6h	; �
		db    1	;
		db    0	;
		db  17h	;
		db  46h	; F
		db 0D8h	; �
		db 0B6h	; �
		db    1	;
		db    0	;
		db  25h	; %
		db  44h	; D
		db 0D8h	; �
		db 0B6h	; �
		db    1	;
		db    0	;
		db    8	;
		db  5Bh	; [
		db  29h	; )
		db 0B7h	; �
		db    0	;
		db    0	;
		db  0Eh	;
		db  0Fh	;
		db  70h	; p
		db 0B7h	; �
		db    1	;
		db    0	;
		db  10h	;
		db  78h	; x
		db  70h	; p
		db 0B7h	; �
		db    1	;
		db    0	;
		db  34h	; 4
		db  7Ch	; |
		db  70h	; p
		db 0B7h	; �
		db    1	;
		db    0	;
		db  4Dh	; M
		db  42h	; B
		db  70h	; p
		db 0B7h	; �
		db    1	;
		db    0	;
		db  12h	;
		db  24h	; $
		db  70h	; p
		db 0B7h	; �
		db    1	;
		db    0	;
		db  51h	; Q
		db  58h	; X
		db  70h	; p
		db 0B7h	; �
		db    1	;
		db    0	;
		db  1Ch	;
		db  40h	; @
		db  70h	; p
		db 0B7h	; �
		db    1	;
		db    0	;
		db  13h	;
		db  23h	; #
		db  70h	; p
		db 0B7h	; �
		db    1	;
		db    0	;
		db  3Fh	; ?
		db  5Ah	; Z
		db 0C1h	; �
		db 0B7h	; �
		db    1	;
		db    0	;
		db  47h	; G
		db  38h	; 8
		db 0CCh	; �
		db 0B7h	; �
		db    1	;
		db    0	;
		db  3Dh	; =
		db  34h	; 4
		db    9	;
		db 0B8h	; �
		db    0	;
		db    0	;
		db  47h	; G
		db  19h	;
		db  50h	; P
		db 0B8h	; �
		db    1	;
		db    0	;
		db  53h	; S
		db  47h	; G
		db  8Dh	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  51h	; Q
		db  47h	; G
		db  98h	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  4Eh	; N
		db  48h	; H
		db 0A3h	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  50h	; P
		db  4Ah	; J
		db 0AEh	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  4Dh	; M
		db  49h	; I
		db 0B9h	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  4Bh	; K
		db  42h	; B
		db 0B9h	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  50h	; P
		db  4Bh	; K
		db 0C4h	; �
		db 0B8h	; �
		db    0	;
		db    0	;
		db  52h	; R
		db  47h	; G
		db  8Dh	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  4Fh	; O
		db  48h	; H
		db  98h	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  4Dh	; M
		db  48h	; H
		db 0A3h	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  53h	; S
		db  48h	; H
		db 0AEh	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  4Dh	; M
		db  4Ah	; J
		db 0B9h	; �
		db 0B8h	; �
		db    1	;
		db    0	;
		db  4Eh	; N
		db  4Bh	; K
		db 0C4h	; �
		db 0B8h	; �
		db    0	;
		db    0	;
		db  4Eh	; N
		db  4Ch	; L
		db  51h	; Q
		db 0B9h	; �
		db    0	;
		db    0	;
		db    5	;
		db  38h	; 8
		db  6Ch	; l
		db 0BAh	; �
		db    1	;
		db    0	;
		db    1	;
		db  3Bh	; ;
		db 0DEh	; �
		db 0B9h	; �
		db    0	;
		db    0	;
		db  30h	; 0
		db  15h	;
		db  25h	; %
		db 0BAh	; �
		db    0	;
		db    0	;
		db  4Ch	; L
		db  20h	;
		db  8Bh	; �
		db 0BAh	; �
		db    1	;
		db    0	;
		db  4Ch	; L
		db  26h	; &
		db  8Bh	; �
		db 0BAh	; �
		db    1	;
		db    0	;
		db  4Bh	; K
		db  1Fh	;
		db 0DCh	; �
		db 0BAh	; �
		db    0	;
		db    0	;
		db  22h	; "
		db  2Dh	; -
		db  23h	; #
		db 0BBh	; �
		db    1	;
		db    0	;
		db  13h	;
		db  77h	; w
		db  74h	; t
		db 0BBh	; �
		db    1	;
		db    0	;
		db  2Dh	; -
		db  6Fh	; o
		db  74h	; t
		db 0BBh	; �
		db    1	;
		db    0	;
		db  22h	; "
		db    1	;
		db 0C5h	; �
		db 0BBh	; �
		db    0	;
		db    0	;
		db  19h	;
		db    4	;
		db 0C5h	; �
		db 0BBh	; �
		db    0	;
		db    0	;
		db  1Fh	;
		db    9	;
		db  52h	; R
		db 0BCh	; �
		db    1	;
		db    0	;
		db  14h	;
		db  24h	; $
		db  7Bh	; {
		db 0BCh	; �
		db    1	;
		db    0	;
		db  0Bh	;
		db  47h	; G
		db  9Ah	; �
		db 0BCh	; �
		db    1	;
		db    0	;
		db  0Ch	;
		db  44h	; D
		db  9Ah	; �
		db 0BCh	; �
		db    1	;
		db    0	;
		db  52h	; R
		db  1Fh	;
		db 0EBh	; �
		db 0BCh	; �
		db    0	;
		db    0	;
		db  42h	; B
		db  0Ah	;
		db  4Ah	; J
		db 0BEh	; �
		db    1	;
		db    0	;
		db  0Ch	;
		db  7Eh	; ~
		db  9Bh	; �
		db 0BEh	; �
		db    0	;
		db    0	;
		db    7	;
		db  60h	; `
		db  28h	; (
		db 0BFh	; �
		db    0	;
		db    0	;
		db    9	;
		db  62h	; b
		db  28h	; (
		db 0BFh	; �
		db    0	;
		db    0	;
		db  0Bh	;
		db  5Bh	; [
		db  28h	; (
		db 0BFh	; �
		db    0	;
		db    0	;
		db  36h	; 6
		db  5Dh	; ]
		db 0CDh	; �
		db 0C0h	; �
		db    0	;
		db    0	;
		db  4Bh	; K
		db  7Dh	; }
		db 0A0h	; �
		db 0C1h	; �
		db    1	;
		db    0	;
		db  4Bh	; K
		db  3Fh	; ?
		db 0D3h	; �
		db 0C1h	; �
		db    1	;
		db    0	;
		db  51h	; Q
		db  4Dh	; M
		db    6	;
		db 0C2h	; �
		db    1	;
		db    0	;
		db  53h	; S
		db  54h	; T
		db    6	;
		db 0C2h	; �
		db    1	;
		db    0	;
		db  51h	; Q
		db  57h	; W
		db    6	;
		db 0C2h	; �
		db    1	;
		db    0	;
		db  44h	; D
		db  69h	; i
		db  39h	; 9
		db 0C2h	; �
		db    0	;
		db    0	;
		db  44h	; D
		db  6Fh	; o
		db  39h	; 9
		db 0C2h	; �
		db    0	;
		db    0	;
		db    9	;
		db    8	;
		db  0Ch	;
		db 0C3h	; �
		db    1	;
		db    0	;
		db    1	;
		db    8	;
		db  3Fh	; ?
		db 0C3h	; �
		db    1	;
		db    0	;
		db  35h	; 5
		db  6Dh	; m
		db  54h	; T
		db 0C3h	; �
		db    1	;
		db    0	;
		db  3Dh	; =
		db  66h	; f
		db  73h	; s
		db 0C3h	; �
		db    1	;
		db    0	;
		db  42h	; B
		db  67h	; g
		db  73h	; s
		db 0C3h	; �
		db    1	;
		db    0	;
		db  4Bh	; K
		db  63h	; c
		db  73h	; s
		db 0C3h	; �
		db    1	;
		db    0	;
		db  49h	; I
		db  5Bh	; [
		db  9Ch	; �
		db 0C3h	; �
		db    1	;
		db    0	;
		db  4Ch	; L
		db  63h	; c
		db  9Ch	; �
		db 0C3h	; �
		db    1	;
		db    0	;
		db  49h	; I
		db  5Ah	; Z
		db 0C5h	; �
		db 0C3h	; �
		db    1	;
		db    0	;
		db  37h	; 7
		db  5Dh	; ]
		db 0C5h	; �
		db 0C3h	; �
		db    1	;
		db    0	;
		db  2Fh	; /
		db  67h	; g
		db 0D0h	; �
		db 0C3h	; �
		db    1	;
		db    0	;
		db  33h	; 3
		db  65h	; e
		db 0E5h	; �
		db 0C3h	; �
		db    1	;
		db    0	;
		db  35h	; 5
		db  62h	; b
		db 0FAh	; �
		db 0C3h	; �
		db    1	;
		db    0	;
		db  38h	; 8
		db  1Dh	;
		db  19h	;
		db 0C4h	; �
		db    1	;
		db    0	;
		db  18h	;
		db  41h	; A
		db  56h	; V
		db 0C4h	; �
		db    0	;
		db    0	;
		db  1Bh	;
		db  40h	; @
		db  56h	; V
		db 0C4h	; �
		db    0	;
		db    0	;
		db  13h	;
		db  22h	; "
		db  9Dh	; �
		db 0C4h	; �
		db    1	;
		db    0	;
		db  22h	; "
		db  13h	;
		db  9Dh	; �
		db 0C4h	; �
		db    1	;
		db    0	;
		db  28h	; (
		db  1Fh	;
		db  9Dh	; �
		db 0C4h	; �
		db    1	;
		db    0	;
		db  29h	; )
		db  17h	;
		db  9Dh	; �
		db 0C4h	; �
		db    1	;
		db    0	;
		db  24h	; $
		db  19h	;
		db  9Dh	; �
		db 0C4h	; �
		db    1	;
		db    0	;
		db  15h	;
		db  25h	; %
		db  9Dh	; �
		db 0C4h	; �
		db    1	;
		db    0	;
		db  11h	;
		db  23h	; #
		db  9Dh	; �
		db 0C4h	; �
		db    1	;
		db    0	;
		db  26h	; &
		db  24h	; $
		db 0EEh	; �
		db 0C4h	; �
		db    1	;
		db    0	;
		db  23h	; #
		db  23h	; #
		db 0EEh	; �
		db 0C4h	; �
		db    1	;
		db    0	;
		db  29h	; )
		db  1Fh	;
		db  0Dh	;
		db 0C5h	; �
		db    1	;
		db    0	;
		db  2Bh	; +
		db  1Dh	;
		db  0Dh	;
		db 0C5h	; �
		db    1	;
		db    0	;
		db  2Eh	; .
		db  22h	; "
		db  0Dh	;
		db 0C5h	; �
		db    1	;
		db    0	;
		db  36h	; 6
		db  1Ah	;
		db  0Dh	;
		db 0C5h	; �
		db    1	;
		db    0	;
		db  35h	; 5
		db  22h	; "
		db  0Dh	;
		db 0C5h	; �
		db    1	;
		db    0	;
		db  2Bh	; +
		db  1Ch	;
		db  4Ah	; J
		db 0C5h	; �
		db    1	;
		db    0	;
		db  2Dh	; -
		db  1Ah	;
		db  4Ah	; J
		db 0C5h	; �
		db    1	;
		db    0	;
		db  2Eh	; .
		db  1Ah	;
		db  5Fh	; _
		db 0C5h	; �
		db    1	;
		db    0	;
		db  2Bh	; +
		db  29h	; )
		db  6Ah	; j
		db 0C5h	; �
		db    1	;
		db    0	;
		db  35h	; 5
		db  23h	; #
		db  75h	; u
		db 0C5h	; �
		db    1	;
		db    0	;
		db  37h	; 7
		db  23h	; #
		db  75h	; u
		db 0C5h	; �
		db    1	;
		db    0	;
		db  37h	; 7
		db  27h	; '
		db  75h	; u
		db 0C5h	; �
		db    1	;
		db    0	;
		db  37h	; 7
		db  1Ah	;
		db  94h	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db  38h	; 8
		db  1Ch	;
		db  94h	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db    5	;
		db  1Dh	;
		db 0A9h	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db    6	;
		db  1Dh	;
		db 0A9h	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db    9	;
		db  23h	; #
		db 0A9h	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db    1	;
		db  2Ch	; ,
		db 0A9h	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db    9	;
		db  26h	; &
		db 0A9h	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db    1	;
		db  2Dh	; -
		db 0DCh	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db    4	;
		db  30h	; 0
		db 0DCh	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db    9	;
		db  2Dh	; -
		db 0DCh	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db  10h	;
		db  2Dh	; -
		db 0DCh	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db    4	;
		db  31h	; 1
		db 0F1h	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db  0Eh	;
		db  34h	; 4
		db 0F1h	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db  0Bh	;
		db  36h	; 6
		db 0F1h	; �
		db 0C5h	; �
		db    1	;
		db    0	;
		db  11h	;
		db  34h	; 4
		db    6	;
		db 0C6h	; �
		db    1	;
		db    0	;
		db  12h	;
		db  35h	; 5
		db    6	;
		db 0C6h	; �
		db    1	;
		db    0	;
		db  16h	;
		db  35h	; 5
		db    6	;
		db 0C6h	; �
		db    1	;
		db    0	;
		db  16h	;
		db  32h	; 2
		db    6	;
		db 0C6h	; �
		db    1	;
		db    0	;
		db  19h	;
		db  34h	; 4
		db    6	;
		db 0C6h	; �
		db    1	;
		db    0	;
		db  21h	; !
		db  3Dh	; =
		db  4Fh	; O
		db 0C6h	; �
		db    0	;
		db    0	;
		db  33h	; 3
		db  30h	; 0
		db  25h	; %
		db 0C6h	; �
		db    1	;
		db    0	;
		db  33h	; 3
		db  36h	; 6
		db  3Ah	; :
		db 0C6h	; �
		db    1	;
		db    0	;
		db  13h	;
		db  50h	; P
		db  96h	; �
		db 0C6h	; �
		db    1	;
		db    0	;
		db  18h	;
		db  56h	; V
		db  96h	; �
		db 0C6h	; �
		db    1	;
		db    0	;
		db  1Ch	;
		db  56h	; V
		db  96h	; �
		db 0C6h	; �
		db    1	;
		db    0	;
		db  1Fh	;
		db  58h	; X
		db 0BFh	; �
		db 0C6h	; �
		db    1	;
		db    0	;
		db  27h	; '
		db  58h	; X
		db 0BFh	; �
		db 0C6h	; �
		db    1	;
		db    0	;
		db  28h	; (
		db  58h	; X
		db 0FCh	; �
		db 0C6h	; �
		db    1	;
		db    0	;
		db  17h	;
		db  5Ah	; Z
		db    7	;
		db 0C7h	; �
		db    1	;
		db    0	;
		db    7	;
		db  72h	; r
		db  1Dh	;
		db 0C7h	; �
		db    1	;
		db    0	;
		db  0Ah	;
		db  65h	; e
		db  12h	;
		db 0C7h	; �
		db    1	;
		db    0	;
		db  0Fh	;
		db  68h	; h
		db  12h	;
		db 0C7h	; �
		db    1	;
		db    0	;
		db  2Ch	; ,
		db    4	;
		db  32h	; 2
		db 0C7h	; �
		db    1	;
		db    0	;
		db  30h	; 0
		db    1	;
		db  32h	; 2
		db 0C7h	; �
		db    1	;
		db    0	;
		db  47h	; G
		db    1	;
		db  32h	; 2
		db 0C7h	; �
		db    1	;
		db    0	;
		db  44h	; D
		db    8	;
		db  32h	; 2
		db 0C7h	; �
		db    1	;
		db    0	;
		db  37h	; 7
		db  0Fh	;
		db  32h	; 2
		db 0C7h	; �
		db    1	;
		db    0	;
		db  30h	; 0
		db  0Fh	;
		db  32h	; 2
		db 0C7h	; �
		db    1	;
		db    0	;
		db  33h	; 3
		db    6	;
		db  32h	; 2
		db 0C7h	; �
		db    1	;
		db    0	;
		db  51h	; Q
		db  38h	; 8
		db  79h	; y
		db 0C7h	; �
		db    0	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
REGSKILLED	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  36h	; 6
		db  34h	; 4
		db    0	;
		db    1	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  16h	;
		db    0	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    2	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db    2	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db  39h	; 9
		db  23h	; #
		db    0	;
		db    0	;
		db  96h	; �
		db    0	;
		db  42h	; B
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    1	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  19h	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    4	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    0	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0C8h	; �
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db  39h	; 9
		db  24h	; $
		db  39h	; 9
		db  2Eh	; .
		db  33h	; 3
		db  2Eh	; .
		db  33h	; 3
		db  26h	; &
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  38h	; 8
		db  23h	; #
		db    0	;
		db    1	;
		db  78h	; x
		db    0	;
		db  28h	; (
		db    0	;
		db    0	;
		db  60h	; `
		db  80h	; �
		db    0	;
		db  7Bh	; {
		db    7	;
		db  0Ch	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  11h	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    4	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    2	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    1	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  96h	; �
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db  39h	; 9
		db  24h	; $
		db  2Eh	; .
		db  27h	; '
		db  2Eh	; .
		db  26h	; &
		db  2Eh	; .
		db  27h	; '
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  38h	; 8
		db  24h	; $
		db    0	;
		db    0	;
		db  73h	; s
		db    0	;
		db  32h	; 2
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    8	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    1	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    4	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    0	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    1	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  64h	; d
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db  39h	; 9
		db  24h	; $
		db  39h	; 9
		db  2Eh	; .
		db  33h	; 3
		db  2Eh	; .
		db  33h	; 3
		db  26h	; &
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  38h	; 8
		db  25h	; %
		db    0	;
		db    0	;
		db  8Ch	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    7	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  1Ah	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  49h	; I
		db 0A1h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  22h	; "
		db  17h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  4Dh	; M
		db  2Eh	; .
		db    0	;
		db    2	;
		db  96h	; �
		db    0	;
		db  42h	; B
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db  0Ah	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    4	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Eh	;
		db    0	;
		db  20h	;
		db  7Bh	; {
		db  0Dh	;
		db    1	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db  4Fh	; O
		db  2Eh	; .
		db  4Fh	; O
		db  2Ah	; *
		db  4Eh	; N
		db  29h	; )
		db  4Dh	; M
		db  2Dh	; -
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Dh	; M
		db  2Eh	; .
		db    0	;
		db    2	;
		db  96h	; �
		db    0	;
		db  37h	; 7
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db  0Bh	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    4	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Eh	;
		db    0	;
		db  20h	;
		db  7Bh	; {
		db  0Dh	;
		db    1	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db    0	;
		db    0	;
		db    0	;
		db  4Fh	; O
		db  2Eh	; .
		db  50h	; P
		db  2Ah	; *
		db  4Dh	; M
		db  29h	; )
		db  4Ch	; L
		db  2Dh	; -
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  1Ah	;
		db  7Ch	; |
		db    0	;
		db    7	;
		db  4Bh	; K
		db    0	;
		db  32h	; 2
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    2	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    2	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db    8	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db  7Bh	; {
		db  15h	;
		db  7Ch	; |
		db  0Fh	;
		db  7Ch	; |
		db  11h	;
		db  7Eh	; ~
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db  7Bh	; {
		db    0	;
		db    7	;
		db  46h	; F
		db    0	;
		db  2Dh	; -
		db    0	;
		db    0	;
		db  70h	; p
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    3	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    2	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    2	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db  7Bh	; {
		db  15h	;
		db  7Ch	; |
		db  0Fh	;
		db  7Ch	; |
		db  11h	;
		db  7Eh	; ~
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  14h	;
		db  7Dh	; }
		db    0	;
		db    7	;
		db  41h	; A
		db    0	;
		db  32h	; 2
		db    0	;
		db    0	;
		db  80h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    4	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    2	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    2	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db  13h	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db  7Bh	; {
		db  15h	;
		db  7Ch	; |
		db  0Fh	;
		db  7Ch	; |
		db  11h	;
		db  7Eh	; ~
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  48h	; H
		db  78h	; x
		db    0	;
		db    0	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  0Eh	;
		db    2	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    4	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    3	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db  51h	; Q
		db  76h	; v
		db  51h	; Q
		db  7Dh	; }
		db  4Eh	; N
		db  7Dh	; }
		db  51h	; Q
		db  7Dh	; }
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  48h	; H
		db  7Bh	; {
		db    0	;
		db    1	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    7	;
		db  15h	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  24h	; $
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    4	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Bh	;
		db    0	;
		db    0	;
		db    0	;
		db  45h	; E
		db  76h	; v
		db  44h	; D
		db  77h	; w
		db  50h	; P
		db  76h	; v
		db  4Bh	; K
		db  77h	; w
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  25h	; %
		db  37h	; 7
		db    0	;
		db    0	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    7	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  1Dh	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db  15h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  4Ah	; J
		db  9Ah	; �
		db  74h	; t
		db  9Ah	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db  10h	;
		db  0Ah	;
		db  10h	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  45h	; E
		db  15h	;
		db    1	;
		db    0	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  70h	; p
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  15h	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    4	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db  13h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db 0A0h	; �
		db  9Ah	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Dh	;
		db    1	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db  1Ch	;
		db    0	;
		db    1	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  70h	; p
		db    0	;
		db    0	;
		db  7Bh	; {
		db  16h	;
		db    1	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    4	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    2	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    3	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    5	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    7	;
		db  4Bh	; K
		db    0	;
		db    2	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    5	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    2	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    2	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db    6	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    5	;
		db  9Bh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Fh	;
		db  0Bh	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    5	;
		db  14h	;
		db    0	;
		db    2	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db    5	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    6	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  10h	;
		db  15h	;
		db    0	;
		db    0	;
		db  17h	;
		db  15h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  17h	;
		db  15h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  15h	;
		db    0	;
		db    0	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  70h	; p
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    9	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db  0Bh	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    5	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    3	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db  0Fh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  82h	; �
		db  9Bh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  11h	;
		db  15h	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db  4Eh	; N
		db  0Eh	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  0Eh	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  0Eh	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  0Eh	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  0Eh	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  11h	;
		db  66h	; f
		db    0	;
		db    0	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    7	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    7	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  13h	;
		db    0	;
		db    0	;
		db    0	;
		db  0Fh	;
		db  64h	; d
		db    6	;
		db  64h	; d
		db    6	;
		db  67h	; g
		db    4	;
		db  67h	; g
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    4	;
		db  35h	; 5
		db    0	;
		db    5	;
		db  88h	; �
		db    0	;
		db  42h	; B
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  16h	;
		db    2	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    2	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    8	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  14h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  41h	; A
		db  12h	;
		db    0	;
		db    0	;
		db  9Ch	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  70h	; p
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db  11h	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  0Bh	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    4	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db    9	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db 0EFh	; �
		db  9Bh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db  24h	; $
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  18h	;
		db  76h	; v
		db    0	;
		db    2	;
		db  9Ch	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  80h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db  10h	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  0Eh	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    1	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Ah	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  7Ah	; z
		db  9Ch	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  16h	;
		db  29h	; )
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  0Ch	;
		db    4	;
		db    0	;
		db  0Bh	;
		db  88h	; �
		db    0	;
		db  3Ch	; <
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Bh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  17h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db    4	;
		db    0	;
		db  0Bh	;
		db  9Ch	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    7	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Bh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Ah	;
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  3Eh	; >
		db  4Dh	; M
		db    0	;
		db    5	;
		db  9Ch	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  70h	; p
		db    0	;
		db    0	;
		db  7Bh	; {
		db  16h	;
		db    3	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  1Ch	;
		db    1	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  17h	;
		db  9Dh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  2Eh	; .
		db  4Ah	; J
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  64h	; d
		db  2Eh	; .
		db  4Fh	; O
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  64h	; d
		db    3	;
		db  40h	; @
		db  2Ah	; *
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Bh	; K
		db  2Ah	; *
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Fh	; O
		db  2Ah	; *
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  50h	; P
		db  34h	; 4
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  47h	; G
		db  2Ch	; ,
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  36h	; 6
		db  53h	; S
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  36h	; 6
		db  53h	; S
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  21h	; !
		db  5Fh	; _
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Ah	;
		db  6Ah	; j
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db  6Fh	; o
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  21h	; !
		db  66h	; f
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  28h	; (
		db  63h	; c
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  13h	;
		db  5Dh	; ]
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  28h	; (
		db  44h	; D
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Ah	; :
		db  41h	; A
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  32h	; 2
		db  3Dh	; =
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  1Eh	;
		db  44h	; D
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    7	;
		db  5Ah	; Z
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  12h	;
		db  56h	; V
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db  60h	; `
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  51h	; Q
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  5Ah	; Z
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db  56h	; V
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Bh	;
		db  56h	; V
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    6	;
		db  5Ch	; \
		db 0FFh	; �
		db  17h	;
		db  9Ch	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  1Ah	;
		db    4	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db 0C5h	; �
		db  9Dh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  19h	;
		db  25h	; %
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  0Eh	;
		db  19h	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  11h	;
		db  13h	;
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Eh	;
		db  2Ch	; ,
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Ch	;
		db  2Eh	; .
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Fh	;
		db  2Ch	; ,
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  47h	; G
		db  53h	; S
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Bh	; +
		db  62h	; b
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  50h	; P
		db  6Bh	; k
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  3Dh	; =
		db  5Fh	; _
		db 0FFh	; �
		db  15h	;
		db    0	;
		db  20h	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db    0	;
		db    6	;
		db  48h	; H
		db  35h	; 5
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Bh	; ;
		db  43h	; C
		db 0FFh	; �
		db  19h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Dh	; M
		db  36h	; 6
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Dh	; M
		db  3Ah	; :
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Bh	; K
		db  3Ch	; <
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  48h	; H
		db  3Bh	; ;
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  44h	; D
		db  38h	; 8
		db 0FFh	; �
		db  0Ch	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db  1Bh	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    2	;
		db 0FFh	; �
		db  7Bh	; {
		db  1Ah	;
		db  0Ch	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  32h	; 2
		db  9Eh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Bh	;
		db    2	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db  43h	; C
		db  26h	; &
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  41h	; A
		db  23h	; #
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  41h	; A
		db  26h	; &
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Bh	; K
		db  23h	; #
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  49h	; I
		db  22h	; "
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  47h	; G
		db  26h	; &
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    1	;
		db  53h	; S
		db  44h	; D
		db 0FFh	; �
		db  0Dh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  50h	; P
		db  45h	; E
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  4Dh	; M
		db  45h	; E
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  53h	; S
		db  4Dh	; M
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  4Ah	; J
		db  49h	; I
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  4Ah	; J
		db  4Ch	; L
		db 0FFh	; �
		db  0Ah	;
		db  6Eh	; n
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db  1Bh	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    2	;
		db 0FFh	; �
		db  7Bh	; {
		db  1Ah	;
		db  0Ch	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Bh	; K
		db  4Ch	; L
		db 0FFh	; �
		db  0Ah	;
		db  64h	; d
		db    0	;
		db  24h	; $
		db    0	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db  1Bh	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    2	;
		db 0FFh	; �
		db  7Bh	; {
		db  1Ah	;
		db  0Ch	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  4Eh	; N
		db  4Ah	; J
		db    0	;
		db    1	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    7	;
		db    9	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  0Ch	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    1	;
		db 0FFh	; �
		db  7Bh	; {
		db  18h	;
		db  0Ch	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  14h	;
		db  9Fh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Ch	;
		db  0Ch	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  4Ah	; J
		db    0	;
		db    0	;
		db  88h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    9	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  0Ch	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    1	;
		db 0FFh	; �
		db  7Bh	; {
		db  18h	;
		db  0Ch	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db 0AEh	; �
		db 0A3h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Ch	;
		db  2Ch	; ,
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db  45h	; E
		db 0FFh	; �
		db  0Dh	;
		db  9Ch	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    7	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    2	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db  11h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  7Ah	; z
		db  9Fh	; �
		db 0AEh	; �
		db  9Fh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Dh	;
		db  16h	;
		db  0Ch	;
		db  12h	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  31h	; 1
		db  17h	;
		db 0FFh	; �
		db  0Dh	;
		db  9Ch	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    8	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    2	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db  11h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db 0EFh	; �
		db  9Fh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Eh	;
		db  16h	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    3	;
		db  3Ch	; <
		db 0FFh	; �
		db  0Dh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db  41h	; A
		db 0FFh	; �
		db  0Dh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db  47h	; G
		db 0FFh	; �
		db  0Dh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  52h	; R
		db  1Ch	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  53h	; S
		db  20h	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  24h	; $
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Bh	; K
		db  21h	; !
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  53h	; S
		db  24h	; $
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  53h	; S
		db  24h	; $
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Bh	; K
		db  21h	; !
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  52h	; R
		db  1Ch	;
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  52h	; R
		db  1Ch	;
		db 0FFh	; �
		db  0Ch	;
		db  9Ch	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    9	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db  1Ah	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Fh	;
		db  11h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  27h	; '
		db  29h	; )
		db 0FFh	; �
		db  14h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  22h	; "
		db  29h	; )
		db 0FFh	; �
		db  14h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  24h	; $
		db  28h	; (
		db 0FFh	; �
		db  14h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  29h	; )
		db  30h	; 0
		db 0FFh	; �
		db  14h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  30h	; 0
		db  2Bh	; +
		db 0FFh	; �
		db  14h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  30h	; 0
		db  2Dh	; -
		db 0FFh	; �
		db  14h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  30h	; 0
		db  2Fh	; /
		db 0FFh	; �
		db  14h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Bh	; +
		db  32h	; 2
		db 0FFh	; �
		db  14h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  1Ch	;
		db  71h	; q
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  19h	;
		db  74h	; t
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db  75h	; u
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Eh	;
		db  78h	; x
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  12h	;
		db  7Ch	; |
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  17h	;
		db  7Dh	; }
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  16h	;
		db  7Ah	; z
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db  78h	; x
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  24h	; $
		db    3	;
		db 0FFh	; �
		db  0Ch	;
		db  9Ch	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  1Bh	;
		db    3	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db  14h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db 0C9h	; �
		db 0A0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  21h	; !
		db  21h	; !
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  13h	;
		db    6	;
		db 0FFh	; �
		db  1Bh	;
		db  9Ch	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db    9	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db  1Ah	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  20h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db  23h	; #
		db    7	;
		db 0FFh	; �
		db  0Eh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  23h	; #
		db  0Bh	;
		db 0FFh	; �
		db  0Eh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  27h	; '
		db  0Ch	;
		db 0FFh	; �
		db  0Eh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  27h	; '
		db    7	;
		db 0FFh	; �
		db  0Eh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  10h	;
		db  25h	; %
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Fh	;
		db  27h	; '
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Ch	;
		db  29h	; )
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  0Ch	;
		db  47h	; G
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Bh	;
		db  45h	; E
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Dh	;
		db  45h	; E
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Bh	;
		db  49h	; I
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Dh	;
		db  49h	; I
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db  45h	; E
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db  47h	; G
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db  4Ah	; J
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
REGMON26	db    5	;
		db  4Eh	; N
		db  1Eh	;
		db    0	;
		db    3	;
		db  9Ch	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    3	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db    5	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    1	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Dh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A8h	; �
		db  61h	; a
		db    0	;
		db    0	;
		db  23h	; #
		db  2Bh	; +
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  20h	;
		db    0	;
		db    3	;
		db  9Ch	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    7	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db    7	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Dh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A8h	; �
		db  61h	; a
		db    0	;
		db    0	;
		db  25h	; %
		db  2Bh	; +
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Fh	; O
		db  20h	;
		db    0	;
		db    3	;
		db  9Ch	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  15h	;
		db    8	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    4	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Dh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A8h	; �
		db  61h	; a
		db    0	;
		db    0	;
		db  26h	; &
		db  2Bh	; +
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Dh	; M
		db  1Fh	;
		db    0	;
		db    3	;
		db  9Ch	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db    0	;
		db  70h	; p
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    7	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db    9	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Dh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A8h	; �
		db  61h	; a
		db    0	;
		db    0	;
		db  27h	; '
		db  2Bh	; +
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Fh	; O
		db  1Eh	;
		db    0	;
		db    3	;
		db  9Ch	; �
		db    0	;
		db  34h	; 4
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    4	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    2	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Dh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A8h	; �
		db  61h	; a
		db    0	;
		db    0	;
		db  24h	; $
		db  2Bh	; +
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  51h	; Q
		db  14h	;
		db 0FFh	; �
		db  18h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  1Dh	;
		db    0	;
		db  4Bh	; K
		db  10h	;
		db 0FFh	; �
		db  18h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db  1Dh	;
		db    0	;
		db  46h	; F
		db  16h	;
		db 0FFh	; �
		db  18h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  49h	; I
		db  10h	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  11h	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  44h	; D
		db  12h	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  41h	; A
		db  0Dh	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  49h	; I
		db  0Dh	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  0Eh	;
		db  77h	; w
		db 0FFh	; �
		db  1Bh	;
		db 0FAh	; �
		db    0	;
		db  82h	; �
		db    0	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db    3	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db    5	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    1	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Dh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  28h	; (
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Fh	;
		db  7Dh	; }
		db 0FFh	; �
		db  1Bh	;
		db  64h	; d
		db    0	;
		db  32h	; 2
		db    0	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db    7	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db    7	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Dh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  29h	; )
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db    8	;
		db  5Bh	; [
		db    0	;
		db    5	;
		db  8Ch	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    7	;
		db  0Ch	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  0Bh	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  1Ch	;
		db    0	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Ah	; *
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db  5Ch	; \
		db    0	;
		db    5	;
		db  96h	; �
		db    0	;
		db  37h	; 7
		db    0	;
		db    0	;
		db  70h	; p
		db    0	;
		db    0	;
		db  7Bh	; {
		db    7	;
		db  0Dh	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  0Ch	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  1Ch	;
		db    1	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Bh	; +
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  5Fh	; _
		db    0	;
		db    5	;
		db  88h	; �
		db    0	;
		db  2Dh	; -
		db    0	;
		db    0	;
		db  80h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db    7	;
		db  0Fh	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  0Eh	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  1Ch	;
		db    2	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Ch	; ,
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db  5Eh	; ^
		db    0	;
		db    5	;
		db  96h	; �
		db    0	;
		db  3Ch	; <
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    7	;
		db  11h	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  10h	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  1Ch	;
		db    3	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Dh	; -
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db  5Bh	; [
		db    1	;
		db    5	;
		db  91h	; �
		db    0	;
		db  37h	; 7
		db    0	;
		db    0	;
		db  80h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db    7	;
		db  12h	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  11h	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    3	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  1Ch	;
		db    1	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db  5Fh	; _
		db    1	;
		db    5	;
		db  96h	; �
		db    0	;
		db  37h	; 7
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    7	;
		db  14h	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  0Fh	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    8	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  1Ch	;
		db    0	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Fh	; /
		db  27h	; '
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  38h	; 8
		db  63h	; c
		db    1	;
		db    0	;
		db  8Ch	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db  0Ch	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  0Fh	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Eh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  30h	; 0
		db  27h	; '
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  37h	; 7
		db  64h	; d
		db    1	;
		db    0	;
		db  96h	; �
		db    0	;
		db  37h	; 7
		db    0	;
		db    0	;
		db  80h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db  14h	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db    5	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  0Fh	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  0Ah	;
		db 0A2h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  31h	; 1
		db  27h	; '
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  32h	; 2
		db  61h	; a
		db    1	;
		db    0	;
		db  96h	; �
		db    0	;
		db  37h	; 7
		db    0	;
		db    0	;
		db  70h	; p
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db  14h	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db  15h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  4Ch	; L
		db 0A2h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A8h	; �
		db  61h	; a
		db    0	;
		db    0	;
		db  32h	; 2
		db  27h	; '
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db  48h	; H
		db  7Ah	; z
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Eh	; >
		db  7Ch	; |
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  48h	; H
		db  74h	; t
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Ch	; L
		db  70h	; p
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  79h	; y
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db  45h	; E
		db  44h	; D
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  46h	; F
		db  44h	; D
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Eh	; >
		db  3Bh	; ;
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  43h	; C
		db  3Ch	; <
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db  40h	; @
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db  4Eh	; N
		db  52h	; R
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Dh	; M
		db  53h	; S
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  54h	; T
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Eh	; N
		db  51h	; Q
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Fh	; O
		db  50h	; P
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  47h	; G
		db  6Ch	; l
		db    0	;
		db    3	;
		db  8Ch	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  16h	;
		db    4	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  10h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A8h	; �
		db  61h	; a
		db    0	;
		db    0	;
		db  33h	; 3
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  47h	; G
		db  6Dh	; m
		db    0	;
		db    3	;
		db  9Bh	; �
		db    0	;
		db  37h	; 7
		db    0	;
		db    0	;
		db  70h	; p
		db    0	;
		db    0	;
		db  7Bh	; {
		db  16h	;
		db    5	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  10h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A8h	; �
		db  61h	; a
		db    0	;
		db    0	;
		db  34h	; 4
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  46h	; F
		db  6Eh	; n
		db    0	;
		db    3	;
		db 0A0h	; �
		db    0	;
		db  37h	; 7
		db    0	;
		db    0	;
		db  80h	; �
		db    0	;
		db    0	;
		db  7Bh	; {
		db  16h	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  10h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  0Bh	;
		db 0A9h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A8h	; �
		db  61h	; a
		db    0	;
		db    0	;
		db  35h	; 5
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db  0Ah	;
		db    6	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Dh	;
		db  0Bh	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db  0Dh	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  12h	;
		db    9	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  10h	;
		db  0Bh	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    3	;
		db    1	;
		db 0FFh	; �
		db  16h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db    1	;
		db 0FFh	; �
		db  16h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  32h	; 2
		db  6Ch	; l
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db  68h	; h
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  33h	; 3
		db  6Ah	; j
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db  46h	; F
		db  61h	; a
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  42h	; B
		db  61h	; a
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  45h	; E
		db  65h	; e
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  48h	; H
		db  64h	; d
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db  4Fh	; O
		db  64h	; d
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  44h	; D
		db  5Fh	; _
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Dh	; M
		db  59h	; Y
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  4Ch	; L
		db  61h	; a
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  45h	; E
		db  56h	; V
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  2Ah	; *
		db  6Bh	; k
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Bh	; +
		db  6Ch	; l
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  32h	; 2
		db  68h	; h
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db  65h	; e
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  38h	; 8
		db  61h	; a
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Bh	; ;
		db  63h	; c
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  38h	; 8
		db  66h	; f
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db  3Fh	; ?
		db  1Dh	;
		db 0FFh	; �
		db  10h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db  37h	; 7
		db  24h	; $
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  0Eh	;
		db  0Fh	;
		db  36h	; 6
		db  29h	; )
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  0Dh	;
		db  3Dh	; =
		db  2Ah	; *
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  12h	;
		db  3Fh	; ?
		db  24h	; $
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  0Ch	;
		db  3Ch	; <
		db  24h	; $
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db  0Fh	;
		db    1	;
		db  1Ah	;
		db  3Fh	; ?
		db 0FFh	; �
		db  17h	;
		db  8Ch	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db  0Ch	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    0	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  11h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db  51h	; Q
		db 0A7h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  36h	; 6
		db  0Eh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  22h	; "
		db  21h	; !
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db  21h	; !
		db  19h	;
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db  17h	;
		db  16h	;
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db  15h	;
		db  1Fh	;
		db 0FFh	; �
		db  19h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db  18h	;
		db  21h	; !
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  13h	;
		db  16h	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  25h	; %
		db  15h	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Fh	;
		db  1Eh	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  24h	; $
		db  26h	; &
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  27h	; '
		db  25h	; %
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  21h	; !
		db  25h	; %
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db  29h	; )
		db  1Dh	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Dh	; -
		db  1Fh	;
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Bh	; +
		db  22h	; "
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db  1Fh	;
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  34h	; 4
		db  1Ch	;
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Fh	; /
		db  22h	; "
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  28h	; (
		db  12h	;
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Bh	; +
		db  11h	;
		db 0FFh	; �
		db  11h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  30h	; 0
		db  1Ch	;
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  30h	; 0
		db  25h	; %
		db 0FFh	; �
		db  0Eh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db    3	;
		db  30h	; 0
		db  26h	; &
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  31h	; 1
		db  26h	; &
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  32h	; 2
		db  26h	; &
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  38h	; 8
		db  18h	;
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  39h	; 9
		db  1Bh	;
		db 0FFh	; �
		db  11h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    4	;
		db  2Bh	; +
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    9	;
		db  29h	; )
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db  29h	; )
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    8	;
		db  23h	; #
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db  24h	; $
		db 0FFh	; �
		db  0Fh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  11h	;
		db  2Fh	; /
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db  2Dh	; -
		db 0FFh	; �
		db  1Bh	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  0Eh	;
		db  33h	; 3
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db  35h	; 5
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db  11h	;
		db  33h	; 3
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  19h	;
		db  2Dh	; -
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  15h	;
		db  2Fh	; /
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  35h	; 5
		db  33h	; 3
		db 0FFh	; �
		db  16h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  33h	; 3
		db  33h	; 3
		db 0FFh	; �
		db  16h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db  36h	; 6
		db  37h	; 7
		db 0FFh	; �
		db  14h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  34h	; 4
		db  38h	; 8
		db 0FFh	; �
		db  14h	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  2Bh	; +
		db  3Eh	; >
		db 0FFh	; �
		db  17h	;
		db  92h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db  17h	;
		db  0Dh	;
		db  20h	;
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db 0FFh	; �
		db  7Bh	; {
		db  18h	;
		db  12h	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  18h	;
		db  13h	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db  19h	;
		db  52h	; R
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  21h	; !
		db  4Eh	; N
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  22h	; "
		db  52h	; R
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  1Bh	;
		db  4Fh	; O
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db  24h	; $
		db  57h	; W
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  25h	; %
		db  57h	; W
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  24h	; $
		db  59h	; Y
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  25h	; %
		db  59h	; Y
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  22h	; "
		db  58h	; X
		db 0FFh	; �
		db  12h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  23h	; #
		db  58h	; X
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  29h	; )
		db  57h	; W
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  0Eh	;
		db  5Ah	; Z
		db 0FFh	; �
		db  0Ch	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  0Ch	;
		db  66h	; f
		db 0FFh	; �
		db  12h	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    4	;
		db  74h	; t
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db  78h	; x
		db 0FFh	; �
		db  13h	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    7	;
		db  2Eh	; .
		db    9	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  2Ah	; *
		db    8	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  35h	; 5
		db  0Ah	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  33h	; 3
		db    1	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Bh	; ;
		db    1	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  44h	; D
		db    3	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  40h	; @
		db    1	;
		db 0FFh	; �
		db  0Ah	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db  4Fh	; O
		db  38h	; 8
		db    0	;
		db    0	;
		db  92h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db    0	;
		db  60h	; `
		db    0	;
		db    0	;
		db  7Bh	; {
		db    8	;
		db  0Bh	;
		db  20h	;
		db  7Bh	; {
		db    9	;
		db  0Ch	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Ch	;
		db    4	;
		db 0FFh	; �
		db  7Bh	; {
		db  0Bh	;
		db    6	;
		db  20h	;
		db  7Bh	; {
		db  0Ah	;
		db    9	;
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  37h	; 7
		db    0	;
		db    0	;
		db 0C9h	; �
		db 0AEh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  39h	; 9
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  18h	;
		db 0FCh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  94h	; �
		db    0	;
		db 0C4h	; �
		db    0	;
		db 0F4h	; �
		db    0	;
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db  94h	; �
		db  28h	; (
		db 0C4h	; �
		db  28h	; (
		db 0F4h	; �
		db  28h	; (
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db  94h	; �
		db  50h	; P
		db 0C4h	; �
		db  50h	; P
		db 0F4h	; �
		db  50h	; P
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db  94h	; �
		db  78h	; x
		db 0C4h	; �
		db  78h	; x
		db 0F4h	; �
		db  78h	; x
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db    0	;
		db  9Bh	; �
		db  30h	; 0
		db  9Bh	; �
		db  60h	; `
		db  9Bh	; �
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db  90h	; �
		db 0A0h	; �
		db 0C0h	; �
		db 0A0h	; �
		db 0F0h	; �
		db 0A0h	; �
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db    0	;
		db 0C8h	; �
		db  30h	; 0
		db 0C8h	; �
		db  60h	; `
		db 0C8h	; �
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db  90h	; �
		db 0C8h	; �
		db 0C0h	; �
		db 0C8h	; �
		db 0F0h	; �
		db 0C8h	; �
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db  24h	; $
		db    1	;
		db  24h	; $
		db    1	;
		db  24h	; $
		db    1	;
		db  18h	;
		db    0	;
		db  20h	;
		db    0	;
		db  24h	; $
		db  29h	; )
		db  24h	; $
		db  29h	; )
		db  24h	; $
		db  29h	; )
		db  18h	;
		db    0	;
		db  20h	;
		db    0	;
		db  24h	; $
		db  51h	; Q
		db  24h	; $
		db  51h	; Q
		db  24h	; $
		db  51h	; Q
		db  18h	;
		db    0	;
		db  20h	;
		db    0	;
		db  24h	; $
		db  79h	; y
		db  24h	; $
		db  79h	; y
		db  24h	; $
		db  79h	; y
		db  18h	;
		db    0	;
		db  20h	;
		db    0	;
		db  80h	; �
		db  0Fh	;
		db  33h	; 3
		db  2Bh	; +
		db  60h	; `
		db  59h	; Y
		db 0D7h	; �
		db  6Eh	; n
		db  40h	; @
		db  68h	; h
		db 0EBh	; �
		db  0Fh	;
word_FFD_C844	dw 0			; DATA XREF: DINE+3Ew DINE+42r
					; ...
		db  80h	; �
		db    0	;
		db  0Ch	;
		db    0	;
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db    1	;
		db    0	;
		db 0B3h	; �
		db    0	;
		db  22h	; "
		db    0	;
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db    2	;
		db    0	;
		db 0A0h	; �
		db    0	;
		db  47h	; G
		db    0	;
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db    3	;
		db    0	;
		db 0D7h	; �
		db    0	;
		db  58h	; X
		db    0	;
		db  30h	; 0
		db    0	;
		db  20h	;
		db    0	;
		db    4	;
		db    0	;
		db  80h	; �
		db    0	;
		db  53h	; S
		db    0	;
		db  18h	;
		db    0	;
		db  20h	;
		db    0	;
		db    5	;
		db    0	;
		db 0EBh	; �
		db    0	;
		db  0Ch	;
		db    0	;
		db  18h	;
		db    0	;
		db  20h	;
		db    0	;
		db    6	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
word_FFD_C884	dw 0			; DATA XREF: DINE+E9w DINE+155r
					; ...
word_FFD_C886	dw 0			; DATA XREF: DINE+F9w DINE+1A6r
					; ...
word_FFD_C888	dw 0			; DATA XREF: DINE+100w	DINE+138r
					; ...
word_FFD_C88A	dw 0			; DATA XREF: DINE+10Fw
MEALPRICE	dw 0			; DATA XREF: DINE+F1w
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    2	;
		db    2	;
		db    2	;
		db    2	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    2	;
		db    2	;
		db    2	;
		db    2	;
		db    3	;
		db    3	;
		db    2	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    2	;
		db    3	;
		db    3	;
		db    2	;
		db    2	;
		db    2	;
		db    3	;
		db    3	;
		db    3	;
		db    2	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    2	;
		db    3	;
		db    3	;
		db    2	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    2	;
		db    2	;
		db    2	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    2	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    2	;
		db    2	;
		db    3	;
		db    3	;
		db    2	;
		db    2	;
		db    2	;
		db    2	;
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    2	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    2	;
		db    2	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  94h	; �
		db    0	;
		db  54h	; T
		db  0Eh	;
		db  14h	;
		db  1Ch	;
		db 0D4h	; �
		db  29h	; )
		db  94h	; �
		db  37h	; 7
		db 0A4h	; �
		db    0	;
		db  64h	; d
		db  0Eh	;
		db  24h	; $
		db  1Ch	;
		db 0E4h	; �
		db  29h	; )
		db 0A4h	; �
		db  37h	; 7
		db 0B4h	; �
		db    0	;
		db  74h	; t
		db  0Eh	;
		db  34h	; 4
		db  1Ch	;
		db 0F4h	; �
		db  29h	; )
		db 0B4h	; �
		db  37h	; 7
		db 0C4h	; �
		db    0	;
		db  84h	; �
		db  0Eh	;
		db  44h	; D
		db  1Ch	;
		db    4	;
		db  2Ah	; *
		db 0C4h	; �
		db  37h	; 7
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  78h	; x
		db    0	;
		db  0Ch	;
		db    0	;
		db  10h	;
		db    0	;
		db  0Bh	;
		db    0	;
		db    1	;
		db    0	;
		db  78h	; x
		db    0	;
		db  1Ch	;
		db    0	;
		db  10h	;
		db    0	;
		db  0Bh	;
		db    0	;
		db    2	;
		db    0	;
		db  78h	; x
		db    0	;
		db  2Ch	; ,
		db    0	;
		db  10h	;
		db    0	;
		db  0Bh	;
		db    0	;
		db    3	;
		db    0	;
		db  78h	; x
		db    0	;
		db  3Ch	; <
		db    0	;
		db  10h	;
		db    0	;
		db  0Bh	;
		db    0	;
		db    4	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db    5	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  95h	; �
		db  5Ch	; \
		db 0A7h	; �
		db  5Ch	; \
		db 0B0h	; �
		db  5Ch	; \
		db 0B9h	; �
		db  5Ch	; \
		db    0	;
		db    1	;
		db    9	;
		db    1	;
		db    8	;
		db    0	;
		db    8	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  0Ah	;
		db    0	;
		db  84h	; �
		db  9Dh	; �
		db 0B3h	; �
		db  9Dh	; �
		db 0E2h	; �
		db  9Dh	; �
WONEYE		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  7Ch	; |
		db    0	;
		db    6	;
		db    0	;
		db  2Eh	; .
		db    0	;
		db  49h	; I
		db    0	;
		db    1	;
		db    0	;
		db 0ABh	; �
		db    0	;
		db    6	;
		db    0	;
		db  2Eh	; .
		db    0	;
		db  49h	; I
		db    0	;
		db    2	;
		db    0	;
		db 0DAh	; �
		db    0	;
		db    6	;
		db    0	;
		db  2Eh	; .
		db    0	;
		db  49h	; I
		db    0	;
		db    3	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  81h	; �
		db    0	;
		db  0Bh	;
		db    0	;
		db  20h	;
		db    0	;
		db  2Ch	; ,
		db    0	;
		db    1	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db  0Bh	;
		db    0	;
		db  20h	;
		db    0	;
		db  2Ch	; ,
		db    0	;
		db    2	;
		db    0	;
		db 0DFh	; �
		db    0	;
		db  0Bh	;
		db    0	;
		db  20h	;
		db    0	;
		db  2Ch	; ,
		db    0	;
		db    3	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  59h	; Y
		db    9	;
		db  88h	; �
		db    9	;
		db 0B7h	; �
		db    9	;
		db    0	;
NO_OF_GAMES	db 0			; DATA XREF: MIDNIGHT+6w
		db 0BAh	; �
		db    0	;
		db  50h	; P
		db    0	;
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db    1	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  94h	; �
		db  0Ah	;
		db  1Ch	;
		db    1	;
		db  1Ch	;
		db  29h	; )
		db  1Ch	;
		db  51h	; Q
		db  1Ch	;
		db  79h	; y
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
HUNGER		dw 0			; DATA XREF: sub_0_D256+4Dr
THIRST		dw 0			; DATA XREF: sub_0_D256+5Fr
TIREDNESS	dw 0			; DATA XREF: sub_0_D256+71r
		db  14h	;
		db    0	;
		db  19h	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  1Eh	;
		db    0	;
		db  28h	; (
		db    0	;
		db    1	;
		db    0	;
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    0	;
		db    4	;
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db    4	;
		db    0	;
ILLNESSES	db    0	;
		db    0	;
		db 0FDh	; �
		db 0FFh	; �
		db 0FDh	; �
		db 0FFh	; �
		db  80h	; �
		db  3Eh	; >
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0FEh	; �
		db 0FFh	; �
		db    1	;
		db    0	;
		db 0FEh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db 0FDh	; �
		db 0FFh	; �
		db 0FEh	; �
		db 0FFh	; �
		db  80h	; �
		db  3Eh	; >
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    3	;
		db    0	;
		db 0FBh	; �
		db 0FFh	; �
		db 0FDh	; �
		db 0FFh	; �
		db  80h	; �
		db  3Eh	; >
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
INJURY		db    4	;
		db    0	;
		db 0FDh	; �
		db 0FFh	; �
		db 0FEh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
word_FFD_CA84	dw 0			; DATA XREF: sub_0_D256+17r
		db  32h	; 2
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    5	;
		db    0	;
		db 0FEh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  20h	;
		db    0	;
		db    0	;
		db    0	;
		db    6	;
		db    0	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    6	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0F4h	; �
		db    1	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    7	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  20h	;
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db 0FEh	; �
		db 0FFh	; �
		db    8	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  20h	;
		db    3	;
		db    0	;
		db    0	;
		db    8	;
		db    0	;
		db    0	;
		db    0	;
		db 0FEh	; �
		db 0FFh	; �
		db    9	;
		db    0	;
		db 0FEh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db 0C8h	; �
		db    0	;
		db    0	;
		db    0	;
		db    4	;
		db    0	;
		db    0	;
		db    0	;
		db 0FEh	; �
		db 0FFh	; �
VAMPIRISM	db  0Ah	;		; Creo que esto	es el estado de	la enfermedad vampirismo
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
		db  80h	; �
		db  3Eh	; >
word_FFD_CAE4	dw 0			; DATA XREF: DINE+192r
		db  14h	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
LYCANTHROPY	db  0Bh	;		; Creo que esto	es el estado de	la enfermedad licantropia
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db  80h	; �
		db  3Eh	; >
		db    0	;
		db    0	;
		db  1Eh	;
		db    0	;
		db    0	;
		db    0	;
		db 0FBh	; �
		db 0FFh	; �
DRUNK		db  0Ch	;		; Estas	borracho o no
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    4	;
		db    0	;
word_FFD_CB04	dw 0			; DATA XREF: DINE+188w
		db    2	;
		db    0	;
		db    0	;
		db    0	;
		db 0FDh	; �
		db 0FFh	; �
		db  0Dh	;
		db    0	;
		db 0FEh	; �
		db 0FFh	; �
		db 0FEh	; �
		db 0FFh	; �
		db  10h	;
		db    0	;
		db    0	;
		db    0	;
		db    5	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Eh	;
		db    0	;
		db 0FDh	; �
		db 0FFh	; �
		db 0FEh	; �
		db 0FFh	; �
		db  64h	; d
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Fh	;
		db    0	;
		db    5	;
		db    0	;
		db    2	;
		db    0	;
		db  20h	;
		db    0	;
		db    0	;
		db    0	;
		db  1Eh	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
HEALTH		dw 4Bh			; DATA XREF: START+1E6w sub_0_D256+5r
ENERGY		dw 96h			; DATA XREF: START+1EFw sub_0_D256+29r
		db    0	;
		db    0	;
APPEAL		dw 0			; DATA XREF: sub_0_D256+3Br
SLEEPLACE	dw 0			; DATA XREF: MUGGEDr MUGGED+15r
BARBGRND	dw 0			; DATA XREF: ATTRIBAR+20r ATTRIBAR+38r
		db  0Fh	;
		db  2Ch	; ,
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  7Eh	; ~
		db 0D3h	; �
		db  0Fh	;
		db  2Dh	; -
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0A7h	; �
		db 0D3h	; �
		db  41h	; A
		db  49h	; I
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0B1h	; �
		db 0D3h	; �
		db    6	;
		db  49h	; I
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0D1h	; �
		db 0D3h	; �
		db  30h	; 0
		db  3Eh	; >
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db 0EDh	; �
		db 0D3h	; �
		db  0Ah	;
		db  6Ch	; l
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  21h	; !
		db 0D4h	; �
		db  19h	;
		db  2Fh	; /
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  73h	; s
		db 0D4h	; �
		db  3Eh	; >
		db  13h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0AEh	; �
		db 0D4h	; �
		db  11h	;
		db  5Fh	; _
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db 0DCh	; �
		db 0D4h	; �
		db    4	;
		db  6Eh	; n
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  78h	; x
		db 0D5h	; �
		db    1	;
		db  32h	; 2
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  78h	; x
		db 0D5h	; �
		db  1Ch	;
		db  56h	; V
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  78h	; x
		db 0D5h	; �
		db  11h	;
		db  23h	; #
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  5Dh	; ]
		db 0D5h	; �
		db  12h	;
		db  24h	; $
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  5Dh	; ]
		db 0D5h	; �
		db  14h	;
		db  24h	; $
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  5Dh	; ]
		db 0D5h	; �
		db  14h	;
		db  26h	; &
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  5Dh	; ]
		db 0D5h	; �
		db  15h	;
		db  25h	; %
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  5Dh	; ]
		db 0D5h	; �
		db  51h	; Q
		db  4Dh	; M
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  67h	; g
		db 0D5h	; �
		db  46h	; F
		db  38h	; 8
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db 0C6h	; �
		db 0D5h	; �
		db  30h	; 0
		db  12h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  45h	; E
		db 0D6h	; �
		db  31h	; 1
		db  16h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  45h	; E
		db 0D6h	; �
		db  2Eh	; .
		db  18h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  45h	; E
		db 0D6h	; �
		db  2Eh	; .
		db  13h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  45h	; E
		db 0D6h	; �
		db  2Ch	; ,
		db  17h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  45h	; E
		db 0D6h	; �
		db  22h	; "
		db  29h	; )
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db  82h	; �
		db 0D6h	; �
		db  21h	; !
		db  76h	; v
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db 0D8h	; �
		db 0D6h	; �
		db  22h	; "
		db  76h	; v
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db 0E6h	; �
		db 0D6h	; �
		db  2Ah	; *
		db  73h	; s
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db 0D7h	; �
		db  0Ah	;
		db  15h	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Fh	; ?
		db 0D7h	; �
		db  22h	; "
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0BEh	; �
		db 0D6h	; �
		db  26h	; &
		db  0Eh	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0BEh	; �
		db 0D6h	; �
		db  25h	; %
		db    9	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0C6h	; �
		db 0D6h	; �
		db  51h	; Q
		db  26h	; &
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  20h	;
		db 0D6h	; �
		db  51h	; Q
		db  2Fh	; /
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  3Dh	; =
		db 0D6h	; �
		db  44h	; D
		db  68h	; h
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  8Eh	; �
		db 0D7h	; �
		db  44h	; D
		db  70h	; p
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  8Eh	; �
		db 0D7h	; �
		db  1Ch	;
		db  40h	; @
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db 0EDh	; �
		db 0D6h	; �
		db  21h	; !
		db  48h	; H
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db 0F3h	; �
		db 0D6h	; �
		db  28h	; (
		db  58h	; X
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db 0A0h	; �
		db 0D7h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
word_FFD_CC8A	dw 0			; DATA XREF: sub_0_D3ED+Ar
					; sub_0_D3ED+14w ...
T6S		dw 0			; DATA XREF: sub_0_D421+Ar
					; sub_0_D421+14w ...
REGDEADTIMER	dw 0			; DATA XREF: sub_0_D55D+52w
					; sub_0_D55D+62w
		db  2Eh	; .
		db  14h	;
		db  2Eh	; .
		db  17h	;
		db  2Fh	; /
		db  17h	;
		db  2Fh	; /
		db  14h	;
		db  2Dh	; -
		db  17h	;
		db  51h	; Q
		db  2Ah	; *
		db  53h	; S
		db  2Ch	; ,
		db  51h	; Q
		db  2Dh	; -
		db  53h	; S
		db  31h	; 1
		db  4Dh	; M
		db  28h	; (
		db  4Dh	; M
		db  2Ah	; *
		db  4Fh	; O
		db  2Bh	; +
		db  4Ch	; L
		db  2Dh	; -
		db  4Ch	; L
		db  2Bh	; +
		db  50h	; P
		db  2Bh	; +
word_FFD_CCAE	dw 0			; DATA XREF: MAKEREGULARS+276r
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
word_FFD_CCC7	dw 0			; DATA XREF: COMBAT+10Aw
		db    0	;
		db    0	;
		db    0	;
		db    0	;
FIREBALLCOUNTER	db    0	;
		db    0	;
TBCOUNTER	db    0	;
		db    0	;
CREATEFLAG	dw 0			; DATA XREF: sub_0_D7A0+10w
					; sub_0_D7A0+1Ew
		db    2	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    2	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    4	;
		db    0	;
		db    5	;
		db    0	;
		db    6	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    1	;
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    1	;
		db    2	;
		db    0	;
		db    2	;
		db    1	;
		db 0FFh	; �
		db 0FFh	; �
		db    2	;
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    1	;
		db    2	;
		db    0	;
		db    2	;
		db    1	;
		db 0FFh	; �
		db 0FFh	; �
		db    2	;
		db    0	;
		db    1	;
		db    1	;
		db    2	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db    3	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  10h	;
		db    0	;
		db  10h	;
		db    0	;
		db  11h	;
		db    0	;
		db  11h	;
		db    0	;
		db  12h	;
		db    0	;
		db  12h	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    2	;
		db    1	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    1	;
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    1	;
		db    3	;
		db    0	;
		db    2	;
		db    0	;
		db    1	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    4	;
		db    0	;
		db    5	;
		db    0	;
		db    6	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
word_FFD_CD45	dw 0			; DATA XREF: COMBAT+BBw
word_FFD_CD47	dw 0			; DATA XREF: COMBAT+C6w
		db 0D3h	; �
		db 0CCh	; �
		db 0D3h	; �
		db 0CCh	; �
		db  25h	; %
		db 0CDh	; �
		db 0D3h	; �
		db 0CCh	; �
		db 0D3h	; �
		db 0CCh	; �
		db 0D3h	; �
		db 0CCh	; �
		db 0D3h	; �
		db 0CCh	; �
		db    1	;
		db 0CDh	; �
		db 0E9h	; �
		db 0CCh	; �
		db  25h	; %
		db 0CDh	; �
		db 0E9h	; �
		db 0CCh	; �
		db 0D3h	; �
		db 0CCh	; �
		db  2Fh	; /
		db 0CDh	; �
		db  2Fh	; /
		db 0CDh	; �
		db 0E9h	; �
		db 0CCh	; �
		db 0E9h	; �
		db 0CCh	; �
		db  2Fh	; /
		db 0CDh	; �
		db 0F5h	; �
		db 0CCh	; �
		db  2Fh	; /
		db 0CDh	; �
		db 0E9h	; �
		db 0CCh	; �
		db 0E9h	; �
		db 0CCh	; �
		db 0E9h	; �
		db 0CCh	; �
		db 0E9h	; �
		db 0CCh	; �
		db  2Fh	; /
		db 0CDh	; �
		db  2Fh	; /
		db 0CDh	; �
		db 0E9h	; �
		db 0CCh	; �
		db 0E9h	; �
		db 0CCh	; �
		db 0E9h	; �
		db 0CCh	; �
		db 0E1h	; �
		db 0CCh	; �
		db 0E1h	; �
		db 0CCh	; �
		db    9	;
		db 0CDh	; �
		db 0E1h	; �
		db 0CCh	; �
		db 0E1h	; �
		db 0CCh	; �
		db 0E1h	; �
		db 0CCh	; �
		db 0E1h	; �
		db 0CCh	; �
		db    9	;
		db 0CDh	; �
		db 0E1h	; �
		db 0CCh	; �
		db    9	;
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db 0E1h	; �
		db 0CCh	; �
		db  17h	;
		db 0CDh	; �
		db  3Dh	; =
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  3Dh	; =
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  3Dh	; =
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db  17h	;
		db 0CDh	; �
		db    0	;
		db    0	;
		db 0DDh	; �
		db 0CDh	; �
		db 0EFh	; �
		db 0CDh	; �
		db    1	;
		db 0CEh	; �
		db  13h	;
		db 0CEh	; �
		db    1	;
		db 0CEh	; �
		db 0EFh	; �
		db 0CDh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  6Dh	; m
		db 0CEh	; �
		db  7Fh	; 
		db 0CEh	; �
		db  91h	; �
		db 0CEh	; �
		db 0A3h	; �
		db 0CEh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  25h	; %
		db 0CEh	; �
		db  37h	; 7
		db 0CEh	; �
		db  49h	; I
		db 0CEh	; �
		db  5Bh	; [
		db 0CEh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db 0ABh	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db  54h	; T
		db    0	;
		db  57h	; W
		db    0	;
		db  17h	;
		db    0	;
		db  0Dh	;
		db    0	;
		db  40h	; @
		db  10h	;
		db  17h	;
		db    0	;
		db  1Ah	;
		db    0	;
		db 0ABh	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db  54h	; T
		db    0	;
		db  4Ah	; J
		db    0	;
		db  17h	;
		db    0	;
		db  1Ah	;
		db    0	;
		db  40h	; @
		db  10h	;
		db  17h	;
		db    0	;
		db  27h	; '
		db    0	;
		db 0ABh	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db  54h	; T
		db    0	;
		db  3Dh	; =
		db    0	;
		db  17h	;
		db    0	;
		db  27h	; '
		db    0	;
		db  40h	; @
		db  10h	;
		db  17h	;
		db    0	;
		db  36h	; 6
		db    0	;
		db 0ABh	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db  54h	; T
		db    0	;
		db  30h	; 0
		db    0	;
		db  17h	;
		db    0	;
		db  36h	; 6
		db    0	;
		db  40h	; @
		db  10h	;
		db  3Dh	; =
		db    0	;
		db  35h	; 5
		db    0	;
		db 0ABh	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db 0A2h	; �
		db    0	;
		db  4Ah	; J
		db    0	;
		db  3Dh	; =
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db  10h	;
		db  3Dh	; =
		db    0	;
		db  35h	; 5
		db    0	;
		db 0ABh	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db  72h	; r
		db    0	;
		db  44h	; D
		db    0	;
		db  3Dh	; =
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db  10h	;
		db  3Dh	; =
		db    0	;
		db  35h	; 5
		db    0	;
		db 0ABh	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db  42h	; B
		db    0	;
		db  2Fh	; /
		db    0	;
		db  3Dh	; =
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db  10h	;
		db  3Dh	; =
		db    0	;
		db  35h	; 5
		db    0	;
		db 0ABh	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db  44h	; D
		db    0	;
		db  3Dh	; =
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db  10h	;
		db  36h	; 6
		db    0	;
		db  1Eh	;
		db    0	;
		db  4Ah	; J
		db  84h	; �
		db    8	;
		db 0D7h	; �
		db  8Bh	; �
		db    0	;
		db 0F4h	; �
		db 0FFh	; �
		db  37h	; 7
		db    0	;
		db  1Eh	;
		db    0	;
		db  40h	; @
		db  10h	;
		db  36h	; 6
		db    0	;
		db  1Eh	;
		db    0	;
		db  4Ah	; J
		db  84h	; �
		db    8	;
		db 0D7h	; �
		db  77h	; w
		db    0	;
		db  14h	;
		db    0	;
		db  4Bh	; K
		db    0	;
		db  1Eh	;
		db    0	;
		db  40h	; @
		db  10h	;
		db  36h	; 6
		db    0	;
		db  1Eh	;
		db    0	;
		db  4Ah	; J
		db  84h	; �
		db    8	;
		db 0D7h	; �
		db  81h	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  41h	; A
		db    0	;
		db  1Eh	;
		db    0	;
		db  40h	; @
		db  10h	;
		db  36h	; 6
		db    0	;
		db  1Eh	;
		db    0	;
		db  4Ah	; J
		db  84h	; �
		db    8	;
		db 0D7h	; �
		db  8Bh	; �
		db    0	;
		db  4Dh	; M
		db    0	;
		db  37h	; 7
		db    0	;
		db  1Eh	;
		db    0	;
		db  40h	; @
		db  10h	;
		db 0F4h	; �
		db  22h	; "
		db    6	;
		db  23h	; #
		db 0F4h	; �
		db  22h	; "
		db 0E2h	; �
		db  22h	; "
		db 0FFh	; �
		db 0FFh	; �
		db 0E9h	; �
		db 0CEh	; �
		db 0FBh	; �
		db 0CEh	; �
		db 0E9h	; �
		db 0CEh	; �
		db 0D7h	; �
		db 0CEh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    6	;
		db  23h	; #
		db 0F4h	; �
		db  22h	; "
		db 0E2h	; �
		db  22h	; "
		db 0FBh	; �
		db 0CEh	; �
		db 0E9h	; �
		db 0CEh	; �
		db 0D7h	; �
		db 0CEh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  34h	; 4
		db    0	;
		db  10h	;
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db  54h	; T
		db    0	;
		db  34h	; 4
		db    0	;
		db  10h	;
		db    0	;
		db 0C0h	; �
		db 0F0h	; �
		db  48h	; H
		db    0	;
		db  1Fh	;
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db  45h	; E
		db    0	;
		db  48h	; H
		db    0	;
		db  1Fh	;
		db    0	;
		db 0C0h	; �
		db 0F0h	; �
		db  6Ah	; j
		db    0	;
		db  39h	; 9
		db    0	;
		db  40h	; @
		db  74h	; t
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db  2Bh	; +
		db    0	;
		db  6Ah	; j
		db    0	;
		db  39h	; 9
		db    0	;
		db 0C0h	; �
		db 0F0h	; �
		db  2Fh	; /
		db 0CFh	; �
		db  41h	; A
		db 0CFh	; �
		db  53h	; S
		db 0CFh	; �
		db  65h	; e
		db 0CFh	; �
		db  53h	; S
		db 0CFh	; �
		db  41h	; A
		db 0CFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0BFh	; �
		db 0CFh	; �
		db 0D1h	; �
		db 0CFh	; �
		db 0E3h	; �
		db 0CFh	; �
		db 0F5h	; �
		db 0CFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  77h	; w
		db 0CFh	; �
		db  89h	; �
		db 0CFh	; �
		db  9Bh	; �
		db 0CFh	; �
		db 0ADh	; �
		db 0CFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    9	;
		db    0	;
		db  0Dh	;
		db    0	;
		db  2Ch	; ,
		db  7Ah	; z
		db    8	;
		db 0D7h	; �
		db  54h	; T
		db    0	;
		db  57h	; W
		db    0	;
		db    9	;
		db    0	;
		db  0Dh	;
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db    9	;
		db    0	;
		db  1Ah	;
		db    0	;
		db  2Ch	; ,
		db  7Ah	; z
		db    8	;
		db 0D7h	; �
		db  54h	; T
		db    0	;
		db  4Ah	; J
		db    0	;
		db    9	;
		db    0	;
		db  1Ah	;
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db    9	;
		db    0	;
		db  27h	; '
		db    0	;
		db  2Ch	; ,
		db  7Ah	; z
		db    8	;
		db 0D7h	; �
		db  54h	; T
		db    0	;
		db  3Dh	; =
		db    0	;
		db    9	;
		db    0	;
		db  27h	; '
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db    9	;
		db    0	;
		db  36h	; 6
		db    0	;
		db  2Ch	; ,
		db  7Ah	; z
		db    8	;
		db 0D7h	; �
		db  54h	; T
		db    0	;
		db  30h	; 0
		db    0	;
		db    9	;
		db    0	;
		db  36h	; 6
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db  45h	; E
		db    0	;
		db  35h	; 5
		db    0	;
		db 0E7h	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db 0A2h	; �
		db    0	;
		db  4Ah	; J
		db    0	;
		db  45h	; E
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db  45h	; E
		db    0	;
		db  35h	; 5
		db    0	;
		db 0E7h	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db  72h	; r
		db    0	;
		db  44h	; D
		db    0	;
		db  45h	; E
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db  45h	; E
		db    0	;
		db  35h	; 5
		db    0	;
		db 0E7h	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db  42h	; B
		db    0	;
		db  2Fh	; /
		db    0	;
		db  45h	; E
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db  45h	; E
		db    0	;
		db  35h	; 5
		db    0	;
		db 0E7h	; �
		db  79h	; y
		db    8	;
		db 0D7h	; �
		db    0	;
		db    0	;
		db  44h	; D
		db    0	;
		db  45h	; E
		db    0	;
		db  35h	; 5
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db  35h	; 5
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  4Bh	; K
		db  2Ah	; *
		db    8	;
		db 0D7h	; �
		db  8Bh	; �
		db    0	;
		db 0F4h	; �
		db 0FFh	; �
		db  37h	; 7
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db  35h	; 5
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  4Bh	; K
		db  2Ah	; *
		db    8	;
		db 0D7h	; �
		db  77h	; w
		db    0	;
		db  14h	;
		db    0	;
		db  4Bh	; K
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db  35h	; 5
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  4Bh	; K
		db  2Ah	; *
		db    8	;
		db 0D7h	; �
		db  81h	; �
		db    0	;
		db  32h	; 2
		db    0	;
		db  41h	; A
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  40h	; @
		db 0C0h	; �
		db  35h	; 5
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  4Bh	; K
		db  2Ah	; *
		db    8	;
		db 0D7h	; �
		db  8Bh	; �
		db    0	;
		db  4Dh	; M
		db    0	;
		db  37h	; 7
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  40h	; @
		db 0C0h	; �
MILITIA_COMBAT	db  50h	; P
		db    0	;
		db  1Fh	;
		db    0	;
		db  0Ch	;
		db  14h	;
		db    2	;
		db    2	;
		db    3	;
MALE_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    8	;
		db  10h	;
		db    2	;
		db    2	;
		db    3	;
VAMP_COMBAT	db  64h	; d
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  0Ah	;
		db  18h	;
		db    0	;
		db    0	;
		db    4	;
DWARF_COMBAT	db  50h	; P
		db    0	;
		db  1Fh	;
		db    0	;
		db    9	;
		db  10h	;
		db    3	;
		db    2	;
		db    1	;
MONK_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    8	;
		db  10h	;
		db    2	;
		db    2	;
		db    3	;
FEMALE_COMBAT	db  78h	; x
		db    0	;
		db  1Fh	;
		db    0	;
		db    7	;
		db  10h	;
		db    3	;
		db    2	;
		db    2	;
WOLF_COMBAT	db  64h	; d
		db    0	;
		db  3Fh	; ?
		db    0	;
		db  0Ah	;
		db  18h	;
		db    2	;
		db    1	;
		db    3	;
TROLL_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db  0Ah	;
		db  17h	;
		db    3	;
		db    1	;
		db    5	;
GOBLIN_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    4	;
		db    8	;
		db    5	;
		db    1	;
		db    3	;
SATYR_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    5	;
		db  10h	;
		db    5	;
		db    1	;
		db    3	;
CYCLOPS_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db  0Ah	;
		db  1Ch	;
		db    3	;
		db    5	;
		db    1	;
MINOTAUR_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db  0Ah	;
		db  14h	;
		db    5	;
		db    1	;
		db    3	;
GORGON_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db  0Ah	;
		db  30h	; 0
		db    5	;
		db    3	;
		db    1	;
SPIDER_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    5	;
		db  0Ch	;
		db    3	;
		db    5	;
		db    1	;
BAT_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    8	;
		db  0Eh	;
		db    5	;
		db    3	;
		db    1	;
LIZARD_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db  0Ah	;
		db  1Eh	;
		db    1	;
		db    5	;
		db    3	;
ZOMBIE_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    8	;
		db  1Ch	;
		db    5	;
		db    3	;
		db    1	;
DRAGON_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db  0Ah	;
		db  30h	; 0
		db    1	;
		db    3	;
		db    5	;
GHOST_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    6	;
		db  1Eh	;
		db    1	;
		db    1	;
		db    1	;
ACOLYTE_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    8	;
		db  10h	;
		db    5	;
		db    1	;
		db    3	;
LAMIA_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db  46h	; F
		db  1Eh	;
		db    5	;
		db    3	;
		db    1	;
MUMMY_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    8	;
		db  1Eh	;
		db    1	;
		db    1	;
		db    1	;
HARPY_COMBAT	db  64h	; d
		db    0	;
		db  1Fh	;
		db    0	;
		db    6	;
		db  14h	;
		db    3	;
		db    1	;
		db    4	;
BEAR_COMBAT	db  8Ch	; �
		db    0	;
		db  1Fh	;
		db    0	;
		db  0Ah	;
		db  17h	;
		db    2	;
		db    1	;
		db    3	;
ELF_COMBAT	db  78h	; x
		db    0	;
		db  1Fh	;
		db    0	;
		db    8	;
		db  12h	;
		db    5	;
		db    1	;
		db    3	;
		db    0	;
		db    0	;
		db  4Ch	; L
		db    0	;
		db  16h	;
		db    0	;
		db  2Ah	; *
		db    0	;
		db  2Bh	; +
		db    0	;
		db    1	;
		db    0	;
		db  77h	; w
		db    0	;
		db  16h	;
		db    0	;
		db  2Ah	; *
		db    0	;
		db  2Bh	; +
		db    0	;
		db    2	;
		db    0	;
		db  4Ch	; L
		db    0	;
		db  40h	; @
		db    0	;
		db  2Ah	; *
		db    0	;
		db  2Bh	; +
		db    0	;
		db    3	;
		db    0	;
		db  77h	; w
		db    0	;
		db  40h	; @
		db    0	;
		db  2Ah	; *
		db    0	;
		db  2Bh	; +
		db    0	;
		db    4	;
		db    0	;
		db 0A2h	; �
		db    0	;
		db  16h	;
		db    0	;
		db  2Ah	; *
		db    0	;
		db  2Bh	; +
		db    0	;
		db    5	;
		db    0	;
		db 0CDh	; �
		db    0	;
		db  16h	;
		db    0	;
		db  2Ah	; *
		db    0	;
		db  2Bh	; +
		db    0	;
		db    6	;
		db    0	;
		db 0A2h	; �
		db    0	;
		db  2Eh	; .
		db    0	;
		db  2Ah	; *
		db    0	;
		db  2Bh	; +
		db    0	;
		db    7	;
		db    0	;
		db 0CDh	; �
		db    0	;
		db  40h	; @
		db    0	;
		db  2Ah	; *
		db    0	;
		db  2Bh	; +
		db    0	;
		db    8	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
PORTALCOUNTER	db    0	;
		db    0	;
		db    0	;
		db    0	;
TEMPLENO	db    0	;
		db    0	;
WARPFLAG	db    0	;
		db    0	;
WARPADDS	db  3Dh	; =
		db    8	;
		db  24h	; $
		db  37h	; 7
		db    9	;
		db  63h	; c
		db  48h	; H
		db  57h	; W
		db  37h	; 7
		db  2Ah	; *
DSELEMENT	db    0	;
		db    0	;
		db  8Dh	; �
		db    0	;
		db  18h	;
		db    0	;
		db  20h	;
		db    0	;
		db  35h	; 5
		db    0	;
		db    1	;
		db    0	;
		db 0D2h	; �
		db    0	;
		db  19h	;
		db    0	;
		db  29h	; )
		db    0	;
		db  34h	; 4
		db    0	;
		db    2	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db  82h	; �
		db    0	;
		db  0Ch	;
		db    0	;
		db  25h	; %
		db    0	;
		db  1Fh	;
		db    0	;
		db    1	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db  0Ch	;
		db    0	;
		db  25h	; %
		db    0	;
		db  1Fh	;
		db    0	;
		db    2	;
		db    0	;
		db 0DEh	; �
		db    0	;
		db  0Ch	;
		db    0	;
		db  25h	; %
		db    0	;
		db  1Fh	;
		db    0	;
		db    3	;
		db    0	;
		db  82h	; �
		db    0	;
		db  33h	; 3
		db    0	;
		db  25h	; %
		db    0	;
		db  1Fh	;
		db    0	;
		db    4	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db  33h	; 3
		db    0	;
		db  25h	; %
		db    0	;
		db  1Fh	;
		db    0	;
		db    5	;
		db    0	;
		db 0DEh	; �
		db    0	;
		db  33h	; 3
		db    0	;
		db  25h	; %
		db    0	;
		db  1Fh	;
		db    0	;
		db    6	;
		db    0	;
		db  82h	; �
		db    0	;
		db  5Ah	; Z
		db    0	;
		db  25h	; %
		db    0	;
		db  1Fh	;
		db    0	;
		db    7	;
		db    0	;
		db 0B0h	; �
		db    0	;
		db  5Ah	; Z
		db    0	;
		db  25h	; %
		db    0	;
		db  1Fh	;
		db    0	;
		db    8	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
NOTICELIST	db    0	;
		db 0FFh	; �
		db    1	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN00_fab_0	db 'n00.fab',0
		db    1	;
		db    1	;
		db    4	;
		db  0Bh	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN01_fab_0	db 'n01.fab',0
WANTEDPOSTER	db    2	;
		db    0	;
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN02_fab_0	db 'n02.fab',0
		db    3	;
		db 0FFh	; �
		db    1	;
		db  1Dh	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN03_fab_0	db 'n03.fab',0
		db    4	;
		db 0FFh	; �
		db    1	;
		db  0Dh	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN04_fab_0	db 'n04.fab',0
		db    5	;
		db 0FFh	; �
		db    1	;
		db  0Bh	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN05_fab_0	db 'n05.fab',0
		db    6	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN06_fab_0	db 'n06.fab',0
		db    7	;
		db    0	;
		db  10h	;
		db  10h	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN07_fab_0	db 'n07.fab',0
		db    8	;
		db    0	;
		db  10h	;
		db  19h	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN08_fab_0	db 'n08.fab',0
		db    9	;
		db    0	;
		db  10h	;
		db  0Dh	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN09_fab_0	db 'n09.fab',0
		db  0Ah	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db  13h	;
		db 0A7h	; �
		db    0	;
aN10_fab_0	db 'n10.fab',0
		db  0Bh	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN11_fab_0	db 'n11.fab',0
T_71_POSTER	db  0Ch	;
byte_FFD_D279	db 0			; DATA XREF: sub_0_D4AE+Aw
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db  77h	; w
		db 0A7h	; �
		db    0	;
aN12_fab_0	db 'n12.fab',0
		db  0Dh	;
		db    0	;
		db  10h	;
		db    9	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN13_fab_0	db 'n13.fab',0
		db  0Eh	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN14_fab_0	db 'n14.fab',0
TASKTIMED	db  0Fh	;
byte_FFD_D2A9	db 0			; DATA XREF: MIDNIGHT+1DEw
		db    4	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN15_fab_0	db 'n15.fab',0
		db  10h	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN16_fab_0	db 'n16.fab',0
		db  11h	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN17_fab_0	db 'n17.fab',0
		db  12h	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN18_fab_0	db 'n18.fab',0
		db  13h	;
		db 0FFh	; �
		db  10h	;
		db    9	;
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN19_fab_0	db 'n19.fab',0
ODINAD		db  14h	;
byte_FFD_D2F9	db 0			; DATA XREF: MIDNIGHT+26Ew
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN20_fab_0	db 'n20.fab',0
		db  15h	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN21_fab_0	db 'n21.fab',0
		db  16h	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN22_fab_0	db 'n22.fab',0
		db  17h	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db 0F7h	; �
		db 0A7h	; �
		db    0	;
aN23_fab_0	db 'n23.fab',0
		db  18h	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN24_fab_0	db 'n24.fab',0
		db  19h	;
		db 0FFh	; �
		db    1	;
		db  0Bh	;
		db  1Dh	;
		db    0	;
		db    0	;
		db    0	;
aN25_fab_0	db 'n25.fab',0
		db  1Ah	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN26_fab_0	db 'n26.fab',0
		db  1Bh	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db  2Fh	; /
		db 0A8h	; �
		db    0	;
aN27_fab_0	db 'n27.fab',0
		db  1Ch	;
		db    0	;
		db  10h	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
aN28_fab	db 'n28.fab',0
		db  1Dh	;
		db 0FFh	; �
		db    1	;
		db  1Dh	;
		db 0FFh	; �
		db 0FBh	; �
		db 0A6h	; �
		db    0	;
aN29_fab	db 'n29.fab',0
		db  1Eh	;
		db 0FFh	; �
		db    1	;
		db  0Bh	;
		db 0FFh	; �
		db 0F7h	; �
		db 0A6h	; �
		db    0	;
aN30_fab	db 'n30.fab',0
		db  1Fh	;
		db 0FFh	; �
		db    1	;
		db  0Ah	;
		db 0FFh	; �
		db    3	;
		db 0A7h	; �
		db    0	;
aN31_fab	db 'n31.fab',0
		db  20h	;
		db 0FFh	; �
		db    1	;
		db  0Dh	;
		db 0FFh	; �
		db 0FFh	; �
		db 0A6h	; �
		db    0	;
aN32_fab	db 'n32.fab',0
		db  21h	; !
		db 0FFh	; �
		db    1	;
		db  0Ch	;
		db 0FFh	; �
		db    7	;
		db 0A7h	; �
		db    0	;
aN33_fab	db 'n33.fab',0
		db  22h	; "
		db 0FFh	; �
		db    1	;
		db  0Eh	;
		db 0FFh	; �
		db  43h	; C
		db 0A7h	; �
		db    0	;
aN34_fab	db 'n34.fab',0
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  0Ah	;
		db  0Ah	;
		db  38h	; 8
		db  0Ah	;
		db  66h	; f
		db  0Ah	;
		db 0CAh	; �
		db  3Ah	; :
		db 0F8h	; �
		db  3Ah	; :
		db  26h	; &
		db  3Bh	; ;
		db  8Ah	; �
		db  6Bh	; k
		db 0B8h	; �
		db  6Bh	; k
JOY_PAYBCD	db  10h	;
		db    0	;
JOY_PAYHEX	db  0Ah	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db  84h	; �
		db    0	;
		db  10h	;
		db    0	;
		db  7Ch	; |
		db    0	;
		db  24h	; $
		db    0	;
		db    1	;
		db    0	;
		db  84h	; �
		db    0	;
		db  38h	; 8
		db    0	;
		db  7Ch	; |
		db    0	;
		db  24h	; $
		db    0	;
		db    2	;
		db    0	;
		db 0E0h	; �
		db    0	;
		db  69h	; i
		db    0	;
		db  20h	;
		db    0	;
		db  0Ch	;
		db    0	;
		db    3	;
		db    0	;
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
		db    0	;
ACTITETASK	dw 0FFFFh		; DATA XREF: seg000:B675r MAKEREGULARS+116r
					; ...
TASKTIMER	dw 0			; DATA XREF: MIDNIGHT+1C1w
					; MIDNIGHT+1C5r
TASKFAILED	dw 0FFFFh		; DATA XREF: MIDNIGHT+1D2w
DAYSLEFT	db    0	;
		db    0	;
		db    0	;
TASKOBJECTBLOCK	dw 0			; DATA XREF: MAKEREGULARS+190r
					; sub_0_D3D1+Ar
		db    0	;
		db    0	;
PICKUPFLAG	dw 0			; DATA XREF: MAKEREGULARS+186r
					; MAKEREGULARS+1A3r
		db    0	;
		db    0	;
GUILDS_MASTERED	dw 0			; DATA XREF: MIDNIGHT+28r
MASKONFLAG	db    0	;
		db    0	;
		db  47h	; G
		db  6Ah	; j
		db  0Eh	;
		db  47h	; G
		db  0Dh	;
		db  34h	; 4
		db  50h	; P
		db    3	;
TASKFLAG42	db    0	;
		db    0	;
TREASUREX	db    0	;
		db    0	;
TREASUREY	db    0	;
		db    0	;
TREASUREADD	db    0	;
		db    0	;
CUREOVERHEAD	db    0	;
		db    0	;
VALUEBCD	db    0	;
		db    0	;
		db    0	;
		db    0	;
PAYMENTBCD	db    0	;
		db    0	;
TASK02FLAG	dw 0			; DATA XREF: MIDNIGHT+230r
					; MIDNIGHT+23Aw
TASK12DONE	dw 0			; DATA XREF: sub_0_BA48+9r
EIVAKDEADFLAG	dw 0			; DATA XREF: JUSTICE+189w
TASK33FLAG	db    0	;
		db    0	;
TASK43FLAG	dw 0			; DATA XREF: MAKEREGULARS+1DBr
FEATHERFLAG	dw 0			; DATA XREF: sub_0_D620+10r
TASK13FLAG	db    0	;
		db    0	;
PAINTFLAG	db    0	;
		db    0	;
TASK74FLAG	dw 0			; DATA XREF: MAKEREGULARS+202r
TASK54FLAG	db    0	;
		db    0	;
TASK84FLAG	db    0	;
		db    0	;
MACOUNTER	db    0	;
		db    0	;
DRAGONDEAD	dw 0			; DATA XREF: sub_0_BA48+C9r
TASK04FLAG	db    0	;
		db    0	;
TASK44FLAG	db    0	;
		db    0	;
TASK44FLAG2	db    0	;
		db    0	;
TASK04AF	db    0	;
		db    0	;
EGG1		db    0	;
		db    0	;
EGG2		db    0	;
		db    0	;
EGG3		db    0	;
		db    0	;
EGG4		db    0	;
		db    0	;
LIGHTADD	db    0	;
		db    0	;
TEXTSAIDFLAG	db    0	;
		db    0	;
TASK_DB_00	db 0FFh	; �
		db 0FFh	; �
		db  7Eh	; ~
		db  96h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db  0Ah	;
		db  2Fh	; /
		db    0	;
TASK_DB_10	db 0C1h	; �
		db  32h	; 2
		db  13h	;
		db  37h	; 7
		db 0FFh	; �
		db 0FFh	; �
		db    7	;
		db  97h	; �
		db 0FFh	; �
		db 0FFh	; �
		db    7	;
		db 0FFh	; �
		db  1Dh	;
		db    0	;
		db    0	;
		db    0	;
TASK_DB_20	db 0C7h	; �
		db  35h	; 5
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    8	;
		db 0FFh	; �
		db  1Eh	;
		db  15h	;
		db  2Dh	; -
		db    1	;
TASK_DB_30	db 0A9h	; �
		db  87h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    6	;
		db 0FFh	; �
		db  19h	;
		db  53h	; S
		db  60h	; `
		db    0	;
TASK_DB_40	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  1Ch	;
		db  3Eh	; >
		db    9	;
		db    0	;
TASK_DB_50	db  3Eh	; >
		db  31h	; 1
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  21h	; !
		db  45h	; E
		db  4Fh	; O
		db 0FFh	; �
TASK_DB_60	db  36h	; 6
		db  88h	; �
		db 0FFh	; �
		db 0FFh	; �
		db  5Eh	; ^
		db  97h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  1Fh	;
		db  0Bh	;
		db  7Bh	; {
		db    1	;
TASK_DB_70	db  72h	; r
		db  88h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  20h	;
		db  12h	;
		db  12h	;
		db    1	;
TASK_DB_80	db 0D7h	; �
		db  87h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  1Ah	;
		db  2Dh	; -
		db  7Eh	; ~
		db    0	;
TASK_DB_01	db 0ACh	; �
		db  88h	; �
		db  99h	; �
		db  31h	; 1
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db    9	;
		db 0FFh	; �
		db  23h	; #
		db  45h	; E
		db  16h	;
		db    0	;
TASK_DB_11	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  0Ah	;
		db 0FFh	; �
		db  24h	; $
		db  35h	; 5
		db  3Fh	; ?
		db 0FFh	; �
TASK_DB_21	db  99h	; �
		db  31h	; 1
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  25h	; %
		db  52h	; R
		db  7Dh	; }
		db    0	;
TASK_DB_31	db 0FFh	; �
		db 0FFh	; �
		db  8Ah	; �
		db  97h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  22h	; "
		db  3Dh	; =
		db  45h	; E
		db    0	;
TASK_DB_41	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  0Bh	;
		db 0FFh	; �
		db  26h	; &
		db    6	;
		db  14h	;
		db    0	;
TASK_DB_51	db  51h	; Q
		db  89h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  27h	; '
		db    1	;
		db  69h	; i
		db    0	;
TASK_DB_61	db 0FFh	; �
		db 0FFh	; �
		db 0D6h	; �
		db  97h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  28h	; (
		db  1Ah	;
		db  30h	; 0
		db    0	;
TASK_DB_71	db 0C1h	; �
		db  89h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  29h	; )
		db  40h	; @
		db  14h	;
		db    0	;
TASK_DB_81	db  2Bh	; +
		db  8Ah	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  2Ah	; *
		db    1	;
		db  57h	; W
		db    0	;
TASK_DB_02	db  7Bh	; {
		db  8Ch	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  11h	;
		db 0FFh	; �
		db  34h	; 4
		db  4Ch	; L
		db  38h	; 8
		db 0FFh	; �
TASK_DB_12	db 0C3h	; �
		db  8Bh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  10h	;
		db 0FFh	; �
		db  32h	; 2
		db  2Bh	; +
		db  0Dh	;
		db    1	;
TASK_DB_22	db 0C8h	; �
		db  8Ch	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  38h	; 8
		db  4Fh	; O
		db  4Ch	; L
		db    0	;
TASK_DB_32	db  3Dh	; =
		db  8Eh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  12h	;
		db 0FFh	; �
		db  3Bh	; ;
		db  52h	; R
		db  1Ch	;
		db 0FFh	; �
TASK_DB_42	db  88h	; �
		db  8Dh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  39h	; 9
		db  31h	; 1
		db  14h	;
		db    1	;
TASK_DB_52	db    0	;
		db  8Fh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  3Ch	; <
		db  33h	; 3
		db  44h	; D
		db 0FFh	; �
TASK_DB_62	db  9Ah	; �
		db  8Ah	; �
		db 0FFh	; �
		db 0FFh	; �
		db    5	;
		db  98h	; �
		db 0FFh	; �
		db 0FFh	; �
		db  0Dh	;
		db 0FFh	; �
		db  2Bh	; +
		db  2Ch	; ,
		db  58h	; X
		db 0FFh	; �
TASK_DB_72	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  30h	; 0
		db  3Dh	; =
		db  4Ch	; L
		db    0	;
TASK_DB_82	db 0FFh	; �
		db 0FFh	; �
		db  2Bh	; +
		db  98h	; �
		db 0FFh	; �
		db 0FFh	; �
		db  0Eh	;
		db 0FFh	; �
		db  2Ch	; ,
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
TASK_DB_03	db  66h	; f
		db  92h	; �
		db 0FFh	; �
		db 0FFh	; �
		db  7Bh	; {
		db  99h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  4Dh	; M
		db  43h	; C
		db  7Ch	; |
		db    0	;
TASK_DB_13	db 0FFh	; �
		db 0FFh	; �
		db 0F1h	; �
		db  98h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  44h	; D
		db  10h	;
		db  24h	; $
		db    0	;
TASK_DB_23	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  15h	;
		db  16h	;
		db 0FFh	; �
		db  4Ah	; J
		db  0Ah	;
		db  4Ah	; J
		db 0FFh	; �
TASK_DB_33	db 0C7h	; �
		db  35h	; 5
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  48h	; H
		db  35h	; 5
		db  13h	;
		db    0	;
TASK_DB_43	db 0E7h	; �
		db  30h	; 0
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  45h	; E
		db  3Ah	; :
		db  25h	; %
		db    0	;
TASK_DB_53	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  3Eh	; >
		db  2Fh	; /
		db  32h	; 2
		db 0FFh	; �
TASK_DB_63	db  9Eh	; �
		db  90h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  43h	; C
		db  23h	; #
		db    7	;
		db 0FFh	; �
TASK_DB_73	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  42h	; B
		db  13h	;
		db  71h	; q
		db 0FFh	; �
TASK_DB_83	db 0FFh	; �
		db 0FFh	; �
		db  20h	;
		db  99h	; �
		db 0FFh	; �
		db 0FFh	; �
		db  17h	;
		db 0FFh	; �
		db  4Bh	; K
		db  26h	; &
		db  65h	; e
		db    0	;
TASK_DB_04	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  5Bh	; [
		db  28h	; (
		db  18h	;
		db    1	;
TASK_DB_14	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  1Ch	;
		db 0FFh	; �
		db  56h	; V
		db  46h	; F
		db  6Dh	; m
		db    0	;
TASK_DB_24	db 0A2h	; �
		db  94h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  5Fh	; _
		db  3Fh	; ?
		db  1Dh	;
		db 0FFh	; �
TASK_DB_34	db 0C0h	; �
		db  93h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  59h	; Y
		db  3Dh	; =
		db  63h	; c
		db 0FFh	; �
TASK_DB_44	db  36h	; 6
		db  95h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0CBh	; �
		db  99h	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  62h	; b
		db  15h	;
		db  4Fh	; O
		db    0	;
TASK_DB_54	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  18h	;
		db 0FFh	; �
		db  4Eh	; N
		db  51h	; Q
		db  14h	;
		db 0FFh	; �
TASK_DB_64	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  1Ah	;
		db 0FFh	; �
		db  1Ah	;
		db  2Dh	; -
		db  7Eh	; ~
		db    0	;
TASK_DB_74	db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  51h	; Q
		db  51h	; Q
		db  0Ah	;
		db    0	;
TASK_DB_84	db 0C8h	; �
		db  8Ch	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db 0FFh	; �
		db  1Bh	;
		db 0FFh	; �
		db  53h	; S
		db  51h	; Q
		db  4Ch	; L
		db    0	;
DATSEGLENGTH	db    0	;
		db    0	;
EFF_DVR		dw 0D69Ah
MUS_DVR		dw 0D6A4h
ADLIB_EFFECTS	db 'adlib.eff',0
ADLIB_MUSIC	db 'adlib.mus',0
ROLAND_EFFECTS	db 'roland.eff',0
ROLAND_MUSIC	db 'roland.mus',0
SPEAKER_EFFECTS	db 'speaker.eff',0
SPEAKER_MUSIC	db 'speaker.mus',0
INIT_SOUND_ISR	db    0	;
		db    0	;
		db    0	;
		db    0	;
TERMINATE_SOUND	db    4	;
		db    0	;
		db    0	;
		db    0	;
SENDSND		dd 8			; DATA XREF: START+2B7r JUSTICE+1Er
					; ...
SSTATUS		db  0Ch	;
		db    0	;
		db    0	;
		db    0	;
SETFREQ		db  10h	;
		db    0	;
		db    0	;
		db    0	;
SETVOL		db  14h	;
		db    0	;
		db    0	;
		db    0	;
INIT_SOUND_2	db  18h	;
		db    0	;
		db    0	;
		db    0	;
INTSOUND	dd 1Ch			; DATA XREF: INIT_CLCK_STUFF+8Ar
TICK		db  20h	;
		db    0	;
		db    0	;
		db    0	;
VIDEOSEG	db    0	;
		db    0	;
BUFFERSEG	dw 0			; DATA XREF: START+44r	TEXT_PREPROCESS+ABr
					; ...
SCREEN2		dw 0			; DATA XREF: DISPLAY_LOAD+88r
					; COLLISIONS+Er ...
SPRITESEG	db    0	;
		db    0	;
		db    0	;		; �?
		db    0	;
PANELSEG	dw 0			; DATA XREF: BLITSIGN+Cr
MAPSEG		dw 0			; DATA XREF: MIDNIGHT+A9r REPOSITIONOBJ+1r
					; ...
PALETTESEG	dw 0			; DATA XREF: PALETTE_SWITCH?+Cr
SIGNSEG		dw 0			; DATA XREF: DISPLAY_LOAD+83r
					; BLITSIGN+14r
ARROWSEG	dw 0
SOUNDSEG	dw 0			; DATA XREF: START+2B3r INIT_CLCK_STUFF+86r
					; ...
SCRIPTSEG	dw 0			; DATA XREF: JUSTICE+2Cr JUSTICE+13Br
					; ...
TILESEG		dw 0			; DATA XREF: START+48w
TEXTSEG		dw 0			; DATA XREF: START+36w	START+8Fr
					; ...
		db    0	;
		db    0	;
INT9SEG		dw 0			; DATA XREF: START+2E4r INIT_INTVEC2+Cw
INT9OFF		dw 0			; DATA XREF: START+2E8r INIT_INTVEC2+10w
INT8ADD		dw 0			; DATA XREF: START+2FCr INIT_INTVEC+Fw
					; ...
word_FFD_D724	dw 0			; DATA XREF: START+2F8r INIT_INTVEC+Bw
					; ...
HANDLE		db    0	;
		db    0	;
SOUNDFLAG	db 0			; DATA XREF: INIT_CLCK_STUFF+7Br
SNDDVR		db 0
SND_DVR		db 'snddvr',0
AUTONO		dw 0
AUTOLOAD	db 'autoload',0
GAMESPEED	db    0	;
		db    1	;
FPS		db    0	;
		db    0	;
LINVEL		db    0	;
		db    0	;
CHARVEL		dw 0			; DATA XREF: MAKEVEL+Er
RAN		dw 4D2h			; DATA XREF: RAND_SOMETHINGr
					; MAKEREGULARS+2BCr ...
CHEAT		dw 0			; DATA XREF: START+1C7w
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;

seg001		ends

;����������������������������������������������������������������������������

seg002		segment	byte stack 'STACK'
		assume cs:seg002

		assume es:nothing, ss:nothing, ds:nothing
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;

seg002		ends

;����������������������������������������������������������������������������

seg003		segment	byte public ''
		assume cs:seg003

		assume es:nothing, ss:nothing, ds:nothing
WHOME		db  90h	; �
aQuivnEsAMi?	db 'Qui�n, es a mi?'
		db 0FFh	; �
LOCSTRING	db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
aLaTorreDelCast	db 'la Torre del Castillo'
		db 0FFh	; �
aElPatioDeLaTor	db 'el patio de la Torre'
		db 0FFh	; �
aLaTorretaNores	db 'la Torreta noreste'
		db 0FFh	; �
aLaPlazaDeArmas	db 'la Plaza de armas'
		db 0FFh	; �
aElArsenal	db 'el Arsenal'
		db 0FFh	; �
aProveedoresDeB	db 'proveedores de Barcos'
		db 0FFh	; �
aLaEntradaPrinc	db 'la Entrada Principal'
		db 0FFh	; �
aUnaCasaDeUnGua	db 'una casa de un guarda'
		db 0FFh	; �
aUnAlbergue	db 'un albergue'
		db 0FFh	; �
aUnaPensiN	db 'una pensi<n'
		db 0FFh	; �
aLaCabezaDelD_0	db 'La Cabeza del Drag<n'
		db 0FFh	; �
aElEscudoDelTro	db 'El Escudo del Troll'
		db 0FFh	; �
aElAhorcado_0	db 'El Ahorcado'
		db 0FFh	; �
aElJarroDeCerve	db 'El Jarro de Cerveza'
		db 0FFh	; �
aLaCucarachaY_0	db 'La Cucaracha y el Jinete'
		db 0FFh	; �
aElCaballitoDeM	db 'El Caballito de Mar'
		db 0FFh	; �
aElDescansoDe_0	db 'El Descanso de las Sirenas'
		db 0FFh	; �
aLasSerpiente_0	db 'Las Serpientes'
		db 0FFh	; �
aTienda		db 'tienda'
		db 0FFh	; �
aAduana		db 'Aduana'
		db 0FFh	; �
aComunidadDeLos	db 'comunidad de los Asegeir'
		db 0FFh	; �
aHermandadDeLok	db 'Hermandad de Loki'
		db 0FFh	; �
aGremioDeGuerre	db 'Gremio de Guerreros'
		db 0FFh	; �
aGremioDeMercen	db 'Gremio de Mercenarios'
		db 0FFh	; �
aGremioDeLadron	db 'Gremio de Ladrones'
		db 0FFh	; �
aTemploDeSet	db 'Templo de Set'
		db 0FFh	; �
aTemploDeOdin	db 'Templo de Odin'
		db 0FFh	; �
aTemploDeFreya	db 'Templo de Freya'
		db 0FFh	; �
aTemploDeAegir	db 'Templo de Aegir'
		db 0FFh	; �
aCRcelDeLaTor_0	db 'C^rcel de la Torreta'
		db 0FFh	; �
aMazmorraDelC_0	db 'Mazmorra del Castillo'
		db 0FFh	; �
aPrisiNDeMercen	db 'Prisi<n de Mercenarios'
		db 0FFh	; �
aElCalabozo	db 'El Calabozo'
		db 0FFh	; �
aCRcelDeLaCiuda	db 'C^rcel de la Ciudad'
		db 0FFh	; �
aSalasDeJustici	db 'Salas de Justicia'
		db 0FFh	; �
aLugarDeHotch	db 'Lugar de Hotch'
		db 0FFh	; �
aLasHerrerAs	db 'Las herrer>as'
		db 0FFh	; �
aCocina		db 'Cocina'
		db 0FFh	; �
aLugarDeReuniN	db 'Lugar de reuni<n'
		db 0FFh	; �
aGalerAPBlica	db 'Galer>a p\blica'
		db 0FFh	; �
aAyuntamiento	db 'Ayuntamiento'
		db 0FFh	; �
aCochera	db 'Cochera'
		db 0FFh	; �
aElAsiloDeAncia	db 'El Asilo de Ancianos'
		db 0FFh	; �
aCeldaSolitaria	db 'celda solitaria'
		db 0FFh	; �
aCervecerA	db 'Cervecer>a'
		db 0FFh	; �
aMatadero	db 'Matadero'
		db 0FFh	; �
aElLomoDelGanso	db 'El Lomo del Ganso Negro'
		db 0FFh	; �
aCuerpoDeGuardi	db 'Cuerpo de Guardia'
		db 0FFh	; �
aRetiradaDeLosQ	db 'retirada de los Quim�ricos'
		db 0FFh	; �
aSalaDePiedras	db 'Sala de piedras'
		db 0FFh	; �
aClNica		db 'Cl>nica'
		db 0FFh	; �
aCartuja	db 'Cartuja'
		db 0FFh	; �
aOsario		db 'Osario'
		db 0FFh	; �
aElAsiloDeLosPo	db 'el Asilo de los Pobres'
		db 0FFh	; �
aInstitutoDeZoo	db 'Instituto de Zoolatr>a'
		db 0FFh	; �
aCapilla	db 'capilla'
		db 0FFh	; �
aLavanderA	db 'lavander>a'
		db 0FFh	; �
aTiendaDeRopa	db 'tienda de ropa'
		db 0FFh	; �
aAlojamiento	db 'alojamiento'
		db 0FFh	; �
aCapillaDeNjord	db 'Capilla de Njord'
		db 0FFh	; �
aElAstillero	db 'el Astillero'
		db 0FFh	; �
aGladsheim_1	db 'Gladsheim'
		db 0FFh	; �
aTorretaSuroest	db 'Torreta suroeste'
		db 0FFh	; �
aEscritorio	db 'Escritorio'
		db 0FFh	; �
aJoyeros	db 'joyeros'
		db 0FFh	; �
aHogarDeLosHuvr	db 'hogar de los hu�rfanos'
		db 0FFh	; �
aJardN		db 'jard>n'
		db 0FFh	; �
aSalaCapitular	db 'Sala Capitular'
		db 0FFh	; �
aLaGruta	db 'la gruta'
		db 0FFh	; �
aOficinaDeImpue	db 'Oficina de Impuestos'
		db 0FFh	; �
aTallerDeEmbals	db 'Taller de embalsamadores'
		db 0FFh	; �
aTumbasWanlock	db 'Tumbas Wanlock'
		db 0FFh	; �
aElObservatorio	db 'el Observatorio'
		db 0FFh	; �
aElHoyoDeLaBruj	db 'el Hoyo de la bruja'
		db 0FFh	; �
aMuseo		db 'Museo'
		db 0FFh	; �
aElLaberinto	db 'el Laberinto'
		db 0FFh	; �
aLaTumbaDeLasMo	db 'la Tumba de las Momias'
		db 0FFh	; �
aElCampanario	db 'el Campanario'
		db 0FFh	; �
aLaGalerA	db 'la Galer>a'
		db 0FFh	; �
aUnSalvajeSTiro	db 'Un salvaje s^tiro'
		db 0FFh	; �
aLaCasaDelMinot	db 'La casa del minotauro'
		db 0FFh	; �
aUnFerozOsoPard	db 'Un feroz oso pardo'
		db 0FFh	; �
aUnMurcivlagoVa	db 'Un murci�lago vampiro rojo'
		db 0FFh	; �
aHumanusReptili	db 'humanus reptilius'
		db 0FFh	; �
aTrollsEnanosCa	db 'trolls enanos carmes>'
		db 0FFh	; �
aLaCasaDelArqui	db 'la Casa del Arquitecto'
		db 0FFh	; �
aLaCasaDeSilas	db 'la Casa de Silas'
		db 0FFh	; �
aCampamentoDeEi	db 'campamento de Eivak'
		db 0FFh	; �
aElCriadero	db 'el criadero'
		db 0FFh	; �
aLaCMaraDelHuev	db 'la C^mara del Huevo'
		db 0FFh	; �
aValhalla_0	db 'Valhalla'
		db 0FFh	; �
aElSenderoDeLas	db 'el Sendero de las Valkirias'
		db 0FFh	; �
aElVestBulo	db 'el Vest>bulo'
		db 0FFh	; �
aElTemploDeLaTe	db 'el Templo de la Tempestad'
		db 0FFh	; �
aElEstabloDeLos	db 'el Establo de los C>clopes'
		db 0FFh	; �
aPalacioDeHermo	db 'Palacio de Hermod'
		db 0FFh	; �
aLaArena	db 'la Arena'
		db 0FFh	; �
aCMaraDeOficial	db 'C^mara de Oficiales'
		db 0FFh	; �
aFosoDeLaMuerte	db 'Foso de la Muerte'
		db 0FFh	; �
aElCobertizo	db 'el Cobertizo'
		db 0FFh	; �
aSalaDelMaestro	db 'sala del Maestro Mago'
		db 0FFh	; �
aCMaraDeWarlock	db 'c^mara de Warlock'
		db 0FFh	; �
aSalaDeTemplari	db 'sala de Templarios'
		db 0FFh	; �
aCMaraDelMaestr	db 'C^mara del Maestro de gremios'
		db 0FFh	; �
aSalaDelPadrino	db 'sala del Padrino'
		db 0FFh	; �
aSalaDelMaest_0	db 'sala del Maestro Venom'
		db 0FFh	; �
aSalaDelAltoSac	db 'sala del Alto Sacerdote'
		db 0FFh	; �
aSalaDeLaAltaSa	db 'sala de la Alta Sacerdotisa'
		db 0FFh	; �
aSantuarioDeLok	db 'Santuario de Loki'
		db 0FFh	; �
aMansiNDeLaTo_0	db 'Mansi<n de la Torreta'
		db 0FFh	; �
aTeatroDeMittle	db 'Teatro de Mittledorf'
		db 0FFh	; �
aCeldasDeBrig	db 'celdas de Brig'
		db 0FFh	; �
aCasaDeZorgarth	db 'casa de Zorgarths'
		db 0FFh	; �
aLaGuaridaDeLaG	db 'la Guarida de la Gorgona'
		db 0FFh	; �
aAlmacvnAbandon	db 'almac�n abandonado'
		db 0FFh	; �
aFoyer		db 'Foyer'
		db 0FFh	; �
aNidavellir_1	db 'Nidavellir'
		db 0FFh	; �
aCriptaReal	db 'Cripta Real'
		db 0FFh	; �
aCripta		db 'Cripta'
		db 0FFh	; �
aCriptaInterior	db 'Cripta Interior'
		db 0FFh	; �
aPasajeMisterio	db 'pasaje misterioso'
		db 0FFh	; �
aViEdoDeMarta	db 'vi~edo de Marta'
		db 0FFh	; �
		db    0	;
aSuelto		db 'suelto'
		db 0FFh	; �
aDinero_0	db 'dinero'
		db 0FFh	; �
aGemas_0	db 'gemas'
		db 0FFh	; �
aEspecias_0	db 'especias'
		db 0FFh	; �
aPigmentos_0	db 'pigmentos'
		db 0FFh	; �
aMineral_0	db 'mineral'
		db 0FFh	; �
aPieles_0	db 'pieles'
		db 0FFh	; �
aBrea_0		db 'brea'
		db 0FFh	; �
aPostalDeMittel	db 'postal de Mitteldorf'
		db 0FFh	; �
aRelojDeArena	db 'reloj de arena'
		db 0FFh	; �
aAntorcha	db 'antorcha'
		db 0FFh	; �
aRoca_0		db 'roca'
		db 0FFh	; �
aHierbaAlucinGe	db 'hierba alucin<gena'
		db 0FFh	; �
aCalavera	db 'calavera'
		db 0FFh	; �
aHacha		db 'hacha'
		db 0FFh	; �
aPergamino_0	db 'pergamino'
		db 0FFh	; �
aLlave		db 'llave'
		db 0FFh	; �
aSaco_0		db 'saco'
		db 0FFh	; �
aBarril		db 'barril'
		db 0FFh	; �
aCubo		db 'cubo'
		db 0FFh	; �
aJoyero_0	db 'joyero'
		db 0FFh	; �
aCofre		db 'cofre'
		db 0FFh	; �
aCesta		db 'cesta'
		db 0FFh	; �
aFrasco		db 'frasco'
		db 0FFh	; �
aCaja		db 'caja'
		db 0FFh	; �
aBolsaDeSalario	db 'bolsa de salarios'
		db 0FFh	; �
aPergaminoDeRan	db 'Pergamino de Ran'
		db 0FFh	; �
aJarraDePociN	db 'jarra de poci<n'
		db 0FFh	; �
aPlatilloParaDo	db 'platillo para donaciones'
		db 0FFh	; �
aAnilloDeAndv_0	db 'anillo de Andvaris'
		db 0FFh	; �
aCascoDeBronce	db 'casco de bronce'
		db 0FFh	; �
aHuginElCuervo	db 'Hugin el Cuervo'
		db 0FFh	; �
aLibroSagrado	db 'Libro Sagrado'
		db 0FFh	; �
aEsferaSagrada	db 'Esfera Sagrada'
		db 0FFh	; �
aOjoDeSurt	db 'Ojo de Surt'
		db 0FFh	; �
aPergaminoDeLaV	db 'Pergamino de la Verdad'
		db 0FFh	; �
aHierbaHipnTica	db 'hierba hipn<tica'
		db 0FFh	; �
aContrabando	db 'contrabando'
		db 0FFh	; �
aImpuestos	db 'impuestos'
		db 0FFh	; �
aFrascoSagrado	db 'Frasco Sagrado'
		db 0FFh	; �
aAstrolabio	db 'astrolabio'
		db 0FFh	; �
aIdoloDeOro	db 'Idolo de Oro'
		db 0FFh	; �
aPergaminoReal	db 'Pergamino Real'
		db 0FFh	; �
aPergaminoDeMap	db 'pergamino de mapa'
		db 0FFh	; �
aEspRituDeSkoll	db 'Esp>ritu de Skoll'
		db 0FFh	; �
aBotellaDeEspRi	db 'botella de esp>ritu vac>a'
		db 0FFh	; �
aEspRituEnUnaBo	db 'esp>ritu en una botella'
		db 0FFh	; �
aAdivinadorDeEs	db 'adivinador de esp>ritu'
		db 0FFh	; �
aBolsaDePergami	db 'bolsa de pergaminos'
		db 0FFh	; �
aSelloReal	db 'Sello Real'
		db 0FFh	; �
aSelloReal_0	db 'Sello Real'
		db 0FFh	; �
aBolaDeFuego	db 'bola de fuego'
		db 0FFh	; �
aTabletaMStica	db 'tableta m>stica'
		db 0FFh	; �
aPRamide	db 'p>ramide'
		db 0FFh	; �
aMurcivlagoAtur	db 'murci�lago aturdido'
		db 0FFh	; �
aAturdidorDeMur	db 'aturdidor de murci�lagos'
		db 0FFh	; �
aAntDotoUb	db 'ant>doto UB'
		db 0FFh	; �
aPergaminoSella	db 'pergamino sellado'
		db 0FFh	; �
aPergamino_1	db 'pergamino'
		db 0FFh	; �
aCascoDeEivak	db 'casco de Eivak'
		db 0FFh	; �
aGemaReal	db 'Gema Real'
		db 0FFh	; �
aHuevo		db 'huevo'
		db 0FFh	; �
aYunqueDePoder	db 'Yunque de Poder'
		db 0FFh	; �
aBotasDeSieteLe	db 'botas de siete leguas'
		db 0FFh	; �
aGuantelesDePod	db 'Guanteles de Poder'
		db 0FFh	; �
aAmuletoDeDefen	db 'Amuleto de Defensa'
		db 0FFh	; �
aBotella_0	db 'botella'
		db 0FFh	; �
aOjoDeLosCClope	db 'Ojo de los C>clopes'
		db 0FFh	; �
aGambantein_0	db 'Gambantein'
		db 0FFh	; �
aPergamino_2	db 'pergamino'
		db 0FFh	; �
aUrnaDePiedra	db 'urna de piedra'
		db 0FFh	; �
aPlumaBlanca	db 'pluma blanca'
		db 0FFh	; �
aBallesta	db 'ballesta'
		db 0FFh	; �
aRayo		db 'rayo'
		db 0FFh	; �
aLaurelesDeCamp	db 'laureles de campeones'
		db 0FFh	; �
aPergamino_3	db 'pergamino'
		db 0FFh	; �
aCuboDeBrea	db 'cubo de brea'
		db 0FFh	; �
aCuboDeBreaVacO	db 'cubo de brea vac>o'
		db 0FFh	; �
aCascabelDeLami	db 'cascabel de lamia'
		db 0FFh	; �
aLibro		db 'libro'
		db 0FFh	; �
aMScara		db 'm^scara'
		db 0FFh	; �
aPergamino_4	db 'pergamino'
		db 0FFh	; �
aTrompetilla	db 'trompetilla'
		db 0FFh	; �
aPergaminoDeFan	db 'pergamino de fantas>a'
		db 0FFh	; �
aHuevoDelDragNS	db 'huevo del drag<n salvaje'
		db 0FFh	; �
aBocadoDeMurciv	db 'bocado de murci�lago'
		db 0FFh	; �
aCalderaDeLaBru	db 'caldera de la bruja'
		db 0FFh	; �
aCopaDeSangreDe	db 'copa de sangre de babuino'
		db 0FFh	; �
aCalderaDeLaB_0	db 'caldera de la bruja'
		db 0FFh	; �
aEstandarteDeBa	db 'estandarte de batalla de Nidhug'
		db 0FFh	; �
aCabezaDeNidhug	db 'cabeza de Nidhug'
		db 0FFh	; �
aLMparaDeOro	db 'l^mpara de oro'
		db 0FFh	; �
aCopa		db 'copa'
		db 0FFh	; �
aCopa_0		db 'copa'
		db 0FFh	; �
aCopa_1		db 'copa'
		db 0FFh	; �
aCabezaDeGorgon	db 'cabeza de gorgona'
		db 0FFh	; �
aHachaDeGorn	db 'Hacha de Gorn'
		db 0FFh	; �
aSacoHesiano	db 'saco hesiano'
		db 0FFh	; �
aRocaEnjoyada	db 'Roca Enjoyada'
		db 0FFh	; �
aPergamino	db 'pergamino'
		db 0FFh	; �
aVisadoDeSalida	db 'visado de salida'
		db 0FFh	; �
aCabezaEnUnSaco	db 'cabeza en un saco'
		db 0FFh	; �
aCalaveraDelNor	db 'Calavera del Norte'
		db 0FFh	; �
aCalaveraDelSur	db 'Calavera del Sur'
		db 0FFh	; �
aCalaveraDelEst	db 'Calavera del Este'
		db 0FFh	; �
aCalaveraDeOest	db 'Calavera de Oeste'
		db 0FFh	; �
aEsferaDeVisiN	db 'Esfera de visi<n'
		db 0FFh	; �
aLibroDeEvocaci	db 'Libro de Evocaciones'
		db 0FFh	; �
aLibroInteresan	db 'libro interesante'
		db 0FFh	; �
aManzana	db 'manzana'
		db 0FFh	; �
aChampiOnes	db 'champi~ones'
		db 0FFh	; �
aJamN		db 'jam<n'
		db 0FFh	; �
aPan		db 'pan'
		db 0FFh	; �
aPostreDeFruta	db 'postre de fruta'
		db 0FFh	; �
aTarroDeAguamie	db 'tarro de aguamiel'
		db 0FFh	; �
aBotellaDeAgua	db 'botella de agua'
		db 0FFh	; �
aCuchilloArroja	db 'cuchillo arrojadizo'
		db 0FFh	; �
aRoca		db 'roca'
		db 0FFh	; �
aBotellaDePociN	db 'botella de poci<n'
		db 0FFh	; �
aOro		db 'oro'
		db 0FFh	; �
aTesoro		db 'tesoro'
		db 0FFh	; �
aHierba		db 'hierba'
		db 0FFh	; �
aDinero		db 'dinero'
		db 0FFh	; �
aEspadaLigera	db 'espada ligera'
		db 0FFh	; �
aHachaAdornada	db 'hacha adornada'
		db 0FFh	; �
		db    0	;
DOMESTICS	db 'cobertizo'
		db 0FFh	; �
aRefugio	db 'refugio'
		db 0FFh	; �
aCasa		db 'casa'
		db 0FFh	; �
aResidencia	db 'residencia'
		db 0FFh	; �
		db    0	;
aAldora		db 'Aldora'
		db 0FFh	; �
aAnselma	db 'Anselma'
		db 0FFh	; �
aDagmar		db 'Dagmar'
		db 0FFh	; �
aDanica		db 'Danica'
		db 0FFh	; �
aEinar		db 'Einar'
		db 0FFh	; �
aFreya		db 'Freya'
		db 0FFh	; �
aGunhilda	db 'Gunhilda'
		db 0FFh	; �
aHaldana	db 'Haldana'
		db 0FFh	; �
aKirstin	db 'Kirstin'
		db 0FFh	; �
aOlga		db 'Olga'
		db 0FFh	; �
aNorna		db 'Norna'
		db 0FFh	; �
aThorberta	db 'Thorberta'
		db 0FFh	; �
aVilma		db 'Vilma'
		db 0FFh	; �
aWilla		db 'Willa'
		db 0FFh	; �
aSigrid		db 'Sigrid'
		db 0FFh	; �
aNelda		db 'Nelda'
		db 0FFh	; �
aElspeth	db 'Elspeth'
		db 0FFh	; �
aRosamund	db 'Rosamund'
		db 0FFh	; �
aPortia		db 'Portia'
		db 0FFh	; �
aGolda		db 'Golda'
		db 0FFh	; �
aMorgan		db 'Morgan'
		db 0FFh	; �
aBelle		db 'Belle'
		db 0FFh	; �
aDorcas		db 'Dorcas'
		db 0FFh	; �
aEvita		db 'Evita'
		db 0FFh	; �
aAslaug		db 'Aslaug'
		db 0FFh	; �
aEdda		db 'Edda'
		db 0FFh	; �
aEmbla		db 'Embla'
		db 0FFh	; �
		db    0	;
aAlvis		db 'alvis'
		db 0FFh	; �
aBerling	db 'berling'
		db 0FFh	; �
aDain		db 'dain'
		db 0FFh	; �
aDvalin		db 'dvalin'
		db 0FFh	; �
aFafnir		db 'fafnir'
		db 0FFh	; �
aGalar		db 'galar'
		db 0FFh	; �
aGrerr		db 'grerr'
		db 0FFh	; �
aIvald		db 'ivald'
		db 0FFh	; �
aNabbi		db 'nabbi'
		db 0FFh	; �
aRegin		db 'regin'
		db 0FFh	; �
aSindri		db 'sindri'
		db 0FFh	; �
aSudri		db 'sudri'
		db 0FFh	; �
aAiken		db 'Aiken'
		db 0FFh	; �
aOswald		db 'Oswald'
		db 0FFh	; �
aBalder		db 'Balder'
		db 0FFh	; �
aBardrick	db 'Bardrick'
		db 0FFh	; �
aCadby		db 'Cadby'
		db 0FFh	; �
aDenby		db 'Denby'
		db 0FFh	; �
aGarth		db 'Garth'
		db 0FFh	; �
aLamont		db 'Lamont'
		db 0FFh	; �
aLathan		db 'Lathan'
		db 0FFh	; �
aRexford	db 'Rexford'
		db 0FFh	; �
aSedgley	db 'Sedgley'
		db 0FFh	; �
aStorr		db 'Storr'
		db 0FFh	; �
aUllock		db 'Ullock'
		db 0FFh	; �
aElvis		db 'Elvis'
		db 0FFh	; �
aWalcott	db 'Walcott'
		db 0FFh	; �
aZelig		db 'Zelig'
		db 0FFh	; �
aConnor		db 'Connor'
		db 0FFh	; �
aErik		db 'Erik'
		db 0FFh	; �
aEdmund		db 'Edmund'
		db 0FFh	; �
aConan		db 'Conan'
		db 0FFh	; �
aWodan		db 'Wodan'
		db 0FFh	; �
aThalor		db 'Thalor'
		db 0FFh	; �
aAkira		db 'Akira'
		db 0FFh	; �
aUthor		db 'Uthor'
		db 0FFh	; �
aBolwerk	db 'Bolwerk'
		db 0FFh	; �
aAskr		db 'Askr'
		db 0FFh	; �
aHagal		db 'Hagal'
		db 0FFh	; �
		db    0	;
aCooper		db 'Cooper'
		db 0FFh	; �
aThatcher	db 'Thatcher'
		db 0FFh	; �
aBrewer		db 'Brewer'
		db 0FFh	; �
aBaker		db 'Baker'
		db 0FFh	; �
aElTemido	db 'el Temido'
		db 0FFh	; �
aMiller		db 'Miller'
		db 0FFh	; �
aElNecesitado	db 'el Necesitado'
		db 0FFh	; �
aCartwright	db 'Cartwright'
		db 0FFh	; �
aDeLaLlanura	db 'de la LLanura'
		db 0FFh	; �
aWainwright	db 'Wainwright'
		db 0FFh	; �
aThorley	db 'Thorley'
		db 0FFh	; �
aFletcher	db 'Fletcher'
		db 0FFh	; �
aWildfowl	db 'Wildfowl'
		db 0FFh	; �
aArcher		db 'Archer'
		db 0FFh	; �
aDelNorte	db 'del Norte'
		db 0FFh	; �
aRatnibbler	db 'Ratnibbler'
		db 0FFh	; �
aTanner		db 'Tanner'
		db 0FFh	; �
aSkinner	db 'Skinner'
		db 0FFh	; �
aElBRbaro	db 'el B^rbaro'
		db 0FFh	; �
aElConquistador	db 'el Conquistador'
		db 0FFh	; �
aElManso	db 'el Manso'
		db 0FFh	; �
aDeAkhbar	db 'de Akhbar'
		db 0FFh	; �
aWarriorson	db 'Warriorson'
		db 0FFh	; �
aElHorrible	db 'el Horrible'
		db 0FFh	; �
aElTerrible	db 'el Terrible'
		db 0FFh	; �
aBloodaxe	db 'Bloodaxe'
		db 0FFh	; �
aDeLemuria	db 'de Lemuria'
		db 0FFh	; �
aElFuerte	db 'el Fuerte'
		db 0FFh	; �
aElDvbil	db 'el D�bil'
		db 0FFh	; �
aElRPido	db 'el R^pido'
		db 0FFh	; �
aElValiente	db 'el Valiente'
		db 0FFh	; �
aCarpenter	db 'Carpenter'
		db 0FFh	; �
aDeGracelands	db 'de Gracelands'
		db 0FFh	; �
aElGalwegian	db 'el Galwegian'
		db 0FFh	; �
aDeVanir	db 'de Vanir'
		db 0FFh	; �
aDeLosNorns	db 'de los Norns'
		db 0FFh	; �
aDeLasDamasDeLa	db 'de las Damas de las Olas'
		db 0FFh	; �
aDeMuspell	db 'de Muspell'
		db 0FFh	; �
aDeLasValkirias	db 'de las Valkirias'
		db 0FFh	; �
aDeSogn		db 'de Sogn'
		db 0FFh	; �
aDeLosNibelungo	db 'de los Nibelungos'
		db 0FFh	; �
aElDesafortunad	db 'el Desafortunado'
		db 0FFh	; �
		db    0	;
REGSURNAMES	db 'machete'
		db 0FFh	; �
aDelCementerio	db 'del cementerio'
		db 0FFh	; �
		db  20h	;
		db 0FFh	; �
aOjoDePerdiz	db 'ojo de perdiz'
		db 0FFh	; �
aDeLosCampos	db 'de los campos'
		db 0FFh	; �
aElGuerrero	db 'el guerrero'
		db 0FFh	; �
aElEmbalsamador	db 'el embalsamador'
		db 0FFh	; �
aGreyfell	db 'Greyfell'
		db 0FFh	; �
aDelCobertizo	db 'del cobertizo'
		db 0FFh	; �
		db    0	;
REGFFORENAMES	db 'mohosa'
		db 0FFh	; �
aAmapola	db 'amapola'
		db 0FFh	; �
aLaBruja	db 'la bruja'
		db 0FFh	; �
aVoluptuosa	db 'voluptuosa'
		db 0FFh	; �
aNorma		db 'Norma'
		db 0FFh	; �
aKate		db 'Kate'
		db 0FFh	; �
aLinda		db 'Linda'
		db 0FFh	; �
		db    0	;
REGMFORENAMES	db 'capit^n'
		db 0FFh	; �
aCuelloLargo	db 'cuello largo'
		db 0FFh	; �
aTejN		db 'tej<n'
		db 0FFh	; �
aDvalin_0	db 'dvalin'
		db 0FFh	; �
aIvald_0	db 'ivald'
		db 0FFh	; �
aOrlak		db 'orlak'
		db 0FFh	; �
aOlly		db 'olly'
		db 0FFh	; �
aSilas		db 'Silas'
		db 0FFh	; �
aSaxon		db 'Saxon'
		db 0FFh	; �
aEivakElGoblin	db 'Eivak el goblin'
		db 0FFh	; �
aRangoDeCabo	db 'rango de cabo'
		db 0FFh	; �
aSargentoFile	db 'sargento file'
		db 0FFh	; �
aZorgarthElAses	db 'Zorgarth el asesino'
		db 0FFh	; �
aWilfredDeMittl	db 'Wilfred de Mittledorf'
		db 0FFh	; �
		db    0	;
aSoyElVerdugoDe	db 'Soy el verdugo de la ciudad'
		db 0FFh	; �
aSoyUnFunerario	db 'Soy un funerario'
		db 0FFh	; �
aBienSoyUnTejed	db 'Bien, soy un tejedor'
		db 0FFh	; �
aUnManicuroMari	db 'Un manicuro marino. Es un trabajo muy interesante.'
		db 0FFh	; �
aElOficioMSViej	db 'el oficio m^s viejo del mundo, querido...'
		db 0FFh	; �
aSoyJardineroEs	db 'Soy jardinero, eso es lo que soy.'
		db 0FFh	; �
aSoyElRecaudado	db 'Soy el recaudador de impuestos. Espero que hayas pagado todo.'
		db 0FFh	; �
aSoyUnProveedor	db 'Soy un proveedor de conservas'
		db 0FFh	; �
aTengoElHonorDe	db 'Tengo el honor de ser la se~ora de las runas'
		db 0FFh	; �
aSoyElConservad	db 'Soy el conservador del museo'
		db 0FFh	; �
aSoyCarcelero	db 'Soy carcelero'
		db 0FFh	; �
aSoyUnoDeLosBuf	db 'Soy uno de los bufones de la corte'
		db 0FFh	; �
aSoyGuardaDelZo	db 'Soy guarda del zoo'
		db 0FFh	; �
aSoyConcejal	db 'Soy concejal'
		db 0FFh	; �
aSoyElHonorable	db 'Soy el honorable escriba de la Mansi<n de la Torreta'
		db 0FFh	; �
aSoyElNobleEscr	db 'Soy el noble escriba del Lomo del Ganso Negro'
		db 0FFh	; �
aSoyUnaBrujaDel	db 'Soy una bruja del p^ramo'
		db 0FFh	; �
aElDelAsesinoDe	db 'El del asesino de bestias'
		db 0FFh	; �
aCreoEnLaLibert	db 'Creo en la libertad y la democracia'
		db 0FFh	; �
aReyExiladoDeMi	db 'Rey exilado de Mitteldorf... pronto recuperar^ su lugar gracias a '
		db 't>.'
		db 0FFh	; �
		db    0	;
aAlquimista	db 'Alquimista'
		db 0FFh	; �
aCavadorDeTumba	db 'Cavador de tumbas'
		db 0FFh	; �
aCirujano	db 'Cirujano'
		db 0FFh	; �
aCochero	db 'Cochero'
		db 0FFh	; �
aFarmacvutico	db 'Farmac�utico'
		db 0FFh	; �
aPanadero	db 'Panadero'
		db 0FFh	; �
aDesholladorDeR	db 'Deshollador de ratas'
		db 0FFh	; �
aEscriba	db 'Escriba'
		db 0FFh	; �
aLadrN		db 'Ladr<n'
		db 0FFh	; �
aCazadorDeRecom	db 'Cazador de recompensas'
		db 0FFh	; �
aMarinero	db 'Marinero'
		db 0FFh	; �
aMercader	db 'Mercader'
		db 0FFh	; �
aLeAdor		db 'Le~ador'
		db 0FFh	; �
aRevientaCajas	db 'Revienta cajas'
		db 0FFh	; �
aPoeta		db 'Poeta'
		db 0FFh	; �
aFalsificador	db 'Falsificador'
		db 0FFh	; �
aJoyero		db 'Joyero'
		db 0FFh	; �
aConstructor	db 'Constructor'
		db 0FFh	; �
aCriadorDeCucar	db 'Criador de cucarachas'
		db 0FFh	; �
aHerrero	db 'Herrero'
		db 0FFh	; �
aCarterista	db 'Carterista'
		db 0FFh	; �
aMago		db 'Mago'
		db 0FFh	; �
aAlguacil	db 'Alguacil'
		db 0FFh	; �
aVagabundo	db 'Vagabundo'
		db 0FFh	; �
aDomadorDeOsos	db 'Domador de osos'
		db 0FFh	; �
aTimonel	db 'Timonel'
		db 0FFh	; �
aPirata		db 'Pirata'
		db 0FFh	; �
		db    0	;
aAprendiz	db 'aprendiz'
		db 0FFh	; �
aExperto	db 'experto'
		db 0FFh	; �
aMaestro	db 'maestro'
		db 0FFh	; �
aOficial	db 'oficial'
		db 0FFh	; �
aManAco		db 'man>aco'
		db 0FFh	; �
aEstudiante	db 'estudiante'
		db 0FFh	; �
		db  20h	;
		db 0FFh	; �
aRetirado	db 'retirado'
		db 0FFh	; �
		db    0	;
aDeLaGuardia	db 'de la guardia'
		db 0FFh	; �
aDeLaMiliciaRea	db 'de la Milicia Real'
		db 0FFh	; �
aDeLosMarinos	db 'de los marinos'
		db 0FFh	; �
aDelFosoDeLaMue	db 'del foso de la muerte'
		db 0FFh	; �
		db    0	;
aRecluta	db 'recluta'
		db 0FFh	; �
aSoldado	db 'soldado'
		db 0FFh	; �
aCapitN		db 'capit^n'
		db 0FFh	; �
aMaestre	db 'maestre'
		db 0FFh	; �
		db    0	;
aNoTengoReligiN	db 'No tengo religi<n'
		db 0FFh	; �
aSoySeguidorDeS	db 'Soy seguidor de Set'
		db 0FFh	; �
aPertenezcoAlTe	db 'Pertenezco al Templo de Od>n'
		db 0FFh	; �
aYoRindoCultoEn	db 'Yo rindo culto en Sessrymnir, Templo de la diosa Freya'
		db 0FFh	; �
aYoRindoCultoAA	db 'Yo rindo culto a Aegir, dios del mar.'
		db 0FFh	; �
aYoIdolatroLasC	db 'Yo idolatro las cuatro estaciones'
		db 0FFh	; �
aBaccusita	db 'Baccusita'
		db 0FFh	; �
aEsoNoTeImporta	db 'eso no te importa'
		db 0FFh	; �
aYoIdolatroALos	db 'Yo idolatro a los hermanos de Loki'
		db 0FFh	; �
		db    0	;
aMonje		db 'monje'
		db 0FFh	; �
aErmitaO	db 'ermita~o'
		db 0FFh	; �
aCurador	db 'curador'
		db 0FFh	; �
aBeneficiado	db 'beneficiado'
		db 0FFh	; �
aSacerdote	db 'sacerdote'
		db 0FFh	; �
aClvrigoDivino	db 'cl�rigo divino'
		db 0FFh	; �
aExorcista	db 'exorcista'
		db 0FFh	; �
aHereje		db 'hereje'
		db 0FFh	; �
aDruida		db 'druida'
		db 0FFh	; �
aFalsificadorDe	db 'falsificador de pergaminos'
		db 0FFh	; �
aMendigo	db 'mendigo'
		db 0FFh	; �
aFraile		db 'fraile'
		db 0FFh	; �
aGuardiNDeCript	db 'guardi^n de criptas'
		db 0FFh	; �
aMedium		db 'medium'
		db 0FFh	; �
aEscriba_0	db 'escriba'
		db 0FFh	; �
aAstrLogo	db 'astr<logo'
		db 0FFh	; �
		db    0	;
aSirvienta	db 'sirvienta'
		db 0FFh	; �
aSacerdotisa	db 'sacerdotisa'
		db 0FFh	; �
aValkiria	db 'Valkiria'
		db 0FFh	; �
aCriada		db 'criada'
		db 0FFh	; �
		db    0	;
aPbienvenidoALa	db '�Bienvenido a la Armer>a Valtams, tratamos con cualquiera, sean '
		db 'cuales sean las condiciones!'
		db 0FFh	; �
aFelicidadesPor	db 'Felicidades por entrar en la tienda de Hotch[Productos de calidad '
		db 'al precio adecuado.[Es un hombre sabio que vende aqu> en vez de '
		db 'en el sitio de Patch'
		db 0FFh	; �
aProvisionesMil	db 'Provisiones militares Skiolds.[[ Proveedores del Gremio de los '
		db 'Hombres Armados.'
		db 0FFh	; �
aBienvenidoAlSi	db 'Bienvenido al sitio de Patch, los proveedores oficiales de los '
		db 'Sacerdotes del Templo de Od>n, nuestros materiales est^n '
		db 'garantizados, no se puede decir lo mismo de la porquer>a que se '
		db 'vende en el cuchitril de Hotch'
		db 0FFh	; �
aHakonElRecauda	db 'Hakon el Recaudador a tu servicio, Inspector de Impuestos por '
		db 'Nombramiento Real. Llevo esta aduana, aqu> obtendr^s los mejores '
		db 'tratos de la ciudad. S<lo los comerciantes del mercado negro '
		db 'pueden ofrecerte un trato mejor pero si yo fuera t\ no confiar>a '
		db 'en ellos.'
		db 0FFh	; �
aBajaLaVozYEscu	db 'Baja la voz y escucha atentamente, soy Thora, hija de Hakon. '
		db 'Trato de corregir las equivocaciones de mi padre que cobra m^s de '
		db 'lo debido por todo en la aduana. Yo vendo algunos de sus '
		db 'productos a los necesitados desde mi mostrador.'
		db 0FFh	; �
aLaTiendaDeLosM	db 'La Tienda de los Mercenarios.[[ Los productos son de m^xima '
		db 'calidad, tienen que serlo, o yo ir>a directamente al foso'
		db 0FFh	; �
aFelicidadesP_0	db 'Felicidades por haber encontrado el mercado de provisiones de '
		db 'Downend.[[Calidad a un precio que TU te puedes permitir'
		db 0FFh	; �
aDelicatessenDe	db 'Delicatessen de Copestake.[[ �Qu� deseas?'
		db 0FFh	; �
aSoyLeginRagenu	db 'Soy Legin Ragenub, prestamista.[[ �Puedo venderte tu propia piel!'
		db 0FFh	; �
aTiendaDeLaPris	db 'Tienda de la prisi<n de Garfoot. Servicio con amabilidad.[[ ��Qu� '
		db 'quieres??'
		db 0FFh	; �
aEsteEsElEstabl	db 'Este es el establecimiento de Dirty Daglish.[[ Bienvenido.[[ '
		db 'Nunca saldr^s descontento, te lo prometemos.'
		db 0FFh	; �
aBienvenidoAlEm	db 'Bienvenido al emporio de Olaf. �Puedo servirte de algo?'
		db 0FFh	; �
aEsteEsElProvee	db 'Este es el proveedor de barcos.[[ Entra y comprueba la calidad.'
		db 0FFh	; �
aObjetosPerdido	db 'Objetos Perdidos de Drysdale. [[ Todo lo que hay aqu> est^ '
		db 'garantizado, en buenas condiciones. [[ �Ves algo que te guste?'
		db 0FFh	; �
		db    0	;
		db  20h	;
aHola_Bienvenid	db 'Hola.[ Bienvenido a la Cabeza del Drag<n.  Barny Ojorojo, '
		db 'propietario y pianista a tu servicio. [ �Qu� tal tres dedos de '
		db 'ojorojo?'
		db 0FFh	; �
		db  20h	;
aElEscudoDeLosT	db 'El escudo de los Trolls extiende su mano c^lida a todo el que '
		db 'cruza su umbral en paz.] No te preocupes por el nombre, nunca '
		db 'hemos visto a ning\n troll beber aqu>.'
		db 0FFh	; �
		db  20h	;
aSaludosRpuedoO	db 'Saludos, �puedo ofrecerte un refresco?[[ O quiz^s quieras tomar '
		db 'parte en un peque~o juego de azar.] Un gran n\mero de personas se '
		db 'preguntan cu^l es el origen de una taberna con un nombre como El '
		db 'Ahorcado.[ Es un recuerdo de tiempos pasados. Justo despu�s del '
		db 'alzamiento del 22. El C>rculo de Piedra de fuera era donde '
		db 'colgaban a los jefes.'
		db 0FFh	; �
		db  20h	;
aUgh_BienRquvQu	db 'Ugh.][[Bien, �qu� quieres?'
		db 0FFh	; �
		db  20h	;
aBienvenidoAlCa	db 'Bienvenido al Casino, o como se conoc>a cuando reinaba el '
		db 'anterior rey, la Cucaracha y el Jinete.] Psssttt,[      atenci<n, '
		db ' ten cuidado con los timadores'
		db 0FFh	; �
		db  20h	;
aElCaballoDeMar	db 'el Caballo de Mar, refugio de los bebedores, os da la bienvenida'
		db 0FFh	; �
		db  20h	;
aBienvenidoAlDe	db 'Bienvenido al Descanso de la Sirena, lugar tradicional para el '
		db 'marinero, �come, bebe y s� feliz!'
		db 0FFh	; �
		db  20h	;
aLaDirecciNDeLa	db 'la direcci<n de Las Serpientes da la bienvenida a todos los '
		db 'viajeros con los bolsillos profundos][ un consejo,[ los '
		db 'mercaderes mencionados por Hakon, en lo que se refiere a este '
		db 'establecimiento, son extremadamente honorable y fiables'
		db 0FFh	; �
		db    0	;
aBienvenidoB	db 'Bienvenido {B',0
asc_1D83_2608	db ',['
aTodasLasComodi	db 'todas las comodidades de la casa est^n a tu disposici<n'
		db 0FFh	; �
aCamarada	db 'camarada'
		db 0FFh	; �
aCompaEro	db 'compa~ero'
		db 0FFh	; �
aAmigo		db 'amigo'
		db 0FFh	; �
aHonradoAmigo	db 'honrado amigo'
		db 0FFh	; �
aSuSeOrA	db 'su Se~or>a'
		db 0FFh	; �
		db    0	;
aBienvenidoAlEx	db ' Bienvenido al exclusivo Descanso de los Desamparados.[ �Puedo '
		db 'servirte en algo?'
		db 0FFh	; �
aBienvenidoALaP	db ' Bienvenido a la Posada de los Hombres Muertos[[ Entra y '
		db 'comprueba nuestra hospitalidad'
		db 0FFh	; �
aBienvenidoAlHo	db ' Bienvenido al Hoyo de las Pulgas[ Bueno, vaya nombre. Al menos '
		db 'las habitaciones son baratas'
		db 0FFh	; �
aBienvenidoAL_0	db ' Bienvenido a la Posada del Viajero.[[ Nuestras habitaciones y '
		db 'servicio no son inferiores a otras.'
		db 0FFh	; �
aBuenoApartePor	db ' Bueno, aparte por supuesto del Descanso de la Sirena.'
		db 0FFh	; �
aBienvenidoALas	db ' Bienvenido a las Posadas] �Has oido lo del minotauro y la '
		db 'antorcha llameante....[[.... Muy bien, de acuerdo. De todas '
		db 'formas �l tampoco pod>a ver la luz.'
		db 0FFh	; �
aBienvenidoAlRe	db ' Bienvenido al Reposo del Ermita~o. [[ No esperes ser nuestro '
		db '\nico invitado.'
		db 0FFh	; �
aBienvenidoALaT	db ' Bienvenido a la Taberna de los Thespians'
		db 0FFh	; �
aBienvenidoAL_1	db ' Bienvenido a la pensi<n de los marineros, el sitio m^s barato de '
		db 'la ciudad.'
		db 0FFh	; �
		db    0	;
aBienvenidoALaC	db ' Bienvenido a la compa~>a de los Asegeir'
		db 0FFh	; �
aBienvenidoALaH	db ' Bienvenido a la horrible Hermandad de Loki'
		db 0FFh	; �
aBienvenidoAlAn	db ' Bienvenido al antiguo y venerable gremio de hombres armados'
		db 0FFh	; �
aEsteEsElHonora	db ' este es el honorable gremio de los mercenarios[[ expon tu '
		db 'negocio o m^rchate'
		db 0FFh	; �
aBienvenidoAl_0	db ' Bienvenido al antiguo y honorable gremio de los ladrones'
		db 0FFh	; �
aBienvenidoAlTe	db ' Bienvenido al Templo de Set'
		db 0FFh	; �
aEsteEsElTemplo	db ' Este es el Templo de Od>n, patr<n de los ahorcados[ Soy el jefe '
		db 'Cleric Karste, �buscas gu>a?'
		db 0FFh	; �
aBienvenidoAl_1	db ' Bienvenido al Templo de Freya, hermana'
		db 0FFh	; �
aElTemploDeAegi	db ' El Templo de Aegir es un refugio para el viajero,'
		db 0FFh	; �
aEspecialmenteM	db ' especialmente marinos.'
		db 0FFh	; �
		db    0	;
aDADelSol	db 'D>a del Sol'
		db 0FFh	; �
aDADeLaLuna	db 'D>a de la Luna'
		db 0FFh	; �
aDADeTyrs	db 'D>a de Tyrs'
		db 0FFh	; �
aDADeWodens	db 'D>a de Wodens'
		db 0FFh	; �
aDADeThors	db 'D>a de Thors'
		db 0FFh	; �
aDADeFreyas	db 'D>a de Freyas'
		db 0FFh	; �
aDADeSatyrs	db 'D>a de Satyrs'
		db 0FFh	; �
aPrimavera	db 'Primavera'
		db 0FFh	; �
aVerano		db 'Verano'
		db 0FFh	; �
aOtoO		db 'Oto~o'
		db 0FFh	; �
aInvierno	db 'Invierno'
		db 0FFh	; �
aAntesDelAmanec	db 'antes del amanecer'
		db 0FFh	; �
aAlAmanecer	db 'al amanecer'
		db 0FFh	; �
aPrimeraHoraDeL	db 'primera hora de la ma~ana'
		db 0FFh	; �
aMediaMaAna	db 'media ma~ana'
		db 0FFh	; �
aMediodA	db 'mediod>a'
		db 0FFh	; �
aMediaTarde	db 'media tarde'
		db 0FFh	; �
aTarde		db 'tarde'
		db 0FFh	; �
aMedianoche	db 'medianoche'
		db 0FFh	; �
aEnLaSuperficie	db 'en la superficie'
		db 0FFh	; �
aEnLosSubterrNe	db 'en los subterr^neos'
		db 0FFh	; �
aEsoNoEsCosaTuy	db 'eso no es cosa tuya'
		db 0FFh	; �
aNoLoSv		db 'no lo s�'
		db 0FFh	; �
aNoTengoNiIdea	db 'No tengo ni idea'
		db 0FFh	; �
aLoSiento_NoLoS	db 'Lo siento. No lo s�.'
		db 0FFh	; �
		db    0	;
aMePermitirAsTe	db 'Me permitir>as terminar una frase'
		db 0FFh	; �
aBienSiNoEstSIn	db 'Bien, si no est^s interesado...'
		db 0FFh	; �
aRmeEstSEscucha	db '�Me est^s escuchando?'
		db 0FFh	; �
aDvjameHablar	db 'D�jame hablar'
		db 0FFh	; �
		db    0	;
aAlEste		db 'Al este'
		db 0FFh	; �
aSuresteDeAqu	db 'Sureste de aqu>'
		db 0FFh	; �
aAlSur		db 'Al sur'
		db 0FFh	; �
aSureste	db 'Sureste'
		db 0FFh	; �
aHaciaElOeste	db 'Hacia el oeste'
		db 0FFh	; �
aNoroeste	db 'Noroeste'
		db 0FFh	; �
aAlNorteDeAqu	db 'Al norte de aqu>'
		db 0FFh	; �
aAlNoreste	db 'Al noreste'
		db 0FFh	; �
		db    0	;
aQuvEstancia?	db 'Qu� estancia?'
		db 0FFh	; �
aLoSientoElAlbe	db 'Lo siento,[  el albergue est^ lleno.'
		db 0FFh	; �
aGSemana	db ' g/semana'
		db 0FFh	; �
aNoMeHagasPerde	db 'No me hagas perder el tiempo si no tienes dinero.'
		db 0FFh	; �
aNoPodrSLlevarl	db 'No podr^s llevarlo con todas esas cosas'
		db 0FFh	; �
aTeTocarPagarEn	db 'Te tocar^ pagar en }'
		db    2	;
		db  64h	; d
		db  0Fh	;
aDAs		db ' d>as'
		db 0FFh	; �
aTuAlquilerDe	db 'Tu alquiler de }'
		db    2	;
		db  15h	;
aBGSePagaEn	db '� g se paga en }'
		db    2	;
		db  64h	; d
		db  0Fh	;
aDAsRpodrAsPaga	db ' d>as[  �podr>as pagar ahora?'
		db 0FFh	; �
aTeHasRetrasado	db 'Te has retrasado con tu alquiler de }'
		db    2	;
		db  15h	;
aBGRteImportarA	db '� g[  �te importar>a pagar ahora?'
		db 0FFh	; �
aTuAlquilerSePa	db 'Tu alquiler se paga hoy, }'
		db    2	;
		db  15h	;
aBgPorOtraSeman	db '�g por otra semana[  �vas a pagar ahora?'
		db 0FFh	; �
aInventarioDeLa	db 'Inventario de la cesta'
		db 0FFh	; �
asc_1D83_2F31	db '{'
		db  19h	;
		db    0	;
		db 0FFh	; �
aAqu_		db 'aqu>.'
		db 0FFh	; �
		db  53h	; S
		db  38h	; 8
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aPuertaDeLaCiud	db 'Puerta de la Ciudad'
		db 0FFh	; �
aEstEnElCentroD	db 'est^ en el centro del Muro Este'
		db 0FFh	; �
aEntreLaAduanaY	db 'entre la Aduana y los Herreros'
		db 0FFh	; �
		db    0	;
		db  24h	; $
		db  2Ah	; *
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aPlazaDelMercad	db 'Plaza del Mercado'
		db 0FFh	; �
aEstAlEsteDeLaP	db 'est^ al este de la Puerta de la Ciudad'
		db 0FFh	; �
aCreoQueEstAlOe	db 'Creo que est^ al oeste del C>rculo de Piedra.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    8	;
		db    0	;
		db    0	;
aVas		db 'vas'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    9	;
		db    0	;
		db    0	;
aEstoy		db 'estoy'
		db 0FFh	; �
		db    0	;
		db  1Ah	;
		db    8	;
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstLaCabezaDeD	db 'est^ la Cabeza de Drag<n'
		db 0FFh	; �
aDentroDelCasti	db 'dentro del Castillo'
		db 0FFh	; �
aNoEstoySeguroD	db 'No estoy seguro de que puedas encontrarlo.'
		db 0FFh	; �
		db    0	;
		db    8	;
		db  15h	;
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEscudoDeLosTro	db 'Escudo de los Trolls'
		db 0FFh	; �
aEstAlLadoDelMu	db 'est^ al lado del muro del Castillo'
		db 0FFh	; �
aEstAlOtroLadoD	db 'Est^ al otro lado del Escritorio.'
		db 0FFh	; �
		db    0	;
		db  3Ah	; :
		db  23h	; #
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElAhorcado	db 'est^ El Ahorcado'
		db 0FFh	; �
aEnElCRculoDePi	db 'en el C>rculo de Piedra'
		db 0FFh	; �
aJustoAlLadoDel	db 'Justo al lado del C>rculo de Piedra.'
		db 0FFh	; �
		db    0	;
		db  3Fh	; ?
		db  45h	; E
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstLaJarraDeCe	db 'est^ la Jarra de Cerveza'
		db 0FFh	; �
aOhPdvjamePensa	db 'Oh, �d�jame pensar! Creo que est^ en lo alto del parque.'
		db 0FFh	; �
		db    0	;
		db    7	;
		db  4Ah	; J
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElCasino	db 'est^ el Casino'
		db 0FFh	; �
aEnElPaseoEsteC	db 'en el Paseo Este cerca de la Plaza de los Mercenarios'
		db 0FFh	; �
aSolASerLaCucar	db 'Sol>a ser la Cucaracha y el Jinete. Est^ al lado del muro oeste.'
		db 0FFh	; �
		db    0	;
		db  11h	;
		db  68h	; h
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElCaballoDe	db 'est^ el Caballo de Mar'
		db 0FFh	; �
aAlEsteDeSessry	db 'Al este de Sessrymnir'
		db 0FFh	; �
aAlEsteDelTempl	db 'Al este del Templo de Freya.'
		db 0FFh	; �
		db    0	;
		db  4Ch	; L
		db  7Ah	; z
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aDescansoDeLaSi	db 'Descanso de la Sirena'
		db 0FFh	; �
aEnElEmbarcader	db 'en el Embarcadero al sur de la ciudad.'
		db 0FFh	; �
		db    0	;
		db  26h	; &
		db  74h	; t
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstLasSerpient	db 'est^ las Serpientes'
		db 0FFh	; �
aAlLadoEsteDeTw	db 'al lado este de Twinoaks'
		db 0FFh	; �
aEstCercaDelMur	db 'Est^ cerca del muro sur. �Ten cuidado, all> hay algunos '
		db 'personajes raros!'
		db 0FFh	; �
		db    0	;
		db  13h	;
		db  1Eh	;
		db    3	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aDescansoDesamp	db 'Descanso Desamparados'
		db 0FFh	; �
aEnElBulevarDel	db 'en el bulevar del Castillo'
		db 0FFh	; �
aEstCercaDeLaPu	db 'Est^ cerca de la puerta del Castillo.'
		db 0FFh	; �
aEsperoQuePueda	db 'Espero que puedas permit>rtelo. Est^ al sur del Castillo.'
		db 0FFh	; �
		db    0	;
		db  33h	; 3
		db  1Fh	;
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db  95h	; �
		db  38h	; 8
aPosadaDeLosMue	db 'Posada de los Muertos'
		db 0FFh	; �
aCercaDelAhorca	db 'cerca del Ahorcado.'
		db 0FFh	; �
aJustoAlNorteDe	db 'Justo al norte del C>rculo de Piedra.'
		db 0FFh	; �
		db    0	;
		db  1Ch	;
		db  2Eh	; .
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aHoyoDeLasPulga	db 'Hoyo de las Pulgas'
		db 0FFh	; �
aEnLaPlazaDelMe	db 'en la plaza del Mercado'
		db 0FFh	; �
		db    0	;
		db  48h	; H
		db  39h	; 9
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db  5Ch	; \
		db  36h	; 6
aPosadaDelViaje	db 'Posada del Viajero'
		db 0FFh	; �
aAlLadoDeLaAdua	db 'al lado de la Aduana'
		db 0FFh	; �
aSiNoRecuerdoMa	db 'Si no recuerdo mal est^ cerca de la Puerta de la Ciudad.'
		db 0FFh	; �
		db    0	;
		db  33h	; 3
		db  54h	; T
		db    1	;
		db    1	;
		db    1	;
		db    0	;
aEstNLasPosadas	db 'est^n las Posadas'
		db 0FFh	; �
aEnLosEdificios	db 'en los edificios del recinto'
		db 0FFh	; �
		db    0	;
		db  50h	; P
		db  5Bh	; [
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aReposoDelErmit	db 'Reposo del Ermita~o'
		db 0FFh	; �
aDetrSDelTemplo	db 'detr^s del Templo de Aegir'
		db 0FFh	; �
		db    0	;
		db  41h	; A
		db  63h	; c
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db  25h	; %
		db  38h	; 8
aTabernaDeLosTh	db 'Taberna de los Thespians'
		db 0FFh	; �
aDetrSDelTeatro	db 'detr^s del Teatro'
		db 0FFh	; �
aPruebaEnElTeat	db 'prueba en el Teatro.'
		db 0FFh	; �
		db    0	;
		db  18h	;
		db  6Eh	; n
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEnsionesDeMari	db 'ensiones de marineros'
		db 0FFh	; �
aAlNoresteDeLaP	db 'al noreste de la Plaza Brimmer'
		db 0FFh	; �
		db    0	;
		db  34h	; 4
		db  12h	;
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElArsenal	db 'est^ el Arsenal'
		db 0FFh	; �
aAlNorteDelAhor	db 'Al norte del Ahorcado, creo.'
		db 0FFh	; �
		db    0	;
		db  17h	;
		db  1Fh	;
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstLaTiendaDeH	db 'est^ la tienda de Hotch'
		db 0FFh	; �
		db    0	;
		db  4Fh	; O
		db  22h	; "
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElSitioDeSk	db 'est^ el sitio de Skiold'
		db 0FFh	; �
		db    0	;
		db  22h	; "
		db  31h	; 1
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aProvisionesDeO	db 'provisiones de Od>n'
		db 0FFh	; �
		db    0	;
		db  4Dh	; M
		db  3Ah	; :
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstLaAduana	db 'est^ la aduana'
		db 0FFh	; �
aCercaDeLaPuert	db 'Cerca de la Puerta de la Ciudad'
		db 0FFh	; �
		db    0	;
		db  4Dh	; M
		db  3Bh	; ;
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstLaTiendaDeT	db 'est^ la tienda de Thora'
		db 0FFh	; �
		db    0	;
		db  0Eh	;
		db  43h	; C
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aTiendaDeMercen	db 'tienda de Mercenarios'
		db 0FFh	; �
		db    0	;
		db  10h	;
		db  4Dh	; M
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstProvisiones	db 'est^ Provisiones Downend'
		db 0FFh	; �
		db    0	;
		db  31h	; 1
		db  4Dh	; M
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aDeli_DeCopesta	db 'Deli. de Copestakes'
		db 0FFh	; �
		db    0	;
		db  28h	; (
		db  51h	; Q
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstNLosPrestam	db 'est^n los prestamistas'
		db 0FFh	; �
		db    0	;
		db  1Eh	;
		db  77h	; w
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aTiendaDeLaPr_0	db 'tienda de la Prisi<n'
		db 0FFh	; �
		db    0	;
		db  18h	;
		db  7Ah	; z
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aParcelaDeDagli	db 'parcela de Daglish'
		db 0FFh	; �
		db    0	;
		db  40h	; @
		db  65h	; e
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElImperioDe	db 'est^ el imperio de Olaf'
		db 0FFh	; �
		db    0	;
		db  39h	; 9
		db  77h	; w
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aElProveedorDeB	db 'el proveedor de barcos'
		db 0FFh	; �
aCercaDelEmbarc	db 'Cerca del Embarcadero en el muro sur.'
		db 0FFh	; �
		db    0	;
		db  0Fh	;
		db  0Eh	;
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aObjetosPerdi_0	db 'Objetos Perdidos'
		db 0FFh	; �
aEstEnElInterio	db 'Est^ en el interior del Castillo, �si te dejan entrar!'
		db 0FFh	; �
		db    0	;
		db  44h	; D
		db  6Bh	; k
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElTeatro	db 'est^ el teatro'
		db 0FFh	; �
aAlSudesteDeLaC	db 'al sudeste de la ciudad',0
		db  36h	; 6
		db  4Eh	; N
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElBarrio	db 'est^ el barrio'
		db 0FFh	; �
aNoMePreguntesS	db 'no me preguntes; soy nuevo en la ciudad.'
		db 0FFh	; �
		db    0	;
		db  47h	; G
		db  18h	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aPalacioDeJusti	db 'Palacio de Justicia'
		db 0FFh	; �
aPreguntaAUnGua	db 'Pregunta a un guardia'
		db 0FFh	; �
aPloEncontrarSM	db '�Lo encontrar^s muy pronto!.'
		db 0FFh	; �
		db    0	;
		db  29h	; )
		db  62h	; b
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElCobertizo	db 'est^ el cobertizo'
		db 0FFh	; �
aNoTengoNiIdea_	db 'No tengo ni idea. Lo siento.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    3	;
		db    0	;
		db    0	;
aDAEs		db 'd>a es'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    2	;
		db    0	;
		db    0	;
aHoraEs		db 'hora es'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    4	;
		db    0	;
		db    0	;
aTuNombre	db 'tu nombre'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    6	;
		db    0	;
		db    0	;
aTuReligiN	db 'tu religi<n'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    5	;
		db    0	;
		db    0	;
aTuOcupaciN	db 'tu ocupaci<n'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    7	;
		db    0	;
		db    0	;
aMiEnfermedad	db 'mi enfermedad'
		db 0FFh	; �
		db    0	;
aEstSBajoArrest	db 'est^s bajo arresto por {'
		db  0Fh	;
		db    0	;
		db 0FFh	; �
aSeTeHaEncontra	db 'se te ha encontrado culpable de {'
		db  0Fh	;
		db    1	;
		db 0FFh	; �
aPagarSUnaMulta	db 'pagar^s una multa inmediata de }'
		db    2	;
		db 0CEh	; �
aG		db '"g'
		db 0FFh	; �
aEnConsecuencia	db 'en consecuencia, pagar^s }'
		db    2	;
		db 0CEh	; �
aGEnLaBolsaReal	db '"g en la bolsa real'
		db 0FFh	; �
aEnEstaOcasiNDe	db 'en esta ocasi<n deber^s pagar }'
		db    2	;
		db 0CEh	; �
aGDeMulta	db '"g de multa'
		db 0FFh	; �
aVagancia	db 'vagancia'
		db 0FFh	; �
aImpagoDeAlquil	db 'impago de alquileres'
		db 0FFh	; �
aDeudasDeJuego	db 'deudas de juego'
		db 0FFh	; �
aComportamiento	db 'comportamiento amenazador'
		db 0FFh	; �
aAsaltarAUnOfic	db 'asaltar a un oficial'
		db 0FFh	; �
aComportamien_0	db 'comportamiento repugnante'
		db 0FFh	; �
aEstarBebidoYCa	db 'estar bebido y causar alboroto'
		db 0FFh	; �
aTenerObjetosRo	db 'tener objetos robados'
		db 0FFh	; �
aCallejearConMa	db 'callejear con malas intenciones'
		db 0FFh	; �
aIntentoDeRobo	db 'intento de robo'
		db 0FFh	; �
aEntrometerseDe	db 'entrometerse demasiado'
		db 0FFh	; �
aMatarAUnOficia	db 'matar a un Oficial Especial de la Ley'
		db 0FFh	; �
		db    0	;
aCRcelDeLaTorre	db 'C^rcel de la Torreta'
		db 0FFh	; �
aMazmorraDelCas	db 'Mazmorra del Castillo'
		db 0FFh	; �
aPrisiNHireling	db 'Prisi<n Hireling'
		db 0FFh	; �
aCalabozo	db 'Calabozo'
		db 0FFh	; �
aPobladoGaol	db 'Poblado Gaol'
		db 0FFh	; �
		db    0	;
aPorTusCrMenesE	db 'por tus cr>menes eres sentenciado a }'
		db    2	;
		db  0Ah	;
		db  10h	;
aDAsDePermanenc	db ' d>as de permanencia en {'
		db  10h	;
		db    0	;
		db 0FFh	; �
aYNoTienePodere	db 'y no tiene poderes m^gicos.'
		db 0FFh	; �
aYTienePropieda	db 'y tiene propiedades de portal.'
		db 0FFh	; �
aPeroProtvgeteB	db 'pero prot�gete bien porque su valor real se har^ evidente.'
		db 0FFh	; �
aSuVerdaderoVal	db 'su verdadero valor est^ en su predicci<n.'
		db 0FFh	; �
aDebesMantenerE	db 'debes mantener este libro en sitio seguro, �su poder te servir^ '
		db 'despu�s!'
		db 0FFh	; �
aBvbeloParaCura	db 'b�belo para curar tus heridas.'
		db 0FFh	; �
		db    0	;
aEstDebajoDeMiT	db 'Est^ debajo de mi Templo. La entrada est^ limitada a miembros de '
		db 'alto rango del Templo.  A menos que seas una Valkiria con una '
		db 'llave; entonces, puedes entrar por los pasajes desde el Este del '
		db 'Templo.'
		db 0FFh	; �
aEsaEsLaLlaveQu	db 'Esa es la llave que utilizan las Valkirias para entrar en Valhalla.'
		db 0FFh	; �
aDemasiadoCalie	db 'demasiado caliente'
		db 0FFh	; �
aEstAtascado	db 'est^ atascado'
		db 0FFh	; �
aDemasiadoPesad	db 'demasiado pesado'
		db 0FFh	; �
aCerraduraBloqu	db 'cerradura bloqueada'
		db 0FFh	; �
aPcerradoConLla	db '�cerrado con llave!'
		db 0FFh	; �
aPuertaDeSeguri	db 'puerta de seguridad'
		db 0FFh	; �
aCerrado	db '[[[    CERRADO'
		db 0FFh	; �
aTuSentenciaEst	db 'Tu sentencia est^ lista.'
		db 0FFh	; �
aTienesDemasiad	db 'tienes demasiado que llevar'
		db 0FFh	; �
DIAGNOSE	db 'te ofrecemos un chequeo m�dico completo de tus malestares y una '
		db 'opci<n para una cura[[ vayamos a ver al sanador......'
		db 0FFh	; �
aNosSentimosOrg	db 'nos sentimos orgullosos de nuestras valoraciones y tasaciones - '
		db 's<lo necesitamos echar un vistazo a tu objeto de arte o joyas'
		db 0FFh	; �
aNecesitasTener	db 'necesitas tener algo en tu mano para  para que lo miremos '
		db 0FFh	; �
T_EVALUATE	db 'tu{'
		db    1	;
EV_OBNO		db    0	;
aVale		db ' vale }'
		db    2	;
aIGA		db  69h	; i
		db 0D4h	; �
		db  67h	; g
		db  20h	;
		db  7Bh	; {
		db  41h	; A
EV_OBPROP	db    0	;
		db 0FFh	; �
T_NOFORGER	db 'se debe a un error en sus papeles de identidad de lo contrario el '
		db 'falsificador se comprometer^ por alg\n tiempo'
		db 0FFh	; �
T_FORGER	db '[Duplicar� la pir^mide de metal si me la alcanzas.'
		db 0FFh	; �
T_FORGER2	db '[Hum, �un buen desaf>o! Pero puedo copiarlo[[ dej^melo a m> y te '
		db 'llamar� ma~ana.'
		db 0FFh	; �
T_TRAINING	db 'Te ofrecemos un amplio curso de formaci<n de armas.[[Para mejorar '
		db 'tus habilidades con las armas a {C',0
aTeCostar50g	db ' te costar^ 50g'
		db 0FFh	; �
T_TRAINING2	db 'Aqu> no hay nadie cualificado para ense~arte el quinto Dan.'
		db 0FFh	; �
aPrimerDan_	db 'primer Dan.'
		db 0FFh	; �
aSegundoDan	db 'segundo Dan'
		db 0FFh	; �
aTercerDan	db 'tercer Dan'
		db 0FFh	; �
aCuartoDan	db 'cuarto Dan'
		db 0FFh	; �
		db    0	;
HI		db 'hola'
		db 0FFh	; �
aGemas		db 'gemas'
		db 0FFh	; �
aEspecias	db 'especias'
		db 0FFh	; �
aPigmentos	db 'pigmentos'
		db 0FFh	; �
aMineral	db 'mineral'
		db 0FFh	; �
aBrea		db 'brea'
		db 0FFh	; �
aPieles		db 'pieles'
		db 0FFh	; �
		db    0	;
aOnzas		db 'onzas'
		db 0FFh	; �
aLibras		db 'libras'
		db 0FFh	; �
aVasijas	db 'vasijas'
		db 0FFh	; �
aSacos		db 'sacos'
		db 0FFh	; �
aBotellas	db 'botellas'
		db 0FFh	; �
aPellejos	db 'pellejos'
		db 0FFh	; �
		db    0	;
aOnza		db '/onza'
		db 0FFh	; �
aLibra		db '/libra'
		db 0FFh	; �
aVasija		db '/vasija'
		db 0FFh	; �
aSaco		db '/saco'
		db 0FFh	; �
aBotella	db '/botella'
		db 0FFh	; �
aPellejo	db '/pellejo'
		db 0FFh	; �
		db    0	;
COMMTRADE0	db ' gemas:[[En almac�n[      }'
		db    2	;
		db  4Eh	; N
		db 0AAh	; �
aOnzasCompraA	db ' onzas[[  compra a }'
		db    2	;
		db  52h	; R
		db 0AAh	; �
aGOzVendeA	db ' g/oz[  vende a  }'
		db    2	;
		db  56h	; V
		db 0AAh	; �
aGOzTienes	db ' g/oz[[  Tienes }'
		db    2	;
		db  5Ah	; Z
		db 0AAh	; �
aOnzas_0	db ' onzas'
		db 0FFh	; �
aEspeciasEnAlma	db ' especias :[[En almac�n  }'
		db    2	;
		db  4Eh	; N
		db 0AAh	; �
aLbsCompraA	db ' lbs[[  compra a }'
		db    2	;
		db  52h	; R
		db 0AAh	; �
aGLbVendeA	db ' g/lb[  vende a  }'
		db    2	;
		db  56h	; V
		db 0AAh	; �
aGLbTienes	db ' g/lb[[  Tienes }'
		db    2	;
		db  5Ah	; Z
		db 0AAh	; �
aLibras_0	db ' libras'
		db 0FFh	; �
aPigmentosEnAlm	db ' pigmentos :[[En almac�n  }'
		db    2	;
aNkPtsCompraA	db 'N� pts[[  compra a }'
		db    2	;
aRkGPtVendeA	db 'R� g/pt[  vende a  }'
		db    2	;
aVkGPtTienes	db 'V� g/pt[[  Tienes }'
		db    2	;
aZkPts		db 'Z� pts'
		db 0FFh	; �
aMineralEnAlmac	db ' mineral:[[En almac�n[        }'
		db    2	;
aNkCwtsCompraA	db 'N� cwts[[ compra a }'
		db    2	;
aRkGCwtVendeA	db 'R� g/cwt[ vende a  }'
		db    2	;
aVkGCwtTienes	db 'V� g/cwt[[  Tienes }'
		db    2	;
aZkCwts		db 'Z� cwts'
		db 0FFh	; �
aPielesEnAlmacv	db ' pieles:[[En almac�n[       }'
		db    2	;
aNkPielesCompra	db 'N� pieles[[compra a }'
		db    2	;
aRkGPielVendeA	db 'R� g/piel[vende a  }'
		db    2	;
aVkGPielTienes	db 'V� g/piel[[  Tienes }'
		db    2	;
aZkPieles	db 'Z� pieles'
		db 0FFh	; �
aBreaEnAlmacvn	db ' brea :[[En almac�n[       }'
		db    2	;
aNkBotellasComp	db 'N� botellas[[  compra a }'
		db    2	;
aRkGBotVendeA	db 'R� g/bot[  vende a  }'
		db    2	;
aVkGBotTienes	db 'V� g/bot[[  Tienes }'
		db    2	;
aZkBotellas	db 'Z� botellas'
		db 0FFh	; �
OBJDESC		db '[[[  {'
		db    1	;
OBJD		db    0	;
aPrecio		db '[  precio: }'
		db    2	;
aDkgComprar?	db 'd�g[[  Comprar ?'
		db 0FFh	; �
aRdeseasVenderU	db '�Deseas vender un objeto?'
		db 0FFh	; �
aRvenderCual?	db '�Vender cual?'
		db 0FFh	; �
NONETOSELL	db 'No tienes ning\n objeto para vender'
		db 0FFh	; �
GIVEYOU		db '[[[ Te dar� }'
		db    2	;
aLkgPorTu	db 'l�g por tu {'
		db    1	;
LLISTNO		db    0	;
		db 0FFh	; �
ALLCOMMS	db '     Gemas[[     Especias[[     Pigmentos[[     Mineral[[     '
		db 'Piel[[     Brea'
		db 0FFh	; �
MEALTEXT	db '[[[[[{'
		db  13h	;
MEALN		db    0	;
aPrecio_0	db '[ precio: }'
		db    2	;
aMGRpides?	db '��g[[ �Pides?'
		db 0FFh	; �
aHuevosDeDragNC	db 'huevos de drag<n cocidos, muy ricos...y calientes'
		db 0FFh	; �
aEstofadoDeCClo	db 'estofado de c>clope'
		db 0FFh	; �
aCerebrosDeZomb	db 'cerebros de zombi. Muy apetitosos si tienes cerebro.'
		db 0FFh	; �
aPastelDeMinota	db 'pastel de minotauro'
		db 0FFh	; �
aCalamaresSalte	db 'calamares salteados'
		db 0FFh	; �
aBichoburguer_E	db 'bichoburguer. Est^ muy, muy fresca.'
		db 0FFh	; �
aMedusaALaBoloE	db 'medusa a la bolo~esa'
		db 0FFh	; �
aPastelDeMurciv	db 'pastel de murci�lago'
		db 0FFh	; �
aHidromiel	db 'hidromiel'
		db 0FFh	; �
aCerveza	db 'cerveza'
		db 0FFh	; �
aGYT		db 'G y T'
		db 0FFh	; �
aSangreDeBuey	db 'sangre de buey'
		db 0FFh	; �
		db    0	;
aMalnutriciN	db 'malnutrici<n '
		db 0FFh	; �
aIndigestiN	db 'indigesti<n '
		db 0FFh	; �
aDeshidrataciN	db 'deshidrataci<n'
		db 0FFh	; �
aAgotamiento	db 'agotamiento'
		db 0FFh	; �
aHeridasDeComba	db 'heridas de combate '
		db 0FFh	; �
aAbatimiento	db 'abatimiento'
		db 0FFh	; �
aDebilidad	db 'debilidad'
		db 0FFh	; �
aDolores	db 'dolores '
		db 0FFh	; �
aPutrefacciN	db 'putrefacci<n '
		db 0FFh	; �
aInfecciN	db 'infecci<n'
		db 0FFh	; �
aVampirismo	db 'vampirismo'
		db 0FFh	; �
aLicantropA	db 'licantrop>a '
		db 0FFh	; �
aAlcoholismo	db 'alcoholismo '
		db 0FFh	; �
aEnvenenamiento	db 'envenenamiento leve '
		db 0FFh	; �
aEnvenenamien_0	db 'envenenamiento grave '
		db 0FFh	; �
aPosesiNPorUnEs	db 'posesi<n por un esp>ritu extra~o '
		db 0FFh	; �
		db    0	;
YOUHAVE		db 'Tienes '
		db 0FFh	; �
NOAILMENTS	db 'falta de alimentos'
		db 0FFh	; �
NOTGOOD		db 'los pron<sticos no son buenos en absoluto'
		db 0FFh	; �
T_CURE		db '    la cura costar^ }'
		db    2	;
aVkg		db '��g'
		db 0FFh	; �
T_INJURED	db 'Excesivas heridas en combates te han tra>do a mi puerta.'
		db 0FFh	; �
T_NOHEALTH	db 'Tu mala salud te ha tra>do al umbral de mi puerta.'
		db 0FFh	; �
T_USEINSURANCE	db 'Tu Concilio Divino ha intercecido e invoca la ley de la dualidad '
		db 'espiritual, vuelves al plano mortal.'
		db 0FFh	; �
T_EMPTYHAND	db 'Tu mano est^ vac>a'
		db 0FFh	; �
T_EATOBJ	db 'comer {'
		db    1	;
T_EATOBJNO	db    0	;
		db 0FFh	; �
T_DNKOBJ	db 'beber {'
		db    1	;
T_DNKOBJNO	db    0	;
		db 0FFh	; �
T_USEOBJ	db 'usar {'
		db    1	;
T_USEOBJNO	db    0	;
		db 0FFh	; �
T_READOBJ	db '{'
		db    1	;
T_READOBJNO	db    0	;
aLee@		db ' lee:  {@',0
		db 0FFh	; �
T_USELESS	db 'in\til'
		db 0FFh	; �
T_NEEDBOTTLE	db 'necesita una botella'
		db 0FFh	; �
T_WEAPON	db 'Utiliza las armas en combate'
		db 0FFh	; �
OBJECTTEXTS	db 'el consejo de cinco a nueve son siete hasta tres luego dos son '
		db 'seis o cinco por uno'
		db 0FFh	; �
aHeIdoATomarUna	db 'he ido a tomar una cerveza al caballo de mar  la llave est^ en la '
		db 'puerta cercana   - Lamont'
		db 0FFh	; �
aELENCANTODELAS	db 'E l   e n c a n t o   d e   l a   S e m i < t i c a'
		db 0FFh	; �
aCuidadoConElAh	db 'cuidado con el ahogado'
		db 0FFh	; �
aLaVerdadEsUnHe	db 'LA VERDAD ES UN HECHO'
		db 0FFh	; �
aPergaminoDeBen	db 'pergamino de bendecir portal'
		db 0FFh	; �
aPociNDeJuicio	db 'Poci<n de Juicio'
		db 0FFh	; �
aCertificadoDeL	db 'certificado de la muerte de Hoder'
		db 0FFh	; �
aPergaminoDeSud	db 'pergamino de Sudri'
		db 0FFh	; �
aPergaminoDeAus	db 'pergamino de Austri'
		db 0FFh	; �
aPergaminoDeNor	db 'pergamino de Nordri'
		db 0FFh	; �
aPergaminoDeWes	db 'pergamino de Westri'
		db 0FFh	; �
		db    0	;
aPaQuienPuedaIn	db '�A quien pueda interesar, el ingrediente clave para el ant>doto '
		db 'UB ha desaparecido! El extracto vital viene del espantoso '
		db 'murci�lago rojo; la primera persona en volver aqu> con un '
		db 'esp�cimen vivo podr^ tener nuestra \ltima botella de ant>doto UB.'
		db 0FFh	; �
a1DispararAlVam	db '1) disparar al vampiro   2) arrojar  3) si pierdes - corre todo '
		db 'lo que puedas'
		db 0FFh	; �
aPlanosDelGremi	db 'Planos del Gremio de los Ladrones'
		db 0FFh	; �
aClaveParaValha	db 'Clave para Valhalla'
		db 0FFh	; �
aPergaminoMGico	db 'Pergamino m^gico de fuerza'
		db 0FFh	; �
aEnigmaDeLaTemp	db 'Enigma de la Tempestad - parte 1   Con la espaldas a las '
		db 'serpientes y los pies en el suelo   Anda al Este hasta que no '
		db 'puedas m^s   Cruza la puerta al noroeste, y despu�s bajo el '
		db 'vest>bulo   Encontrar^s el segundo pergamino'
		db 0FFh	; �
aEnigmaDeLaTe_0	db 'Enigma de la Tempestad - parte 2   Cruza cerca de la caverna, '
		db 'anda r^pidamente   Atenci<n, hijos de Arachne   A trav�s de la '
		db 'puerta de ladrillos al cuadrado rocoso   Mira al norte, despu�s '
		db 'utiliza este pergamino'
		db 0FFh	; �
aEnElVestBuloDe	db 'En el Vest>bulo de la mesa lejana est^ la Varita de Hermod. El '
		db 'suelo del vest>bulo tiene huecos ocultos para proteger la Varita. '
		db 'El camino para lograr su poder es seguir el signo del culto de '
		db 'Odin.'
		db 0FFh	; �
aSelloDeAprobac	db 'Sello de aprobaci<n de Greyfell'
		db 0FFh	; �
aEntraALaTorreD	db 'Entra a la torre del Castillo y roba la urna de piedra del patio '
		db 'del Castillo. Ll�vala al Gremio de Mercenarios y col<cala en la '
		db 'mesa de la Arena.'
		db 0FFh	; �
aGuardaLaLlave	db 'guarda la llave'
		db 0FFh	; �
aElTraidorDelCo	db 'El traidor del concilio es Cadby el Necesitado. Debe morir '
		db 'inmediatamente.    S<lo el traidor debe morir - seguiremos siendo '
		db 'leales al concilio.'
		db 0FFh	; �
aEstosRarosEnan	db 'Estos raros enanos trolls rojos se enfrentan a la extinci<n en lo '
		db 'salvaje debido a que son la dieta de la salvaje Lamia. Para m^s '
		db 'informaci<n mira nuestros archivos de Lamia en el escritorio'
		db 0FFh	; �
aLamiasDeMittel	db 'Lamias de Mitteldorf de Jane'
		db 0FFh	; �
aLaHermandadDeL	db 'La Hermandad de Loki. Pergamino de n\mero de orden 74612.   Para '
		db 'encontrar y destruir la piel de halc<n de Freya - asigna a Morgan '
		db 'Ratnibbler.'
		db 0FFh	; �
aElixirDeLaVida	db 'Elixir de la Vida'
		db 0FFh	; �
aArtCulosDeLosM	db 'Art>culos de los miembros del IoZ'
		db 0FFh	; �
aMiraALosJugado	db 'Mira a los jugadores, presta atenci<n a las palabras,    '
		db 'Recu�rdalas bien,    Porque lo que busques constituir^    La '
		db '\ltima parte del hechizo.    Tres torretas del Castillo son,    '
		db 'La respuesta a tu b\squeda.    Si necesitas gas ve al noreste,    '
		db 'Si l>quido al sur y al oeste,    O si la sustancia que buscas     '
		db 'es s<lida, dura como la piedra,    A la torre noroeste debes ir.  '
		db '  No estar^s s<lo.'
		db 0FFh	; �
aLaSalidaDeLaCi	db 'La salida de la Ciudad Prohibida para los que no deseen entrar en '
		db 'las largas mazmorras est^ prohibida a los miembros del Gremio de '
		db 'Ladrones. El camino est^ marcado por el \nico ^rbol que crece en '
		db 'esta Ciudad.'
		db 0FFh	; �
aConvertirteEnL	db 'Convertirte en l>der de nuestro grupo no es la finalidad de tu '
		db '�xito.   Debes reunir las Cuatro Calaveras para equilibrar el '
		db 'poder de esta ciudad. Las otras tres calaveras est^n guardadas en '
		db 'otras sociedades de Mitteldorf - una en cada tipo.'
		db 0FFh	; �
aLaSegundaCalav	db 'La segunda calavera es tuya. En tus viajes debes tambi�n '
		db 'encontrar la Esfera de Visi<n, un objeto muy valioso, que te '
		db 'dirigir^ una vez que tengas las Cuatro Calaveras.'
		db 0FFh	; �
aSLoUnaCalavera	db 'S<lo una calavera m^s debes recoger,   y el Libro de Evocaciones '
		db '- un esp>ritu que resucitar.'
		db 0FFh	; �
		db  78h	; x
		db 0FFh	; �
aUtilizaElHechi	db 'Utiliza el hechizo de este libro s<lo en la Cripta Real.   Y '
		db 'entonces, s<lo a medianoche, aseg\rate de haber satisfecho la '
		db 'predicci<n de la Esfera de Visi<n, que debes tener contigo. '
		db 'Atenci<n - el que env>e el hechizo debe estar protegido por el '
		db 'Amuleto de Defensa, que a su vez estar^ protegido por habitantes '
		db 'cautivos del agua.'
		db 0FFh	; �
aPociNDeCuraciN	db 'poci<n de curaci<n'
		db 0FFh	; �
		db    0	;
aLaPuertaDelCas	db ' la puerta del Castillo'
		db 0FFh	; �
aElRecinto	db ' el recinto'
		db 0FFh	; �
aLaPlazaDelMerc	db ' la Plaza del Mercado'
		db 0FFh	; �
aLosTerrenosDel	db ' los terrenos del Castillo'
		db 0FFh	; �
aElPradoDelCast	db ' el prado del Castillo'
		db 0FFh	; �
aLosTerrenosD_0	db ' los terrenos del Templo'
		db 0FFh	; �
aElCRculoDePied	db ' el C>rculo de Piedra'
		db 0FFh	; �
aPlazaDelPalaci	db ' plaza del Palacio de Justicia'
		db 0FFh	; �
aPlazaOdN	db ' Plaza Od>n'
		db 0FFh	; �
aLaPlazaDeLosMe	db ' la plaza de los Mercenarios'
		db 0FFh	; �
aLaPuertaDeLaCi	db ' la Puerta de la Ciudad'
		db 0FFh	; �
aAccesoAlTemplo	db ' acceso al Templo'
		db 0FFh	; �
aElEmbarcadero	db ' el Embarcadero'
		db 0FFh	; �
aPlazaBrimer	db ' Plaza Brimer'
		db 0FFh	; �
aPlazaFreya	db ' Plaza Freya'
		db 0FFh	; �
aHuertoDelZapat	db ' huerto del zapatero'
		db 0FFh	; �
aElParque	db ' el parque'
		db 0FFh	; �
aLaPiedraSolita	db ' la piedra Solitaria'
		db 0FFh	; �
aLosRoblesGemel	db ' Los Robles Gemelos'
		db 0FFh	; �
aElGhetto	db ' el Ghetto'
		db 0FFh	; �
aBulevarDelCast	db ' Bulevar del Castillo'
		db 0FFh	; �
aNidavellir	db ' Nidavellir'
		db 0FFh	; �
aPlazaElvidner	db ' Plaza Elvidner'
		db 0FFh	; �
aLosGinnels	db ' Los Ginnels'
		db 0FFh	; �
aElWidening	db ' El Widening'
		db 0FFh	; �
aMuroDelCastill	db ' Muro del Castillo'
		db 0FFh	; �
aLadoEste	db ' Lado Este'
		db 0FFh	; �
aPlazaCoachmans	db ' Plaza Coachmans'
		db 0FFh	; �
aElSepulcro	db ' el Sepulcro'
		db 0FFh	; �
aCruceDeNott	db ' Cruce de Nott'
		db 0FFh	; �
aPlazaDeLaTorre	db ' Plaza de la Torre'
		db 0FFh	; �
aCaminoOeste	db ' Camino Oeste'
		db 0FFh	; �
aPradoDeLasMont	db 'prado de las monta~as'
		db 0FFh	; �
aLosTerritorios	db 'los territorios de la ciudad nueva'
		db 0FFh	; �
aElBarrioDeLosO	db 'el Barrio de los Ocupas'
		db 0FFh	; �
aElDistritoDelC	db 'el distrito del Concilio de los Cinco'
		db 0FFh	; �
aPradoDeLasBruj	db 'Prado de las Brujas'
		db 0FFh	; �
aElDistritoDeLa	db 'el distrito de la Hermandad Oscura'
		db 0FFh	; �
aLaParroquiaDel	db 'la parroquia del Templo de Aegir'
		db 0FFh	; �
aTierrasTorment	db 'tierras tormentosas'
		db 0FFh	; �
aNidavellir_0	db 'Nidavellir'
		db 0FFh	; �
		db    0	;
aLaSalaDeJuegos	db 'la sala de juegos est^ cerrada hoy[[nos advirtieron que la '
		db 'milicia puede atacar'
		db 0FFh	; �
aLibre		db 'libre'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db 0FFh	; �
		db  20h	;
		db  7Dh	; }
		db    2	;
		db 0DFh	; �
		db  6Bh	; k
		db  3Ah	; :
		db  7Dh	; }
		db    2	;
		db 0E1h	; �
		db  6Bh	; k
		db 0FFh	; �
aCargarJuego	db 'cargar juego'
		db 0FFh	; �
aGrabarJuego	db 'grabar juego'
		db 0FFh	; �
aSobreescribirJ	db '[  sobreescribir juego[ grabado en esa posici<n }'
		db    2	;
		db 0E3h	; �
		db  6Bh	; k
		db 0FFh	; �
aTengoAlgunosAs	db 'Tengo algunos asuntos en'
		db 0FFh	; �
aEstoyBuscando	db 'Estoy buscando'
		db 0FFh	; �
aEstoyIntentand	db 'Estoy intentando encontrar'
		db 0FFh	; �
aEstoyEnCaminoD	db 'Estoy en camino de'
		db 0FFh	; �
aVoyA		db 'Voy a'
		db 0FFh	; �
		db  20h	;
		db 0FFh	; �
aHacia		db 'Hacia'
		db 0FFh	; �
aPensvQueMeDarA	db 'Pens� que me dar>a un paseo por'
		db 0FFh	; �
aNoEsAsuntoTuyo	db 'no es asunto tuyo'
		db 0FFh	; �
aPpierdes	db '�Pierdes!'
		db 0FFh	; �
aGanas1g	db 'Ganas 1g'
		db 0FFh	; �
aGanas2g	db 'Ganas 2g'
		db 0FFh	; �
aGanas3g	db 'Ganas 3g'
		db 0FFh	; �
aGanas5g	db 'Ganas 5g'
		db 0FFh	; �
aGanas10g	db 'Ganas 10g'
		db 0FFh	; �
aSelecciona	db 'selecciona'
		db 0FFh	; �
aGrrrrrrrRRR	db 'Grrrrrrr r r   r'
		db 0FFh	; �
aRcurar?	db ' �Curar ?'
		db 0FFh	; �
aLibreRecogeUn	db '  LIBRE:[[Recoge un {'
		db    1	;
		db    0	;
aDe		db ' de {'
		db  1Dh	;
		db    0	;
a_LlvvaloA	db '.[ Ll�valo a {'
		db  1Dh	;
		db    0	;
a_Pago		db '.[[ Pago: }'
		db    2	;
		db  0Bh	;
aG_		db '�g.'
		db 0FFh	; �
aGraciasPorEntr	db '[[Gracias por entregar el {'
		db    1	;
		db    0	;
aTomaTus	db '[Toma tus }'
		db    2	;
		db  0Bh	;
aG_0		db '�g'
		db 0FFh	; �
aRaceptar?	db '�Aceptar?'
		db 0FFh	; �
aCalculando	db 'calculando'
		db 0FFh	; �
aSLoPuedesConta	db '[[S<lo puedes contar y volver a contar las Leyendas del Valor en '
		db 'las Tabernas, Hoteles y Posadas.'
		db 0FFh	; �
aLegendsOfValou	db '[    Legends of[[       Valour[[   was cracked[[      by AVERNO[[ '
		db '       in 1993[[                           '
		db 0FFh	; �
aVolverAlMenPri	db '[[  Volver al men\         principal[[ �ESTAS SEGURO?'
		db 0FFh	; �
aLaCabezaDelDra	db 'la Cabeza del Drag<n'
		db 0FFh	; �
aElEscudoDeLo_0	db 'el Escudo de los Trolls'
		db 0FFh	; �
aElAhorcado	db 'el Ahorcado'
		db 0FFh	; �
aLaJarraDeCerve	db 'la Jarra de Cerveza'
		db 0FFh	; �
aLaCucarachaYEl	db 'la Cucaracha y el Jinete'
		db 0FFh	; �
aLaTabernaDelCa	db 'La Taberna del Caballo de Mar'
		db 0FFh	; �
aElDescansoDeLa	db 'el Descanso de las Sirenas'
		db 0FFh	; �
aLasSerpientes	db 'las Serpientes'
		db 0FFh	; �
aElDescansoDeLo	db 'el Descanso de los Desamparados'
		db 0FFh	; �
aLaPosadaDeLosH	db 'La Posada de los Hombres Muertos'
		db 0FFh	; �
aElHoyoDeLaPulg	db 'el Hoyo de la Pulga'
		db 0FFh	; �
aLaPosadaDelVia	db 'la Posada del Viajero'
		db 0FFh	; �
aLasPosadas	db 'las Posadas'
		db 0FFh	; �
aElReposoDeLosE	db 'el Reposo de los Ermita~os'
		db 0FFh	; �
aLaTabernaDeLos	db 'La taberna de los Thespians'
		db 0FFh	; �
aLaPensiNDeLosM	db 'la pensi<n de los marineros'
		db 0FFh	; �
aLaArmerA	db 'la armer>a'
		db 0FFh	; �
aAlmacenesDeHot	db 'almacenes de Hotch'
		db 0FFh	; �
aProvisionesSki	db 'provisiones Skiolds'
		db 0FFh	; �
aSuministrosDeP	db 'suministros de Patch'
		db 0FFh	; �
aLaCasaDeAduana	db 'la casa de Aduanas'
		db 0FFh	; �
aElLugarDeThora	db 'el lugar de Thora'
		db 0FFh	; �
aElAlmacvnDelMe	db 'el almac�n del Mercenario'
		db 0FFh	; �
aTienda8	db 'tienda8'
		db 0FFh	; �
aLaTiendaDelica	db 'la tienda Delicatessen de Copestake'
		db 0FFh	; �
aLosPrestamista	db 'los prestamistas'
		db 0FFh	; �
aAlmacenesDeLaP	db 'almacenes de la Prisi<n'
		db 0FFh	; �
aTienda12	db 'tienda12'
		db 0FFh	; �
aImperioDeOlaf	db 'imperio de Olaf'
		db 0FFh	; �
aProveedorDeBar	db 'proveedor de barcos'
		db 0FFh	; �
aTienda15	db 'tienda15'
		db 0FFh	; �
		db    0	;
aTeDenunciarvAL	db 'Te denunciar� a las autoridades'
		db 0FFh	; �
aRquieresCompra	db '�Quieres comprar alg\n seguro ?'
		db 0FFh	; �
aTengoUnaExcele	db 'Tengo una excelente oferta en {?',0
		db 0FFh	; �
aRpagar?	db '�Pagar?'
		db 0FFh	; �
aCNticosDeResur	db 'c^nticos de resurrecci<n por s<lo 20g cada uno'
		db 0FFh	; �
aPlantasDeReenc	db 'plantas de reencarnaci<n por 25g'
		db 0FFh	; �
aGrNulosDeTrans	db 'gr^nulos de transmigraci<n del alma    una ganga por 30g'
		db 0FFh	; �
aPergaminosDeMe	db 'pergaminos de metemsicosis por 40g    pru�balos    te encantar^n  '
		db ' Te devolver� personalmente tu dinero si te fallan'
		db 0FFh	; �
		db    0	;
aTeDirvLoQueSvP	db 'Te dir� lo que s� por }'
		db    1	;
		db  87h	; �
		db 0AAh	; �
		db  20h	;
		db  67h	; g
		db 0FFh	; �
		db  20h	;
		db  59h	; Y
		db  20h	;
		db  74h	; t
		db  5Ch	; \
		db  20h	;
		db  7Bh	; {
		db  1Eh	;
		db    0	;
		db  20h	;
		db  7Bh	; {
		db  1Fh	;
		db    0	;
		db 0FFh	; �
aMeRecuerdasA	db 'me recuerdas a'
		db 0FFh	; �
aMePareces	db 'me pareces'
		db 0FFh	; �
aHuelesComo	db 'hueles como'
		db 0FFh	; �
aVistiendoTiene	db 'vistiendo tienes el gusto de'
		db 0FFh	; �
aEresUnHijoDe	db 'eres un hijo de'
		db 0FFh	; �
aTienesElCerebr	db 'tienes el cerebro de'
		db 0FFh	; �
aActAsComo	db 'act\as como'
		db 0FFh	; �
aCaminasComo	db 'caminas como'
		db 0FFh	; �
aTuMadreFue	db 'tu madre fue'
		db 0FFh	; �
aTuCaraEsLaDe	db 'tu cara es la de'
		db 0FFh	; �
aEresComoUnGran	db 'eres como un grano en el trasero de'
		db 0FFh	; �
aEres		db 'eres'
		db 0FFh	; �
aRealmenteParec	db 'realmente pareces'
		db 0FFh	; �
aQuedarAsBienDe	db 'quedar>as bien de'
		db 0FFh	; �
aRtNoEras	db '�t\ no eras'
		db 0FFh	; �
aAntesHablarACo	db 'antes hablar>a con'
		db 0FFh	; �
		db    0	;
aUnHalflingDege	db 'un halfling degenerado'
		db 0FFh	; �
aUnApestosoGobl	db 'un apestoso goblin'
		db 0FFh	; �
aUnTentCuloDeCa	db 'un tent^culo de calamar'
		db 0FFh	; �
aUnTomateAplast	db 'un tomate aplastado'
		db 0FFh	; �
aLosExcrementos	db 'los excrementos de un escarabajo geri^trico'
		db 0FFh	; �
aUnPobreElfoImb	db 'un pobre elfo imb�cil'
		db 0FFh	; �
aElSobacoDeUnST	db 'el sobaco de un s^tiro'
		db 0FFh	; �
aUnEnanoDeLasCa	db 'un enano de las cavernas'
		db 0FFh	; �
aUnKoboldPTrido	db 'un kobold p\trido'
		db 0FFh	; �
aUnOgroPodrido	db 'un ogro podrido'
		db 0FFh	; �
aUnIdiota	db 'un idiota'
		db 0FFh	; �
aUnaPCimaMaloli	db 'una p<cima maloliente'
		db 0FFh	; �
aUnaEscupideraO	db 'una escupidera oxidada'
		db 0FFh	; �
aBarroPantanoso	db 'barro pantanoso'
		db 0FFh	; �
aUnaLlagaPTrida	db 'una llaga p\trida'
		db 0FFh	; �
aUnPobreElfoI_0	db 'un pobre elfo imb�cil'
		db 0FFh	; �
		db    0	;
aAventura	db 'aventura'
		db 0FFh	; �
aMisiN		db 'misi<n'
		db 0FFh	; �
aT		db 'tarea'
		db 0FFh	; �
aPrueba		db 'prueba'
		db 0FFh	; �
		db    0	;
aRobasteAlgN	db 'robaste alg\n {'
		db    1	;
		db    0	;
		db 0FFh	; �
aPnadaQueRobar	db '�nada que robar!'
		db 0FFh	; �
aElTemploDeFrey	db 'el Templo de Freya s<lo ordena a mujeres, as> que �pi�rdete, '
		db 'chauvinista opresor!'
		db 0FFh	; �
aNoHacemosNegoc	db 'No hacemos negocios con socios de  { ',0
		db 0FFh	; �
aLos		db 'Los { ',0
aBienvenidosTod	db ' bienvenidos todos los novicios potenciales [[ necesit^is ritos '
		db 'de iniciaci<n ?'
		db 0FFh	; �
aRestSSeguroDeQ	db '�Est^s seguro de que quieres renuciar de la { ',0
		db 0FFh	; �
aParaConvertirt	db 'para convertirte en {',0
		db    0	;
aEnEl		db ' en el { ',0
aDebesPagar	db ' debes pagar {',0
		db    0	;
aYCompletarUna	db ' y completar una {!',0
a_RaceptasElRet	db '.[[ �aceptas el reto?'
		db 0FFh	; �
aTu		db 'tu{!',0
aEs		db ' es {',0
		db    0	;
		db 0FFh	; �
aNoMS		db 'no m^s {!',0
aSPara		db 's para }'
		db    1	;
aHDAs		db 'H� d>as'
		db 0FFh	; �
aNoHayMSPruebas	db 'no hay m^s pruebas hasta ma~ana'
		db 0FFh	; �
aLoSientoPeroTu	db 'Lo siento, pero tu ya eres el {',0
		db    4	;
aDeLa		db ' de la { ',0
		db 0FFh	; �
aHasCometidoElP	db ' Has cometido el peor de los cr>menes contra la Hermandad al '
		db 'traer dentro de estos edificios el Sello Real de Jocasta'
		db 0FFh	; �
aTienesElSelloR	db 'tienes el Sello Real de la Reina Jocasta[[ deber>as saber muy '
		db 'bien d<nde llevas eso'
		db 0FFh	; �
aTienesLaGemaRe	db 'tienes la Gema Real del Rey Farley'
		db 0FFh	; �
aArribaEnLaTorr	db 'arriba en la torre del Castillo'
		db 0FFh	; �
aEnLosJoyerosDe	db 'en los joyeros detr^s de la Jarra de Cerveza'
		db 0FFh	; �
aTienesUnaMScar	db 'Tienes una m^scara encantada. Cuando la utilizas oculta tu '
		db 'apariencia, los feos se vuelven guapos y los atractivos parecen '
		db 'horribles.[Util>zala, tendr^s un aspecto radiante'
		db 0FFh	; �
aYaNoEresBienve	db '[ ya no eres bienvenido aqu>[[   VETE....'
		db 0FFh	; �
aANNoEresBienve	db '[ a\n no eres bienvenido aqu>'
		db 0FFh	; �
aHasCompletadoC	db ' Has completado con �xito tus pruebas y eres ascendido a {',0
		db    0	;
aEnEl_0		db ' en el { ',0
		db 0FFh	; �
aComoLDerDe	db ' como l>der de { ',0
aTienesLibreAcc	db ' tienes libre acceso a todas las habitaciones y c^maras.      Tu '
		db 'nueva posici<n es honorable, y como tal no recibes ning\n sueldo, '
		db 'aunque mientras ocupes un cargo no necesitas pagar alquiler en tu '
		db 'hotel.'
		db 0FFh	; �
		db 0FFh	; �
aHasRebasadoTuT	db ' Has rebasado tu tiempo l>mite. [[Has fracasado en tu misi<n.'
		db 0FFh	; �
aTuIncreBleSala	db 'tu incre>ble salario como miembro del { ',0
aEs_0		db ' es }'
		db    2	;
aMGPorFavorCGel	db 'm�g[[por favor c<gelo'
		db 0FFh	; �
aAsistenteDeHec	db 'asistente de hechicero'
		db 0FFh	; �
aEscriba_1	db 'escriba'
		db 0FFh	; �
aHechicero	db 'hechicero'
		db 0FFh	; �
aMago_0		db 'mago'
		db 0FFh	; �
aMaestroDeMagos	db 'maestro de magos'
		db 0FFh	; �
		db 0FFh	; �
a28g		db '28g'
		db 0FFh	; �
a38g		db '38g'
		db 0FFh	; �
a35g		db '35g'
		db 0FFh	; �
a60g		db '60g'
		db 0FFh	; �
aTodoElDineroQu	db 'todo el dinero que tienes'
		db 0FFh	; �
		db    0	;
aRecobrarLaPoci	db 'recobrar la poci<n perdida de juicio[[ vuelve con la poci<n en '
		db 'dos d>as o tu tu misi<n habr^ fallado'
		db 0FFh	; �
aEncuentraAFors	db 'encuentra a Forseti, el patrono de los Asegeir y regresa aqu> con '
		db 'el pergamino de la verdad en 4 d>as'
		db 0FFh	; �
aRecuperaLaTabl	db 'recupera la tableta m>stica de la Tumba de las Momias tarda m^s '
		db 'de cinco d>as y habr^s fallado en tu misi<n.'
		db 0FFh	; �
aProfanaElSantu	db 'profana el santuario de Loki pintando el suelo con brea. Vuelve '
		db 'con tu cubo de brea vac>a en seis d>as y ser^s envidiado por tus '
		db 'compa~eros (y te convertir^s en mago).'
		db 0FFh	; �
aAbsorbeLaSabid	db 'absorbe la sabidur>a de los Doce tocando la copa Heligo. La copa '
		db 'es una de las tres que se guardan en las salas de arriba de '
		db 'nuestro gremio. [ Ten cuidado, ya que el contacto no adecuado con '
		db 'las copas significar^, de forma irrevocable, la muerte. [ La '
		db 'l^mpara guardada con las copas te iluminar^ en tu b\squeda para '
		db 'descubrir cu^l es la copa correcta.[[ S<lo tienes cinco d>as para '
		db 'lograr la sabidur>a y devolver la l^mpara.'
		db 0FFh	; �
		db    0	;
aMStico		db 'm>stico'
		db 0FFh	; �
aBrujo		db 'brujo'
		db 0FFh	; �
aHechicero_0	db 'hechicero'
		db 0FFh	; �
aMago_1		db 'mago'
		db 0FFh	; �
aMagoOscuro	db 'mago oscuro'
		db 0FFh	; �
		db 0FFh	; �
a5g		db '5g'
		db 0FFh	; �
a42g		db '42g'
		db 0FFh	; �
a30g		db '30g'
		db 0FFh	; �
a48g		db '48g'
		db 0FFh	; �
aTodoElDinero_0	db 'todo el dinero que llevas'
		db 0FFh	; �
		db    0	;
aLocalizaYConsi	db ' localiza y consigue el anillo de Andvari, tienes s<lo tres d>as '
		db 'para conseguirlo.'
		db 0FFh	; �
aEncuentraElLug	db 'encuentra el lugar donde crecen las hierbas hipn<ticas y vuelve '
		db 'con un ramo en tres d>as'
		db 0FFh	; �
aEncuentraLaGem	db 'encuentra la gema real del Rey Farley y vuelve en cuatro d>as[[si '
		db 'traes cualquier otra gema se acabar^ todo'
		db 0FFh	; �
aTraeAEsteGremi	db 'trae a este gremio el m^s preciado de los artefactos, '
		db 'Gambantein.[[S<lo tienes siete d>as.'
		db 0FFh	; �
aCogeElPergamin	db 'coge el pergamino de arriba del santuario de Loki. Realiza su '
		db 'rima con raz<n, y vuelve en siete d>as.'
		db 0FFh	; �
		db 0FFh	; �
		db    0	;
aInfante	db 'infante'
		db 0FFh	; �
aSoldado_0	db 'soldado'
		db 0FFh	; �
aArtillero	db 'artillero'
		db 0FFh	; �
aCapitN_0	db 'capit^n'
		db 0FFh	; �
aTemplario	db 'templario'
		db 0FFh	; �
		db 0FFh	; �
a24g		db '24g'
		db 0FFh	; �
a36g		db '36g'
		db 0FFh	; �
a45g		db '45g'
		db 0FFh	; �
a175g		db '175g'
		db 0FFh	; �
aTodoElDinero_1	db 'todo el dinero que llevas'
		db 0FFh	; �
		db    0	;
aRobaSecretamen	db 'roba secretamente de la armer>a el casco de bronce a tiempo para '
		db 'una ceremonia dentro de dos d>as. --La palabra clave es blueboar--'
		db 0FFh	; �
aEstEspecificad	db 'est^ especificado por Orlak el Guerrero, re\nete con �l en el '
		db 'Casino, cumple sus <rdenes y vuelve aqu> en tres d>as.'
		db 0FFh	; �
aRecogeUnaBotel	db 'recoge una botella de Ant>doto Universal contra Mordeduras de '
		db 'Bestias del Instituto de Zoolatr>a y vuelve antes de que se nos '
		db 'agoten las reservas en cinco d>as.'
		db 0FFh	; �
aAceptaElDesafO	db 'acepta el desaf>o del Gremio de los Mercenarios y convi�rtete en '
		db 'el Campe<n del Foso de la Muerte. Tienes una semana para volver '
		db 'con tus Laureles de Campe<n.'
		db 0FFh	; �
aTraeLaCabezaDe	db 'trae la cabeza de la gorgona en ocho d>as.'
		db 0FFh	; �
		db    0	;
aGuardaespaldas	db 'guardaespaldas aprend>z'
		db 0FFh	; �
aSoldadoDeFortu	db 'soldado de fortuna'
		db 0FFh	; �
aCazarrecompens	db 'cazarrecompensas'
		db 0FFh	; �
aMercenario	db 'mercenario'
		db 0FFh	; �
aMaestroDelGrem	db 'maestro del gremio'
		db 0FFh	; �
		db 0FFh	; �
a30g_0		db '30g'
		db 0FFh	; �
a40g		db '40g'
		db 0FFh	; �
a50g		db '50g'
		db 0FFh	; �
a190g		db '190g'
		db 0FFh	; �
aTodoElDinero_2	db 'todo el dinero que llevas'
		db 0FFh	; �
		db    0	;
aVeALaGuaridaDe	db 've a la guarida de los mercerarios al suroeste de la ciudad. '
		db 'Regoge un saco con los salarios, y tr^elo de vuelta aqu> en dos '
		db 'd>as'
		db 0FFh	; �
aRecobraElOjoDe	db 'recobra el `ojo de surt`. este es un artefacto de gran valor de '
		db 'los mercenarios y ha estado largo tiempo alejado de la santidad '
		db 'del gremio. Se necesita para los ritos de iniciaci<n en cuatro d>as'
		db 0FFh	; �
aMataAlTraidorE	db 'mata al traidor Eivak el Elfo. Ten cuidado, est^ protegido por la '
		db 'milicia. Vuelve con su argolla del cuello en cinco d>as'
		db 0FFh	; �
aTomaLaPlumaBla	db 'toma la pluma blanca y p<nla sobre la mesa en la sala de '
		db 'oficiales del Gremio de Hombres Armados.[Recoge la ballesta de la '
		db 'Armer>a para que te ayude en tu b\squeda.[Vuelve aqu> con la '
		db 'ballesta en cuatro d>as.'
		db 0FFh	; �
aSubeLaMoralDeN	db 'sube la moral de nuestros soldados. Est^n preparados para el d>a '
		db 'glorioso, pero rumores del n\mero Real sirven s<lo para disminuir '
		db 'su valor y esp>ritu. Ahora en nuestros hombres descansa su '
		db 'responsabilidad. [[Ve y encuentra el estandarte de Nidhug, que '
		db 'nosotros reuniremos a los hombres antes. [[Debes volver en una '
		db 'semana, ya que el gran d>a casi ha llegado.'
		db 0FFh	; �
		db    0	;
aMendigo_0	db 'mendigo'
		db 0FFh	; �
aRatero		db 'ratero'
		db 0FFh	; �
aProfanadorDeTu	db 'profanador de tumbas'
		db 0FFh	; �
aLadrN_0	db 'ladr<n'
		db 0FFh	; �
aPadrino	db 'padrino'
		db 0FFh	; �
		db 0FFh	; �
a20g		db '20g'
		db 0FFh	; �
a40g_0		db '40g'
		db 0FFh	; �
a30g_1		db '30g'
		db 0FFh	; �
a50g_0		db '50g'
		db 0FFh	; �
aTodoElDinero_3	db 'todo el dinero que llevas'
		db 0FFh	; �
		db    0	;
aEntraEnElTempl	db 'Entra en el Templo de Set y roba el cuenco de la colecta de la '
		db 'sala principal.[[ tienes dos d>as para volver.'
		db 0FFh	; �
aRobaLosImpuest	db 'roba los impuestos de un d>a a las autoridades [[vuelve con tu '
		db 'bot>n en tres d>as'
		db 0FFh	; �
aRBaleLosPlanos	db 'r<bale los planos de nuestro gremio al arquitecto.[[Vuelve en '
		db 'siete d>as.'
		db 0FFh	; �
aTrabajaParaGre	db 'trabaja para Greyfell el anarquista durante siete d>as y vuelve '
		db 'con su sello de aprobaci<n. Encu�ntrate con �l en el Ahorcado, '
		db 'pero aseg\rate de entrar a medianoche.'
		db 0FFh	; �
aRobaLaRocaEnjo	db 'roba la Roca Enjoyada de la Ciudad Prohibida.[[Para justificar '
		db 'nuestro m^ximo honor debes volver, no s<lo con tu premio, sino '
		db 'con el conocimiento del punto menos conocido de entrada a la '
		db 'Ciudad.[[ S<lo tienes una semana.'
		db 0FFh	; �
		db    0	;
aAgitador	db 'Agitador'
		db 0FFh	; �
aSilbador	db 'Silbador'
		db 0FFh	; �
aTriturador	db 'Triturador'
		db 0FFh	; �
aHuelguista	db 'Huelguista'
		db 0FFh	; �
aMaestroDelVene	db 'Maestro del Veneno'
		db 0FFh	; �
		db 0FFh	; �
a30g_2		db '30g'
		db 0FFh	; �
a35g_0		db '35g'
		db 0FFh	; �
a35g_1		db '35g'
		db 0FFh	; �
a60g_0		db '60g'
		db 0FFh	; �
a200g		db '200g'
		db 0FFh	; �
		db    0	;
aRecogeLaEsfera	db 'recoge la esfera sagrada de los joyeros detr^s de la Jarra de '
		db 'Cerveza y tr^ela en tres d>as'
		db 0FFh	; �
aConsiguePorTod	db 'Consigue por todos los medios, el frasco sagrado de la sangre de '
		db 'los Dioses. El frasco est^ reci�n repuesto por los embalsamadores '
		db 'y debe estar aqu> fresco, en 3 d>as'
		db 0FFh	; �
aPruebaTuValorE	db 'prueba tu valor enfrent^ndote al desaf>o del huevo de la '
		db 'serpiente.[[Vuelve en cuatro d>as con la Gema Real.'
		db 0FFh	; �
aEncuentraElYun	db 'encuentra el Yunque del Poder. Debes volver con �l en seis '
		db 'd>as.[Nuestras escrituras dicen que `el guardi^n del yunque '
		db 'controla el equilibrio del orden`.'
		db 0FFh	; �
aVuelveEnSieteD	db 'vuelve en siete d>as con el cascabel de la cola de la Lamia '
		db 'Jotunheim.[ Ten cuidado con las Lamias Vigrid y Niflheim, ya que '
		db 'el contacto con ellas - como con todas las Lamias - causa la '
		db 'muerte segura.[ Para que esta tarea merezca la pena del Maestro '
		db 'Venom, el Consejo ha decidido invalidar el seguro divino durante '
		db 'el tiempo que dure esta prueba.'
		db 0FFh	; �
		db    0	;
aNeFito		db 'ne<fito'
		db 0FFh	; �
aMago_2		db 'mago'
		db 0FFh	; �
aTeRgico	db 'te\rgico'
		db 0FFh	; �
aExorcistaDeEsp	db 'exorcista de esp>ritus'
		db 0FFh	; �
aSumoSacerdote	db 'sumo sacerdote'
		db 0FFh	; �
		db 0FFh	; �
a30g_3		db '30g'
		db 0FFh	; �
a33g		db '33g'
		db 0FFh	; �
a40g_1		db '40g'
		db 0FFh	; �
a54g		db '54g'
		db 0FFh	; �
a100g		db '100g'
		db 0FFh	; �
		db    0	;
aEntraEnGladshe	db 'entra en Gladsheim y recoge a Hugin el Cuervo [[tienes dos d>as'
		db 0FFh	; �
aProporcionaAlT	db 'proporciona al Templo un astrolabio antes de la luna nueva dentro '
		db 'de tres d>as'
		db 0FFh	; �
aAventRateEnLas	db 'avent\rate en las profundidades del legado de D�dalo y vuelve en '
		db 'cuatro d>as con un informe de sus secretos'
		db 0FFh	; �
aLocalizaYMataA	db 'localiza y mata a un c>clope.[[Debes volver con su ojo en siete '
		db 'd>as.'
		db 0FFh	; �
aRobaElPergamin	db 'roba el Pergamino de Ran del Templo pagano de Aegir. S<lo corre '
		db 'riesgos cuando los posibles iniciados aegireanos est�n pasando la '
		db 'prueba. Debes unirte secretamente al Templo y, una vez embarcado '
		db 'en su b\squeda, volver aqu> con el Pergamino. Tienes s<lo seis '
		db 'd>as para completar tu misi<n.'
		db 0FFh	; �
		db    0	;
aPresumida	db 'Presumida'
		db 0FFh	; �
aCoqueta	db 'Coqueta'
		db 0FFh	; �
aTentadora	db 'Tentadora'
		db 0FFh	; �
aSeductora	db 'Seductora'
		db 0FFh	; �
aSumaSacerdotis	db 'Suma Sacerdotisa'
		db 0FFh	; �
		db 0FFh	; �
a35g_2		db '35g'
		db 0FFh	; �
a10g		db '10g'
		db 0FFh	; �
a40g_2		db '40g'
		db 0FFh	; �
a60g_1		db '60g'
		db 0FFh	; �
aTodoElDinero_4	db 'todo el dinero que llevas'
		db 0FFh	; �
		db    0	;
aTraeElLibroSag	db 'trae el libro sagrado del escritorio dentro de dos d>as'
		db 0FFh	; �
aRecobraElDoloM	db 'recobra el >dolo moldeado por los Brisings con el oro robado por '
		db 'las Diosas. [[S<lo tienes  tres d>as para volver'
		db 0FFh	; �
aExploraLosPasa	db 'Explora los pasadizos que hay debajo de este Templo y localiza la '
		db 'ruta subterr^nea a nuestro santuario por el recinto[vuelve en '
		db 'cinco d>as'
		db 0FFh	; �
aVeDesdeAquAlFo	db 've desde aqu> al Foso de las Brujas; all> recoger^s un enigma. '
		db 'Debes resolver el enigma y volver en seis d>as con el elixir de '
		db 'la vida.'
		db 0FFh	; �
aIdentificaAlEs	db ' identifica al esp>a que hay entre nosotros. Determina su '
		db 'objetivo y devuelve la evidencia de su culpabilidad.[Tienes s<lo '
		db 'seis d>as para volver.'
		db 0FFh	; �
		db    0	;
aNovicio	db 'novicio'
		db 0FFh	; �
aTeLogo		db 'te<logo'
		db 0FFh	; �
aMediadorDivino	db 'mediador divino'
		db 0FFh	; �
aEclesiStico	db 'eclesi^stico'
		db 0FFh	; �
aSumoSacerdot_0	db 'sumo sacerdote'
		db 0FFh	; �
		db 0FFh	; �
a25g		db '25g'
		db 0FFh	; �
a40g_3		db '40g'
		db 0FFh	; �
a50g_1		db '50g'
		db 0FFh	; �
a55g		db '55g'
		db 0FFh	; �
aTodoElDinero_5	db 'todo el dinero que llevas'
		db 0FFh	; �
		db    0	;
aRecogeElPergam	db 'recoge el Pergamino de Ran del Santuario de Njord.[[ Tienes dos '
		db 'd>as para volver.'
		db 0FFh	; �
aTraeUnaPruebaD	db 'trae una prueba de la muerte del asesino Hoder[[ s<lo tienes '
		db 'cuatro d>as'
		db 0FFh	; �
aAtrapaAlEspRit	db 'atrapa al esp>ritu invisible de Skoll y vuelve en 5 d>as'
		db 0FFh	; �
aVeALaCasaDeNue	db 've a la casa de nuestro representante del Concilio de los Cinco. '
		db 'All> encontrar^s un pergamino. L�elo y act\a en consecuencia, '
		db 'despu�s vuelve aqu> para su incineraci<n en cuatro d>as.'
		db 0FFh	; �
aHazteMiembtoDe	db 'hazte miembto del Instituto de Zoolatr>a.[[El Instituto tiene un '
		db 'enorme poder en la totalidad de Wolfbrood - ya que pueden '
		db 'seleccionar entre la �lite de Mittledorf. Pocos sobreviven a su '
		db 'proceso de selecci<n, �t\ DEBES sobrevivir![[Vuelve en siete d>as '
		db 'siendo miembro.'
		db 0FFh	; �
		db    0	;
		db  0Eh	;
		db  2Bh	; +
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsElAsilo	db 'es el Asilo'
		db 0FFh	; �
aEnElLadoOesteD	db 'en el lado oeste de la ciudad, al norte del Gremio de los '
		db 'Mercenarios'
		db 0FFh	; �
		db    0	;
		db  53h	; S
		db  60h	; `
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsElAlojamient	db 'es el alojamiento S.E.'
		db 0FFh	; �
aAlSurDe	db 'al sur de {&'
		db    5	;
		db 0FFh	; �
		db    0	;
		db  2Ch	; ,
		db  7Dh	; }
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsElSantuarioD	db 'es el Santuario de Njord'
		db 0FFh	; �
aEnElMuroSurDeL	db 'en el muro sur de la ciudad entre el Embarcadero y la C^rcel'
		db 0FFh	; �
		db    0	;
		db  0Ah	;
		db  7Dh	; }
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aGladsheim	db 'Gladsheim'
		db 0FFh	; �
aEnElLadoEsteDe	db 'en el lado este de la Torre del suroeste'
		db 0FFh	; �
		db    0	;
		db  10h	;
		db  14h	;
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aElEscritorio	db 'el Escritorio'
		db 0FFh	; �
aAlOtroLadoDelE	db 'al otro lado del Escudo del Troll.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsForseti	db 'es Forseti'
		db 0FFh	; �
aNormalmenteSue	db 'Normalmente suele estar en el Palacio de Justicia'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db  1Dh	;
aIhazLaHierbasC	db '�haz la hierbas crecer'
		db 0FFh	; �
aEnLaGruta	db 'en la gruta'
		db 0FFh	; �
		db    0	;
		db  30h	; 0
		db  3Dh	; =
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsLaGruta	db 'es la gruta'
		db 0FFh	; �
aDeDebajoDeLaSa	db 'de debajo de la Sala Capitular'
		db 0FFh	; �
		db    0	;
		db    8	;
		db  6Ch	; l
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsLosEmbalsama	db 'es los embalsamadores'
		db 0FFh	; �
aLaSuroesteDeLa	db 'la suroeste de la ciudad'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
a4		db '44es el observatorio'
		db 0FFh	; �
aDetrSDelHoyoDe	db 'detr^s del Hoyo de la Pulga'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db 0F7h	; �
aIesElIdoloDeOr	db '�es el Idolo de oro'
		db 0FFh	; �
aQueSeExponeEnE	db 'que se expone en el Museo'
		db 0FFh	; �
		db    0	;
		db  40h	; @
		db  14h	;
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsElMuseo	db 'es el museo'
		db 0FFh	; �
aCercaDelPalaci	db 'cerca del Palacio de Justicia.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsHoder	db 'es Hoder'
		db 0FFh	; �
aTendrSQueSerAr	db 'Tendr^s que ser arrestado para encontrarle. . . . .  est^ en la '
		db 'C^rcel'
		db 0FFh	; �
		db    0	;
		db    2	;
		db  58h	; X
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsElOsario	db 'es el osario'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db  23h	; #
		db  30h	; 0
aEsDvdalo	db 'es D�dalo'
		db 0FFh	; �
aNormalmenteBeb	db 'normalmente bebe en la Cabeza del Drag<n'
		db 0FFh	; �
aEnAlgNSitioDeL	db 'En alg\n sitio de la Torre del Castillo.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db 0D2h	; �
		db  34h	; 4
aEsElLaberinto	db 'es el Laberinto'
		db 0FFh	; �
aEnLaPuertaDeAl	db 'en la puerta de al lado del Embarcadero'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsElEspRituDeS	db 'es el Esp>ritu de Skoll'
		db 0FFh	; �
aNecesitarSUnAd	db 'necesitar^s un adivinador de los hombres lobo para encontrarlo'
		db 0FFh	; �
aEnNingunaParte	db 'en ninguna parte y en todas partes'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEsLaGemaReal	db 'es la Gema Real'
		db 0FFh	; �
aLosBufonesDeLa	db 'Los bufones de la corte del Castillo los conocen'
		db 0FFh	; �
aTendrSQueVerAL	db 'Tendr^s que ver a los hombres de la alegr>a    pero ten cuidado '
		db 'cada uno de ellos tiene lealtades diferentes '
		db 0FFh	; �
		db    0	;
		db  31h	; 1
		db  2Fh	; /
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aTumbaDeLasMomi	db 'Tumba de las Momias'
		db 0FFh	; �
aSeDiceQueEstAl	db 'se dice que est^ al lado del C>rculo de Piedra.'
		db 0FFh	; �
		db    0	;
		db  4Eh	; N
		db  4Eh	; N
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aInst_DeZoolatr	db 'Inst. de Zoolatr>a'
		db 0FFh	; �
aAlEsteJustoAlN	db 'al este, justo al norte del Templo de Aegir.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
aMnviveElMurciv	db 'M�vive el murci�lago'
		db 0FFh	; �
aEnElCampanario	db 'en el campanario, obviamente...'
		db 0FFh	; �
		db    0	;
		db  45h	; E
		db  1Eh	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElCampanari	db 'est^ el campanario'
		db 0FFh	; �
aAlSurDelPalaci	db 'al sur del Palacio de Justicia'
		db 0FFh	; �
		db    0	;
		db  2Eh	; .
		db  15h	;
		db    2	;
		db    1	;
		db    1	;
		db    0	;
a5casaDelArquit	db '�5casa del arquitecto'
		db 0FFh	; �
aLaSiguientePue	db 'la siguiente puerta de la Armer>a.'
		db 0FFh	; �
aEnLaParteSuper	db 'en la parte superior del muro del Castillo.'
		db 0FFh	; �
		db    0	;
		db    5	;
		db  38h	; 8
		db    1	;
		db    1	;
		db    1	;
		db    0	;
aNzestLaCasaDeS	db  4Eh	; N
		db  87h	; �
aEstLaCasaDeSil	db 'est^ la casa de Silas'
		db 0FFh	; �
aViveAlLadoDeLa	db 'vive al lado de la bruja, cerca del Asilo'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstEivak	db 'est^ Eivak'
		db 0FFh	; �
aHeOidoQueSeLeH	db 'He oido que se le ha visto cerca del Palacio de Justicia.'
		db 0FFh	; �
aLaMiliciaLeOcu	db 'La milicia le oculta pero ten cuidado; arrestan a cualquiera que '
		db 'pregunte por �l.'
		db 0FFh	; �
aHeOidoQueSeHaI	db 'He oido que se ha ido bajo tierra.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db  8Fh	; �
		db  8Fh	; �
aEstLaGemaReal	db 'est^ la Gema Real'
		db 0FFh	; �
aCuandoElNuevoR	db 'cuando el nuevo rey tom< el poder los Ancianos M>sticos pusieron '
		db 'la Gema Real bajo la protecci<n de las serpientes.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db 0EBh	; �
		db  8Fh	; �
aEstNLasSerpien	db 'est^n las serpientes'
		db 0FFh	; �
aExtinguidas___	db 'Extinguidas... lo \nico que queda es un huevo en el criadero.'
		db 0FFh	; �
		db    0	;
		db  39h	; 9
		db  45h	; E
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db  3Eh	; >
		db  31h	; 1
aEstElCriadero	db 'est^ el criadero'
		db 0FFh	; �
aAlLadoDeLaJarr	db 'al lado de la Jarra de Cerveza.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstValhalla	db 'est^ Valhalla'
		db 0FFh	; �
aSeDiceQueEstEn	db 'Se dice que est^ en lo m^s profundo del Templo de Odin.'
		db 0FFh	; �
aPreguntarvAAlq	db 'Preguntar� a alquien que idolatre a Odin.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    3	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstNLosCClopes	db 'est^n los c>clopes'
		db 0FFh	; �
aElReyWilfSolAA	db 'El rey Wilf sol>a alimentarlos bajo el Castillo por deporte'
		db 0FFh	; �
aElReyFarleyLan	db 'El rey Farley lanz< una proclamaci<n rechaz^ndolos'
		db 0FFh	; �
aEnLosDAsDelVie	db 'En los d>as del viejo Wilf eran un buen negocio en la esquina '
		db 'suroeste de las tierras del Templo de Set.'
		db 0FFh	; �
		db    0	;
		db  10h	;
		db  24h	; $
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db  41h	; A
		db  33h	; 3
aEstHermod	db 'est^ Hermod'
		db 0FFh	; �
aTieneUnLugarCe	db 'tiene un lugar cerca del Descanso de los Desamparados'
		db 0FFh	; �
		db    0	;
		db  52h	; R
		db  1Fh	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db  1Eh	;
		db  36h	; 6
aCasaDeReunione	db 'casa de reuniones del NE'
		db 0FFh	; �
aAlLadoDelLugar	db 'al lado del lugar de Skiold.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstNLosConseje	db 'est^n los Consejeros'
		db 0FFh	; �
aCreoQueLeAlgoS	db 'Creo que le> algo sobre ellos en la taberna'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstElSantuario	db 'est^ el Santuario de Loki'
		db 0FFh	; �
aSeDiceQueEstDe	db 'se dice que est^ dentro de los edificios de la Hermandad de Loki.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstNLasLamias	db 'est^n las Lamias'
		db 0FFh	; �
aLaLeyendaDiceQ	db 'La leyenda dice que viven en los pasajes de debajo del Templo de '
		db 'Set.'
		db 0FFh	; �
		db    0	;
		db  4Ch	; L
		db  0Bh	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aMansiNDeLaTorr	db 'Mansi<n de la Torreta'
		db 0FFh	; �
aEnLaEsquinaNor	db 'En la esquina noreste de la ciudad.',0
		db    0	;
		db    0	;
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aLomoDelGansoNe	db 'Lomo del Ganso Negro'
		db 0FFh	; �
aNuncaHabAODoHa	db 'Nunca hab>a o>do hablar de ello.Me temo que no lo s�.',0
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
aLfestNidhug	db 'L�est^ Nidhug'
		db 0FFh	; �
aNidhugElDragNS	db 'Nidhug el drag<n, seg\n la antigua tradici<n, vive en las '
		db 'profundidades de la tierra bajo lo que es ahora el Calabozo.'
		db 0FFh	; �
		db    0	;
		db  38h	; 8
		db  6Ch	; l
		db    0	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstaElCalabozo	db 'esta el Calabozo'
		db 0FFh	; �
		db    0	;
		db  14h	;
		db  7Ch	; |
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
aEstNidavellir	db 'est^ Nidavellir'
		db 0FFh	; �
aEnLaParteSuroe	db 'en la parte suroeste de la ciudad.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db 0D8h	; �
		db  94h	; �
aEstLaGorgona	db 'est^ la gorgona'
		db 0FFh	; �
aZorgarthElAs_0	db 'Zorgarth el asesino lo sabe.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
aEstZorgarth	db 'est^ Zorgarth'
		db 0FFh	; �
aViveEnUnaPeque	db 'vive en una peque~a casa en el lado este del Gremio de los '
		db 'Mercenarios'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    1	;
		db    1	;
		db    0	;
		db 0E7h	; �
		db  30h	; 0
aEstLaCiudadPro	db 'est^ la Ciudad Prohibida'
		db 0FFh	; �
aEsCasiImposibl	db 'Es casi imposible encontrarla por casualidad'
		db 0FFh	; �
aHeOidoQueChoke	db 'He oido que Choker Bloodaxe ha estado all> y que tiene un mapa.   '
		db ' Le encontrar^s en el Ahorcado.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    2	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
aSalvajeHombreL	db 'Salvaje Hombre Lagarto'
		db 0FFh	; �
aPruebaEnLasCiv	db 'prueba en las ci�nagas que rodean el embarcadero.'
		db 0FFh	; �
aCreoQueViveEnL	db 'Creo que vive en los pantanos subterr^neos del sureste de la '
		db 'ciudad.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db  4Eh	; N
		db  87h	; �
aPociNDeJuici_0	db 'poci<n de juicio'
		db 0FFh	; �
aNadieLoSabeFue	db 'nadie lo sabe, fue robado del centro de la cofrad>a por Aldic el '
		db 'ilusionista antes de ser reclu>do en el asilo'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
aAnilloDeAndvar	db 'Anillo de Andvaris '
		db 0FFh	; �
aUnAnilloDeOroE	db 'un anillo de oro, escuch� algo sobre �l en Las Serpientes'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db  36h	; 6
		db  88h	; �
aGladsheim_0	db 'Gladsheim'
		db 0FFh	; �
aUnaDeLasCasasD	db 'una de las casas de Odin'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
aElOjoDeSurt	db 'el ojo de surt'
		db 0FFh	; �
aElOjoDeOdNElCu	db 'El ojo de Od>n el cual intercambi< por la sabidur>a'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db  89h	; �
		db  89h	; �
aUnAstrolabio	db 'un astrolabio'
		db 0FFh	; �
aUnAparatoDeAst	db 'un aparato de astr<nomo'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db  9Ah	; �
		db  8Ah	; �
aDvdalo		db 'D�dalo'
		db 0FFh	; �
aDvdaloEsUnaPer	db 'D�dalo es una persona'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db  40h	; @
		db  8Bh	; �
aElEspRituDeSko	db 'El Esp>ritu de Skoll'
		db 0FFh	; �
aElAlmaPerdidaD	db 'el alma perdida del lobo Skoll'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db  25h	; %
		db  90h	; �
aValhalla	db 'Valhalla'
		db 0FFh	; �
aLaSalaDeOdinDo	db 'La sala de Odin donde los muertos en batalla fueron tomados por '
		db 'las Valkirias para disfrutar una gloriosa vida futura.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db  92h	; �
		db  91h	; �
aGambantein	db 'Gambantein'
		db 0FFh	; �
aLaVaritaMGicaD	db 'La Varita M^gica de Hermod'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db  1Ch	;
		db  92h	; �
aElConcilioDeLo	db 'el Concilio de los Cinco'
		db 0FFh	; �
aUnGrupoDeCiuda	db 'Un grupo de ciudadanos respetados con alguna influencia.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
aEsBrea		db 'es brea'
		db 0FFh	; �
aUnaMasaNegraPe	db 'una masa negra pegajosa utilizada para impermeabilizar barcos.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
aEsAlCiudadProh	db 'es al Ciudad Prohibida'
		db 0FFh	; �
aEsUnaParteLega	db 'Es una parte legandaria de Mittledorf donde las calles son de '
		db 'piedra y se habla de revoluci<n.'
		db 0FFh	; �
		db    0	;
aHeODoQueEstSBu	db 'He o>do que est^s buscando el ojo de surt'
		db 0FFh	; �
aSiFueseTBuscar	db 'si fuese t\ buscar>a en La Jarra de Cerveza'
		db 0FFh	; �
aSiEresDeAsegei	db 'si eres de Asegeir y est^s buscando a Forseti  �l se ha ido al '
		db 'casino  dile que quieres mi pergamino'
		db 0FFh	; �
aDebesIrALasSir	db 'debes ir a las sirenas y encontrar al capit^n salado   s>guele    '
		db '�l te llevar^ al contrabando   ll�valo de vuelta al gremio'
		db 0FFh	; �
aElRecaudadorDe	db 'El recaudador de impuestos est^ a punto de salir   He cortado su '
		db 'bolsa de dinero    no tardar^ mucho en caer'
		db 0FFh	; �
aLosObjetosEstN	db 'Los objetos est^n en la sala de exposici<n   debes mirar a trav�s '
		db 'de las ventanas   el acceso est^ limitado a aquellos con poder de '
		db 'portal'
		db 0FFh	; �
aApuestoAQueLaL	db 'Apuesto a que la libertad huele bien despu�s de una noche en la '
		db 'celda donde Hoder muri<     Estoy mucho m^s agusto ahora que han '
		db 'llevado su cuerpo al osario'
		db 0FFh	; �
aLosPergaminosE	db 'los pergaminos est^n en la bolsa de la mesa    ll�valos al Templo '
		db 'para completar tu tarea'
		db 0FFh	; �
aBienvenidoAlSa	db 'bienvenido al santuario'
		db 0FFh	; �
aNoPuedoAutoriz	db 'No puedo autorizar tu ascenso sin cuatro pergaminos de gu>a'
		db 0FFh	; �
aEnTuAventuraDe	db 'en tu aventura debes conseguir los cuatro pergaminosde gu>a y '
		db 'presentarlos a nuestro enviado en el santuario'
		db 0FFh	; �
aSiBuscasAcceso	db 'Si buscas acceso a la Tumba de las Momias, entonces �llegas 1.000 '
		db 'a~os tarde! La puerta de la tumba no se abrir^ sin dos pir^mides '
		db 'id�nticas forjadas con metales secretos - una a cada lado de la '
		db 'entrada. �Ay!, s<lo queda una.'
		db 0FFh	; �
aPaTiempoEmpeza	db '�A tiempo! Empezaba a pensar que nadie nos iba a traer un '
		db 'murci�lago. El ant>doto UB est^ en la mesa.'
		db 0FFh	; �
aTeOigoIntentar	db 'Te oigo intentar entrar en el lugar del arquitecto.'
		db 0FFh	; �
aTomaEstosPlano	db 'Toma estos planos de su casa y sigue la trayectoria con detalle.'
		db 0FFh	; �
aSoySaxon_YoCon	db 'Soy Saxon. Yo constru> esta casa. El arquitecto me tiene '
		db 'prisionero para proteger su secreto.   Debes encontrar a Silas, '
		db '�l sabe c<mo entrar. Si puedes robar los planos del gremio que se '
		db 'guardan arriba, ser� liberado.'
		db 0FFh	; �
aRecuerdaEstoBi	db 'Recuerda esto bien. Nosotros, leales al viejo Wilf, mantenemos '
		db 'los C>clopes Reales. El oso guarda la llave a riesgo de su vida.'
		db 0FFh	; �
aEscuchaAtentam	db 'Escucha atentamente. Tus instrucciones est^n en el pergamino en '
		db 'el Escudo del Troll. Quiz^s no est� por aqu> alg\n tiempo, as> '
		db 'que cuando lo hayas hecho, recoge mi sello de aqu>. Buena suerte.'
		db 0FFh	; �
T_MESS74	db 'Por favor vete, estamos discutiendo delicados asuntos del gremio.'
		db 0FFh	; �
T_MESS74A	db 'TENDRAS QUE HABLAR ALTO. ME HE DEJADO LA TROMPETILLA EN EL '
		db 'DESCANSO DE LA SIRENA'
		db 0FFh	; �
T_QUIET		db 'no se oye nada especial'
		db 0FFh	; �
T_DOORHEAR	db '......mi hermana est^ en un gran peligro, nunca debi< ser enviada '
		db 'para realizar una tarea tan peligrosa. La piel de halc<n de '
		db 'Freyas no merece la pena el riesgo, el ',27h,'pergamino de orden` '
		db 'que define su misi<n debe ser destruido. Est^ en mi casa......'
		db 0FFh	; �
T_MESS84	db '�Otro posible candidato!  Para hacernos entender que eres maestro '
		db 'de tu propio esp>ritu, debes realizar el ritual de iniciaci<n. Ve '
		db 'de all> a la Taberna del Caballo de Mar y en ella b�bete al menos '
		db 'cuatro G & T, despu�s mata una bacusita. Apres\rate antes de que '
		db 'la realidad vuelva.'
		db 0FFh	; �
T_MESS84A	db 'Sin duda eres muy fuerte. Podemos utilizar m^s gente como t\. '
		db 'Coge la llave de la mesa y en el jard>n en la parte de atr^s '
		db 'encontrar^s tus papeles de miembro.'
		db 0FFh	; �
GENIETEXT	db 'Soy el esp>ritu de los Asegeir, te ayudar� a conocer el color del '
		db 'ojo del monstruo del Gran Mar. Ll^mame de nuevo cuando hayas '
		db 'matado un murci�lago y tengas sus restos.'
		db 0FFh	; �
GENIETEXT2	db 'Debes utilizar los restos del murci�lago como cebo para el '
		db 'monstruo del Gran Mar y para conocer el color de su ojo. Entra en '
		db 'Nidavellir por la puerta del sur de Twinoaks. Cruza a trav�s de '
		db 'la puerta del muelle del sur y despu�s sit\a los restos del '
		db 'murci�lago en la mesa de al lado de la puerta para atraer al '
		db 'monstruo.'
		db 0FFh	; �
T_MESS24	db 'Si tratas de matar a la gorgona entonces necesitar^s dos cosas, '
		db 'el hacha m^gica de Gorn y suerte, ya que tocar cualquier parte de '
		db 'ella te convertir^ en piedra. La gorgona tiene el hacha, como con '
		db 'la suerte, te toca a t>. Sobre el lugar donde ella se encuentra '
		db 'te dir� s<lo esto: los seguidores de Asegeir y Set han cerrado '
		db 'enlaces con la gorgona, o quiz^s tengas suerte y la encuentres '
		db 'detr^s de esa puerta, �pero yo la cerrar� detr^s de t>!'
		db 0FFh	; �
T_MESS14	db 'Habla.      Pide.      Te responderemos'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
TWA_14		db 'esto, una daga ante m>'
		db 0FFh	; �
TWH_14		db 'mal camino'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    1	;
		db    1	;
		db    1	;
		db    0	;
		db    0	;
		db    0	;
KSW		db 'has sido t\, mi hermana'
		db 0FFh	; �
aCanallaAsesino	db 'canalla asesino'
		db 0FFh	; �
		db    0	;
aAlrededorDeLaC	db 'Alrededor de la caldera va;   En las entra~as envenenadas arroja. '
		db '  Sapo, el que est^ bajo la piedra fr>a,   D>as y noches tiene '
		db 'treinta y una   Veneno chorreado tiene el durmiente   �Hierve t\ '
		db 'primero en la olla encantada!          Doble, doble trabajo y '
		db 'esfuerzo;   fuego, quema; y caldera hierve.           Filete de '
		db 'serpiente,   En la caldera hierve y cuece;   Ojo de trit<n y anca '
		db 'de rana,   Piel de murci�lago y lengua de perro,   lengua de '
		db 'v>bora y veneno de lombriz ciega,   pata de lagarto y ala de '
		db 'lechuza,   Para un encantamiento de enorme poder,   Como un caldo '
		db 'infernal hierve y borbotea.            Escama de drag<n, diente '
		db 'de lobo,   momia de bruja, buche y golfo   Del tibur<n de agua '
		db 'salada,   Ra>z de cicuta crecida en la oscuridad, . . . . .       '
		db ' . . . . . . . A~ade tambi�n diente de tigre,   Para los '
		db 'ingredientes de nuestra caldera.          Saz<nalo con la sangre '
		db 'de un babuino,   Entonces el encantamiento ser^ s<lido y bueno.'
		db 0FFh	; �
T_DEMON		db 'Por fin me han liberado. Tambi�n desde ahora el equilibrio de '
		db 'poder entre orden y caos en esta tierra es igual.    Todo lo que '
		db 'queda hay que dec>rselo al viejo Wilf.    La llave para entrar en '
		db 'este santuario subterr^neo es tuya.    Lib�ralo y convi�rtelo en '
		db 'una leyenda viviente.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    1	;
		db    0	;
		db    3	;
		db    0	;
		db    0	;
		db    0	;
TWH_SVEN	db 'est^ Sven'
		db 0FFh	; �
T_LEFT_CITY	db 'Ha dejado la ciudad'
		db 0FFh	; �
		db    0	;
T_STILLACTIVE	db 'hechizo todav>a activo'
		db 0FFh	; �
T_NOXP		db 'experiencia insuficiente'
		db 0FFh	; �
T_PASSEDOUT	db 'muerto'
		db 0FFh	; �
T_NORANK	db 'sin rango'
		db 0FFh	; �
		db    0	;
T_WELCOME	db 'Bienvenido, amigo...si yo fuera t\ leer>a los avisos de la '
		db 'Aduana; es el edificio de piedra situado al otro lado de las '
		db 'puertas de la civdad.'
		db 0FFh	; �
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;
		db    0	;

seg003		ends


		end START
